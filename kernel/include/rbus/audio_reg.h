/**
* @file Merlin5-DesignSpec-AUDIO
* RBus systemc program.
*
* @author RS_MM2_SD
* @email mm_mm2_rd_sw_kernel@realtek.com
* @ingroup model_rbus
 * @version { 1.0 }
 **
 */

#ifndef _RBUS_AUDIO_REG_H_
#define _RBUS_AUDIO_REG_H_

#include "rbus_types.h"



//  AUDIO Register Address
#define  AUDIO_global_ctrl_0                                                    0x18006000
#define  AUDIO_global_ctrl_0_reg_addr                                            "0xB8006000"
#define  AUDIO_global_ctrl_0_reg                                                 0xB8006000
#define  AUDIO_global_ctrl_0_inst_addr                                           "0x0000"
#define  set_AUDIO_global_ctrl_0_reg(data)                                       (*((volatile unsigned int*)AUDIO_global_ctrl_0_reg)=data)
#define  get_AUDIO_global_ctrl_0_reg                                             (*((volatile unsigned int*)AUDIO_global_ctrl_0_reg))
#define  AUDIO_global_ctrl_0_inv_ad1_128fs_shift                                 (31)
#define  AUDIO_global_ctrl_0_inv_ad_128fs_shift                                  (30)
#define  AUDIO_global_ctrl_0_dmic_clk_sel_shift                                  (28)
#define  AUDIO_global_ctrl_0_div_pre_512fs_ts_shift                              (26)
#define  AUDIO_global_ctrl_0_frontend_clkgate_enable_shift                       (25)
#define  AUDIO_global_ctrl_0_sel_clk_vrloop_fsi_shift                            (24)
#define  AUDIO_global_ctrl_0_div_dma_r_512fs_shift                               (22)
#define  AUDIO_global_ctrl_0_div_tsdma_r_512fs_shift                             (20)
#define  AUDIO_global_ctrl_0_play_r_adc_512fs_sel_shift                          (18)
#define  AUDIO_global_ctrl_0_play_r_adc_512fs_sel_ts_shift                       (16)
#define  AUDIO_global_ctrl_0_sel_64fs_ts_shift                                   (13)
#define  AUDIO_global_ctrl_0_sel_64fs_shift                                      (10)
#define  AUDIO_global_ctrl_0_div_arcdma_r_512fs_shift                            (8)
#define  AUDIO_global_ctrl_0_play_r_adc_512fs_sel_arc_shift                      (6)
#define  AUDIO_global_ctrl_0_sel_clk_adc_fsi_shift                               (4)
#define  AUDIO_global_ctrl_0_sel_clk_dac0_fsi_shift                              (2)
#define  AUDIO_global_ctrl_0_sel_clk_dac1_fsi_shift                              (0)
#define  AUDIO_global_ctrl_0_inv_ad1_128fs_mask                                  (0x80000000)
#define  AUDIO_global_ctrl_0_inv_ad_128fs_mask                                   (0x40000000)
#define  AUDIO_global_ctrl_0_dmic_clk_sel_mask                                   (0x30000000)
#define  AUDIO_global_ctrl_0_div_pre_512fs_ts_mask                               (0x0C000000)
#define  AUDIO_global_ctrl_0_frontend_clkgate_enable_mask                        (0x02000000)
#define  AUDIO_global_ctrl_0_sel_clk_vrloop_fsi_mask                             (0x01000000)
#define  AUDIO_global_ctrl_0_div_dma_r_512fs_mask                                (0x00C00000)
#define  AUDIO_global_ctrl_0_div_tsdma_r_512fs_mask                              (0x00300000)
#define  AUDIO_global_ctrl_0_play_r_adc_512fs_sel_mask                           (0x000C0000)
#define  AUDIO_global_ctrl_0_play_r_adc_512fs_sel_ts_mask                        (0x00030000)
#define  AUDIO_global_ctrl_0_sel_64fs_ts_mask                                    (0x0000E000)
#define  AUDIO_global_ctrl_0_sel_64fs_mask                                       (0x00001C00)
#define  AUDIO_global_ctrl_0_div_arcdma_r_512fs_mask                             (0x00000300)
#define  AUDIO_global_ctrl_0_play_r_adc_512fs_sel_arc_mask                       (0x000000C0)
#define  AUDIO_global_ctrl_0_sel_clk_adc_fsi_mask                                (0x00000030)
#define  AUDIO_global_ctrl_0_sel_clk_dac0_fsi_mask                               (0x0000000C)
#define  AUDIO_global_ctrl_0_sel_clk_dac1_fsi_mask                               (0x00000003)
#define  AUDIO_global_ctrl_0_inv_ad1_128fs(data)                                 (0x80000000&((data)<<31))
#define  AUDIO_global_ctrl_0_inv_ad_128fs(data)                                  (0x40000000&((data)<<30))
#define  AUDIO_global_ctrl_0_dmic_clk_sel(data)                                  (0x30000000&((data)<<28))
#define  AUDIO_global_ctrl_0_div_pre_512fs_ts(data)                              (0x0C000000&((data)<<26))
#define  AUDIO_global_ctrl_0_frontend_clkgate_enable(data)                       (0x02000000&((data)<<25))
#define  AUDIO_global_ctrl_0_sel_clk_vrloop_fsi(data)                            (0x01000000&((data)<<24))
#define  AUDIO_global_ctrl_0_div_dma_r_512fs(data)                               (0x00C00000&((data)<<22))
#define  AUDIO_global_ctrl_0_div_tsdma_r_512fs(data)                             (0x00300000&((data)<<20))
#define  AUDIO_global_ctrl_0_play_r_adc_512fs_sel(data)                          (0x000C0000&((data)<<18))
#define  AUDIO_global_ctrl_0_play_r_adc_512fs_sel_ts(data)                       (0x00030000&((data)<<16))
#define  AUDIO_global_ctrl_0_sel_64fs_ts(data)                                   (0x0000E000&((data)<<13))
#define  AUDIO_global_ctrl_0_sel_64fs(data)                                      (0x00001C00&((data)<<10))
#define  AUDIO_global_ctrl_0_div_arcdma_r_512fs(data)                            (0x00000300&((data)<<8))
#define  AUDIO_global_ctrl_0_play_r_adc_512fs_sel_arc(data)                      (0x000000C0&((data)<<6))
#define  AUDIO_global_ctrl_0_sel_clk_adc_fsi(data)                               (0x00000030&((data)<<4))
#define  AUDIO_global_ctrl_0_sel_clk_dac0_fsi(data)                              (0x0000000C&((data)<<2))
#define  AUDIO_global_ctrl_0_sel_clk_dac1_fsi(data)                              (0x00000003&(data))
#define  AUDIO_global_ctrl_0_get_inv_ad1_128fs(data)                             ((0x80000000&(data))>>31)
#define  AUDIO_global_ctrl_0_get_inv_ad_128fs(data)                              ((0x40000000&(data))>>30)
#define  AUDIO_global_ctrl_0_get_dmic_clk_sel(data)                              ((0x30000000&(data))>>28)
#define  AUDIO_global_ctrl_0_get_div_pre_512fs_ts(data)                          ((0x0C000000&(data))>>26)
#define  AUDIO_global_ctrl_0_get_frontend_clkgate_enable(data)                   ((0x02000000&(data))>>25)
#define  AUDIO_global_ctrl_0_get_sel_clk_vrloop_fsi(data)                        ((0x01000000&(data))>>24)
#define  AUDIO_global_ctrl_0_get_div_dma_r_512fs(data)                           ((0x00C00000&(data))>>22)
#define  AUDIO_global_ctrl_0_get_div_tsdma_r_512fs(data)                         ((0x00300000&(data))>>20)
#define  AUDIO_global_ctrl_0_get_play_r_adc_512fs_sel(data)                      ((0x000C0000&(data))>>18)
#define  AUDIO_global_ctrl_0_get_play_r_adc_512fs_sel_ts(data)                   ((0x00030000&(data))>>16)
#define  AUDIO_global_ctrl_0_get_sel_64fs_ts(data)                               ((0x0000E000&(data))>>13)
#define  AUDIO_global_ctrl_0_get_sel_64fs(data)                                  ((0x00001C00&(data))>>10)
#define  AUDIO_global_ctrl_0_get_div_arcdma_r_512fs(data)                        ((0x00000300&(data))>>8)
#define  AUDIO_global_ctrl_0_get_play_r_adc_512fs_sel_arc(data)                  ((0x000000C0&(data))>>6)
#define  AUDIO_global_ctrl_0_get_sel_clk_adc_fsi(data)                           ((0x00000030&(data))>>4)
#define  AUDIO_global_ctrl_0_get_sel_clk_dac0_fsi(data)                          ((0x0000000C&(data))>>2)
#define  AUDIO_global_ctrl_0_get_sel_clk_dac1_fsi(data)                          (0x00000003&(data))

#define  AUDIO_global_ctrl_2                                                    0x18006038
#define  AUDIO_global_ctrl_2_reg_addr                                            "0xB8006038"
#define  AUDIO_global_ctrl_2_reg                                                 0xB8006038
#define  AUDIO_global_ctrl_2_inst_addr                                           "0x0001"
#define  set_AUDIO_global_ctrl_2_reg(data)                                       (*((volatile unsigned int*)AUDIO_global_ctrl_2_reg)=data)
#define  get_AUDIO_global_ctrl_2_reg                                             (*((volatile unsigned int*)AUDIO_global_ctrl_2_reg))
#define  AUDIO_global_ctrl_2_sel_clk_i2s_out_shift                               (29)
#define  AUDIO_global_ctrl_2_sel_clk_earc_tx_shift                               (27)
#define  AUDIO_global_ctrl_2_psaud_s2_sel_shift                                  (25)
#define  AUDIO_global_ctrl_2_psaud_div_s1_shift                                  (24)
#define  AUDIO_global_ctrl_2_normal_psaud_shift                                  (23)
#define  AUDIO_global_ctrl_2_aud_mclk_enable_shift                               (22)
#define  AUDIO_global_ctrl_2_sel_aud_mclk_post_shift                             (20)
#define  AUDIO_global_ctrl_2_div_aud_mclk_512fs_shift                            (18)
#define  AUDIO_global_ctrl_2_sel_clk_aud_mclk_shift                              (16)
#define  AUDIO_global_ctrl_2_reg_pcr_clk_1_sel_shift                             (14)
#define  AUDIO_global_ctrl_2_reg_pcr_clk_0_sel_shift                             (12)
#define  AUDIO_global_ctrl_2_div_earc_tx_512fs_shift                             (9)
#define  AUDIO_global_ctrl_2_tv_demod_en_shift                                   (8)
#define  AUDIO_global_ctrl_2_i2s_out_en_shift                                    (7)
#define  AUDIO_global_ctrl_2_i2s_in_en_shift                                     (6)
#define  AUDIO_global_ctrl_2_spdif_out_en_shift                                  (5)
#define  AUDIO_global_ctrl_2_spdif_in_en_shift                                   (4)
#define  AUDIO_global_ctrl_2_sel_clk_spdif_out_shift                             (2)
#define  AUDIO_global_ctrl_2_sel_clk_spdif_out_1_shift                           (0)
#define  AUDIO_global_ctrl_2_sel_clk_i2s_out_mask                                (0xE0000000)
#define  AUDIO_global_ctrl_2_sel_clk_earc_tx_mask                                (0x18000000)
#define  AUDIO_global_ctrl_2_psaud_s2_sel_mask                                   (0x06000000)
#define  AUDIO_global_ctrl_2_psaud_div_s1_mask                                   (0x01000000)
#define  AUDIO_global_ctrl_2_normal_psaud_mask                                   (0x00800000)
#define  AUDIO_global_ctrl_2_aud_mclk_enable_mask                                (0x00400000)
#define  AUDIO_global_ctrl_2_sel_aud_mclk_post_mask                              (0x00300000)
#define  AUDIO_global_ctrl_2_div_aud_mclk_512fs_mask                             (0x000C0000)
#define  AUDIO_global_ctrl_2_sel_clk_aud_mclk_mask                               (0x00030000)
#define  AUDIO_global_ctrl_2_reg_pcr_clk_1_sel_mask                              (0x0000C000)
#define  AUDIO_global_ctrl_2_reg_pcr_clk_0_sel_mask                              (0x00003000)
#define  AUDIO_global_ctrl_2_div_earc_tx_512fs_mask                              (0x00000600)
#define  AUDIO_global_ctrl_2_tv_demod_en_mask                                    (0x00000100)
#define  AUDIO_global_ctrl_2_i2s_out_en_mask                                     (0x00000080)
#define  AUDIO_global_ctrl_2_i2s_in_en_mask                                      (0x00000040)
#define  AUDIO_global_ctrl_2_spdif_out_en_mask                                   (0x00000020)
#define  AUDIO_global_ctrl_2_spdif_in_en_mask                                    (0x00000010)
#define  AUDIO_global_ctrl_2_sel_clk_spdif_out_mask                              (0x0000000C)
#define  AUDIO_global_ctrl_2_sel_clk_spdif_out_1_mask                            (0x00000003)
#define  AUDIO_global_ctrl_2_sel_clk_i2s_out(data)                               (0xE0000000&((data)<<29))
#define  AUDIO_global_ctrl_2_sel_clk_earc_tx(data)                               (0x18000000&((data)<<27))
#define  AUDIO_global_ctrl_2_psaud_s2_sel(data)                                  (0x06000000&((data)<<25))
#define  AUDIO_global_ctrl_2_psaud_div_s1(data)                                  (0x01000000&((data)<<24))
#define  AUDIO_global_ctrl_2_normal_psaud(data)                                  (0x00800000&((data)<<23))
#define  AUDIO_global_ctrl_2_aud_mclk_enable(data)                               (0x00400000&((data)<<22))
#define  AUDIO_global_ctrl_2_sel_aud_mclk_post(data)                             (0x00300000&((data)<<20))
#define  AUDIO_global_ctrl_2_div_aud_mclk_512fs(data)                            (0x000C0000&((data)<<18))
#define  AUDIO_global_ctrl_2_sel_clk_aud_mclk(data)                              (0x00030000&((data)<<16))
#define  AUDIO_global_ctrl_2_reg_pcr_clk_1_sel(data)                             (0x0000C000&((data)<<14))
#define  AUDIO_global_ctrl_2_reg_pcr_clk_0_sel(data)                             (0x00003000&((data)<<12))
#define  AUDIO_global_ctrl_2_div_earc_tx_512fs(data)                             (0x00000600&((data)<<9))
#define  AUDIO_global_ctrl_2_tv_demod_en(data)                                   (0x00000100&((data)<<8))
#define  AUDIO_global_ctrl_2_i2s_out_en(data)                                    (0x00000080&((data)<<7))
#define  AUDIO_global_ctrl_2_i2s_in_en(data)                                     (0x00000040&((data)<<6))
#define  AUDIO_global_ctrl_2_spdif_out_en(data)                                  (0x00000020&((data)<<5))
#define  AUDIO_global_ctrl_2_spdif_in_en(data)                                   (0x00000010&((data)<<4))
#define  AUDIO_global_ctrl_2_sel_clk_spdif_out(data)                             (0x0000000C&((data)<<2))
#define  AUDIO_global_ctrl_2_sel_clk_spdif_out_1(data)                           (0x00000003&(data))
#define  AUDIO_global_ctrl_2_get_sel_clk_i2s_out(data)                           ((0xE0000000&(data))>>29)
#define  AUDIO_global_ctrl_2_get_sel_clk_earc_tx(data)                           ((0x18000000&(data))>>27)
#define  AUDIO_global_ctrl_2_get_psaud_s2_sel(data)                              ((0x06000000&(data))>>25)
#define  AUDIO_global_ctrl_2_get_psaud_div_s1(data)                              ((0x01000000&(data))>>24)
#define  AUDIO_global_ctrl_2_get_normal_psaud(data)                              ((0x00800000&(data))>>23)
#define  AUDIO_global_ctrl_2_get_aud_mclk_enable(data)                           ((0x00400000&(data))>>22)
#define  AUDIO_global_ctrl_2_get_sel_aud_mclk_post(data)                         ((0x00300000&(data))>>20)
#define  AUDIO_global_ctrl_2_get_div_aud_mclk_512fs(data)                        ((0x000C0000&(data))>>18)
#define  AUDIO_global_ctrl_2_get_sel_clk_aud_mclk(data)                          ((0x00030000&(data))>>16)
#define  AUDIO_global_ctrl_2_get_reg_pcr_clk_1_sel(data)                         ((0x0000C000&(data))>>14)
#define  AUDIO_global_ctrl_2_get_reg_pcr_clk_0_sel(data)                         ((0x00003000&(data))>>12)
#define  AUDIO_global_ctrl_2_get_div_earc_tx_512fs(data)                         ((0x00000600&(data))>>9)
#define  AUDIO_global_ctrl_2_get_tv_demod_en(data)                               ((0x00000100&(data))>>8)
#define  AUDIO_global_ctrl_2_get_i2s_out_en(data)                                ((0x00000080&(data))>>7)
#define  AUDIO_global_ctrl_2_get_i2s_in_en(data)                                 ((0x00000040&(data))>>6)
#define  AUDIO_global_ctrl_2_get_spdif_out_en(data)                              ((0x00000020&(data))>>5)
#define  AUDIO_global_ctrl_2_get_spdif_in_en(data)                               ((0x00000010&(data))>>4)
#define  AUDIO_global_ctrl_2_get_sel_clk_spdif_out(data)                         ((0x0000000C&(data))>>2)
#define  AUDIO_global_ctrl_2_get_sel_clk_spdif_out_1(data)                       (0x00000003&(data))

#define  AUDIO_global_ctrl_1                                                    0x18006004
#define  AUDIO_global_ctrl_1_reg_addr                                            "0xB8006004"
#define  AUDIO_global_ctrl_1_reg                                                 0xB8006004
#define  AUDIO_global_ctrl_1_inst_addr                                           "0x0002"
#define  set_AUDIO_global_ctrl_1_reg(data)                                       (*((volatile unsigned int*)AUDIO_global_ctrl_1_reg)=data)
#define  get_AUDIO_global_ctrl_1_reg                                             (*((volatile unsigned int*)AUDIO_global_ctrl_1_reg))
#define  AUDIO_global_ctrl_1_adc_sram_on_shift                                   (31)
#define  AUDIO_global_ctrl_1_dac_sram_on_shift                                   (30)
#define  AUDIO_global_ctrl_1_am_sram_on_shift                                    (29)
#define  AUDIO_global_ctrl_1_a2_eiaj_sram_on_shift                               (28)
#define  AUDIO_global_ctrl_1_inv_da_128fs_shift                                  (27)
#define  AUDIO_global_ctrl_1_inv_da_128fs_ts_shift                               (26)
#define  AUDIO_global_ctrl_1_src_da_128fs_shift                                  (25)
#define  AUDIO_global_ctrl_1_src_da_128fs_ts_shift                               (24)
#define  AUDIO_global_ctrl_1_hdv_mode_sel_shift                                  (23)
#define  AUDIO_global_ctrl_1_sif_adc_clk_sel_shift                               (21)
#define  AUDIO_global_ctrl_1_sif_adc_clk_en_shift                                (20)
#define  AUDIO_global_ctrl_1_sel_play_r_ck_source_arc_shift                      (17)
#define  AUDIO_global_ctrl_1_spdif_nicam_shift                                   (16)
#define  AUDIO_global_ctrl_1_adc_512fs_sel_ts_shift                              (14)
#define  AUDIO_global_ctrl_1_sel_ts_ck_source_shift                              (12)
#define  AUDIO_global_ctrl_1_back_end_ts_sample_rate_shift                       (10)
#define  AUDIO_global_ctrl_1_sel_play_r_ck_source_ts_shift                       (8)
#define  AUDIO_global_ctrl_1_adc_512fs_sel_shift                                 (6)
#define  AUDIO_global_ctrl_1_sel_play_ck_source_shift                            (4)
#define  AUDIO_global_ctrl_1_back_end_play_sample_rate_shift                     (2)
#define  AUDIO_global_ctrl_1_sel_play_r_ck_source_shift                          (0)
#define  AUDIO_global_ctrl_1_adc_sram_on_mask                                    (0x80000000)
#define  AUDIO_global_ctrl_1_dac_sram_on_mask                                    (0x40000000)
#define  AUDIO_global_ctrl_1_am_sram_on_mask                                     (0x20000000)
#define  AUDIO_global_ctrl_1_a2_eiaj_sram_on_mask                                (0x10000000)
#define  AUDIO_global_ctrl_1_inv_da_128fs_mask                                   (0x08000000)
#define  AUDIO_global_ctrl_1_inv_da_128fs_ts_mask                                (0x04000000)
#define  AUDIO_global_ctrl_1_src_da_128fs_mask                                   (0x02000000)
#define  AUDIO_global_ctrl_1_src_da_128fs_ts_mask                                (0x01000000)
#define  AUDIO_global_ctrl_1_hdv_mode_sel_mask                                   (0x00800000)
#define  AUDIO_global_ctrl_1_sif_adc_clk_sel_mask                                (0x00600000)
#define  AUDIO_global_ctrl_1_sif_adc_clk_en_mask                                 (0x00100000)
#define  AUDIO_global_ctrl_1_sel_play_r_ck_source_arc_mask                       (0x00060000)
#define  AUDIO_global_ctrl_1_spdif_nicam_mask                                    (0x00010000)
#define  AUDIO_global_ctrl_1_adc_512fs_sel_ts_mask                               (0x0000C000)
#define  AUDIO_global_ctrl_1_sel_ts_ck_source_mask                               (0x00003000)
#define  AUDIO_global_ctrl_1_back_end_ts_sample_rate_mask                        (0x00000C00)
#define  AUDIO_global_ctrl_1_sel_play_r_ck_source_ts_mask                        (0x00000300)
#define  AUDIO_global_ctrl_1_adc_512fs_sel_mask                                  (0x000000C0)
#define  AUDIO_global_ctrl_1_sel_play_ck_source_mask                             (0x00000030)
#define  AUDIO_global_ctrl_1_back_end_play_sample_rate_mask                      (0x0000000C)
#define  AUDIO_global_ctrl_1_sel_play_r_ck_source_mask                           (0x00000003)
#define  AUDIO_global_ctrl_1_adc_sram_on(data)                                   (0x80000000&((data)<<31))
#define  AUDIO_global_ctrl_1_dac_sram_on(data)                                   (0x40000000&((data)<<30))
#define  AUDIO_global_ctrl_1_am_sram_on(data)                                    (0x20000000&((data)<<29))
#define  AUDIO_global_ctrl_1_a2_eiaj_sram_on(data)                               (0x10000000&((data)<<28))
#define  AUDIO_global_ctrl_1_inv_da_128fs(data)                                  (0x08000000&((data)<<27))
#define  AUDIO_global_ctrl_1_inv_da_128fs_ts(data)                               (0x04000000&((data)<<26))
#define  AUDIO_global_ctrl_1_src_da_128fs(data)                                  (0x02000000&((data)<<25))
#define  AUDIO_global_ctrl_1_src_da_128fs_ts(data)                               (0x01000000&((data)<<24))
#define  AUDIO_global_ctrl_1_hdv_mode_sel(data)                                  (0x00800000&((data)<<23))
#define  AUDIO_global_ctrl_1_sif_adc_clk_sel(data)                               (0x00600000&((data)<<21))
#define  AUDIO_global_ctrl_1_sif_adc_clk_en(data)                                (0x00100000&((data)<<20))
#define  AUDIO_global_ctrl_1_sel_play_r_ck_source_arc(data)                      (0x00060000&((data)<<17))
#define  AUDIO_global_ctrl_1_spdif_nicam(data)                                   (0x00010000&((data)<<16))
#define  AUDIO_global_ctrl_1_adc_512fs_sel_ts(data)                              (0x0000C000&((data)<<14))
#define  AUDIO_global_ctrl_1_sel_ts_ck_source(data)                              (0x00003000&((data)<<12))
#define  AUDIO_global_ctrl_1_back_end_ts_sample_rate(data)                       (0x00000C00&((data)<<10))
#define  AUDIO_global_ctrl_1_sel_play_r_ck_source_ts(data)                       (0x00000300&((data)<<8))
#define  AUDIO_global_ctrl_1_adc_512fs_sel(data)                                 (0x000000C0&((data)<<6))
#define  AUDIO_global_ctrl_1_sel_play_ck_source(data)                            (0x00000030&((data)<<4))
#define  AUDIO_global_ctrl_1_back_end_play_sample_rate(data)                     (0x0000000C&((data)<<2))
#define  AUDIO_global_ctrl_1_sel_play_r_ck_source(data)                          (0x00000003&(data))
#define  AUDIO_global_ctrl_1_get_adc_sram_on(data)                               ((0x80000000&(data))>>31)
#define  AUDIO_global_ctrl_1_get_dac_sram_on(data)                               ((0x40000000&(data))>>30)
#define  AUDIO_global_ctrl_1_get_am_sram_on(data)                                ((0x20000000&(data))>>29)
#define  AUDIO_global_ctrl_1_get_a2_eiaj_sram_on(data)                           ((0x10000000&(data))>>28)
#define  AUDIO_global_ctrl_1_get_inv_da_128fs(data)                              ((0x08000000&(data))>>27)
#define  AUDIO_global_ctrl_1_get_inv_da_128fs_ts(data)                           ((0x04000000&(data))>>26)
#define  AUDIO_global_ctrl_1_get_src_da_128fs(data)                              ((0x02000000&(data))>>25)
#define  AUDIO_global_ctrl_1_get_src_da_128fs_ts(data)                           ((0x01000000&(data))>>24)
#define  AUDIO_global_ctrl_1_get_hdv_mode_sel(data)                              ((0x00800000&(data))>>23)
#define  AUDIO_global_ctrl_1_get_sif_adc_clk_sel(data)                           ((0x00600000&(data))>>21)
#define  AUDIO_global_ctrl_1_get_sif_adc_clk_en(data)                            ((0x00100000&(data))>>20)
#define  AUDIO_global_ctrl_1_get_sel_play_r_ck_source_arc(data)                  ((0x00060000&(data))>>17)
#define  AUDIO_global_ctrl_1_get_spdif_nicam(data)                               ((0x00010000&(data))>>16)
#define  AUDIO_global_ctrl_1_get_adc_512fs_sel_ts(data)                          ((0x0000C000&(data))>>14)
#define  AUDIO_global_ctrl_1_get_sel_ts_ck_source(data)                          ((0x00003000&(data))>>12)
#define  AUDIO_global_ctrl_1_get_back_end_ts_sample_rate(data)                   ((0x00000C00&(data))>>10)
#define  AUDIO_global_ctrl_1_get_sel_play_r_ck_source_ts(data)                   ((0x00000300&(data))>>8)
#define  AUDIO_global_ctrl_1_get_adc_512fs_sel(data)                             ((0x000000C0&(data))>>6)
#define  AUDIO_global_ctrl_1_get_sel_play_ck_source(data)                        ((0x00000030&(data))>>4)
#define  AUDIO_global_ctrl_1_get_back_end_play_sample_rate(data)                 ((0x0000000C&(data))>>2)
#define  AUDIO_global_ctrl_1_get_sel_play_r_ck_source(data)                      (0x00000003&(data))

#define  AUDIO_pllcg_spdif_gain_cr0                                             0x18006010
#define  AUDIO_pllcg_spdif_gain_cr0_reg_addr                                     "0xB8006010"
#define  AUDIO_pllcg_spdif_gain_cr0_reg                                          0xB8006010
#define  AUDIO_pllcg_spdif_gain_cr0_inst_addr                                    "0x0003"
#define  set_AUDIO_pllcg_spdif_gain_cr0_reg(data)                                (*((volatile unsigned int*)AUDIO_pllcg_spdif_gain_cr0_reg)=data)
#define  get_AUDIO_pllcg_spdif_gain_cr0_reg                                      (*((volatile unsigned int*)AUDIO_pllcg_spdif_gain_cr0_reg))
#define  AUDIO_pllcg_spdif_gain_cr0_contword_inv_shift                           (31)
#define  AUDIO_pllcg_spdif_gain_cr0_div_2fs_shift                                (28)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_e_shift                             (24)
#define  AUDIO_pllcg_spdif_gain_cr0_ps_testmode_shift                            (22)
#define  AUDIO_pllcg_spdif_gain_cr0_pll_spdif_dtrack_en_shift                    (21)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_smooth_en_shift                          (20)
#define  AUDIO_pllcg_spdif_gain_cr0_pll_spdif_auto_mode_shift                    (19)
#define  AUDIO_pllcg_spdif_gain_cr0_mod_acc_rst_shift                            (18)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_d_shift                             (13)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_b_shift                             (6)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_a_shift                             (0)
#define  AUDIO_pllcg_spdif_gain_cr0_contword_inv_mask                            (0x80000000)
#define  AUDIO_pllcg_spdif_gain_cr0_div_2fs_mask                                 (0x30000000)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_e_mask                              (0x07000000)
#define  AUDIO_pllcg_spdif_gain_cr0_ps_testmode_mask                             (0x00400000)
#define  AUDIO_pllcg_spdif_gain_cr0_pll_spdif_dtrack_en_mask                     (0x00200000)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_smooth_en_mask                           (0x00100000)
#define  AUDIO_pllcg_spdif_gain_cr0_pll_spdif_auto_mode_mask                     (0x00080000)
#define  AUDIO_pllcg_spdif_gain_cr0_mod_acc_rst_mask                             (0x00040000)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_d_mask                              (0x0003E000)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_b_mask                              (0x00001FC0)
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_a_mask                              (0x0000003F)
#define  AUDIO_pllcg_spdif_gain_cr0_contword_inv(data)                           (0x80000000&((data)<<31))
#define  AUDIO_pllcg_spdif_gain_cr0_div_2fs(data)                                (0x30000000&((data)<<28))
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_e(data)                             (0x07000000&((data)<<24))
#define  AUDIO_pllcg_spdif_gain_cr0_ps_testmode(data)                            (0x00400000&((data)<<22))
#define  AUDIO_pllcg_spdif_gain_cr0_pll_spdif_dtrack_en(data)                    (0x00200000&((data)<<21))
#define  AUDIO_pllcg_spdif_gain_cr0_reg_smooth_en(data)                          (0x00100000&((data)<<20))
#define  AUDIO_pllcg_spdif_gain_cr0_pll_spdif_auto_mode(data)                    (0x00080000&((data)<<19))
#define  AUDIO_pllcg_spdif_gain_cr0_mod_acc_rst(data)                            (0x00040000&((data)<<18))
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_d(data)                             (0x0003E000&((data)<<13))
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_b(data)                             (0x00001FC0&((data)<<6))
#define  AUDIO_pllcg_spdif_gain_cr0_reg_para_a(data)                             (0x0000003F&(data))
#define  AUDIO_pllcg_spdif_gain_cr0_get_contword_inv(data)                       ((0x80000000&(data))>>31)
#define  AUDIO_pllcg_spdif_gain_cr0_get_div_2fs(data)                            ((0x30000000&(data))>>28)
#define  AUDIO_pllcg_spdif_gain_cr0_get_reg_para_e(data)                         ((0x07000000&(data))>>24)
#define  AUDIO_pllcg_spdif_gain_cr0_get_ps_testmode(data)                        ((0x00400000&(data))>>22)
#define  AUDIO_pllcg_spdif_gain_cr0_get_pll_spdif_dtrack_en(data)                ((0x00200000&(data))>>21)
#define  AUDIO_pllcg_spdif_gain_cr0_get_reg_smooth_en(data)                      ((0x00100000&(data))>>20)
#define  AUDIO_pllcg_spdif_gain_cr0_get_pll_spdif_auto_mode(data)                ((0x00080000&(data))>>19)
#define  AUDIO_pllcg_spdif_gain_cr0_get_mod_acc_rst(data)                        ((0x00040000&(data))>>18)
#define  AUDIO_pllcg_spdif_gain_cr0_get_reg_para_d(data)                         ((0x0003E000&(data))>>13)
#define  AUDIO_pllcg_spdif_gain_cr0_get_reg_para_b(data)                         ((0x00001FC0&(data))>>6)
#define  AUDIO_pllcg_spdif_gain_cr0_get_reg_para_a(data)                         (0x0000003F&(data))

#define  AUDIO_pllcg_spdif_gain_cr1                                             0x18006014
#define  AUDIO_pllcg_spdif_gain_cr1_reg_addr                                     "0xB8006014"
#define  AUDIO_pllcg_spdif_gain_cr1_reg                                          0xB8006014
#define  AUDIO_pllcg_spdif_gain_cr1_inst_addr                                    "0x0004"
#define  set_AUDIO_pllcg_spdif_gain_cr1_reg(data)                                (*((volatile unsigned int*)AUDIO_pllcg_spdif_gain_cr1_reg)=data)
#define  get_AUDIO_pllcg_spdif_gain_cr1_reg                                      (*((volatile unsigned int*)AUDIO_pllcg_spdif_gain_cr1_reg))
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin0_div_fsi_shift                        (26)
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin1_div_fsi_shift                        (24)
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin2_div_fsi_shift                        (22)
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin3_div_fsi_shift                        (20)
#define  AUDIO_pllcg_spdif_gain_cr1_p_gain_set_shift                             (10)
#define  AUDIO_pllcg_spdif_gain_cr1_p_gain_set2_shift                            (0)
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin0_div_fsi_mask                         (0x0C000000)
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin1_div_fsi_mask                         (0x03000000)
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin2_div_fsi_mask                         (0x00C00000)
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin3_div_fsi_mask                         (0x00300000)
#define  AUDIO_pllcg_spdif_gain_cr1_p_gain_set_mask                              (0x000FFC00)
#define  AUDIO_pllcg_spdif_gain_cr1_p_gain_set2_mask                             (0x000003FF)
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin0_div_fsi(data)                        (0x0C000000&((data)<<26))
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin1_div_fsi(data)                        (0x03000000&((data)<<24))
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin2_div_fsi(data)                        (0x00C00000&((data)<<22))
#define  AUDIO_pllcg_spdif_gain_cr1_asrcin3_div_fsi(data)                        (0x00300000&((data)<<20))
#define  AUDIO_pllcg_spdif_gain_cr1_p_gain_set(data)                             (0x000FFC00&((data)<<10))
#define  AUDIO_pllcg_spdif_gain_cr1_p_gain_set2(data)                            (0x000003FF&(data))
#define  AUDIO_pllcg_spdif_gain_cr1_get_asrcin0_div_fsi(data)                    ((0x0C000000&(data))>>26)
#define  AUDIO_pllcg_spdif_gain_cr1_get_asrcin1_div_fsi(data)                    ((0x03000000&(data))>>24)
#define  AUDIO_pllcg_spdif_gain_cr1_get_asrcin2_div_fsi(data)                    ((0x00C00000&(data))>>22)
#define  AUDIO_pllcg_spdif_gain_cr1_get_asrcin3_div_fsi(data)                    ((0x00300000&(data))>>20)
#define  AUDIO_pllcg_spdif_gain_cr1_get_p_gain_set(data)                         ((0x000FFC00&(data))>>10)
#define  AUDIO_pllcg_spdif_gain_cr1_get_p_gain_set2(data)                        (0x000003FF&(data))

#define  AUDIO_pllcg_spdif_gain_cr2                                             0x18006018
#define  AUDIO_pllcg_spdif_gain_cr2_reg_addr                                     "0xB8006018"
#define  AUDIO_pllcg_spdif_gain_cr2_reg                                          0xB8006018
#define  AUDIO_pllcg_spdif_gain_cr2_inst_addr                                    "0x0005"
#define  set_AUDIO_pllcg_spdif_gain_cr2_reg(data)                                (*((volatile unsigned int*)AUDIO_pllcg_spdif_gain_cr2_reg)=data)
#define  get_AUDIO_pllcg_spdif_gain_cr2_reg                                      (*((volatile unsigned int*)AUDIO_pllcg_spdif_gain_cr2_reg))
#define  AUDIO_pllcg_spdif_gain_cr2_i_gain_set_shift                             (0)
#define  AUDIO_pllcg_spdif_gain_cr2_i_gain_set_mask                              (0x000003FF)
#define  AUDIO_pllcg_spdif_gain_cr2_i_gain_set(data)                             (0x000003FF&(data))
#define  AUDIO_pllcg_spdif_gain_cr2_get_i_gain_set(data)                         (0x000003FF&(data))

#define  AUDIO_pllcg_spdif_number                                               0x1800601C
#define  AUDIO_pllcg_spdif_number_reg_addr                                       "0xB800601C"
#define  AUDIO_pllcg_spdif_number_reg                                            0xB800601C
#define  AUDIO_pllcg_spdif_number_inst_addr                                      "0x0006"
#define  set_AUDIO_pllcg_spdif_number_reg(data)                                  (*((volatile unsigned int*)AUDIO_pllcg_spdif_number_reg)=data)
#define  get_AUDIO_pllcg_spdif_number_reg                                        (*((volatile unsigned int*)AUDIO_pllcg_spdif_number_reg))
#define  AUDIO_pllcg_spdif_number_reach_time_num_shift                           (4)
#define  AUDIO_pllcg_spdif_number_max_correct_range_shift                        (0)
#define  AUDIO_pllcg_spdif_number_reach_time_num_mask                            (0x00000070)
#define  AUDIO_pllcg_spdif_number_max_correct_range_mask                         (0x0000000F)
#define  AUDIO_pllcg_spdif_number_reach_time_num(data)                           (0x00000070&((data)<<4))
#define  AUDIO_pllcg_spdif_number_max_correct_range(data)                        (0x0000000F&(data))
#define  AUDIO_pllcg_spdif_number_get_reach_time_num(data)                       ((0x00000070&(data))>>4)
#define  AUDIO_pllcg_spdif_number_get_max_correct_range(data)                    (0x0000000F&(data))

#define  AUDIO_pllcg_spdif_bound                                                0x18006020
#define  AUDIO_pllcg_spdif_bound_reg_addr                                        "0xB8006020"
#define  AUDIO_pllcg_spdif_bound_reg                                             0xB8006020
#define  AUDIO_pllcg_spdif_bound_inst_addr                                       "0x0007"
#define  set_AUDIO_pllcg_spdif_bound_reg(data)                                   (*((volatile unsigned int*)AUDIO_pllcg_spdif_bound_reg)=data)
#define  get_AUDIO_pllcg_spdif_bound_reg                                         (*((volatile unsigned int*)AUDIO_pllcg_spdif_bound_reg))
#define  AUDIO_pllcg_spdif_bound_high_bound1_shift                               (24)
#define  AUDIO_pllcg_spdif_bound_low_bound1_shift                                (16)
#define  AUDIO_pllcg_spdif_bound_high_bound2_shift                               (8)
#define  AUDIO_pllcg_spdif_bound_low_bound2_shift                                (0)
#define  AUDIO_pllcg_spdif_bound_high_bound1_mask                                (0xFF000000)
#define  AUDIO_pllcg_spdif_bound_low_bound1_mask                                 (0x00FF0000)
#define  AUDIO_pllcg_spdif_bound_high_bound2_mask                                (0x0000FF00)
#define  AUDIO_pllcg_spdif_bound_low_bound2_mask                                 (0x000000FF)
#define  AUDIO_pllcg_spdif_bound_high_bound1(data)                               (0xFF000000&((data)<<24))
#define  AUDIO_pllcg_spdif_bound_low_bound1(data)                                (0x00FF0000&((data)<<16))
#define  AUDIO_pllcg_spdif_bound_high_bound2(data)                               (0x0000FF00&((data)<<8))
#define  AUDIO_pllcg_spdif_bound_low_bound2(data)                                (0x000000FF&(data))
#define  AUDIO_pllcg_spdif_bound_get_high_bound1(data)                           ((0xFF000000&(data))>>24)
#define  AUDIO_pllcg_spdif_bound_get_low_bound1(data)                            ((0x00FF0000&(data))>>16)
#define  AUDIO_pllcg_spdif_bound_get_high_bound2(data)                           ((0x0000FF00&(data))>>8)
#define  AUDIO_pllcg_spdif_bound_get_low_bound2(data)                            (0x000000FF&(data))

#define  AUDIO_global_dummy                                                     0x18006024
#define  AUDIO_global_dummy_reg_addr                                             "0xB8006024"
#define  AUDIO_global_dummy_reg                                                  0xB8006024
#define  AUDIO_global_dummy_inst_addr                                            "0x0008"
#define  set_AUDIO_global_dummy_reg(data)                                        (*((volatile unsigned int*)AUDIO_global_dummy_reg)=data)
#define  get_AUDIO_global_dummy_reg                                              (*((volatile unsigned int*)AUDIO_global_dummy_reg))
#define  AUDIO_global_dummy_dummy_31_19_shift                                    (19)
#define  AUDIO_global_dummy_inv_ck512fs_pll_spdif_shift                          (16)
#define  AUDIO_global_dummy_phase_contword_shift                                 (7)
#define  AUDIO_global_dummy_wdog_switch_en_1_shift                               (6)
#define  AUDIO_global_dummy_freq_sel_1_shift                                     (4)
#define  AUDIO_global_dummy_wdog_switch_en_shift                                 (2)
#define  AUDIO_global_dummy_freq_sel_shift                                       (0)
#define  AUDIO_global_dummy_dummy_31_19_mask                                     (0xFFF80000)
#define  AUDIO_global_dummy_inv_ck512fs_pll_spdif_mask                           (0x00010000)
#define  AUDIO_global_dummy_phase_contword_mask                                  (0x00000F80)
#define  AUDIO_global_dummy_wdog_switch_en_1_mask                                (0x00000040)
#define  AUDIO_global_dummy_freq_sel_1_mask                                      (0x00000030)
#define  AUDIO_global_dummy_wdog_switch_en_mask                                  (0x00000004)
#define  AUDIO_global_dummy_freq_sel_mask                                        (0x00000003)
#define  AUDIO_global_dummy_dummy_31_19(data)                                    (0xFFF80000&((data)<<19))
#define  AUDIO_global_dummy_inv_ck512fs_pll_spdif(data)                          (0x00010000&((data)<<16))
#define  AUDIO_global_dummy_phase_contword(data)                                 (0x00000F80&((data)<<7))
#define  AUDIO_global_dummy_wdog_switch_en_1(data)                               (0x00000040&((data)<<6))
#define  AUDIO_global_dummy_freq_sel_1(data)                                     (0x00000030&((data)<<4))
#define  AUDIO_global_dummy_wdog_switch_en(data)                                 (0x00000004&((data)<<2))
#define  AUDIO_global_dummy_freq_sel(data)                                       (0x00000003&(data))
#define  AUDIO_global_dummy_get_dummy_31_19(data)                                ((0xFFF80000&(data))>>19)
#define  AUDIO_global_dummy_get_inv_ck512fs_pll_spdif(data)                      ((0x00010000&(data))>>16)
#define  AUDIO_global_dummy_get_phase_contword(data)                             ((0x00000F80&(data))>>7)
#define  AUDIO_global_dummy_get_wdog_switch_en_1(data)                           ((0x00000040&(data))>>6)
#define  AUDIO_global_dummy_get_freq_sel_1(data)                                 ((0x00000030&(data))>>4)
#define  AUDIO_global_dummy_get_wdog_switch_en(data)                             ((0x00000004&(data))>>2)
#define  AUDIO_global_dummy_get_freq_sel(data)                                   (0x00000003&(data))

#define  AUDIO_vr_ctrl_1                                                        0x1800602C
#define  AUDIO_vr_ctrl_1_reg_addr                                                "0xB800602C"
#define  AUDIO_vr_ctrl_1_reg                                                     0xB800602C
#define  AUDIO_vr_ctrl_1_inst_addr                                               "0x0009"
#define  set_AUDIO_vr_ctrl_1_reg(data)                                           (*((volatile unsigned int*)AUDIO_vr_ctrl_1_reg)=data)
#define  get_AUDIO_vr_ctrl_1_reg                                                 (*((volatile unsigned int*)AUDIO_vr_ctrl_1_reg))
#define  AUDIO_vr_ctrl_1_vr_tcon_clken_shift                                     (29)
#define  AUDIO_vr_ctrl_1_vr_tcon_rst_n_shift                                     (28)
#define  AUDIO_vr_ctrl_1_vr_asrcin_div_fsi_shift                                 (26)
#define  AUDIO_vr_ctrl_1_vr_asrcin_ftk_loop_gain_sel1_shift                      (24)
#define  AUDIO_vr_ctrl_1_vr_asrcin_ftk_sdm_ini1_shift                            (0)
#define  AUDIO_vr_ctrl_1_vr_tcon_clken_mask                                      (0x20000000)
#define  AUDIO_vr_ctrl_1_vr_tcon_rst_n_mask                                      (0x10000000)
#define  AUDIO_vr_ctrl_1_vr_asrcin_div_fsi_mask                                  (0x0C000000)
#define  AUDIO_vr_ctrl_1_vr_asrcin_ftk_loop_gain_sel1_mask                       (0x03000000)
#define  AUDIO_vr_ctrl_1_vr_asrcin_ftk_sdm_ini1_mask                             (0x00FFFFFF)
#define  AUDIO_vr_ctrl_1_vr_tcon_clken(data)                                     (0x20000000&((data)<<29))
#define  AUDIO_vr_ctrl_1_vr_tcon_rst_n(data)                                     (0x10000000&((data)<<28))
#define  AUDIO_vr_ctrl_1_vr_asrcin_div_fsi(data)                                 (0x0C000000&((data)<<26))
#define  AUDIO_vr_ctrl_1_vr_asrcin_ftk_loop_gain_sel1(data)                      (0x03000000&((data)<<24))
#define  AUDIO_vr_ctrl_1_vr_asrcin_ftk_sdm_ini1(data)                            (0x00FFFFFF&(data))
#define  AUDIO_vr_ctrl_1_get_vr_tcon_clken(data)                                 ((0x20000000&(data))>>29)
#define  AUDIO_vr_ctrl_1_get_vr_tcon_rst_n(data)                                 ((0x10000000&(data))>>28)
#define  AUDIO_vr_ctrl_1_get_vr_asrcin_div_fsi(data)                             ((0x0C000000&(data))>>26)
#define  AUDIO_vr_ctrl_1_get_vr_asrcin_ftk_loop_gain_sel1(data)                  ((0x03000000&(data))>>24)
#define  AUDIO_vr_ctrl_1_get_vr_asrcin_ftk_sdm_ini1(data)                        (0x00FFFFFF&(data))

#define  AUDIO_vr_ctrl_2                                                        0x18006030
#define  AUDIO_vr_ctrl_2_reg_addr                                                "0xB8006030"
#define  AUDIO_vr_ctrl_2_reg                                                     0xB8006030
#define  AUDIO_vr_ctrl_2_inst_addr                                               "0x000A"
#define  set_AUDIO_vr_ctrl_2_reg(data)                                           (*((volatile unsigned int*)AUDIO_vr_ctrl_2_reg)=data)
#define  get_AUDIO_vr_ctrl_2_reg                                                 (*((volatile unsigned int*)AUDIO_vr_ctrl_2_reg))
#define  AUDIO_vr_ctrl_2_vr_adc_3_en_shift                                       (31)
#define  AUDIO_vr_ctrl_2_vr_srcin_en_shift                                       (30)
#define  AUDIO_vr_ctrl_2_vr_asrcin_tcon_en1_shift                                (29)
#define  AUDIO_vr_ctrl_2_vr_asrcin_fsi1_gating_en_shift                          (28)
#define  AUDIO_vr_ctrl_2_vr_adc_2_en_shift                                       (26)
#define  AUDIO_vr_ctrl_2_vr_asrcin_ftk_m1_shift                                  (23)
#define  AUDIO_vr_ctrl_2_vr_asrcin_ftk_n1_shift                                  (21)
#define  AUDIO_vr_ctrl_2_vr_adc_2_sample_rate_shift                              (17)
#define  AUDIO_vr_ctrl_2_vr_adc_3_sample_rate_shift                              (13)
#define  AUDIO_vr_ctrl_2_vr_srcin_fb_sample_rate_shift                           (9)
#define  AUDIO_vr_ctrl_2_vr_srcin_out_sample_rate_shift                          (5)
#define  AUDIO_vr_ctrl_2_vr_dmic_1_clk_sel_shift                                 (1)
#define  AUDIO_vr_ctrl_2_vr_dmic_1_en_shift                                      (0)
#define  AUDIO_vr_ctrl_2_vr_adc_3_en_mask                                        (0x80000000)
#define  AUDIO_vr_ctrl_2_vr_srcin_en_mask                                        (0x40000000)
#define  AUDIO_vr_ctrl_2_vr_asrcin_tcon_en1_mask                                 (0x20000000)
#define  AUDIO_vr_ctrl_2_vr_asrcin_fsi1_gating_en_mask                           (0x10000000)
#define  AUDIO_vr_ctrl_2_vr_adc_2_en_mask                                        (0x04000000)
#define  AUDIO_vr_ctrl_2_vr_asrcin_ftk_m1_mask                                   (0x03800000)
#define  AUDIO_vr_ctrl_2_vr_asrcin_ftk_n1_mask                                   (0x00600000)
#define  AUDIO_vr_ctrl_2_vr_adc_2_sample_rate_mask                               (0x001E0000)
#define  AUDIO_vr_ctrl_2_vr_adc_3_sample_rate_mask                               (0x0001E000)
#define  AUDIO_vr_ctrl_2_vr_srcin_fb_sample_rate_mask                            (0x00001E00)
#define  AUDIO_vr_ctrl_2_vr_srcin_out_sample_rate_mask                           (0x000001E0)
#define  AUDIO_vr_ctrl_2_vr_dmic_1_clk_sel_mask                                  (0x0000001E)
#define  AUDIO_vr_ctrl_2_vr_dmic_1_en_mask                                       (0x00000001)
#define  AUDIO_vr_ctrl_2_vr_adc_3_en(data)                                       (0x80000000&((data)<<31))
#define  AUDIO_vr_ctrl_2_vr_srcin_en(data)                                       (0x40000000&((data)<<30))
#define  AUDIO_vr_ctrl_2_vr_asrcin_tcon_en1(data)                                (0x20000000&((data)<<29))
#define  AUDIO_vr_ctrl_2_vr_asrcin_fsi1_gating_en(data)                          (0x10000000&((data)<<28))
#define  AUDIO_vr_ctrl_2_vr_adc_2_en(data)                                       (0x04000000&((data)<<26))
#define  AUDIO_vr_ctrl_2_vr_asrcin_ftk_m1(data)                                  (0x03800000&((data)<<23))
#define  AUDIO_vr_ctrl_2_vr_asrcin_ftk_n1(data)                                  (0x00600000&((data)<<21))
#define  AUDIO_vr_ctrl_2_vr_adc_2_sample_rate(data)                              (0x001E0000&((data)<<17))
#define  AUDIO_vr_ctrl_2_vr_adc_3_sample_rate(data)                              (0x0001E000&((data)<<13))
#define  AUDIO_vr_ctrl_2_vr_srcin_fb_sample_rate(data)                           (0x00001E00&((data)<<9))
#define  AUDIO_vr_ctrl_2_vr_srcin_out_sample_rate(data)                          (0x000001E0&((data)<<5))
#define  AUDIO_vr_ctrl_2_vr_dmic_1_clk_sel(data)                                 (0x0000001E&((data)<<1))
#define  AUDIO_vr_ctrl_2_vr_dmic_1_en(data)                                      (0x00000001&(data))
#define  AUDIO_vr_ctrl_2_get_vr_adc_3_en(data)                                   ((0x80000000&(data))>>31)
#define  AUDIO_vr_ctrl_2_get_vr_srcin_en(data)                                   ((0x40000000&(data))>>30)
#define  AUDIO_vr_ctrl_2_get_vr_asrcin_tcon_en1(data)                            ((0x20000000&(data))>>29)
#define  AUDIO_vr_ctrl_2_get_vr_asrcin_fsi1_gating_en(data)                      ((0x10000000&(data))>>28)
#define  AUDIO_vr_ctrl_2_get_vr_adc_2_en(data)                                   ((0x04000000&(data))>>26)
#define  AUDIO_vr_ctrl_2_get_vr_asrcin_ftk_m1(data)                              ((0x03800000&(data))>>23)
#define  AUDIO_vr_ctrl_2_get_vr_asrcin_ftk_n1(data)                              ((0x00600000&(data))>>21)
#define  AUDIO_vr_ctrl_2_get_vr_adc_2_sample_rate(data)                          ((0x001E0000&(data))>>17)
#define  AUDIO_vr_ctrl_2_get_vr_adc_3_sample_rate(data)                          ((0x0001E000&(data))>>13)
#define  AUDIO_vr_ctrl_2_get_vr_srcin_fb_sample_rate(data)                       ((0x00001E00&(data))>>9)
#define  AUDIO_vr_ctrl_2_get_vr_srcin_out_sample_rate(data)                      ((0x000001E0&(data))>>5)
#define  AUDIO_vr_ctrl_2_get_vr_dmic_1_clk_sel(data)                             ((0x0000001E&(data))>>1)
#define  AUDIO_vr_ctrl_2_get_vr_dmic_1_en(data)                                  (0x00000001&(data))

#define  AUDIO_pll_64512_1_detect                                               0x18006034
#define  AUDIO_pll_64512_1_detect_reg_addr                                       "0xB8006034"
#define  AUDIO_pll_64512_1_detect_reg                                            0xB8006034
#define  AUDIO_pll_64512_1_detect_inst_addr                                      "0x000B"
#define  set_AUDIO_pll_64512_1_detect_reg(data)                                  (*((volatile unsigned int*)AUDIO_pll_64512_1_detect_reg)=data)
#define  get_AUDIO_pll_64512_1_detect_reg                                        (*((volatile unsigned int*)AUDIO_pll_64512_1_detect_reg))
#define  AUDIO_pll_64512_1_detect_cnt_debug_1_shift                              (18)
#define  AUDIO_pll_64512_1_detect_pll_64512fs_1_unstable_shift                   (17)
#define  AUDIO_pll_64512_1_detect_pll_64512_1_detect_en_shift                    (16)
#define  AUDIO_pll_64512_1_detect_deta_1_shift                                   (8)
#define  AUDIO_pll_64512_1_detect_average_value_1_shift                          (0)
#define  AUDIO_pll_64512_1_detect_cnt_debug_1_mask                               (0x03FC0000)
#define  AUDIO_pll_64512_1_detect_pll_64512fs_1_unstable_mask                    (0x00020000)
#define  AUDIO_pll_64512_1_detect_pll_64512_1_detect_en_mask                     (0x00010000)
#define  AUDIO_pll_64512_1_detect_deta_1_mask                                    (0x00007F00)
#define  AUDIO_pll_64512_1_detect_average_value_1_mask                           (0x0000007F)
#define  AUDIO_pll_64512_1_detect_cnt_debug_1(data)                              (0x03FC0000&((data)<<18))
#define  AUDIO_pll_64512_1_detect_pll_64512fs_1_unstable(data)                   (0x00020000&((data)<<17))
#define  AUDIO_pll_64512_1_detect_pll_64512_1_detect_en(data)                    (0x00010000&((data)<<16))
#define  AUDIO_pll_64512_1_detect_deta_1(data)                                   (0x00007F00&((data)<<8))
#define  AUDIO_pll_64512_1_detect_average_value_1(data)                          (0x0000007F&(data))
#define  AUDIO_pll_64512_1_detect_get_cnt_debug_1(data)                          ((0x03FC0000&(data))>>18)
#define  AUDIO_pll_64512_1_detect_get_pll_64512fs_1_unstable(data)               ((0x00020000&(data))>>17)
#define  AUDIO_pll_64512_1_detect_get_pll_64512_1_detect_en(data)                ((0x00010000&(data))>>16)
#define  AUDIO_pll_64512_1_detect_get_deta_1(data)                               ((0x00007F00&(data))>>8)
#define  AUDIO_pll_64512_1_detect_get_average_value_1(data)                      (0x0000007F&(data))

#define  AUDIO_tcon_reg_1                                                       0x18006008
#define  AUDIO_tcon_reg_1_reg_addr                                               "0xB8006008"
#define  AUDIO_tcon_reg_1_reg                                                    0xB8006008
#define  AUDIO_tcon_reg_1_inst_addr                                              "0x000C"
#define  set_AUDIO_tcon_reg_1_reg(data)                                          (*((volatile unsigned int*)AUDIO_tcon_reg_1_reg)=data)
#define  get_AUDIO_tcon_reg_1_reg                                                (*((volatile unsigned int*)AUDIO_tcon_reg_1_reg))
#define  AUDIO_tcon_reg_1_vr_adc_4_en_shift                                      (29)
#define  AUDIO_tcon_reg_1_vr_adc_4_clk_gate_en_shift                             (28)
#define  AUDIO_tcon_reg_1_vr_adc_4_sample_rate_shift                             (16)
#define  AUDIO_tcon_reg_1_vr_adc_ana_0_en_shift                                  (15)
#define  AUDIO_tcon_reg_1_vr_osr_adc_sel_shift                                   (14)
#define  AUDIO_tcon_reg_1_vr_dac_0_en_shift                                      (13)
#define  AUDIO_tcon_reg_1_vr_dac_1_en_shift                                      (12)
#define  AUDIO_tcon_reg_1_vr_dac_0_clk_gate_en_shift                             (11)
#define  AUDIO_tcon_reg_1_vr_dac_1_clk_gate_en_shift                             (10)
#define  AUDIO_tcon_reg_1_vr_dac_0_sample_rate_shift                             (6)
#define  AUDIO_tcon_reg_1_vr_dac_1_sample_rate_shift                             (2)
#define  AUDIO_tcon_reg_1_vr_dac_ana_0_en_shift                                  (1)
#define  AUDIO_tcon_reg_1_vr_dac_ana_1_en_shift                                  (0)
#define  AUDIO_tcon_reg_1_vr_adc_4_en_mask                                       (0x20000000)
#define  AUDIO_tcon_reg_1_vr_adc_4_clk_gate_en_mask                              (0x10000000)
#define  AUDIO_tcon_reg_1_vr_adc_4_sample_rate_mask                              (0x000F0000)
#define  AUDIO_tcon_reg_1_vr_adc_ana_0_en_mask                                   (0x00008000)
#define  AUDIO_tcon_reg_1_vr_osr_adc_sel_mask                                    (0x00004000)
#define  AUDIO_tcon_reg_1_vr_dac_0_en_mask                                       (0x00002000)
#define  AUDIO_tcon_reg_1_vr_dac_1_en_mask                                       (0x00001000)
#define  AUDIO_tcon_reg_1_vr_dac_0_clk_gate_en_mask                              (0x00000800)
#define  AUDIO_tcon_reg_1_vr_dac_1_clk_gate_en_mask                              (0x00000400)
#define  AUDIO_tcon_reg_1_vr_dac_0_sample_rate_mask                              (0x000003C0)
#define  AUDIO_tcon_reg_1_vr_dac_1_sample_rate_mask                              (0x0000003C)
#define  AUDIO_tcon_reg_1_vr_dac_ana_0_en_mask                                   (0x00000002)
#define  AUDIO_tcon_reg_1_vr_dac_ana_1_en_mask                                   (0x00000001)
#define  AUDIO_tcon_reg_1_vr_adc_4_en(data)                                      (0x20000000&((data)<<29))
#define  AUDIO_tcon_reg_1_vr_adc_4_clk_gate_en(data)                             (0x10000000&((data)<<28))
#define  AUDIO_tcon_reg_1_vr_adc_4_sample_rate(data)                             (0x000F0000&((data)<<16))
#define  AUDIO_tcon_reg_1_vr_adc_ana_0_en(data)                                  (0x00008000&((data)<<15))
#define  AUDIO_tcon_reg_1_vr_osr_adc_sel(data)                                   (0x00004000&((data)<<14))
#define  AUDIO_tcon_reg_1_vr_dac_0_en(data)                                      (0x00002000&((data)<<13))
#define  AUDIO_tcon_reg_1_vr_dac_1_en(data)                                      (0x00001000&((data)<<12))
#define  AUDIO_tcon_reg_1_vr_dac_0_clk_gate_en(data)                             (0x00000800&((data)<<11))
#define  AUDIO_tcon_reg_1_vr_dac_1_clk_gate_en(data)                             (0x00000400&((data)<<10))
#define  AUDIO_tcon_reg_1_vr_dac_0_sample_rate(data)                             (0x000003C0&((data)<<6))
#define  AUDIO_tcon_reg_1_vr_dac_1_sample_rate(data)                             (0x0000003C&((data)<<2))
#define  AUDIO_tcon_reg_1_vr_dac_ana_0_en(data)                                  (0x00000002&((data)<<1))
#define  AUDIO_tcon_reg_1_vr_dac_ana_1_en(data)                                  (0x00000001&(data))
#define  AUDIO_tcon_reg_1_get_vr_adc_4_en(data)                                  ((0x20000000&(data))>>29)
#define  AUDIO_tcon_reg_1_get_vr_adc_4_clk_gate_en(data)                         ((0x10000000&(data))>>28)
#define  AUDIO_tcon_reg_1_get_vr_adc_4_sample_rate(data)                         ((0x000F0000&(data))>>16)
#define  AUDIO_tcon_reg_1_get_vr_adc_ana_0_en(data)                              ((0x00008000&(data))>>15)
#define  AUDIO_tcon_reg_1_get_vr_osr_adc_sel(data)                               ((0x00004000&(data))>>14)
#define  AUDIO_tcon_reg_1_get_vr_dac_0_en(data)                                  ((0x00002000&(data))>>13)
#define  AUDIO_tcon_reg_1_get_vr_dac_1_en(data)                                  ((0x00001000&(data))>>12)
#define  AUDIO_tcon_reg_1_get_vr_dac_0_clk_gate_en(data)                         ((0x00000800&(data))>>11)
#define  AUDIO_tcon_reg_1_get_vr_dac_1_clk_gate_en(data)                         ((0x00000400&(data))>>10)
#define  AUDIO_tcon_reg_1_get_vr_dac_0_sample_rate(data)                         ((0x000003C0&(data))>>6)
#define  AUDIO_tcon_reg_1_get_vr_dac_1_sample_rate(data)                         ((0x0000003C&(data))>>2)
#define  AUDIO_tcon_reg_1_get_vr_dac_ana_0_en(data)                              ((0x00000002&(data))>>1)
#define  AUDIO_tcon_reg_1_get_vr_dac_ana_1_en(data)                              (0x00000001&(data))

#define  AUDIO_tcon_reg_2                                                       0x1800600C
#define  AUDIO_tcon_reg_2_reg_addr                                               "0xB800600C"
#define  AUDIO_tcon_reg_2_reg                                                    0xB800600C
#define  AUDIO_tcon_reg_2_inst_addr                                              "0x000D"
#define  set_AUDIO_tcon_reg_2_reg(data)                                          (*((volatile unsigned int*)AUDIO_tcon_reg_2_reg)=data)
#define  get_AUDIO_tcon_reg_2_reg                                                (*((volatile unsigned int*)AUDIO_tcon_reg_2_reg))
#define  AUDIO_tcon_reg_2_vr_osr_dac_sel_shift                                   (19)
#define  AUDIO_tcon_reg_2_vr_damod_0_en_shift                                    (18)
#define  AUDIO_tcon_reg_2_vr_damod_1_en_shift                                    (17)
#define  AUDIO_tcon_reg_2_vr_asrcin_tcon_en0_shift                               (11)
#define  AUDIO_tcon_reg_2_vr_asrcin_tcon_en2_shift                               (9)
#define  AUDIO_tcon_reg_2_vr_asrcin_tcon_en3_shift                               (8)
#define  AUDIO_tcon_reg_2_vr_asrcin_fsi0_gating_en_shift                         (7)
#define  AUDIO_tcon_reg_2_vr_asrcin_fsi2_gating_en_shift                         (5)
#define  AUDIO_tcon_reg_2_vr_asrcin_fsi3_gating_en_shift                         (4)
#define  AUDIO_tcon_reg_2_vr_asrcin_ftk_loop_gain_sel0_shift                     (2)
#define  AUDIO_tcon_reg_2_vr_osr_dac_sel_mask                                    (0x00080000)
#define  AUDIO_tcon_reg_2_vr_damod_0_en_mask                                     (0x00040000)
#define  AUDIO_tcon_reg_2_vr_damod_1_en_mask                                     (0x00020000)
#define  AUDIO_tcon_reg_2_vr_asrcin_tcon_en0_mask                                (0x00000800)
#define  AUDIO_tcon_reg_2_vr_asrcin_tcon_en2_mask                                (0x00000200)
#define  AUDIO_tcon_reg_2_vr_asrcin_tcon_en3_mask                                (0x00000100)
#define  AUDIO_tcon_reg_2_vr_asrcin_fsi0_gating_en_mask                          (0x00000080)
#define  AUDIO_tcon_reg_2_vr_asrcin_fsi2_gating_en_mask                          (0x00000020)
#define  AUDIO_tcon_reg_2_vr_asrcin_fsi3_gating_en_mask                          (0x00000010)
#define  AUDIO_tcon_reg_2_vr_asrcin_ftk_loop_gain_sel0_mask                      (0x0000000C)
#define  AUDIO_tcon_reg_2_vr_osr_dac_sel(data)                                   (0x00080000&((data)<<19))
#define  AUDIO_tcon_reg_2_vr_damod_0_en(data)                                    (0x00040000&((data)<<18))
#define  AUDIO_tcon_reg_2_vr_damod_1_en(data)                                    (0x00020000&((data)<<17))
#define  AUDIO_tcon_reg_2_vr_asrcin_tcon_en0(data)                               (0x00000800&((data)<<11))
#define  AUDIO_tcon_reg_2_vr_asrcin_tcon_en2(data)                               (0x00000200&((data)<<9))
#define  AUDIO_tcon_reg_2_vr_asrcin_tcon_en3(data)                               (0x00000100&((data)<<8))
#define  AUDIO_tcon_reg_2_vr_asrcin_fsi0_gating_en(data)                         (0x00000080&((data)<<7))
#define  AUDIO_tcon_reg_2_vr_asrcin_fsi2_gating_en(data)                         (0x00000020&((data)<<5))
#define  AUDIO_tcon_reg_2_vr_asrcin_fsi3_gating_en(data)                         (0x00000010&((data)<<4))
#define  AUDIO_tcon_reg_2_vr_asrcin_ftk_loop_gain_sel0(data)                     (0x0000000C&((data)<<2))
#define  AUDIO_tcon_reg_2_get_vr_osr_dac_sel(data)                               ((0x00080000&(data))>>19)
#define  AUDIO_tcon_reg_2_get_vr_damod_0_en(data)                                ((0x00040000&(data))>>18)
#define  AUDIO_tcon_reg_2_get_vr_damod_1_en(data)                                ((0x00020000&(data))>>17)
#define  AUDIO_tcon_reg_2_get_vr_asrcin_tcon_en0(data)                           ((0x00000800&(data))>>11)
#define  AUDIO_tcon_reg_2_get_vr_asrcin_tcon_en2(data)                           ((0x00000200&(data))>>9)
#define  AUDIO_tcon_reg_2_get_vr_asrcin_tcon_en3(data)                           ((0x00000100&(data))>>8)
#define  AUDIO_tcon_reg_2_get_vr_asrcin_fsi0_gating_en(data)                     ((0x00000080&(data))>>7)
#define  AUDIO_tcon_reg_2_get_vr_asrcin_fsi2_gating_en(data)                     ((0x00000020&(data))>>5)
#define  AUDIO_tcon_reg_2_get_vr_asrcin_fsi3_gating_en(data)                     ((0x00000010&(data))>>4)
#define  AUDIO_tcon_reg_2_get_vr_asrcin_ftk_loop_gain_sel0(data)                 ((0x0000000C&(data))>>2)

#define  AUDIO_tcon_reg_3                                                       0x1800603C
#define  AUDIO_tcon_reg_3_reg_addr                                               "0xB800603C"
#define  AUDIO_tcon_reg_3_reg                                                    0xB800603C
#define  AUDIO_tcon_reg_3_inst_addr                                              "0x000E"
#define  set_AUDIO_tcon_reg_3_reg(data)                                          (*((volatile unsigned int*)AUDIO_tcon_reg_3_reg)=data)
#define  get_AUDIO_tcon_reg_3_reg                                                (*((volatile unsigned int*)AUDIO_tcon_reg_3_reg))
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_loop_gain_sel2_shift                     (30)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_loop_gain_sel3_shift                     (28)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_m0_shift                                 (25)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_m2_shift                                 (19)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_m3_shift                                 (16)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_n0_shift                                 (14)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_n2_shift                                 (10)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_n3_shift                                 (8)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_loop_gain_sel2_mask                      (0xC0000000)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_loop_gain_sel3_mask                      (0x30000000)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_m0_mask                                  (0x0E000000)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_m2_mask                                  (0x00380000)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_m3_mask                                  (0x00070000)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_n0_mask                                  (0x0000C000)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_n2_mask                                  (0x00000C00)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_n3_mask                                  (0x00000300)
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_loop_gain_sel2(data)                     (0xC0000000&((data)<<30))
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_loop_gain_sel3(data)                     (0x30000000&((data)<<28))
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_m0(data)                                 (0x0E000000&((data)<<25))
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_m2(data)                                 (0x00380000&((data)<<19))
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_m3(data)                                 (0x00070000&((data)<<16))
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_n0(data)                                 (0x0000C000&((data)<<14))
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_n2(data)                                 (0x00000C00&((data)<<10))
#define  AUDIO_tcon_reg_3_vr_asrcin_ftk_n3(data)                                 (0x00000300&((data)<<8))
#define  AUDIO_tcon_reg_3_get_vr_asrcin_ftk_loop_gain_sel2(data)                 ((0xC0000000&(data))>>30)
#define  AUDIO_tcon_reg_3_get_vr_asrcin_ftk_loop_gain_sel3(data)                 ((0x30000000&(data))>>28)
#define  AUDIO_tcon_reg_3_get_vr_asrcin_ftk_m0(data)                             ((0x0E000000&(data))>>25)
#define  AUDIO_tcon_reg_3_get_vr_asrcin_ftk_m2(data)                             ((0x00380000&(data))>>19)
#define  AUDIO_tcon_reg_3_get_vr_asrcin_ftk_m3(data)                             ((0x00070000&(data))>>16)
#define  AUDIO_tcon_reg_3_get_vr_asrcin_ftk_n0(data)                             ((0x0000C000&(data))>>14)
#define  AUDIO_tcon_reg_3_get_vr_asrcin_ftk_n2(data)                             ((0x00000C00&(data))>>10)
#define  AUDIO_tcon_reg_3_get_vr_asrcin_ftk_n3(data)                             ((0x00000300&(data))>>8)

#define  AUDIO_tcon_reg_4                                                       0x18006040
#define  AUDIO_tcon_reg_4_reg_addr                                               "0xB8006040"
#define  AUDIO_tcon_reg_4_reg                                                    0xB8006040
#define  AUDIO_tcon_reg_4_inst_addr                                              "0x000F"
#define  set_AUDIO_tcon_reg_4_reg(data)                                          (*((volatile unsigned int*)AUDIO_tcon_reg_4_reg)=data)
#define  get_AUDIO_tcon_reg_4_reg                                                (*((volatile unsigned int*)AUDIO_tcon_reg_4_reg))
#define  AUDIO_tcon_reg_4_vr_asrcin_ftk_sdm_ini0_shift                           (0)
#define  AUDIO_tcon_reg_4_vr_asrcin_ftk_sdm_ini0_mask                            (0x00FFFFFF)
#define  AUDIO_tcon_reg_4_vr_asrcin_ftk_sdm_ini0(data)                           (0x00FFFFFF&(data))
#define  AUDIO_tcon_reg_4_get_vr_asrcin_ftk_sdm_ini0(data)                       (0x00FFFFFF&(data))

#define  AUDIO_tcon_reg_6                                                       0x18006044
#define  AUDIO_tcon_reg_6_reg_addr                                               "0xB8006044"
#define  AUDIO_tcon_reg_6_reg                                                    0xB8006044
#define  AUDIO_tcon_reg_6_inst_addr                                              "0x0010"
#define  set_AUDIO_tcon_reg_6_reg(data)                                          (*((volatile unsigned int*)AUDIO_tcon_reg_6_reg)=data)
#define  get_AUDIO_tcon_reg_6_reg                                                (*((volatile unsigned int*)AUDIO_tcon_reg_6_reg))
#define  AUDIO_tcon_reg_6_vr_asrcin_ftk_sdm_ini2_shift                           (0)
#define  AUDIO_tcon_reg_6_vr_asrcin_ftk_sdm_ini2_mask                            (0x00FFFFFF)
#define  AUDIO_tcon_reg_6_vr_asrcin_ftk_sdm_ini2(data)                           (0x00FFFFFF&(data))
#define  AUDIO_tcon_reg_6_get_vr_asrcin_ftk_sdm_ini2(data)                       (0x00FFFFFF&(data))

#define  AUDIO_con_reg_7                                                        0x18006048
#define  AUDIO_con_reg_7_reg_addr                                                "0xB8006048"
#define  AUDIO_con_reg_7_reg                                                     0xB8006048
#define  AUDIO_con_reg_7_inst_addr                                               "0x0011"
#define  set_AUDIO_con_reg_7_reg(data)                                           (*((volatile unsigned int*)AUDIO_con_reg_7_reg)=data)
#define  get_AUDIO_con_reg_7_reg                                                 (*((volatile unsigned int*)AUDIO_con_reg_7_reg))
#define  AUDIO_con_reg_7_vr_asrcin_ftk_sdm_ini3_shift                            (0)
#define  AUDIO_con_reg_7_vr_asrcin_ftk_sdm_ini3_mask                             (0x00FFFFFF)
#define  AUDIO_con_reg_7_vr_asrcin_ftk_sdm_ini3(data)                            (0x00FFFFFF&(data))
#define  AUDIO_con_reg_7_get_vr_asrcin_ftk_sdm_ini3(data)                        (0x00FFFFFF&(data))

#define  AUDIO_interrupt_en                                                     0x18006050
#define  AUDIO_interrupt_en_reg_addr                                             "0xB8006050"
#define  AUDIO_interrupt_en_reg                                                  0xB8006050
#define  AUDIO_interrupt_en_inst_addr                                            "0x0012"
#define  set_AUDIO_interrupt_en_reg(data)                                        (*((volatile unsigned int*)AUDIO_interrupt_en_reg)=data)
#define  get_AUDIO_interrupt_en_reg                                              (*((volatile unsigned int*)AUDIO_interrupt_en_reg))
#define  AUDIO_interrupt_en_int_nicam_true_detect_en_shift                       (31)
#define  AUDIO_interrupt_en_int_fifo0_ts_full_en_shift                           (30)
#define  AUDIO_interrupt_en_int_fifo0_ts_empty_en_shift                          (29)
#define  AUDIO_interrupt_en_int_pll64512_wd_en_shift                             (28)
#define  AUDIO_interrupt_en_int_msd_decision_done_en_shift                       (27)
#define  AUDIO_interrupt_en_int_msd_fw_scan_done_en_shift                        (26)
#define  AUDIO_interrupt_en_int_rbus_timeout_en_shift                            (25)
#define  AUDIO_interrupt_en_int_btsc_mode_chg_en_shift                           (24)
#define  AUDIO_interrupt_en_int_fifo3_full_en_shift                              (23)
#define  AUDIO_interrupt_en_int_fifo2_full_en_shift                              (22)
#define  AUDIO_interrupt_en_int_fifo1_full_en_shift                              (21)
#define  AUDIO_interrupt_en_int_fifo0_full_en_shift                              (20)
#define  AUDIO_interrupt_en_int_fifo3_empty_en_shift                             (19)
#define  AUDIO_interrupt_en_int_fifo2_empty_en_shift                             (18)
#define  AUDIO_interrupt_en_int_fifo1_empty_en_shift                             (17)
#define  AUDIO_interrupt_en_int_fifo0_empty_en_shift                             (16)
#define  AUDIO_interrupt_en_int_nicam_level_status_en_shift                      (15)
#define  AUDIO_interrupt_en_int_ain_timer_en_shift                               (14)
#define  AUDIO_interrupt_en_int_aout_timer_en_shift                              (13)
#define  AUDIO_interrupt_en_int_spi_in_datatype_change_en_shift                  (12)
#define  AUDIO_interrupt_en_int_spi_in_lock_change_en_shift                      (11)
#define  AUDIO_interrupt_en_int_nicam_hierr_change_en_shift                      (10)
#define  AUDIO_interrupt_en_int_i2s_pri_sample_rate_chg_en_shift                 (9)
#define  AUDIO_interrupt_en_int_spi_sample_rate_chg_en_shift                     (7)
#define  AUDIO_interrupt_en_int_i2s_pri_word_length_change_en_shift              (6)
#define  AUDIO_interrupt_en_int_pll64512_wd_en_1_shift                           (5)
#define  AUDIO_interrupt_en_int_sif_nopt_en_shift                                (4)
#define  AUDIO_interrupt_en_int_msd_change_en_shift                              (3)
#define  AUDIO_interrupt_en_int_msd_timeout_en_shift                             (2)
#define  AUDIO_interrupt_en_int_mode_det_status_change_en_shift                  (1)
#define  AUDIO_interrupt_en_int_sif_ovf_en_shift                                 (0)
#define  AUDIO_interrupt_en_int_nicam_true_detect_en_mask                        (0x80000000)
#define  AUDIO_interrupt_en_int_fifo0_ts_full_en_mask                            (0x40000000)
#define  AUDIO_interrupt_en_int_fifo0_ts_empty_en_mask                           (0x20000000)
#define  AUDIO_interrupt_en_int_pll64512_wd_en_mask                              (0x10000000)
#define  AUDIO_interrupt_en_int_msd_decision_done_en_mask                        (0x08000000)
#define  AUDIO_interrupt_en_int_msd_fw_scan_done_en_mask                         (0x04000000)
#define  AUDIO_interrupt_en_int_rbus_timeout_en_mask                             (0x02000000)
#define  AUDIO_interrupt_en_int_btsc_mode_chg_en_mask                            (0x01000000)
#define  AUDIO_interrupt_en_int_fifo3_full_en_mask                               (0x00800000)
#define  AUDIO_interrupt_en_int_fifo2_full_en_mask                               (0x00400000)
#define  AUDIO_interrupt_en_int_fifo1_full_en_mask                               (0x00200000)
#define  AUDIO_interrupt_en_int_fifo0_full_en_mask                               (0x00100000)
#define  AUDIO_interrupt_en_int_fifo3_empty_en_mask                              (0x00080000)
#define  AUDIO_interrupt_en_int_fifo2_empty_en_mask                              (0x00040000)
#define  AUDIO_interrupt_en_int_fifo1_empty_en_mask                              (0x00020000)
#define  AUDIO_interrupt_en_int_fifo0_empty_en_mask                              (0x00010000)
#define  AUDIO_interrupt_en_int_nicam_level_status_en_mask                       (0x00008000)
#define  AUDIO_interrupt_en_int_ain_timer_en_mask                                (0x00004000)
#define  AUDIO_interrupt_en_int_aout_timer_en_mask                               (0x00002000)
#define  AUDIO_interrupt_en_int_spi_in_datatype_change_en_mask                   (0x00001000)
#define  AUDIO_interrupt_en_int_spi_in_lock_change_en_mask                       (0x00000800)
#define  AUDIO_interrupt_en_int_nicam_hierr_change_en_mask                       (0x00000400)
#define  AUDIO_interrupt_en_int_i2s_pri_sample_rate_chg_en_mask                  (0x00000200)
#define  AUDIO_interrupt_en_int_spi_sample_rate_chg_en_mask                      (0x00000080)
#define  AUDIO_interrupt_en_int_i2s_pri_word_length_change_en_mask               (0x00000040)
#define  AUDIO_interrupt_en_int_pll64512_wd_en_1_mask                            (0x00000020)
#define  AUDIO_interrupt_en_int_sif_nopt_en_mask                                 (0x00000010)
#define  AUDIO_interrupt_en_int_msd_change_en_mask                               (0x00000008)
#define  AUDIO_interrupt_en_int_msd_timeout_en_mask                              (0x00000004)
#define  AUDIO_interrupt_en_int_mode_det_status_change_en_mask                   (0x00000002)
#define  AUDIO_interrupt_en_int_sif_ovf_en_mask                                  (0x00000001)
#define  AUDIO_interrupt_en_int_nicam_true_detect_en(data)                       (0x80000000&((data)<<31))
#define  AUDIO_interrupt_en_int_fifo0_ts_full_en(data)                           (0x40000000&((data)<<30))
#define  AUDIO_interrupt_en_int_fifo0_ts_empty_en(data)                          (0x20000000&((data)<<29))
#define  AUDIO_interrupt_en_int_pll64512_wd_en(data)                             (0x10000000&((data)<<28))
#define  AUDIO_interrupt_en_int_msd_decision_done_en(data)                       (0x08000000&((data)<<27))
#define  AUDIO_interrupt_en_int_msd_fw_scan_done_en(data)                        (0x04000000&((data)<<26))
#define  AUDIO_interrupt_en_int_rbus_timeout_en(data)                            (0x02000000&((data)<<25))
#define  AUDIO_interrupt_en_int_btsc_mode_chg_en(data)                           (0x01000000&((data)<<24))
#define  AUDIO_interrupt_en_int_fifo3_full_en(data)                              (0x00800000&((data)<<23))
#define  AUDIO_interrupt_en_int_fifo2_full_en(data)                              (0x00400000&((data)<<22))
#define  AUDIO_interrupt_en_int_fifo1_full_en(data)                              (0x00200000&((data)<<21))
#define  AUDIO_interrupt_en_int_fifo0_full_en(data)                              (0x00100000&((data)<<20))
#define  AUDIO_interrupt_en_int_fifo3_empty_en(data)                             (0x00080000&((data)<<19))
#define  AUDIO_interrupt_en_int_fifo2_empty_en(data)                             (0x00040000&((data)<<18))
#define  AUDIO_interrupt_en_int_fifo1_empty_en(data)                             (0x00020000&((data)<<17))
#define  AUDIO_interrupt_en_int_fifo0_empty_en(data)                             (0x00010000&((data)<<16))
#define  AUDIO_interrupt_en_int_nicam_level_status_en(data)                      (0x00008000&((data)<<15))
#define  AUDIO_interrupt_en_int_ain_timer_en(data)                               (0x00004000&((data)<<14))
#define  AUDIO_interrupt_en_int_aout_timer_en(data)                              (0x00002000&((data)<<13))
#define  AUDIO_interrupt_en_int_spi_in_datatype_change_en(data)                  (0x00001000&((data)<<12))
#define  AUDIO_interrupt_en_int_spi_in_lock_change_en(data)                      (0x00000800&((data)<<11))
#define  AUDIO_interrupt_en_int_nicam_hierr_change_en(data)                      (0x00000400&((data)<<10))
#define  AUDIO_interrupt_en_int_i2s_pri_sample_rate_chg_en(data)                 (0x00000200&((data)<<9))
#define  AUDIO_interrupt_en_int_spi_sample_rate_chg_en(data)                     (0x00000080&((data)<<7))
#define  AUDIO_interrupt_en_int_i2s_pri_word_length_change_en(data)              (0x00000040&((data)<<6))
#define  AUDIO_interrupt_en_int_pll64512_wd_en_1(data)                           (0x00000020&((data)<<5))
#define  AUDIO_interrupt_en_int_sif_nopt_en(data)                                (0x00000010&((data)<<4))
#define  AUDIO_interrupt_en_int_msd_change_en(data)                              (0x00000008&((data)<<3))
#define  AUDIO_interrupt_en_int_msd_timeout_en(data)                             (0x00000004&((data)<<2))
#define  AUDIO_interrupt_en_int_mode_det_status_change_en(data)                  (0x00000002&((data)<<1))
#define  AUDIO_interrupt_en_int_sif_ovf_en(data)                                 (0x00000001&(data))
#define  AUDIO_interrupt_en_get_int_nicam_true_detect_en(data)                   ((0x80000000&(data))>>31)
#define  AUDIO_interrupt_en_get_int_fifo0_ts_full_en(data)                       ((0x40000000&(data))>>30)
#define  AUDIO_interrupt_en_get_int_fifo0_ts_empty_en(data)                      ((0x20000000&(data))>>29)
#define  AUDIO_interrupt_en_get_int_pll64512_wd_en(data)                         ((0x10000000&(data))>>28)
#define  AUDIO_interrupt_en_get_int_msd_decision_done_en(data)                   ((0x08000000&(data))>>27)
#define  AUDIO_interrupt_en_get_int_msd_fw_scan_done_en(data)                    ((0x04000000&(data))>>26)
#define  AUDIO_interrupt_en_get_int_rbus_timeout_en(data)                        ((0x02000000&(data))>>25)
#define  AUDIO_interrupt_en_get_int_btsc_mode_chg_en(data)                       ((0x01000000&(data))>>24)
#define  AUDIO_interrupt_en_get_int_fifo3_full_en(data)                          ((0x00800000&(data))>>23)
#define  AUDIO_interrupt_en_get_int_fifo2_full_en(data)                          ((0x00400000&(data))>>22)
#define  AUDIO_interrupt_en_get_int_fifo1_full_en(data)                          ((0x00200000&(data))>>21)
#define  AUDIO_interrupt_en_get_int_fifo0_full_en(data)                          ((0x00100000&(data))>>20)
#define  AUDIO_interrupt_en_get_int_fifo3_empty_en(data)                         ((0x00080000&(data))>>19)
#define  AUDIO_interrupt_en_get_int_fifo2_empty_en(data)                         ((0x00040000&(data))>>18)
#define  AUDIO_interrupt_en_get_int_fifo1_empty_en(data)                         ((0x00020000&(data))>>17)
#define  AUDIO_interrupt_en_get_int_fifo0_empty_en(data)                         ((0x00010000&(data))>>16)
#define  AUDIO_interrupt_en_get_int_nicam_level_status_en(data)                  ((0x00008000&(data))>>15)
#define  AUDIO_interrupt_en_get_int_ain_timer_en(data)                           ((0x00004000&(data))>>14)
#define  AUDIO_interrupt_en_get_int_aout_timer_en(data)                          ((0x00002000&(data))>>13)
#define  AUDIO_interrupt_en_get_int_spi_in_datatype_change_en(data)              ((0x00001000&(data))>>12)
#define  AUDIO_interrupt_en_get_int_spi_in_lock_change_en(data)                  ((0x00000800&(data))>>11)
#define  AUDIO_interrupt_en_get_int_nicam_hierr_change_en(data)                  ((0x00000400&(data))>>10)
#define  AUDIO_interrupt_en_get_int_i2s_pri_sample_rate_chg_en(data)             ((0x00000200&(data))>>9)
#define  AUDIO_interrupt_en_get_int_spi_sample_rate_chg_en(data)                 ((0x00000080&(data))>>7)
#define  AUDIO_interrupt_en_get_int_i2s_pri_word_length_change_en(data)          ((0x00000040&(data))>>6)
#define  AUDIO_interrupt_en_get_int_pll64512_wd_en_1(data)                       ((0x00000020&(data))>>5)
#define  AUDIO_interrupt_en_get_int_sif_nopt_en(data)                            ((0x00000010&(data))>>4)
#define  AUDIO_interrupt_en_get_int_msd_change_en(data)                          ((0x00000008&(data))>>3)
#define  AUDIO_interrupt_en_get_int_msd_timeout_en(data)                         ((0x00000004&(data))>>2)
#define  AUDIO_interrupt_en_get_int_mode_det_status_change_en(data)              ((0x00000002&(data))>>1)
#define  AUDIO_interrupt_en_get_int_sif_ovf_en(data)                             (0x00000001&(data))

#define  AUDIO_interrupt_status                                                 0x18006054
#define  AUDIO_interrupt_status_reg_addr                                         "0xB8006054"
#define  AUDIO_interrupt_status_reg                                              0xB8006054
#define  AUDIO_interrupt_status_inst_addr                                        "0x0013"
#define  set_AUDIO_interrupt_status_reg(data)                                    (*((volatile unsigned int*)AUDIO_interrupt_status_reg)=data)
#define  get_AUDIO_interrupt_status_reg                                          (*((volatile unsigned int*)AUDIO_interrupt_status_reg))
#define  AUDIO_interrupt_status_int_nicam_true_detect_shift                      (31)
#define  AUDIO_interrupt_status_int_fifo0_ts_full_shift                          (30)
#define  AUDIO_interrupt_status_int_fifo0_ts_empty_shift                         (29)
#define  AUDIO_interrupt_status_int_pll64512_wd_shift                            (28)
#define  AUDIO_interrupt_status_int_msd_decision_done_shift                      (27)
#define  AUDIO_interrupt_status_int_msd_fw_scan_done_shift                       (26)
#define  AUDIO_interrupt_status_int_rbus_timeout_shift                           (25)
#define  AUDIO_interrupt_status_int_btsc_mode_chg_shift                          (24)
#define  AUDIO_interrupt_status_int_fifo3_full_shift                             (23)
#define  AUDIO_interrupt_status_int_fifo2_full_shift                             (22)
#define  AUDIO_interrupt_status_int_fifo1_full_shift                             (21)
#define  AUDIO_interrupt_status_int_fifo0_full_shift                             (20)
#define  AUDIO_interrupt_status_int_fifo3_empty_shift                            (19)
#define  AUDIO_interrupt_status_int_fifo2_empty_shift                            (18)
#define  AUDIO_interrupt_status_int_fifo1_empty_shift                            (17)
#define  AUDIO_interrupt_status_int_fifo0_empty_shift                            (16)
#define  AUDIO_interrupt_status_int_nicam_level_status_shift                     (15)
#define  AUDIO_interrupt_status_int_ain_timer_shift                              (14)
#define  AUDIO_interrupt_status_int_aout_timer_shift                             (13)
#define  AUDIO_interrupt_status_int_spi_in_datatype_change_shift                 (12)
#define  AUDIO_interrupt_status_int_spi_in_lock_change_shift                     (11)
#define  AUDIO_interrupt_status_int_nicam_hierr_change_shift                     (10)
#define  AUDIO_interrupt_status_int_i2s_pri_sample_rate_chg_shift                (9)
#define  AUDIO_interrupt_status_int_spi_sample_rate_chg_shift                    (7)
#define  AUDIO_interrupt_status_int_i2s_pri_word_length_change_shift             (6)
#define  AUDIO_interrupt_status_int_pll64512_wd_1_shift                          (5)
#define  AUDIO_interrupt_status_int_sif_nopt_shift                               (4)
#define  AUDIO_interrupt_status_int_msd_change_shift                             (3)
#define  AUDIO_interrupt_status_int_msd_timeout_shift                            (2)
#define  AUDIO_interrupt_status_int_mode_det_status_change_shift                 (1)
#define  AUDIO_interrupt_status_int_sif_ovf_shift                                (0)
#define  AUDIO_interrupt_status_int_nicam_true_detect_mask                       (0x80000000)
#define  AUDIO_interrupt_status_int_fifo0_ts_full_mask                           (0x40000000)
#define  AUDIO_interrupt_status_int_fifo0_ts_empty_mask                          (0x20000000)
#define  AUDIO_interrupt_status_int_pll64512_wd_mask                             (0x10000000)
#define  AUDIO_interrupt_status_int_msd_decision_done_mask                       (0x08000000)
#define  AUDIO_interrupt_status_int_msd_fw_scan_done_mask                        (0x04000000)
#define  AUDIO_interrupt_status_int_rbus_timeout_mask                            (0x02000000)
#define  AUDIO_interrupt_status_int_btsc_mode_chg_mask                           (0x01000000)
#define  AUDIO_interrupt_status_int_fifo3_full_mask                              (0x00800000)
#define  AUDIO_interrupt_status_int_fifo2_full_mask                              (0x00400000)
#define  AUDIO_interrupt_status_int_fifo1_full_mask                              (0x00200000)
#define  AUDIO_interrupt_status_int_fifo0_full_mask                              (0x00100000)
#define  AUDIO_interrupt_status_int_fifo3_empty_mask                             (0x00080000)
#define  AUDIO_interrupt_status_int_fifo2_empty_mask                             (0x00040000)
#define  AUDIO_interrupt_status_int_fifo1_empty_mask                             (0x00020000)
#define  AUDIO_interrupt_status_int_fifo0_empty_mask                             (0x00010000)
#define  AUDIO_interrupt_status_int_nicam_level_status_mask                      (0x00008000)
#define  AUDIO_interrupt_status_int_ain_timer_mask                               (0x00004000)
#define  AUDIO_interrupt_status_int_aout_timer_mask                              (0x00002000)
#define  AUDIO_interrupt_status_int_spi_in_datatype_change_mask                  (0x00001000)
#define  AUDIO_interrupt_status_int_spi_in_lock_change_mask                      (0x00000800)
#define  AUDIO_interrupt_status_int_nicam_hierr_change_mask                      (0x00000400)
#define  AUDIO_interrupt_status_int_i2s_pri_sample_rate_chg_mask                 (0x00000200)
#define  AUDIO_interrupt_status_int_spi_sample_rate_chg_mask                     (0x00000080)
#define  AUDIO_interrupt_status_int_i2s_pri_word_length_change_mask              (0x00000040)
#define  AUDIO_interrupt_status_int_pll64512_wd_1_mask                           (0x00000020)
#define  AUDIO_interrupt_status_int_sif_nopt_mask                                (0x00000010)
#define  AUDIO_interrupt_status_int_msd_change_mask                              (0x00000008)
#define  AUDIO_interrupt_status_int_msd_timeout_mask                             (0x00000004)
#define  AUDIO_interrupt_status_int_mode_det_status_change_mask                  (0x00000002)
#define  AUDIO_interrupt_status_int_sif_ovf_mask                                 (0x00000001)
#define  AUDIO_interrupt_status_int_nicam_true_detect(data)                      (0x80000000&((data)<<31))
#define  AUDIO_interrupt_status_int_fifo0_ts_full(data)                          (0x40000000&((data)<<30))
#define  AUDIO_interrupt_status_int_fifo0_ts_empty(data)                         (0x20000000&((data)<<29))
#define  AUDIO_interrupt_status_int_pll64512_wd(data)                            (0x10000000&((data)<<28))
#define  AUDIO_interrupt_status_int_msd_decision_done(data)                      (0x08000000&((data)<<27))
#define  AUDIO_interrupt_status_int_msd_fw_scan_done(data)                       (0x04000000&((data)<<26))
#define  AUDIO_interrupt_status_int_rbus_timeout(data)                           (0x02000000&((data)<<25))
#define  AUDIO_interrupt_status_int_btsc_mode_chg(data)                          (0x01000000&((data)<<24))
#define  AUDIO_interrupt_status_int_fifo3_full(data)                             (0x00800000&((data)<<23))
#define  AUDIO_interrupt_status_int_fifo2_full(data)                             (0x00400000&((data)<<22))
#define  AUDIO_interrupt_status_int_fifo1_full(data)                             (0x00200000&((data)<<21))
#define  AUDIO_interrupt_status_int_fifo0_full(data)                             (0x00100000&((data)<<20))
#define  AUDIO_interrupt_status_int_fifo3_empty(data)                            (0x00080000&((data)<<19))
#define  AUDIO_interrupt_status_int_fifo2_empty(data)                            (0x00040000&((data)<<18))
#define  AUDIO_interrupt_status_int_fifo1_empty(data)                            (0x00020000&((data)<<17))
#define  AUDIO_interrupt_status_int_fifo0_empty(data)                            (0x00010000&((data)<<16))
#define  AUDIO_interrupt_status_int_nicam_level_status(data)                     (0x00008000&((data)<<15))
#define  AUDIO_interrupt_status_int_ain_timer(data)                              (0x00004000&((data)<<14))
#define  AUDIO_interrupt_status_int_aout_timer(data)                             (0x00002000&((data)<<13))
#define  AUDIO_interrupt_status_int_spi_in_datatype_change(data)                 (0x00001000&((data)<<12))
#define  AUDIO_interrupt_status_int_spi_in_lock_change(data)                     (0x00000800&((data)<<11))
#define  AUDIO_interrupt_status_int_nicam_hierr_change(data)                     (0x00000400&((data)<<10))
#define  AUDIO_interrupt_status_int_i2s_pri_sample_rate_chg(data)                (0x00000200&((data)<<9))
#define  AUDIO_interrupt_status_int_spi_sample_rate_chg(data)                    (0x00000080&((data)<<7))
#define  AUDIO_interrupt_status_int_i2s_pri_word_length_change(data)             (0x00000040&((data)<<6))
#define  AUDIO_interrupt_status_int_pll64512_wd_1(data)                          (0x00000020&((data)<<5))
#define  AUDIO_interrupt_status_int_sif_nopt(data)                               (0x00000010&((data)<<4))
#define  AUDIO_interrupt_status_int_msd_change(data)                             (0x00000008&((data)<<3))
#define  AUDIO_interrupt_status_int_msd_timeout(data)                            (0x00000004&((data)<<2))
#define  AUDIO_interrupt_status_int_mode_det_status_change(data)                 (0x00000002&((data)<<1))
#define  AUDIO_interrupt_status_int_sif_ovf(data)                                (0x00000001&(data))
#define  AUDIO_interrupt_status_get_int_nicam_true_detect(data)                  ((0x80000000&(data))>>31)
#define  AUDIO_interrupt_status_get_int_fifo0_ts_full(data)                      ((0x40000000&(data))>>30)
#define  AUDIO_interrupt_status_get_int_fifo0_ts_empty(data)                     ((0x20000000&(data))>>29)
#define  AUDIO_interrupt_status_get_int_pll64512_wd(data)                        ((0x10000000&(data))>>28)
#define  AUDIO_interrupt_status_get_int_msd_decision_done(data)                  ((0x08000000&(data))>>27)
#define  AUDIO_interrupt_status_get_int_msd_fw_scan_done(data)                   ((0x04000000&(data))>>26)
#define  AUDIO_interrupt_status_get_int_rbus_timeout(data)                       ((0x02000000&(data))>>25)
#define  AUDIO_interrupt_status_get_int_btsc_mode_chg(data)                      ((0x01000000&(data))>>24)
#define  AUDIO_interrupt_status_get_int_fifo3_full(data)                         ((0x00800000&(data))>>23)
#define  AUDIO_interrupt_status_get_int_fifo2_full(data)                         ((0x00400000&(data))>>22)
#define  AUDIO_interrupt_status_get_int_fifo1_full(data)                         ((0x00200000&(data))>>21)
#define  AUDIO_interrupt_status_get_int_fifo0_full(data)                         ((0x00100000&(data))>>20)
#define  AUDIO_interrupt_status_get_int_fifo3_empty(data)                        ((0x00080000&(data))>>19)
#define  AUDIO_interrupt_status_get_int_fifo2_empty(data)                        ((0x00040000&(data))>>18)
#define  AUDIO_interrupt_status_get_int_fifo1_empty(data)                        ((0x00020000&(data))>>17)
#define  AUDIO_interrupt_status_get_int_fifo0_empty(data)                        ((0x00010000&(data))>>16)
#define  AUDIO_interrupt_status_get_int_nicam_level_status(data)                 ((0x00008000&(data))>>15)
#define  AUDIO_interrupt_status_get_int_ain_timer(data)                          ((0x00004000&(data))>>14)
#define  AUDIO_interrupt_status_get_int_aout_timer(data)                         ((0x00002000&(data))>>13)
#define  AUDIO_interrupt_status_get_int_spi_in_datatype_change(data)             ((0x00001000&(data))>>12)
#define  AUDIO_interrupt_status_get_int_spi_in_lock_change(data)                 ((0x00000800&(data))>>11)
#define  AUDIO_interrupt_status_get_int_nicam_hierr_change(data)                 ((0x00000400&(data))>>10)
#define  AUDIO_interrupt_status_get_int_i2s_pri_sample_rate_chg(data)            ((0x00000200&(data))>>9)
#define  AUDIO_interrupt_status_get_int_spi_sample_rate_chg(data)                ((0x00000080&(data))>>7)
#define  AUDIO_interrupt_status_get_int_i2s_pri_word_length_change(data)         ((0x00000040&(data))>>6)
#define  AUDIO_interrupt_status_get_int_pll64512_wd_1(data)                      ((0x00000020&(data))>>5)
#define  AUDIO_interrupt_status_get_int_sif_nopt(data)                           ((0x00000010&(data))>>4)
#define  AUDIO_interrupt_status_get_int_msd_change(data)                         ((0x00000008&(data))>>3)
#define  AUDIO_interrupt_status_get_int_msd_timeout(data)                        ((0x00000004&(data))>>2)
#define  AUDIO_interrupt_status_get_int_mode_det_status_change(data)             ((0x00000002&(data))>>1)
#define  AUDIO_interrupt_status_get_int_sif_ovf(data)                            (0x00000001&(data))

#define  AUDIO_aio_timer_en                                                     0x18006058
#define  AUDIO_aio_timer_en_reg_addr                                             "0xB8006058"
#define  AUDIO_aio_timer_en_reg                                                  0xB8006058
#define  AUDIO_aio_timer_en_inst_addr                                            "0x0014"
#define  set_AUDIO_aio_timer_en_reg(data)                                        (*((volatile unsigned int*)AUDIO_aio_timer_en_reg)=data)
#define  get_AUDIO_aio_timer_en_reg                                              (*((volatile unsigned int*)AUDIO_aio_timer_en_reg))
#define  AUDIO_aio_timer_en_timer_clr_mode_sel_shift                             (9)
#define  AUDIO_aio_timer_en_timer_div_shift                                      (6)
#define  AUDIO_aio_timer_en_ain_timer_src_shift                                  (4)
#define  AUDIO_aio_timer_en_aout_timer_src_shift                                 (2)
#define  AUDIO_aio_timer_en_ain_timer_en_shift                                   (1)
#define  AUDIO_aio_timer_en_aout_timer_en_shift                                  (0)
#define  AUDIO_aio_timer_en_timer_clr_mode_sel_mask                              (0x00000200)
#define  AUDIO_aio_timer_en_timer_div_mask                                       (0x000001C0)
#define  AUDIO_aio_timer_en_ain_timer_src_mask                                   (0x00000030)
#define  AUDIO_aio_timer_en_aout_timer_src_mask                                  (0x0000000C)
#define  AUDIO_aio_timer_en_ain_timer_en_mask                                    (0x00000002)
#define  AUDIO_aio_timer_en_aout_timer_en_mask                                   (0x00000001)
#define  AUDIO_aio_timer_en_timer_clr_mode_sel(data)                             (0x00000200&((data)<<9))
#define  AUDIO_aio_timer_en_timer_div(data)                                      (0x000001C0&((data)<<6))
#define  AUDIO_aio_timer_en_ain_timer_src(data)                                  (0x00000030&((data)<<4))
#define  AUDIO_aio_timer_en_aout_timer_src(data)                                 (0x0000000C&((data)<<2))
#define  AUDIO_aio_timer_en_ain_timer_en(data)                                   (0x00000002&((data)<<1))
#define  AUDIO_aio_timer_en_aout_timer_en(data)                                  (0x00000001&(data))
#define  AUDIO_aio_timer_en_get_timer_clr_mode_sel(data)                         ((0x00000200&(data))>>9)
#define  AUDIO_aio_timer_en_get_timer_div(data)                                  ((0x000001C0&(data))>>6)
#define  AUDIO_aio_timer_en_get_ain_timer_src(data)                              ((0x00000030&(data))>>4)
#define  AUDIO_aio_timer_en_get_aout_timer_src(data)                             ((0x0000000C&(data))>>2)
#define  AUDIO_aio_timer_en_get_ain_timer_en(data)                               ((0x00000002&(data))>>1)
#define  AUDIO_aio_timer_en_get_aout_timer_en(data)                              (0x00000001&(data))

#define  AUDIO_ain_counter                                                      0x1800605C
#define  AUDIO_ain_counter_reg_addr                                              "0xB800605C"
#define  AUDIO_ain_counter_reg                                                   0xB800605C
#define  AUDIO_ain_counter_inst_addr                                             "0x0015"
#define  set_AUDIO_ain_counter_reg(data)                                         (*((volatile unsigned int*)AUDIO_ain_counter_reg)=data)
#define  get_AUDIO_ain_counter_reg                                               (*((volatile unsigned int*)AUDIO_ain_counter_reg))
#define  AUDIO_ain_counter_ain_timer_shift                                       (0)
#define  AUDIO_ain_counter_ain_timer_mask                                        (0xFFFFFFFF)
#define  AUDIO_ain_counter_ain_timer(data)                                       (0xFFFFFFFF&(data))
#define  AUDIO_ain_counter_get_ain_timer(data)                                   (0xFFFFFFFF&(data))

#define  AUDIO_ain_compare                                                      0x18006060
#define  AUDIO_ain_compare_reg_addr                                              "0xB8006060"
#define  AUDIO_ain_compare_reg                                                   0xB8006060
#define  AUDIO_ain_compare_inst_addr                                             "0x0016"
#define  set_AUDIO_ain_compare_reg(data)                                         (*((volatile unsigned int*)AUDIO_ain_compare_reg)=data)
#define  get_AUDIO_ain_compare_reg                                               (*((volatile unsigned int*)AUDIO_ain_compare_reg))
#define  AUDIO_ain_compare_ain_compare_shift                                     (0)
#define  AUDIO_ain_compare_ain_compare_mask                                      (0xFFFFFFFF)
#define  AUDIO_ain_compare_ain_compare(data)                                     (0xFFFFFFFF&(data))
#define  AUDIO_ain_compare_get_ain_compare(data)                                 (0xFFFFFFFF&(data))

#define  AUDIO_aout_counter                                                     0x18006064
#define  AUDIO_aout_counter_reg_addr                                             "0xB8006064"
#define  AUDIO_aout_counter_reg                                                  0xB8006064
#define  AUDIO_aout_counter_inst_addr                                            "0x0017"
#define  set_AUDIO_aout_counter_reg(data)                                        (*((volatile unsigned int*)AUDIO_aout_counter_reg)=data)
#define  get_AUDIO_aout_counter_reg                                              (*((volatile unsigned int*)AUDIO_aout_counter_reg))
#define  AUDIO_aout_counter_aout_timer_shift                                     (0)
#define  AUDIO_aout_counter_aout_timer_mask                                      (0xFFFFFFFF)
#define  AUDIO_aout_counter_aout_timer(data)                                     (0xFFFFFFFF&(data))
#define  AUDIO_aout_counter_get_aout_timer(data)                                 (0xFFFFFFFF&(data))

#define  AUDIO_aout_compare                                                     0x18006068
#define  AUDIO_aout_compare_reg_addr                                             "0xB8006068"
#define  AUDIO_aout_compare_reg                                                  0xB8006068
#define  AUDIO_aout_compare_inst_addr                                            "0x0018"
#define  set_AUDIO_aout_compare_reg(data)                                        (*((volatile unsigned int*)AUDIO_aout_compare_reg)=data)
#define  get_AUDIO_aout_compare_reg                                              (*((volatile unsigned int*)AUDIO_aout_compare_reg))
#define  AUDIO_aout_compare_aout_compare_shift                                   (0)
#define  AUDIO_aout_compare_aout_compare_mask                                    (0xFFFFFFFF)
#define  AUDIO_aout_compare_aout_compare(data)                                   (0xFFFFFFFF&(data))
#define  AUDIO_aout_compare_get_aout_compare(data)                               (0xFFFFFFFF&(data))

#define  AUDIO_sw_dbg_reg_0                                                     0x18006070
#define  AUDIO_sw_dbg_reg_0_reg_addr                                             "0xB8006070"
#define  AUDIO_sw_dbg_reg_0_reg                                                  0xB8006070
#define  AUDIO_sw_dbg_reg_0_inst_addr                                            "0x0019"
#define  set_AUDIO_sw_dbg_reg_0_reg(data)                                        (*((volatile unsigned int*)AUDIO_sw_dbg_reg_0_reg)=data)
#define  get_AUDIO_sw_dbg_reg_0_reg                                              (*((volatile unsigned int*)AUDIO_sw_dbg_reg_0_reg))
#define  AUDIO_sw_dbg_reg_0_sw_dbg_reg_0_shift                                   (0)
#define  AUDIO_sw_dbg_reg_0_sw_dbg_reg_0_mask                                    (0xFFFFFFFF)
#define  AUDIO_sw_dbg_reg_0_sw_dbg_reg_0(data)                                   (0xFFFFFFFF&(data))
#define  AUDIO_sw_dbg_reg_0_get_sw_dbg_reg_0(data)                               (0xFFFFFFFF&(data))

#define  AUDIO_sw_dbg_reg_1                                                     0x18006074
#define  AUDIO_sw_dbg_reg_1_reg_addr                                             "0xB8006074"
#define  AUDIO_sw_dbg_reg_1_reg                                                  0xB8006074
#define  AUDIO_sw_dbg_reg_1_inst_addr                                            "0x001A"
#define  set_AUDIO_sw_dbg_reg_1_reg(data)                                        (*((volatile unsigned int*)AUDIO_sw_dbg_reg_1_reg)=data)
#define  get_AUDIO_sw_dbg_reg_1_reg                                              (*((volatile unsigned int*)AUDIO_sw_dbg_reg_1_reg))
#define  AUDIO_sw_dbg_reg_1_sw_dbg_reg_1_shift                                   (0)
#define  AUDIO_sw_dbg_reg_1_sw_dbg_reg_1_mask                                    (0xFFFFFFFF)
#define  AUDIO_sw_dbg_reg_1_sw_dbg_reg_1(data)                                   (0xFFFFFFFF&(data))
#define  AUDIO_sw_dbg_reg_1_get_sw_dbg_reg_1(data)                               (0xFFFFFFFF&(data))

#define  AUDIO_sw_dbg_reg_2                                                     0x18006078
#define  AUDIO_sw_dbg_reg_2_reg_addr                                             "0xB8006078"
#define  AUDIO_sw_dbg_reg_2_reg                                                  0xB8006078
#define  AUDIO_sw_dbg_reg_2_inst_addr                                            "0x001B"
#define  set_AUDIO_sw_dbg_reg_2_reg(data)                                        (*((volatile unsigned int*)AUDIO_sw_dbg_reg_2_reg)=data)
#define  get_AUDIO_sw_dbg_reg_2_reg                                              (*((volatile unsigned int*)AUDIO_sw_dbg_reg_2_reg))
#define  AUDIO_sw_dbg_reg_2_sw_dbg_reg_2_shift                                   (0)
#define  AUDIO_sw_dbg_reg_2_sw_dbg_reg_2_mask                                    (0xFFFFFFFF)
#define  AUDIO_sw_dbg_reg_2_sw_dbg_reg_2(data)                                   (0xFFFFFFFF&(data))
#define  AUDIO_sw_dbg_reg_2_get_sw_dbg_reg_2(data)                               (0xFFFFFFFF&(data))

#define  AUDIO_sw_dbg_reg_3                                                     0x1800607C
#define  AUDIO_sw_dbg_reg_3_reg_addr                                             "0xB800607C"
#define  AUDIO_sw_dbg_reg_3_reg                                                  0xB800607C
#define  AUDIO_sw_dbg_reg_3_inst_addr                                            "0x001C"
#define  set_AUDIO_sw_dbg_reg_3_reg(data)                                        (*((volatile unsigned int*)AUDIO_sw_dbg_reg_3_reg)=data)
#define  get_AUDIO_sw_dbg_reg_3_reg                                              (*((volatile unsigned int*)AUDIO_sw_dbg_reg_3_reg))
#define  AUDIO_sw_dbg_reg_3_sw_dbg_reg_3_shift                                   (0)
#define  AUDIO_sw_dbg_reg_3_sw_dbg_reg_3_mask                                    (0xFFFFFFFF)
#define  AUDIO_sw_dbg_reg_3_sw_dbg_reg_3(data)                                   (0xFFFFFFFF&(data))
#define  AUDIO_sw_dbg_reg_3_get_sw_dbg_reg_3(data)                               (0xFFFFFFFF&(data))

#define  AUDIO_int_en_states                                                    0x18006080
#define  AUDIO_int_en_states_reg_addr                                            "0xB8006080"
#define  AUDIO_int_en_states_reg                                                 0xB8006080
#define  AUDIO_int_en_states_inst_addr                                           "0x001D"
#define  set_AUDIO_int_en_states_reg(data)                                       (*((volatile unsigned int*)AUDIO_int_en_states_reg)=data)
#define  get_AUDIO_int_en_states_reg                                             (*((volatile unsigned int*)AUDIO_int_en_states_reg))
#define  AUDIO_int_en_states_int_64512_unstable_1_en_shift                       (17)
#define  AUDIO_int_en_states_int_64512_unstable_en_shift                         (16)
#define  AUDIO_int_en_states_int_64512fs_unstable_1_shift                        (1)
#define  AUDIO_int_en_states_int_64512fs_unstable_shift                          (0)
#define  AUDIO_int_en_states_int_64512_unstable_1_en_mask                        (0x00020000)
#define  AUDIO_int_en_states_int_64512_unstable_en_mask                          (0x00010000)
#define  AUDIO_int_en_states_int_64512fs_unstable_1_mask                         (0x00000002)
#define  AUDIO_int_en_states_int_64512fs_unstable_mask                           (0x00000001)
#define  AUDIO_int_en_states_int_64512_unstable_1_en(data)                       (0x00020000&((data)<<17))
#define  AUDIO_int_en_states_int_64512_unstable_en(data)                         (0x00010000&((data)<<16))
#define  AUDIO_int_en_states_int_64512fs_unstable_1(data)                        (0x00000002&((data)<<1))
#define  AUDIO_int_en_states_int_64512fs_unstable(data)                          (0x00000001&(data))
#define  AUDIO_int_en_states_get_int_64512_unstable_1_en(data)                   ((0x00020000&(data))>>17)
#define  AUDIO_int_en_states_get_int_64512_unstable_en(data)                     ((0x00010000&(data))>>16)
#define  AUDIO_int_en_states_get_int_64512fs_unstable_1(data)                    ((0x00000002&(data))>>1)
#define  AUDIO_int_en_states_get_int_64512fs_unstable(data)                      (0x00000001&(data))

#define  AUDIO_interrupt_en_earc                                                0x18006084
#define  AUDIO_interrupt_en_earc_reg_addr                                        "0xB8006084"
#define  AUDIO_interrupt_en_earc_reg                                             0xB8006084
#define  AUDIO_interrupt_en_earc_inst_addr                                       "0x001E"
#define  set_AUDIO_interrupt_en_earc_reg(data)                                   (*((volatile unsigned int*)AUDIO_interrupt_en_earc_reg)=data)
#define  get_AUDIO_interrupt_en_earc_reg                                         (*((volatile unsigned int*)AUDIO_interrupt_en_earc_reg))
#define  AUDIO_interrupt_en_earc_hw2asrc_int_en_shift                            (10)
#define  AUDIO_interrupt_en_earc_int_fifo0_arc_full_en_shift                     (9)
#define  AUDIO_interrupt_en_earc_int_fifo0_arc_empty_en_shift                    (8)
#define  AUDIO_interrupt_en_earc_int_fifo2_ts_full_en_shift                      (7)
#define  AUDIO_interrupt_en_earc_int_fifo2_ts_empty_en_shift                     (6)
#define  AUDIO_interrupt_en_earc_int_fifo1_ts_full_en_shift                      (5)
#define  AUDIO_interrupt_en_earc_int_fifo1_ts_empty_en_shift                     (4)
#define  AUDIO_interrupt_en_earc_int_hdmi_in_datatype_change_en_shift            (3)
#define  AUDIO_interrupt_en_earc_int_hdmi_in_datarate_change_en_shift            (2)
#define  AUDIO_interrupt_en_earc_int_hdmi_in_channel_change_en_shift             (1)
#define  AUDIO_interrupt_en_earc_int_hdmi_in_lock_change_en_shift                (0)
#define  AUDIO_interrupt_en_earc_hw2asrc_int_en_mask                             (0x00000400)
#define  AUDIO_interrupt_en_earc_int_fifo0_arc_full_en_mask                      (0x00000200)
#define  AUDIO_interrupt_en_earc_int_fifo0_arc_empty_en_mask                     (0x00000100)
#define  AUDIO_interrupt_en_earc_int_fifo2_ts_full_en_mask                       (0x00000080)
#define  AUDIO_interrupt_en_earc_int_fifo2_ts_empty_en_mask                      (0x00000040)
#define  AUDIO_interrupt_en_earc_int_fifo1_ts_full_en_mask                       (0x00000020)
#define  AUDIO_interrupt_en_earc_int_fifo1_ts_empty_en_mask                      (0x00000010)
#define  AUDIO_interrupt_en_earc_int_hdmi_in_datatype_change_en_mask             (0x00000008)
#define  AUDIO_interrupt_en_earc_int_hdmi_in_datarate_change_en_mask             (0x00000004)
#define  AUDIO_interrupt_en_earc_int_hdmi_in_channel_change_en_mask              (0x00000002)
#define  AUDIO_interrupt_en_earc_int_hdmi_in_lock_change_en_mask                 (0x00000001)
#define  AUDIO_interrupt_en_earc_hw2asrc_int_en(data)                            (0x00000400&((data)<<10))
#define  AUDIO_interrupt_en_earc_int_fifo0_arc_full_en(data)                     (0x00000200&((data)<<9))
#define  AUDIO_interrupt_en_earc_int_fifo0_arc_empty_en(data)                    (0x00000100&((data)<<8))
#define  AUDIO_interrupt_en_earc_int_fifo2_ts_full_en(data)                      (0x00000080&((data)<<7))
#define  AUDIO_interrupt_en_earc_int_fifo2_ts_empty_en(data)                     (0x00000040&((data)<<6))
#define  AUDIO_interrupt_en_earc_int_fifo1_ts_full_en(data)                      (0x00000020&((data)<<5))
#define  AUDIO_interrupt_en_earc_int_fifo1_ts_empty_en(data)                     (0x00000010&((data)<<4))
#define  AUDIO_interrupt_en_earc_int_hdmi_in_datatype_change_en(data)            (0x00000008&((data)<<3))
#define  AUDIO_interrupt_en_earc_int_hdmi_in_datarate_change_en(data)            (0x00000004&((data)<<2))
#define  AUDIO_interrupt_en_earc_int_hdmi_in_channel_change_en(data)             (0x00000002&((data)<<1))
#define  AUDIO_interrupt_en_earc_int_hdmi_in_lock_change_en(data)                (0x00000001&(data))
#define  AUDIO_interrupt_en_earc_get_hw2asrc_int_en(data)                        ((0x00000400&(data))>>10)
#define  AUDIO_interrupt_en_earc_get_int_fifo0_arc_full_en(data)                 ((0x00000200&(data))>>9)
#define  AUDIO_interrupt_en_earc_get_int_fifo0_arc_empty_en(data)                ((0x00000100&(data))>>8)
#define  AUDIO_interrupt_en_earc_get_int_fifo2_ts_full_en(data)                  ((0x00000080&(data))>>7)
#define  AUDIO_interrupt_en_earc_get_int_fifo2_ts_empty_en(data)                 ((0x00000040&(data))>>6)
#define  AUDIO_interrupt_en_earc_get_int_fifo1_ts_full_en(data)                  ((0x00000020&(data))>>5)
#define  AUDIO_interrupt_en_earc_get_int_fifo1_ts_empty_en(data)                 ((0x00000010&(data))>>4)
#define  AUDIO_interrupt_en_earc_get_int_hdmi_in_datatype_change_en(data)        ((0x00000008&(data))>>3)
#define  AUDIO_interrupt_en_earc_get_int_hdmi_in_datarate_change_en(data)        ((0x00000004&(data))>>2)
#define  AUDIO_interrupt_en_earc_get_int_hdmi_in_channel_change_en(data)         ((0x00000002&(data))>>1)
#define  AUDIO_interrupt_en_earc_get_int_hdmi_in_lock_change_en(data)            (0x00000001&(data))

#define  AUDIO_interrupt_status_earc                                            0x18006088
#define  AUDIO_interrupt_status_earc_reg_addr                                    "0xB8006088"
#define  AUDIO_interrupt_status_earc_reg                                         0xB8006088
#define  AUDIO_interrupt_status_earc_inst_addr                                   "0x001F"
#define  set_AUDIO_interrupt_status_earc_reg(data)                               (*((volatile unsigned int*)AUDIO_interrupt_status_earc_reg)=data)
#define  get_AUDIO_interrupt_status_earc_reg                                     (*((volatile unsigned int*)AUDIO_interrupt_status_earc_reg))
#define  AUDIO_interrupt_status_earc_hw2asrc_int_shift                           (10)
#define  AUDIO_interrupt_status_earc_int_fifo0_arc_full_shift                    (9)
#define  AUDIO_interrupt_status_earc_int_fifo0_arc_empty_shift                   (8)
#define  AUDIO_interrupt_status_earc_int_fifo2_ts_full_shift                     (7)
#define  AUDIO_interrupt_status_earc_int_fifo2_ts_empty_shift                    (6)
#define  AUDIO_interrupt_status_earc_int_fifo1_ts_full_shift                     (5)
#define  AUDIO_interrupt_status_earc_int_fifo1_ts_empty_shift                    (4)
#define  AUDIO_interrupt_status_earc_int_hdmi_in_datatype_change_shift           (3)
#define  AUDIO_interrupt_status_earc_int_hdmi_in_datarate_change_shift           (2)
#define  AUDIO_interrupt_status_earc_int_hdmi_in_channel_change_shift            (1)
#define  AUDIO_interrupt_status_earc_int_hdmi_in_lock_change_shift               (0)
#define  AUDIO_interrupt_status_earc_hw2asrc_int_mask                            (0x00000400)
#define  AUDIO_interrupt_status_earc_int_fifo0_arc_full_mask                     (0x00000200)
#define  AUDIO_interrupt_status_earc_int_fifo0_arc_empty_mask                    (0x00000100)
#define  AUDIO_interrupt_status_earc_int_fifo2_ts_full_mask                      (0x00000080)
#define  AUDIO_interrupt_status_earc_int_fifo2_ts_empty_mask                     (0x00000040)
#define  AUDIO_interrupt_status_earc_int_fifo1_ts_full_mask                      (0x00000020)
#define  AUDIO_interrupt_status_earc_int_fifo1_ts_empty_mask                     (0x00000010)
#define  AUDIO_interrupt_status_earc_int_hdmi_in_datatype_change_mask            (0x00000008)
#define  AUDIO_interrupt_status_earc_int_hdmi_in_datarate_change_mask            (0x00000004)
#define  AUDIO_interrupt_status_earc_int_hdmi_in_channel_change_mask             (0x00000002)
#define  AUDIO_interrupt_status_earc_int_hdmi_in_lock_change_mask                (0x00000001)
#define  AUDIO_interrupt_status_earc_hw2asrc_int(data)                           (0x00000400&((data)<<10))
#define  AUDIO_interrupt_status_earc_int_fifo0_arc_full(data)                    (0x00000200&((data)<<9))
#define  AUDIO_interrupt_status_earc_int_fifo0_arc_empty(data)                   (0x00000100&((data)<<8))
#define  AUDIO_interrupt_status_earc_int_fifo2_ts_full(data)                     (0x00000080&((data)<<7))
#define  AUDIO_interrupt_status_earc_int_fifo2_ts_empty(data)                    (0x00000040&((data)<<6))
#define  AUDIO_interrupt_status_earc_int_fifo1_ts_full(data)                     (0x00000020&((data)<<5))
#define  AUDIO_interrupt_status_earc_int_fifo1_ts_empty(data)                    (0x00000010&((data)<<4))
#define  AUDIO_interrupt_status_earc_int_hdmi_in_datatype_change(data)           (0x00000008&((data)<<3))
#define  AUDIO_interrupt_status_earc_int_hdmi_in_datarate_change(data)           (0x00000004&((data)<<2))
#define  AUDIO_interrupt_status_earc_int_hdmi_in_channel_change(data)            (0x00000002&((data)<<1))
#define  AUDIO_interrupt_status_earc_int_hdmi_in_lock_change(data)               (0x00000001&(data))
#define  AUDIO_interrupt_status_earc_get_hw2asrc_int(data)                       ((0x00000400&(data))>>10)
#define  AUDIO_interrupt_status_earc_get_int_fifo0_arc_full(data)                ((0x00000200&(data))>>9)
#define  AUDIO_interrupt_status_earc_get_int_fifo0_arc_empty(data)               ((0x00000100&(data))>>8)
#define  AUDIO_interrupt_status_earc_get_int_fifo2_ts_full(data)                 ((0x00000080&(data))>>7)
#define  AUDIO_interrupt_status_earc_get_int_fifo2_ts_empty(data)                ((0x00000040&(data))>>6)
#define  AUDIO_interrupt_status_earc_get_int_fifo1_ts_full(data)                 ((0x00000020&(data))>>5)
#define  AUDIO_interrupt_status_earc_get_int_fifo1_ts_empty(data)                ((0x00000010&(data))>>4)
#define  AUDIO_interrupt_status_earc_get_int_hdmi_in_datatype_change(data)       ((0x00000008&(data))>>3)
#define  AUDIO_interrupt_status_earc_get_int_hdmi_in_datarate_change(data)       ((0x00000004&(data))>>2)
#define  AUDIO_interrupt_status_earc_get_int_hdmi_in_channel_change(data)        ((0x00000002&(data))>>1)
#define  AUDIO_interrupt_status_earc_get_int_hdmi_in_lock_change(data)           (0x00000001&(data))

#define  AUDIO_i2s_in_primary                                                   0x18006100
#define  AUDIO_i2s_in_primary_reg_addr                                           "0xB8006100"
#define  AUDIO_i2s_in_primary_reg                                                0xB8006100
#define  AUDIO_i2s_in_primary_inst_addr                                          "0x0020"
#define  set_AUDIO_i2s_in_primary_reg(data)                                      (*((volatile unsigned int*)AUDIO_i2s_in_primary_reg)=data)
#define  get_AUDIO_i2s_in_primary_reg                                            (*((volatile unsigned int*)AUDIO_i2s_in_primary_reg))
#define  AUDIO_i2s_in_primary_source_sel_shift                                   (30)
#define  AUDIO_i2s_in_primary_left_right_shift                                   (28)
#define  AUDIO_i2s_in_primary_mode_sel_shift                                     (27)
#define  AUDIO_i2s_in_primary_debounce_en_shift                                  (26)
#define  AUDIO_i2s_in_primary_sclk_inv_shift                                     (25)
#define  AUDIO_i2s_in_primary_dummy_24_16_shift                                  (16)
#define  AUDIO_i2s_in_primary_sampling_rate_shift                                (8)
#define  AUDIO_i2s_in_primary_pcm_width_shift                                    (0)
#define  AUDIO_i2s_in_primary_source_sel_mask                                    (0xC0000000)
#define  AUDIO_i2s_in_primary_left_right_mask                                    (0x30000000)
#define  AUDIO_i2s_in_primary_mode_sel_mask                                      (0x08000000)
#define  AUDIO_i2s_in_primary_debounce_en_mask                                   (0x04000000)
#define  AUDIO_i2s_in_primary_sclk_inv_mask                                      (0x02000000)
#define  AUDIO_i2s_in_primary_dummy_24_16_mask                                   (0x01FF0000)
#define  AUDIO_i2s_in_primary_sampling_rate_mask                                 (0x00000F00)
#define  AUDIO_i2s_in_primary_pcm_width_mask                                     (0x0000007F)
#define  AUDIO_i2s_in_primary_source_sel(data)                                   (0xC0000000&((data)<<30))
#define  AUDIO_i2s_in_primary_left_right(data)                                   (0x30000000&((data)<<28))
#define  AUDIO_i2s_in_primary_mode_sel(data)                                     (0x08000000&((data)<<27))
#define  AUDIO_i2s_in_primary_debounce_en(data)                                  (0x04000000&((data)<<26))
#define  AUDIO_i2s_in_primary_sclk_inv(data)                                     (0x02000000&((data)<<25))
#define  AUDIO_i2s_in_primary_dummy_24_16(data)                                  (0x01FF0000&((data)<<16))
#define  AUDIO_i2s_in_primary_sampling_rate(data)                                (0x00000F00&((data)<<8))
#define  AUDIO_i2s_in_primary_pcm_width(data)                                    (0x0000007F&(data))
#define  AUDIO_i2s_in_primary_get_source_sel(data)                               ((0xC0000000&(data))>>30)
#define  AUDIO_i2s_in_primary_get_left_right(data)                               ((0x30000000&(data))>>28)
#define  AUDIO_i2s_in_primary_get_mode_sel(data)                                 ((0x08000000&(data))>>27)
#define  AUDIO_i2s_in_primary_get_debounce_en(data)                              ((0x04000000&(data))>>26)
#define  AUDIO_i2s_in_primary_get_sclk_inv(data)                                 ((0x02000000&(data))>>25)
#define  AUDIO_i2s_in_primary_get_dummy_24_16(data)                              ((0x01FF0000&(data))>>16)
#define  AUDIO_i2s_in_primary_get_sampling_rate(data)                            ((0x00000F00&(data))>>8)
#define  AUDIO_i2s_in_primary_get_pcm_width(data)                                (0x0000007F&(data))

#define  AUDIO_spdif_in                                                         0x18006130
#define  AUDIO_spdif_in_reg_addr                                                 "0xB8006130"
#define  AUDIO_spdif_in_reg                                                      0xB8006130
#define  AUDIO_spdif_in_inst_addr                                                "0x0021"
#define  set_AUDIO_spdif_in_reg(data)                                            (*((volatile unsigned int*)AUDIO_spdif_in_reg)=data)
#define  get_AUDIO_spdif_in_reg                                                  (*((volatile unsigned int*)AUDIO_spdif_in_reg))
#define  AUDIO_spdif_in_source_sel_shift                                         (30)
#define  AUDIO_spdif_in_req_after_lock_shift                                     (29)
#define  AUDIO_spdif_in_debounce_en_shift                                        (28)
#define  AUDIO_spdif_in_source_sel_spdif_out_shift                               (27)
#define  AUDIO_spdif_in_dummy_15_5_shift                                         (5)
#define  AUDIO_spdif_in_spdif_in_2fs_sel_shift                                   (4)
#define  AUDIO_spdif_in_sampling_rate_shift                                      (0)
#define  AUDIO_spdif_in_source_sel_mask                                          (0xC0000000)
#define  AUDIO_spdif_in_req_after_lock_mask                                      (0x20000000)
#define  AUDIO_spdif_in_debounce_en_mask                                         (0x10000000)
#define  AUDIO_spdif_in_source_sel_spdif_out_mask                                (0x08000000)
#define  AUDIO_spdif_in_dummy_15_5_mask                                          (0x0000FFE0)
#define  AUDIO_spdif_in_spdif_in_2fs_sel_mask                                    (0x00000010)
#define  AUDIO_spdif_in_sampling_rate_mask                                       (0x0000000F)
#define  AUDIO_spdif_in_source_sel(data)                                         (0xC0000000&((data)<<30))
#define  AUDIO_spdif_in_req_after_lock(data)                                     (0x20000000&((data)<<29))
#define  AUDIO_spdif_in_debounce_en(data)                                        (0x10000000&((data)<<28))
#define  AUDIO_spdif_in_source_sel_spdif_out(data)                               (0x08000000&((data)<<27))
#define  AUDIO_spdif_in_dummy_15_5(data)                                         (0x0000FFE0&((data)<<5))
#define  AUDIO_spdif_in_spdif_in_2fs_sel(data)                                   (0x00000010&((data)<<4))
#define  AUDIO_spdif_in_sampling_rate(data)                                      (0x0000000F&(data))
#define  AUDIO_spdif_in_get_source_sel(data)                                     ((0xC0000000&(data))>>30)
#define  AUDIO_spdif_in_get_req_after_lock(data)                                 ((0x20000000&(data))>>29)
#define  AUDIO_spdif_in_get_debounce_en(data)                                    ((0x10000000&(data))>>28)
#define  AUDIO_spdif_in_get_source_sel_spdif_out(data)                           ((0x08000000&(data))>>27)
#define  AUDIO_spdif_in_get_dummy_15_5(data)                                     ((0x0000FFE0&(data))>>5)
#define  AUDIO_spdif_in_get_spdif_in_2fs_sel(data)                               ((0x00000010&(data))>>4)
#define  AUDIO_spdif_in_get_sampling_rate(data)                                  (0x0000000F&(data))

#define  AUDIO_spdif_in_cs                                                      0x18006134
#define  AUDIO_spdif_in_cs_reg_addr                                              "0xB8006134"
#define  AUDIO_spdif_in_cs_reg                                                   0xB8006134
#define  AUDIO_spdif_in_cs_inst_addr                                             "0x0022"
#define  set_AUDIO_spdif_in_cs_reg(data)                                         (*((volatile unsigned int*)AUDIO_spdif_in_cs_reg)=data)
#define  get_AUDIO_spdif_in_cs_reg                                               (*((volatile unsigned int*)AUDIO_spdif_in_cs_reg))
#define  AUDIO_spdif_in_cs_hw_locked_shift                                       (31)
#define  AUDIO_spdif_in_cs_invalid_bit_shift                                     (30)
#define  AUDIO_spdif_in_cs_clock_accuracy_r_shift                                (28)
#define  AUDIO_spdif_in_cs_sampling_freq_r_shift                                 (24)
#define  AUDIO_spdif_in_cs_channel_number_r_shift                                (20)
#define  AUDIO_spdif_in_cs_source_number_r_shift                                 (16)
#define  AUDIO_spdif_in_cs_category_code_r_shift                                 (8)
#define  AUDIO_spdif_in_cs_mode_r_shift                                          (6)
#define  AUDIO_spdif_in_cs_pre_emphasis_r_shift                                  (3)
#define  AUDIO_spdif_in_cs_copyright_r_shift                                     (2)
#define  AUDIO_spdif_in_cs_data_type_r_shift                                     (1)
#define  AUDIO_spdif_in_cs_professional_r_shift                                  (0)
#define  AUDIO_spdif_in_cs_hw_locked_mask                                        (0x80000000)
#define  AUDIO_spdif_in_cs_invalid_bit_mask                                      (0x40000000)
#define  AUDIO_spdif_in_cs_clock_accuracy_r_mask                                 (0x30000000)
#define  AUDIO_spdif_in_cs_sampling_freq_r_mask                                  (0x0F000000)
#define  AUDIO_spdif_in_cs_channel_number_r_mask                                 (0x00F00000)
#define  AUDIO_spdif_in_cs_source_number_r_mask                                  (0x000F0000)
#define  AUDIO_spdif_in_cs_category_code_r_mask                                  (0x0000FF00)
#define  AUDIO_spdif_in_cs_mode_r_mask                                           (0x000000C0)
#define  AUDIO_spdif_in_cs_pre_emphasis_r_mask                                   (0x00000038)
#define  AUDIO_spdif_in_cs_copyright_r_mask                                      (0x00000004)
#define  AUDIO_spdif_in_cs_data_type_r_mask                                      (0x00000002)
#define  AUDIO_spdif_in_cs_professional_r_mask                                   (0x00000001)
#define  AUDIO_spdif_in_cs_hw_locked(data)                                       (0x80000000&((data)<<31))
#define  AUDIO_spdif_in_cs_invalid_bit(data)                                     (0x40000000&((data)<<30))
#define  AUDIO_spdif_in_cs_clock_accuracy_r(data)                                (0x30000000&((data)<<28))
#define  AUDIO_spdif_in_cs_sampling_freq_r(data)                                 (0x0F000000&((data)<<24))
#define  AUDIO_spdif_in_cs_channel_number_r(data)                                (0x00F00000&((data)<<20))
#define  AUDIO_spdif_in_cs_source_number_r(data)                                 (0x000F0000&((data)<<16))
#define  AUDIO_spdif_in_cs_category_code_r(data)                                 (0x0000FF00&((data)<<8))
#define  AUDIO_spdif_in_cs_mode_r(data)                                          (0x000000C0&((data)<<6))
#define  AUDIO_spdif_in_cs_pre_emphasis_r(data)                                  (0x00000038&((data)<<3))
#define  AUDIO_spdif_in_cs_copyright_r(data)                                     (0x00000004&((data)<<2))
#define  AUDIO_spdif_in_cs_data_type_r(data)                                     (0x00000002&((data)<<1))
#define  AUDIO_spdif_in_cs_professional_r(data)                                  (0x00000001&(data))
#define  AUDIO_spdif_in_cs_get_hw_locked(data)                                   ((0x80000000&(data))>>31)
#define  AUDIO_spdif_in_cs_get_invalid_bit(data)                                 ((0x40000000&(data))>>30)
#define  AUDIO_spdif_in_cs_get_clock_accuracy_r(data)                            ((0x30000000&(data))>>28)
#define  AUDIO_spdif_in_cs_get_sampling_freq_r(data)                             ((0x0F000000&(data))>>24)
#define  AUDIO_spdif_in_cs_get_channel_number_r(data)                            ((0x00F00000&(data))>>20)
#define  AUDIO_spdif_in_cs_get_source_number_r(data)                             ((0x000F0000&(data))>>16)
#define  AUDIO_spdif_in_cs_get_category_code_r(data)                             ((0x0000FF00&(data))>>8)
#define  AUDIO_spdif_in_cs_get_mode_r(data)                                      ((0x000000C0&(data))>>6)
#define  AUDIO_spdif_in_cs_get_pre_emphasis_r(data)                              ((0x00000038&(data))>>3)
#define  AUDIO_spdif_in_cs_get_copyright_r(data)                                 ((0x00000004&(data))>>2)
#define  AUDIO_spdif_in_cs_get_data_type_r(data)                                 ((0x00000002&(data))>>1)
#define  AUDIO_spdif_in_cs_get_professional_r(data)                              (0x00000001&(data))

#define  AUDIO_spdif_in_cs_2                                                    0x18006138
#define  AUDIO_spdif_in_cs_2_reg_addr                                            "0xB8006138"
#define  AUDIO_spdif_in_cs_2_reg                                                 0xB8006138
#define  AUDIO_spdif_in_cs_2_inst_addr                                           "0x0023"
#define  set_AUDIO_spdif_in_cs_2_reg(data)                                       (*((volatile unsigned int*)AUDIO_spdif_in_cs_2_reg)=data)
#define  get_AUDIO_spdif_in_cs_2_reg                                             (*((volatile unsigned int*)AUDIO_spdif_in_cs_2_reg))
#define  AUDIO_spdif_in_cs_2_cs_rb3_31_30_shift                                  (20)
#define  AUDIO_spdif_in_cs_2_cs_lb3_31_30_shift                                  (18)
#define  AUDIO_spdif_in_cs_2_pre_emphasis_l_shift                                (15)
#define  AUDIO_spdif_in_cs_2_copyright_l_shift                                   (14)
#define  AUDIO_spdif_in_cs_2_data_type_l_shift                                   (13)
#define  AUDIO_spdif_in_cs_2_professional_l_shift                                (12)
#define  AUDIO_spdif_in_cs_2_cgms_a_l_shift                                      (10)
#define  AUDIO_spdif_in_cs_2_cgms_a_r_shift                                      (8)
#define  AUDIO_spdif_in_cs_2_original_sampling_freq_r_shift                      (4)
#define  AUDIO_spdif_in_cs_2_word_length_r_shift                                 (0)
#define  AUDIO_spdif_in_cs_2_cs_rb3_31_30_mask                                   (0x00300000)
#define  AUDIO_spdif_in_cs_2_cs_lb3_31_30_mask                                   (0x000C0000)
#define  AUDIO_spdif_in_cs_2_pre_emphasis_l_mask                                 (0x00038000)
#define  AUDIO_spdif_in_cs_2_copyright_l_mask                                    (0x00004000)
#define  AUDIO_spdif_in_cs_2_data_type_l_mask                                    (0x00002000)
#define  AUDIO_spdif_in_cs_2_professional_l_mask                                 (0x00001000)
#define  AUDIO_spdif_in_cs_2_cgms_a_l_mask                                       (0x00000C00)
#define  AUDIO_spdif_in_cs_2_cgms_a_r_mask                                       (0x00000300)
#define  AUDIO_spdif_in_cs_2_original_sampling_freq_r_mask                       (0x000000F0)
#define  AUDIO_spdif_in_cs_2_word_length_r_mask                                  (0x0000000F)
#define  AUDIO_spdif_in_cs_2_cs_rb3_31_30(data)                                  (0x00300000&((data)<<20))
#define  AUDIO_spdif_in_cs_2_cs_lb3_31_30(data)                                  (0x000C0000&((data)<<18))
#define  AUDIO_spdif_in_cs_2_pre_emphasis_l(data)                                (0x00038000&((data)<<15))
#define  AUDIO_spdif_in_cs_2_copyright_l(data)                                   (0x00004000&((data)<<14))
#define  AUDIO_spdif_in_cs_2_data_type_l(data)                                   (0x00002000&((data)<<13))
#define  AUDIO_spdif_in_cs_2_professional_l(data)                                (0x00001000&((data)<<12))
#define  AUDIO_spdif_in_cs_2_cgms_a_l(data)                                      (0x00000C00&((data)<<10))
#define  AUDIO_spdif_in_cs_2_cgms_a_r(data)                                      (0x00000300&((data)<<8))
#define  AUDIO_spdif_in_cs_2_original_sampling_freq_r(data)                      (0x000000F0&((data)<<4))
#define  AUDIO_spdif_in_cs_2_word_length_r(data)                                 (0x0000000F&(data))
#define  AUDIO_spdif_in_cs_2_get_cs_rb3_31_30(data)                              ((0x00300000&(data))>>20)
#define  AUDIO_spdif_in_cs_2_get_cs_lb3_31_30(data)                              ((0x000C0000&(data))>>18)
#define  AUDIO_spdif_in_cs_2_get_pre_emphasis_l(data)                            ((0x00038000&(data))>>15)
#define  AUDIO_spdif_in_cs_2_get_copyright_l(data)                               ((0x00004000&(data))>>14)
#define  AUDIO_spdif_in_cs_2_get_data_type_l(data)                               ((0x00002000&(data))>>13)
#define  AUDIO_spdif_in_cs_2_get_professional_l(data)                            ((0x00001000&(data))>>12)
#define  AUDIO_spdif_in_cs_2_get_cgms_a_l(data)                                  ((0x00000C00&(data))>>10)
#define  AUDIO_spdif_in_cs_2_get_cgms_a_r(data)                                  ((0x00000300&(data))>>8)
#define  AUDIO_spdif_in_cs_2_get_original_sampling_freq_r(data)                  ((0x000000F0&(data))>>4)
#define  AUDIO_spdif_in_cs_2_get_word_length_r(data)                             (0x0000000F&(data))

#define  AUDIO_spdif_in_cs_3                                                    0x1800613C
#define  AUDIO_spdif_in_cs_3_reg_addr                                            "0xB800613C"
#define  AUDIO_spdif_in_cs_3_reg                                                 0xB800613C
#define  AUDIO_spdif_in_cs_3_inst_addr                                           "0x0024"
#define  set_AUDIO_spdif_in_cs_3_reg(data)                                       (*((volatile unsigned int*)AUDIO_spdif_in_cs_3_reg)=data)
#define  get_AUDIO_spdif_in_cs_3_reg                                             (*((volatile unsigned int*)AUDIO_spdif_in_cs_3_reg))
#define  AUDIO_spdif_in_cs_3_original_sampling_freq_l_shift                      (28)
#define  AUDIO_spdif_in_cs_3_word_length_l_shift                                 (24)
#define  AUDIO_spdif_in_cs_3_clock_accuracy_l_shift                              (22)
#define  AUDIO_spdif_in_cs_3_sampling_freq_l_shift                               (18)
#define  AUDIO_spdif_in_cs_3_channel_number_l_shift                              (14)
#define  AUDIO_spdif_in_cs_3_source_number_l_shift                               (10)
#define  AUDIO_spdif_in_cs_3_category_code_l_shift                               (2)
#define  AUDIO_spdif_in_cs_3_mode_l_shift                                        (0)
#define  AUDIO_spdif_in_cs_3_original_sampling_freq_l_mask                       (0xF0000000)
#define  AUDIO_spdif_in_cs_3_word_length_l_mask                                  (0x0F000000)
#define  AUDIO_spdif_in_cs_3_clock_accuracy_l_mask                               (0x00C00000)
#define  AUDIO_spdif_in_cs_3_sampling_freq_l_mask                                (0x003C0000)
#define  AUDIO_spdif_in_cs_3_channel_number_l_mask                               (0x0003C000)
#define  AUDIO_spdif_in_cs_3_source_number_l_mask                                (0x00003C00)
#define  AUDIO_spdif_in_cs_3_category_code_l_mask                                (0x000003FC)
#define  AUDIO_spdif_in_cs_3_mode_l_mask                                         (0x00000003)
#define  AUDIO_spdif_in_cs_3_original_sampling_freq_l(data)                      (0xF0000000&((data)<<28))
#define  AUDIO_spdif_in_cs_3_word_length_l(data)                                 (0x0F000000&((data)<<24))
#define  AUDIO_spdif_in_cs_3_clock_accuracy_l(data)                              (0x00C00000&((data)<<22))
#define  AUDIO_spdif_in_cs_3_sampling_freq_l(data)                               (0x003C0000&((data)<<18))
#define  AUDIO_spdif_in_cs_3_channel_number_l(data)                              (0x0003C000&((data)<<14))
#define  AUDIO_spdif_in_cs_3_source_number_l(data)                               (0x00003C00&((data)<<10))
#define  AUDIO_spdif_in_cs_3_category_code_l(data)                               (0x000003FC&((data)<<2))
#define  AUDIO_spdif_in_cs_3_mode_l(data)                                        (0x00000003&(data))
#define  AUDIO_spdif_in_cs_3_get_original_sampling_freq_l(data)                  ((0xF0000000&(data))>>28)
#define  AUDIO_spdif_in_cs_3_get_word_length_l(data)                             ((0x0F000000&(data))>>24)
#define  AUDIO_spdif_in_cs_3_get_clock_accuracy_l(data)                          ((0x00C00000&(data))>>22)
#define  AUDIO_spdif_in_cs_3_get_sampling_freq_l(data)                           ((0x003C0000&(data))>>18)
#define  AUDIO_spdif_in_cs_3_get_channel_number_l(data)                          ((0x0003C000&(data))>>14)
#define  AUDIO_spdif_in_cs_3_get_source_number_l(data)                           ((0x00003C00&(data))>>10)
#define  AUDIO_spdif_in_cs_3_get_category_code_l(data)                           ((0x000003FC&(data))>>2)
#define  AUDIO_spdif_in_cs_3_get_mode_l(data)                                    (0x00000003&(data))

#define  AUDIO_spdif_in_cs_4                                                    0x18006E00
#define  AUDIO_spdif_in_cs_4_reg_addr                                            "0xB8006E00"
#define  AUDIO_spdif_in_cs_4_reg                                                 0xB8006E00
#define  AUDIO_spdif_in_cs_4_inst_addr                                           "0x0025"
#define  set_AUDIO_spdif_in_cs_4_reg(data)                                       (*((volatile unsigned int*)AUDIO_spdif_in_cs_4_reg)=data)
#define  get_AUDIO_spdif_in_cs_4_reg                                             (*((volatile unsigned int*)AUDIO_spdif_in_cs_4_reg))
#define  AUDIO_spdif_in_cs_4_cs_byte_7_5_r_shift                                 (0)
#define  AUDIO_spdif_in_cs_4_cs_byte_7_5_r_mask                                  (0x003FFFFF)
#define  AUDIO_spdif_in_cs_4_cs_byte_7_5_r(data)                                 (0x003FFFFF&(data))
#define  AUDIO_spdif_in_cs_4_get_cs_byte_7_5_r(data)                             (0x003FFFFF&(data))

#define  AUDIO_spdif_in_cs_5                                                    0x18006E04
#define  AUDIO_spdif_in_cs_5_reg_addr                                            "0xB8006E04"
#define  AUDIO_spdif_in_cs_5_reg                                                 0xB8006E04
#define  AUDIO_spdif_in_cs_5_inst_addr                                           "0x0026"
#define  set_AUDIO_spdif_in_cs_5_reg(data)                                       (*((volatile unsigned int*)AUDIO_spdif_in_cs_5_reg)=data)
#define  get_AUDIO_spdif_in_cs_5_reg                                             (*((volatile unsigned int*)AUDIO_spdif_in_cs_5_reg))
#define  AUDIO_spdif_in_cs_5_cs_byte_11_8_r_shift                                (0)
#define  AUDIO_spdif_in_cs_5_cs_byte_11_8_r_mask                                 (0xFFFFFFFF)
#define  AUDIO_spdif_in_cs_5_cs_byte_11_8_r(data)                                (0xFFFFFFFF&(data))
#define  AUDIO_spdif_in_cs_5_get_cs_byte_11_8_r(data)                            (0xFFFFFFFF&(data))

#define  AUDIO_spdif_in_cs_6                                                    0x18006E08
#define  AUDIO_spdif_in_cs_6_reg_addr                                            "0xB8006E08"
#define  AUDIO_spdif_in_cs_6_reg                                                 0xB8006E08
#define  AUDIO_spdif_in_cs_6_inst_addr                                           "0x0027"
#define  set_AUDIO_spdif_in_cs_6_reg(data)                                       (*((volatile unsigned int*)AUDIO_spdif_in_cs_6_reg)=data)
#define  get_AUDIO_spdif_in_cs_6_reg                                             (*((volatile unsigned int*)AUDIO_spdif_in_cs_6_reg))
#define  AUDIO_spdif_in_cs_6_cs_byte_15_12_r_shift                               (0)
#define  AUDIO_spdif_in_cs_6_cs_byte_15_12_r_mask                                (0xFFFFFFFF)
#define  AUDIO_spdif_in_cs_6_cs_byte_15_12_r(data)                               (0xFFFFFFFF&(data))
#define  AUDIO_spdif_in_cs_6_get_cs_byte_15_12_r(data)                           (0xFFFFFFFF&(data))

#define  AUDIO_spdif_in_cs_7                                                    0x18006E0C
#define  AUDIO_spdif_in_cs_7_reg_addr                                            "0xB8006E0C"
#define  AUDIO_spdif_in_cs_7_reg                                                 0xB8006E0C
#define  AUDIO_spdif_in_cs_7_inst_addr                                           "0x0028"
#define  set_AUDIO_spdif_in_cs_7_reg(data)                                       (*((volatile unsigned int*)AUDIO_spdif_in_cs_7_reg)=data)
#define  get_AUDIO_spdif_in_cs_7_reg                                             (*((volatile unsigned int*)AUDIO_spdif_in_cs_7_reg))
#define  AUDIO_spdif_in_cs_7_cs_byte_19_16_r_shift                               (0)
#define  AUDIO_spdif_in_cs_7_cs_byte_19_16_r_mask                                (0xFFFFFFFF)
#define  AUDIO_spdif_in_cs_7_cs_byte_19_16_r(data)                               (0xFFFFFFFF&(data))
#define  AUDIO_spdif_in_cs_7_get_cs_byte_19_16_r(data)                           (0xFFFFFFFF&(data))

#define  AUDIO_spdif_in_cs_8                                                    0x18006E10
#define  AUDIO_spdif_in_cs_8_reg_addr                                            "0xB8006E10"
#define  AUDIO_spdif_in_cs_8_reg                                                 0xB8006E10
#define  AUDIO_spdif_in_cs_8_inst_addr                                           "0x0029"
#define  set_AUDIO_spdif_in_cs_8_reg(data)                                       (*((volatile unsigned int*)AUDIO_spdif_in_cs_8_reg)=data)
#define  get_AUDIO_spdif_in_cs_8_reg                                             (*((volatile unsigned int*)AUDIO_spdif_in_cs_8_reg))
#define  AUDIO_spdif_in_cs_8_cs_byte_23_20_r_shift                               (0)
#define  AUDIO_spdif_in_cs_8_cs_byte_23_20_r_mask                                (0xFFFFFFFF)
#define  AUDIO_spdif_in_cs_8_cs_byte_23_20_r(data)                               (0xFFFFFFFF&(data))
#define  AUDIO_spdif_in_cs_8_get_cs_byte_23_20_r(data)                           (0xFFFFFFFF&(data))

#define  AUDIO_spdif_in_cs_9                                                    0x18006E14
#define  AUDIO_spdif_in_cs_9_reg_addr                                            "0xB8006E14"
#define  AUDIO_spdif_in_cs_9_reg                                                 0xB8006E14
#define  AUDIO_spdif_in_cs_9_inst_addr                                           "0x002A"
#define  set_AUDIO_spdif_in_cs_9_reg(data)                                       (*((volatile unsigned int*)AUDIO_spdif_in_cs_9_reg)=data)
#define  get_AUDIO_spdif_in_cs_9_reg                                             (*((volatile unsigned int*)AUDIO_spdif_in_cs_9_reg))
#define  AUDIO_spdif_in_cs_9_cs_byte_7_5_l_shift                                 (0)
#define  AUDIO_spdif_in_cs_9_cs_byte_7_5_l_mask                                  (0x003FFFFF)
#define  AUDIO_spdif_in_cs_9_cs_byte_7_5_l(data)                                 (0x003FFFFF&(data))
#define  AUDIO_spdif_in_cs_9_get_cs_byte_7_5_l(data)                             (0x003FFFFF&(data))

#define  AUDIO_spdif_in_cs_10                                                   0x18006E18
#define  AUDIO_spdif_in_cs_10_reg_addr                                           "0xB8006E18"
#define  AUDIO_spdif_in_cs_10_reg                                                0xB8006E18
#define  AUDIO_spdif_in_cs_10_inst_addr                                          "0x002B"
#define  set_AUDIO_spdif_in_cs_10_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_in_cs_10_reg)=data)
#define  get_AUDIO_spdif_in_cs_10_reg                                            (*((volatile unsigned int*)AUDIO_spdif_in_cs_10_reg))
#define  AUDIO_spdif_in_cs_10_cs_byte_11_8_l_shift                               (0)
#define  AUDIO_spdif_in_cs_10_cs_byte_11_8_l_mask                                (0xFFFFFFFF)
#define  AUDIO_spdif_in_cs_10_cs_byte_11_8_l(data)                               (0xFFFFFFFF&(data))
#define  AUDIO_spdif_in_cs_10_get_cs_byte_11_8_l(data)                           (0xFFFFFFFF&(data))

#define  AUDIO_spdif_in_cs_11                                                   0x18006E1C
#define  AUDIO_spdif_in_cs_11_reg_addr                                           "0xB8006E1C"
#define  AUDIO_spdif_in_cs_11_reg                                                0xB8006E1C
#define  AUDIO_spdif_in_cs_11_inst_addr                                          "0x002C"
#define  set_AUDIO_spdif_in_cs_11_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_in_cs_11_reg)=data)
#define  get_AUDIO_spdif_in_cs_11_reg                                            (*((volatile unsigned int*)AUDIO_spdif_in_cs_11_reg))
#define  AUDIO_spdif_in_cs_11_cs_byte_15_12_l_shift                              (0)
#define  AUDIO_spdif_in_cs_11_cs_byte_15_12_l_mask                               (0xFFFFFFFF)
#define  AUDIO_spdif_in_cs_11_cs_byte_15_12_l(data)                              (0xFFFFFFFF&(data))
#define  AUDIO_spdif_in_cs_11_get_cs_byte_15_12_l(data)                          (0xFFFFFFFF&(data))

#define  AUDIO_spdif_in_cs_12                                                   0x18006E20
#define  AUDIO_spdif_in_cs_12_reg_addr                                           "0xB8006E20"
#define  AUDIO_spdif_in_cs_12_reg                                                0xB8006E20
#define  AUDIO_spdif_in_cs_12_inst_addr                                          "0x002D"
#define  set_AUDIO_spdif_in_cs_12_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_in_cs_12_reg)=data)
#define  get_AUDIO_spdif_in_cs_12_reg                                            (*((volatile unsigned int*)AUDIO_spdif_in_cs_12_reg))
#define  AUDIO_spdif_in_cs_12_cs_byte_19_16_l_shift                              (0)
#define  AUDIO_spdif_in_cs_12_cs_byte_19_16_l_mask                               (0xFFFFFFFF)
#define  AUDIO_spdif_in_cs_12_cs_byte_19_16_l(data)                              (0xFFFFFFFF&(data))
#define  AUDIO_spdif_in_cs_12_get_cs_byte_19_16_l(data)                          (0xFFFFFFFF&(data))

#define  AUDIO_spdif_in_cs_13                                                   0x18006E24
#define  AUDIO_spdif_in_cs_13_reg_addr                                           "0xB8006E24"
#define  AUDIO_spdif_in_cs_13_reg                                                0xB8006E24
#define  AUDIO_spdif_in_cs_13_inst_addr                                          "0x002E"
#define  set_AUDIO_spdif_in_cs_13_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_in_cs_13_reg)=data)
#define  get_AUDIO_spdif_in_cs_13_reg                                            (*((volatile unsigned int*)AUDIO_spdif_in_cs_13_reg))
#define  AUDIO_spdif_in_cs_13_cs_byte_23_20_l_shift                              (0)
#define  AUDIO_spdif_in_cs_13_cs_byte_23_20_l_mask                               (0xFFFFFFFF)
#define  AUDIO_spdif_in_cs_13_cs_byte_23_20_l(data)                              (0xFFFFFFFF&(data))
#define  AUDIO_spdif_in_cs_13_get_cs_byte_23_20_l(data)                          (0xFFFFFFFF&(data))

#define  AUDIO_digital_mic_0_in                                                 0x18006140
#define  AUDIO_digital_mic_0_in_reg_addr                                         "0xB8006140"
#define  AUDIO_digital_mic_0_in_reg                                              0xB8006140
#define  AUDIO_digital_mic_0_in_inst_addr                                        "0x002F"
#define  set_AUDIO_digital_mic_0_in_reg(data)                                    (*((volatile unsigned int*)AUDIO_digital_mic_0_in_reg)=data)
#define  get_AUDIO_digital_mic_0_in_reg                                          (*((volatile unsigned int*)AUDIO_digital_mic_0_in_reg))
#define  AUDIO_digital_mic_0_in_dmic_0_enable_shift                              (11)
#define  AUDIO_digital_mic_0_in_digital_0_boost_ctrl_shift                       (8)
#define  AUDIO_digital_mic_0_in_dmic_0_adc_r_mute_ctrl_shift                     (5)
#define  AUDIO_digital_mic_0_in_dmic_0_adc_l_mute_ctrl_shift                     (4)
#define  AUDIO_digital_mic_0_in_dmic_0_r_sel_shift                               (3)
#define  AUDIO_digital_mic_0_in_dmic_0_l_sel_shift                               (2)
#define  AUDIO_digital_mic_0_in_dmic_0_enable_mask                               (0x00000800)
#define  AUDIO_digital_mic_0_in_digital_0_boost_ctrl_mask                        (0x00000700)
#define  AUDIO_digital_mic_0_in_dmic_0_adc_r_mute_ctrl_mask                      (0x00000020)
#define  AUDIO_digital_mic_0_in_dmic_0_adc_l_mute_ctrl_mask                      (0x00000010)
#define  AUDIO_digital_mic_0_in_dmic_0_r_sel_mask                                (0x00000008)
#define  AUDIO_digital_mic_0_in_dmic_0_l_sel_mask                                (0x00000004)
#define  AUDIO_digital_mic_0_in_dmic_0_enable(data)                              (0x00000800&((data)<<11))
#define  AUDIO_digital_mic_0_in_digital_0_boost_ctrl(data)                       (0x00000700&((data)<<8))
#define  AUDIO_digital_mic_0_in_dmic_0_adc_r_mute_ctrl(data)                     (0x00000020&((data)<<5))
#define  AUDIO_digital_mic_0_in_dmic_0_adc_l_mute_ctrl(data)                     (0x00000010&((data)<<4))
#define  AUDIO_digital_mic_0_in_dmic_0_r_sel(data)                               (0x00000008&((data)<<3))
#define  AUDIO_digital_mic_0_in_dmic_0_l_sel(data)                               (0x00000004&((data)<<2))
#define  AUDIO_digital_mic_0_in_get_dmic_0_enable(data)                          ((0x00000800&(data))>>11)
#define  AUDIO_digital_mic_0_in_get_digital_0_boost_ctrl(data)                   ((0x00000700&(data))>>8)
#define  AUDIO_digital_mic_0_in_get_dmic_0_adc_r_mute_ctrl(data)                 ((0x00000020&(data))>>5)
#define  AUDIO_digital_mic_0_in_get_dmic_0_adc_l_mute_ctrl(data)                 ((0x00000010&(data))>>4)
#define  AUDIO_digital_mic_0_in_get_dmic_0_r_sel(data)                           ((0x00000008&(data))>>3)
#define  AUDIO_digital_mic_0_in_get_dmic_0_l_sel(data)                           ((0x00000004&(data))>>2)

#define  AUDIO_digital_mic_1_in                                                 0x18006144
#define  AUDIO_digital_mic_1_in_reg_addr                                         "0xB8006144"
#define  AUDIO_digital_mic_1_in_reg                                              0xB8006144
#define  AUDIO_digital_mic_1_in_inst_addr                                        "0x0030"
#define  set_AUDIO_digital_mic_1_in_reg(data)                                    (*((volatile unsigned int*)AUDIO_digital_mic_1_in_reg)=data)
#define  get_AUDIO_digital_mic_1_in_reg                                          (*((volatile unsigned int*)AUDIO_digital_mic_1_in_reg))
#define  AUDIO_digital_mic_1_in_dmic_1_enable_shift                              (11)
#define  AUDIO_digital_mic_1_in_digital_1_boost_ctrl_shift                       (8)
#define  AUDIO_digital_mic_1_in_dmic_1_adc_r_mute_ctrl_shift                     (5)
#define  AUDIO_digital_mic_1_in_dmic_1_adc_l_mute_ctrl_shift                     (4)
#define  AUDIO_digital_mic_1_in_dmic_1_r_sel_shift                               (3)
#define  AUDIO_digital_mic_1_in_dmic_1_l_sel_shift                               (2)
#define  AUDIO_digital_mic_1_in_dmic_1_enable_mask                               (0x00000800)
#define  AUDIO_digital_mic_1_in_digital_1_boost_ctrl_mask                        (0x00000700)
#define  AUDIO_digital_mic_1_in_dmic_1_adc_r_mute_ctrl_mask                      (0x00000020)
#define  AUDIO_digital_mic_1_in_dmic_1_adc_l_mute_ctrl_mask                      (0x00000010)
#define  AUDIO_digital_mic_1_in_dmic_1_r_sel_mask                                (0x00000008)
#define  AUDIO_digital_mic_1_in_dmic_1_l_sel_mask                                (0x00000004)
#define  AUDIO_digital_mic_1_in_dmic_1_enable(data)                              (0x00000800&((data)<<11))
#define  AUDIO_digital_mic_1_in_digital_1_boost_ctrl(data)                       (0x00000700&((data)<<8))
#define  AUDIO_digital_mic_1_in_dmic_1_adc_r_mute_ctrl(data)                     (0x00000020&((data)<<5))
#define  AUDIO_digital_mic_1_in_dmic_1_adc_l_mute_ctrl(data)                     (0x00000010&((data)<<4))
#define  AUDIO_digital_mic_1_in_dmic_1_r_sel(data)                               (0x00000008&((data)<<3))
#define  AUDIO_digital_mic_1_in_dmic_1_l_sel(data)                               (0x00000004&((data)<<2))
#define  AUDIO_digital_mic_1_in_get_dmic_1_enable(data)                          ((0x00000800&(data))>>11)
#define  AUDIO_digital_mic_1_in_get_digital_1_boost_ctrl(data)                   ((0x00000700&(data))>>8)
#define  AUDIO_digital_mic_1_in_get_dmic_1_adc_r_mute_ctrl(data)                 ((0x00000020&(data))>>5)
#define  AUDIO_digital_mic_1_in_get_dmic_1_adc_l_mute_ctrl(data)                 ((0x00000010&(data))>>4)
#define  AUDIO_digital_mic_1_in_get_dmic_1_r_sel(data)                           ((0x00000008&(data))>>3)
#define  AUDIO_digital_mic_1_in_get_dmic_1_l_sel(data)                           ((0x00000004&(data))>>2)

#define  AUDIO_i2s_out                                                          0x18006150
#define  AUDIO_i2s_out_reg_addr                                                  "0xB8006150"
#define  AUDIO_i2s_out_reg                                                       0xB8006150
#define  AUDIO_i2s_out_inst_addr                                                 "0x0031"
#define  set_AUDIO_i2s_out_reg(data)                                             (*((volatile unsigned int*)AUDIO_i2s_out_reg)=data)
#define  get_AUDIO_i2s_out_reg                                                   (*((volatile unsigned int*)AUDIO_i2s_out_reg))
#define  AUDIO_i2s_out_output_swap_sel_shift                                     (31)
#define  AUDIO_i2s_out_output_sel_shift                                          (28)
#define  AUDIO_i2s_out_vr_o_clk_sel_shift                                        (26)
#define  AUDIO_i2s_out_mclk_sel_shift                                            (24)
#define  AUDIO_i2s_out_wclk_inv_shift                                            (17)
#define  AUDIO_i2s_out_sclk_inv_shift                                            (16)
#define  AUDIO_i2s_out_output_pad1_sel_shift                                     (14)
#define  AUDIO_i2s_out_output_pad2_sel_shift                                     (12)
#define  AUDIO_i2s_out_output_pad3_sel_shift                                     (10)
#define  AUDIO_i2s_out_output_pad4_sel_shift                                     (8)
#define  AUDIO_i2s_out_dummy_7_0_shift                                           (0)
#define  AUDIO_i2s_out_output_swap_sel_mask                                      (0x80000000)
#define  AUDIO_i2s_out_output_sel_mask                                           (0x70000000)
#define  AUDIO_i2s_out_vr_o_clk_sel_mask                                         (0x04000000)
#define  AUDIO_i2s_out_mclk_sel_mask                                             (0x03000000)
#define  AUDIO_i2s_out_wclk_inv_mask                                             (0x00020000)
#define  AUDIO_i2s_out_sclk_inv_mask                                             (0x00010000)
#define  AUDIO_i2s_out_output_pad1_sel_mask                                      (0x0000C000)
#define  AUDIO_i2s_out_output_pad2_sel_mask                                      (0x00003000)
#define  AUDIO_i2s_out_output_pad3_sel_mask                                      (0x00000C00)
#define  AUDIO_i2s_out_output_pad4_sel_mask                                      (0x00000300)
#define  AUDIO_i2s_out_dummy_7_0_mask                                            (0x000000FF)
#define  AUDIO_i2s_out_output_swap_sel(data)                                     (0x80000000&((data)<<31))
#define  AUDIO_i2s_out_output_sel(data)                                          (0x70000000&((data)<<28))
#define  AUDIO_i2s_out_vr_o_clk_sel(data)                                        (0x04000000&((data)<<26))
#define  AUDIO_i2s_out_mclk_sel(data)                                            (0x03000000&((data)<<24))
#define  AUDIO_i2s_out_wclk_inv(data)                                            (0x00020000&((data)<<17))
#define  AUDIO_i2s_out_sclk_inv(data)                                            (0x00010000&((data)<<16))
#define  AUDIO_i2s_out_output_pad1_sel(data)                                     (0x0000C000&((data)<<14))
#define  AUDIO_i2s_out_output_pad2_sel(data)                                     (0x00003000&((data)<<12))
#define  AUDIO_i2s_out_output_pad3_sel(data)                                     (0x00000C00&((data)<<10))
#define  AUDIO_i2s_out_output_pad4_sel(data)                                     (0x00000300&((data)<<8))
#define  AUDIO_i2s_out_dummy_7_0(data)                                           (0x000000FF&(data))
#define  AUDIO_i2s_out_get_output_swap_sel(data)                                 ((0x80000000&(data))>>31)
#define  AUDIO_i2s_out_get_output_sel(data)                                      ((0x70000000&(data))>>28)
#define  AUDIO_i2s_out_get_vr_o_clk_sel(data)                                    ((0x04000000&(data))>>26)
#define  AUDIO_i2s_out_get_mclk_sel(data)                                        ((0x03000000&(data))>>24)
#define  AUDIO_i2s_out_get_wclk_inv(data)                                        ((0x00020000&(data))>>17)
#define  AUDIO_i2s_out_get_sclk_inv(data)                                        ((0x00010000&(data))>>16)
#define  AUDIO_i2s_out_get_output_pad1_sel(data)                                 ((0x0000C000&(data))>>14)
#define  AUDIO_i2s_out_get_output_pad2_sel(data)                                 ((0x00003000&(data))>>12)
#define  AUDIO_i2s_out_get_output_pad3_sel(data)                                 ((0x00000C00&(data))>>10)
#define  AUDIO_i2s_out_get_output_pad4_sel(data)                                 ((0x00000300&(data))>>8)
#define  AUDIO_i2s_out_get_dummy_7_0(data)                                       (0x000000FF&(data))

#define  AUDIO_i2s_out_sel                                                      0x18006154
#define  AUDIO_i2s_out_sel_reg_addr                                              "0xB8006154"
#define  AUDIO_i2s_out_sel_reg                                                   0xB8006154
#define  AUDIO_i2s_out_sel_inst_addr                                             "0x0032"
#define  set_AUDIO_i2s_out_sel_reg(data)                                         (*((volatile unsigned int*)AUDIO_i2s_out_sel_reg)=data)
#define  get_AUDIO_i2s_out_sel_reg                                               (*((volatile unsigned int*)AUDIO_i2s_out_sel_reg))
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch01_shift                             (28)
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch23_shift                             (24)
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch45_shift                             (20)
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch67_shift                             (16)
#define  AUDIO_i2s_out_sel_swap_sel_ch01_shift                                   (14)
#define  AUDIO_i2s_out_sel_swap_sel_ch23_shift                                   (12)
#define  AUDIO_i2s_out_sel_swap_sel_ch45_shift                                   (10)
#define  AUDIO_i2s_out_sel_swap_sel_ch67_shift                                   (8)
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch67_shift                              (6)
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch45_shift                              (4)
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch23_shift                              (2)
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch01_shift                              (0)
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch01_mask                              (0xF0000000)
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch23_mask                              (0x0F000000)
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch45_mask                              (0x00F00000)
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch67_mask                              (0x000F0000)
#define  AUDIO_i2s_out_sel_swap_sel_ch01_mask                                    (0x0000C000)
#define  AUDIO_i2s_out_sel_swap_sel_ch23_mask                                    (0x00003000)
#define  AUDIO_i2s_out_sel_swap_sel_ch45_mask                                    (0x00000C00)
#define  AUDIO_i2s_out_sel_swap_sel_ch67_mask                                    (0x00000300)
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch67_mask                               (0x000000C0)
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch45_mask                               (0x00000030)
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch23_mask                               (0x0000000C)
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch01_mask                               (0x00000003)
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch01(data)                             (0xF0000000&((data)<<28))
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch23(data)                             (0x0F000000&((data)<<24))
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch45(data)                             (0x00F00000&((data)<<20))
#define  AUDIO_i2s_out_sel_pcm_source_sel_ch67(data)                             (0x000F0000&((data)<<16))
#define  AUDIO_i2s_out_sel_swap_sel_ch01(data)                                   (0x0000C000&((data)<<14))
#define  AUDIO_i2s_out_sel_swap_sel_ch23(data)                                   (0x00003000&((data)<<12))
#define  AUDIO_i2s_out_sel_swap_sel_ch45(data)                                   (0x00000C00&((data)<<10))
#define  AUDIO_i2s_out_sel_swap_sel_ch67(data)                                   (0x00000300&((data)<<8))
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch67(data)                              (0x000000C0&((data)<<6))
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch45(data)                              (0x00000030&((data)<<4))
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch23(data)                              (0x0000000C&((data)<<2))
#define  AUDIO_i2s_out_sel_i2s_pb_vr_sel_ch01(data)                              (0x00000003&(data))
#define  AUDIO_i2s_out_sel_get_pcm_source_sel_ch01(data)                         ((0xF0000000&(data))>>28)
#define  AUDIO_i2s_out_sel_get_pcm_source_sel_ch23(data)                         ((0x0F000000&(data))>>24)
#define  AUDIO_i2s_out_sel_get_pcm_source_sel_ch45(data)                         ((0x00F00000&(data))>>20)
#define  AUDIO_i2s_out_sel_get_pcm_source_sel_ch67(data)                         ((0x000F0000&(data))>>16)
#define  AUDIO_i2s_out_sel_get_swap_sel_ch01(data)                               ((0x0000C000&(data))>>14)
#define  AUDIO_i2s_out_sel_get_swap_sel_ch23(data)                               ((0x00003000&(data))>>12)
#define  AUDIO_i2s_out_sel_get_swap_sel_ch45(data)                               ((0x00000C00&(data))>>10)
#define  AUDIO_i2s_out_sel_get_swap_sel_ch67(data)                               ((0x00000300&(data))>>8)
#define  AUDIO_i2s_out_sel_get_i2s_pb_vr_sel_ch67(data)                          ((0x000000C0&(data))>>6)
#define  AUDIO_i2s_out_sel_get_i2s_pb_vr_sel_ch45(data)                          ((0x00000030&(data))>>4)
#define  AUDIO_i2s_out_sel_get_i2s_pb_vr_sel_ch23(data)                          ((0x0000000C&(data))>>2)
#define  AUDIO_i2s_out_sel_get_i2s_pb_vr_sel_ch01(data)                          (0x00000003&(data))

#define  AUDIO_i2s_out_sel_2                                                    0x18006158
#define  AUDIO_i2s_out_sel_2_reg_addr                                            "0xB8006158"
#define  AUDIO_i2s_out_sel_2_reg                                                 0xB8006158
#define  AUDIO_i2s_out_sel_2_inst_addr                                           "0x0033"
#define  set_AUDIO_i2s_out_sel_2_reg(data)                                       (*((volatile unsigned int*)AUDIO_i2s_out_sel_2_reg)=data)
#define  get_AUDIO_i2s_out_sel_2_reg                                             (*((volatile unsigned int*)AUDIO_i2s_out_sel_2_reg))
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch67_shift                              (31)
#define  AUDIO_i2s_out_sel_2_hw_limit_ch67_shift                                 (24)
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch45_shift                              (23)
#define  AUDIO_i2s_out_sel_2_hw_limit_ch45_shift                                 (16)
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch23_shift                              (15)
#define  AUDIO_i2s_out_sel_2_hw_limit_ch23_shift                                 (8)
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch01_shift                              (7)
#define  AUDIO_i2s_out_sel_2_hw_limit_ch01_shift                                 (0)
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch67_mask                               (0x80000000)
#define  AUDIO_i2s_out_sel_2_hw_limit_ch67_mask                                  (0x7F000000)
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch45_mask                               (0x00800000)
#define  AUDIO_i2s_out_sel_2_hw_limit_ch45_mask                                  (0x007F0000)
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch23_mask                               (0x00008000)
#define  AUDIO_i2s_out_sel_2_hw_limit_ch23_mask                                  (0x00007F00)
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch01_mask                               (0x00000080)
#define  AUDIO_i2s_out_sel_2_hw_limit_ch01_mask                                  (0x0000007F)
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch67(data)                              (0x80000000&((data)<<31))
#define  AUDIO_i2s_out_sel_2_hw_limit_ch67(data)                                 (0x7F000000&((data)<<24))
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch45(data)                              (0x00800000&((data)<<23))
#define  AUDIO_i2s_out_sel_2_hw_limit_ch45(data)                                 (0x007F0000&((data)<<16))
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch23(data)                              (0x00008000&((data)<<15))
#define  AUDIO_i2s_out_sel_2_hw_limit_ch23(data)                                 (0x00007F00&((data)<<8))
#define  AUDIO_i2s_out_sel_2_hw_limit_en_ch01(data)                              (0x00000080&((data)<<7))
#define  AUDIO_i2s_out_sel_2_hw_limit_ch01(data)                                 (0x0000007F&(data))
#define  AUDIO_i2s_out_sel_2_get_hw_limit_en_ch67(data)                          ((0x80000000&(data))>>31)
#define  AUDIO_i2s_out_sel_2_get_hw_limit_ch67(data)                             ((0x7F000000&(data))>>24)
#define  AUDIO_i2s_out_sel_2_get_hw_limit_en_ch45(data)                          ((0x00800000&(data))>>23)
#define  AUDIO_i2s_out_sel_2_get_hw_limit_ch45(data)                             ((0x007F0000&(data))>>16)
#define  AUDIO_i2s_out_sel_2_get_hw_limit_en_ch23(data)                          ((0x00008000&(data))>>15)
#define  AUDIO_i2s_out_sel_2_get_hw_limit_ch23(data)                             ((0x00007F00&(data))>>8)
#define  AUDIO_i2s_out_sel_2_get_hw_limit_en_ch01(data)                          ((0x00000080&(data))>>7)
#define  AUDIO_i2s_out_sel_2_get_hw_limit_ch01(data)                             (0x0000007F&(data))

#define  AUDIO_spdif_out                                                        0x18006170
#define  AUDIO_spdif_out_reg_addr                                                "0xB8006170"
#define  AUDIO_spdif_out_reg                                                     0xB8006170
#define  AUDIO_spdif_out_inst_addr                                               "0x0034"
#define  set_AUDIO_spdif_out_reg(data)                                           (*((volatile unsigned int*)AUDIO_spdif_out_reg)=data)
#define  get_AUDIO_spdif_out_reg                                                 (*((volatile unsigned int*)AUDIO_spdif_out_reg))
#define  AUDIO_spdif_out_output_sel_shift                                        (30)
#define  AUDIO_spdif_out_wait_en_shift                                           (29)
#define  AUDIO_spdif_out_validity_ctrl_shift                                     (28)
#define  AUDIO_spdif_out_spdif_out_null_burst_shift                              (27)
#define  AUDIO_spdif_out_pcm_source_sel_shift                                    (23)
#define  AUDIO_spdif_out_spdif_output_ch_sel_shift                               (21)
#define  AUDIO_spdif_out_spdif_output_mux_shift                                  (20)
#define  AUDIO_spdif_out_spo_pb_vr_sel_shift                                     (18)
#define  AUDIO_spdif_out_swap_sel_shift                                          (16)
#define  AUDIO_spdif_out_dummy_15_0_shift                                        (0)
#define  AUDIO_spdif_out_output_sel_mask                                         (0xC0000000)
#define  AUDIO_spdif_out_wait_en_mask                                            (0x20000000)
#define  AUDIO_spdif_out_validity_ctrl_mask                                      (0x10000000)
#define  AUDIO_spdif_out_spdif_out_null_burst_mask                               (0x08000000)
#define  AUDIO_spdif_out_pcm_source_sel_mask                                     (0x07800000)
#define  AUDIO_spdif_out_spdif_output_ch_sel_mask                                (0x00600000)
#define  AUDIO_spdif_out_spdif_output_mux_mask                                   (0x00100000)
#define  AUDIO_spdif_out_spo_pb_vr_sel_mask                                      (0x000C0000)
#define  AUDIO_spdif_out_swap_sel_mask                                           (0x00030000)
#define  AUDIO_spdif_out_dummy_15_0_mask                                         (0x0000FFFF)
#define  AUDIO_spdif_out_output_sel(data)                                        (0xC0000000&((data)<<30))
#define  AUDIO_spdif_out_wait_en(data)                                           (0x20000000&((data)<<29))
#define  AUDIO_spdif_out_validity_ctrl(data)                                     (0x10000000&((data)<<28))
#define  AUDIO_spdif_out_spdif_out_null_burst(data)                              (0x08000000&((data)<<27))
#define  AUDIO_spdif_out_pcm_source_sel(data)                                    (0x07800000&((data)<<23))
#define  AUDIO_spdif_out_spdif_output_ch_sel(data)                               (0x00600000&((data)<<21))
#define  AUDIO_spdif_out_spdif_output_mux(data)                                  (0x00100000&((data)<<20))
#define  AUDIO_spdif_out_spo_pb_vr_sel(data)                                     (0x000C0000&((data)<<18))
#define  AUDIO_spdif_out_swap_sel(data)                                          (0x00030000&((data)<<16))
#define  AUDIO_spdif_out_dummy_15_0(data)                                        (0x0000FFFF&(data))
#define  AUDIO_spdif_out_get_output_sel(data)                                    ((0xC0000000&(data))>>30)
#define  AUDIO_spdif_out_get_wait_en(data)                                       ((0x20000000&(data))>>29)
#define  AUDIO_spdif_out_get_validity_ctrl(data)                                 ((0x10000000&(data))>>28)
#define  AUDIO_spdif_out_get_spdif_out_null_burst(data)                          ((0x08000000&(data))>>27)
#define  AUDIO_spdif_out_get_pcm_source_sel(data)                                ((0x07800000&(data))>>23)
#define  AUDIO_spdif_out_get_spdif_output_ch_sel(data)                           ((0x00600000&(data))>>21)
#define  AUDIO_spdif_out_get_spdif_output_mux(data)                              ((0x00100000&(data))>>20)
#define  AUDIO_spdif_out_get_spo_pb_vr_sel(data)                                 ((0x000C0000&(data))>>18)
#define  AUDIO_spdif_out_get_swap_sel(data)                                      ((0x00030000&(data))>>16)
#define  AUDIO_spdif_out_get_dummy_15_0(data)                                    (0x0000FFFF&(data))

#define  AUDIO_spdif_out_cs                                                     0x18006174
#define  AUDIO_spdif_out_cs_reg_addr                                             "0xB8006174"
#define  AUDIO_spdif_out_cs_reg                                                  0xB8006174
#define  AUDIO_spdif_out_cs_inst_addr                                            "0x0035"
#define  set_AUDIO_spdif_out_cs_reg(data)                                        (*((volatile unsigned int*)AUDIO_spdif_out_cs_reg)=data)
#define  get_AUDIO_spdif_out_cs_reg                                              (*((volatile unsigned int*)AUDIO_spdif_out_cs_reg))
#define  AUDIO_spdif_out_cs_cs_lb3_31_30_shift                                   (30)
#define  AUDIO_spdif_out_cs_clock_accuracy_shift                                 (28)
#define  AUDIO_spdif_out_cs_sampling_freq_shift                                  (24)
#define  AUDIO_spdif_out_cs_channel_number_shift                                 (20)
#define  AUDIO_spdif_out_cs_source_number_shift                                  (16)
#define  AUDIO_spdif_out_cs_category_code_shift                                  (8)
#define  AUDIO_spdif_out_cs_mode_shift                                           (6)
#define  AUDIO_spdif_out_cs_pre_emphasis_shift                                   (3)
#define  AUDIO_spdif_out_cs_copyright_shift                                      (2)
#define  AUDIO_spdif_out_cs_data_type_shift                                      (1)
#define  AUDIO_spdif_out_cs_professional_shift                                   (0)
#define  AUDIO_spdif_out_cs_cs_lb3_31_30_mask                                    (0xC0000000)
#define  AUDIO_spdif_out_cs_clock_accuracy_mask                                  (0x30000000)
#define  AUDIO_spdif_out_cs_sampling_freq_mask                                   (0x0F000000)
#define  AUDIO_spdif_out_cs_channel_number_mask                                  (0x00F00000)
#define  AUDIO_spdif_out_cs_source_number_mask                                   (0x000F0000)
#define  AUDIO_spdif_out_cs_category_code_mask                                   (0x0000FF00)
#define  AUDIO_spdif_out_cs_mode_mask                                            (0x000000C0)
#define  AUDIO_spdif_out_cs_pre_emphasis_mask                                    (0x00000038)
#define  AUDIO_spdif_out_cs_copyright_mask                                       (0x00000004)
#define  AUDIO_spdif_out_cs_data_type_mask                                       (0x00000002)
#define  AUDIO_spdif_out_cs_professional_mask                                    (0x00000001)
#define  AUDIO_spdif_out_cs_cs_lb3_31_30(data)                                   (0xC0000000&((data)<<30))
#define  AUDIO_spdif_out_cs_clock_accuracy(data)                                 (0x30000000&((data)<<28))
#define  AUDIO_spdif_out_cs_sampling_freq(data)                                  (0x0F000000&((data)<<24))
#define  AUDIO_spdif_out_cs_channel_number(data)                                 (0x00F00000&((data)<<20))
#define  AUDIO_spdif_out_cs_source_number(data)                                  (0x000F0000&((data)<<16))
#define  AUDIO_spdif_out_cs_category_code(data)                                  (0x0000FF00&((data)<<8))
#define  AUDIO_spdif_out_cs_mode(data)                                           (0x000000C0&((data)<<6))
#define  AUDIO_spdif_out_cs_pre_emphasis(data)                                   (0x00000038&((data)<<3))
#define  AUDIO_spdif_out_cs_copyright(data)                                      (0x00000004&((data)<<2))
#define  AUDIO_spdif_out_cs_data_type(data)                                      (0x00000002&((data)<<1))
#define  AUDIO_spdif_out_cs_professional(data)                                   (0x00000001&(data))
#define  AUDIO_spdif_out_cs_get_cs_lb3_31_30(data)                               ((0xC0000000&(data))>>30)
#define  AUDIO_spdif_out_cs_get_clock_accuracy(data)                             ((0x30000000&(data))>>28)
#define  AUDIO_spdif_out_cs_get_sampling_freq(data)                              ((0x0F000000&(data))>>24)
#define  AUDIO_spdif_out_cs_get_channel_number(data)                             ((0x00F00000&(data))>>20)
#define  AUDIO_spdif_out_cs_get_source_number(data)                              ((0x000F0000&(data))>>16)
#define  AUDIO_spdif_out_cs_get_category_code(data)                              ((0x0000FF00&(data))>>8)
#define  AUDIO_spdif_out_cs_get_mode(data)                                       ((0x000000C0&(data))>>6)
#define  AUDIO_spdif_out_cs_get_pre_emphasis(data)                               ((0x00000038&(data))>>3)
#define  AUDIO_spdif_out_cs_get_copyright(data)                                  ((0x00000004&(data))>>2)
#define  AUDIO_spdif_out_cs_get_data_type(data)                                  ((0x00000002&(data))>>1)
#define  AUDIO_spdif_out_cs_get_professional(data)                               (0x00000001&(data))

#define  AUDIO_spdif_out_cs_2                                                   0x18006178
#define  AUDIO_spdif_out_cs_2_reg_addr                                           "0xB8006178"
#define  AUDIO_spdif_out_cs_2_reg                                                0xB8006178
#define  AUDIO_spdif_out_cs_2_inst_addr                                          "0x0036"
#define  set_AUDIO_spdif_out_cs_2_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_out_cs_2_reg)=data)
#define  get_AUDIO_spdif_out_cs_2_reg                                            (*((volatile unsigned int*)AUDIO_spdif_out_cs_2_reg))
#define  AUDIO_spdif_out_cs_2_cgms_a_shift                                       (8)
#define  AUDIO_spdif_out_cs_2_original_sampling_freq_shift                       (4)
#define  AUDIO_spdif_out_cs_2_word_length_shift                                  (0)
#define  AUDIO_spdif_out_cs_2_cgms_a_mask                                        (0x00000300)
#define  AUDIO_spdif_out_cs_2_original_sampling_freq_mask                        (0x000000F0)
#define  AUDIO_spdif_out_cs_2_word_length_mask                                   (0x0000000F)
#define  AUDIO_spdif_out_cs_2_cgms_a(data)                                       (0x00000300&((data)<<8))
#define  AUDIO_spdif_out_cs_2_original_sampling_freq(data)                       (0x000000F0&((data)<<4))
#define  AUDIO_spdif_out_cs_2_word_length(data)                                  (0x0000000F&(data))
#define  AUDIO_spdif_out_cs_2_get_cgms_a(data)                                   ((0x00000300&(data))>>8)
#define  AUDIO_spdif_out_cs_2_get_original_sampling_freq(data)                   ((0x000000F0&(data))>>4)
#define  AUDIO_spdif_out_cs_2_get_word_length(data)                              (0x0000000F&(data))

#define  AUDIO_spdif_out_2                                                      0x1800617C
#define  AUDIO_spdif_out_2_reg_addr                                              "0xB800617C"
#define  AUDIO_spdif_out_2_reg                                                   0xB800617C
#define  AUDIO_spdif_out_2_inst_addr                                             "0x0037"
#define  set_AUDIO_spdif_out_2_reg(data)                                         (*((volatile unsigned int*)AUDIO_spdif_out_2_reg)=data)
#define  get_AUDIO_spdif_out_2_reg                                               (*((volatile unsigned int*)AUDIO_spdif_out_2_reg))
#define  AUDIO_spdif_out_2_hw_limit_en_shift                                     (7)
#define  AUDIO_spdif_out_2_hw_limit_shift                                        (0)
#define  AUDIO_spdif_out_2_hw_limit_en_mask                                      (0x00000080)
#define  AUDIO_spdif_out_2_hw_limit_mask                                         (0x0000007F)
#define  AUDIO_spdif_out_2_hw_limit_en(data)                                     (0x00000080&((data)<<7))
#define  AUDIO_spdif_out_2_hw_limit(data)                                        (0x0000007F&(data))
#define  AUDIO_spdif_out_2_get_hw_limit_en(data)                                 ((0x00000080&(data))>>7)
#define  AUDIO_spdif_out_2_get_hw_limit(data)                                    (0x0000007F&(data))

#define  AUDIO_spdif_out_cs_3                                                   0x18006E30
#define  AUDIO_spdif_out_cs_3_reg_addr                                           "0xB8006E30"
#define  AUDIO_spdif_out_cs_3_reg                                                0xB8006E30
#define  AUDIO_spdif_out_cs_3_inst_addr                                          "0x0038"
#define  set_AUDIO_spdif_out_cs_3_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_out_cs_3_reg)=data)
#define  get_AUDIO_spdif_out_cs_3_reg                                            (*((volatile unsigned int*)AUDIO_spdif_out_cs_3_reg))
#define  AUDIO_spdif_out_cs_3_cs_rb3_31_30_shift                                 (30)
#define  AUDIO_spdif_out_cs_3_clock_accuracy_r_shift                             (28)
#define  AUDIO_spdif_out_cs_3_sampling_freq_r_shift                              (24)
#define  AUDIO_spdif_out_cs_3_channel_number_r_shift                             (20)
#define  AUDIO_spdif_out_cs_3_source_number_r_shift                              (16)
#define  AUDIO_spdif_out_cs_3_category_code_r_shift                              (8)
#define  AUDIO_spdif_out_cs_3_mode_r_shift                                       (6)
#define  AUDIO_spdif_out_cs_3_pre_emphasis_r_shift                               (3)
#define  AUDIO_spdif_out_cs_3_copyright_r_shift                                  (2)
#define  AUDIO_spdif_out_cs_3_data_type_r_shift                                  (1)
#define  AUDIO_spdif_out_cs_3_professional_r_shift                               (0)
#define  AUDIO_spdif_out_cs_3_cs_rb3_31_30_mask                                  (0xC0000000)
#define  AUDIO_spdif_out_cs_3_clock_accuracy_r_mask                              (0x30000000)
#define  AUDIO_spdif_out_cs_3_sampling_freq_r_mask                               (0x0F000000)
#define  AUDIO_spdif_out_cs_3_channel_number_r_mask                              (0x00F00000)
#define  AUDIO_spdif_out_cs_3_source_number_r_mask                               (0x000F0000)
#define  AUDIO_spdif_out_cs_3_category_code_r_mask                               (0x0000FF00)
#define  AUDIO_spdif_out_cs_3_mode_r_mask                                        (0x000000C0)
#define  AUDIO_spdif_out_cs_3_pre_emphasis_r_mask                                (0x00000038)
#define  AUDIO_spdif_out_cs_3_copyright_r_mask                                   (0x00000004)
#define  AUDIO_spdif_out_cs_3_data_type_r_mask                                   (0x00000002)
#define  AUDIO_spdif_out_cs_3_professional_r_mask                                (0x00000001)
#define  AUDIO_spdif_out_cs_3_cs_rb3_31_30(data)                                 (0xC0000000&((data)<<30))
#define  AUDIO_spdif_out_cs_3_clock_accuracy_r(data)                             (0x30000000&((data)<<28))
#define  AUDIO_spdif_out_cs_3_sampling_freq_r(data)                              (0x0F000000&((data)<<24))
#define  AUDIO_spdif_out_cs_3_channel_number_r(data)                             (0x00F00000&((data)<<20))
#define  AUDIO_spdif_out_cs_3_source_number_r(data)                              (0x000F0000&((data)<<16))
#define  AUDIO_spdif_out_cs_3_category_code_r(data)                              (0x0000FF00&((data)<<8))
#define  AUDIO_spdif_out_cs_3_mode_r(data)                                       (0x000000C0&((data)<<6))
#define  AUDIO_spdif_out_cs_3_pre_emphasis_r(data)                               (0x00000038&((data)<<3))
#define  AUDIO_spdif_out_cs_3_copyright_r(data)                                  (0x00000004&((data)<<2))
#define  AUDIO_spdif_out_cs_3_data_type_r(data)                                  (0x00000002&((data)<<1))
#define  AUDIO_spdif_out_cs_3_professional_r(data)                               (0x00000001&(data))
#define  AUDIO_spdif_out_cs_3_get_cs_rb3_31_30(data)                             ((0xC0000000&(data))>>30)
#define  AUDIO_spdif_out_cs_3_get_clock_accuracy_r(data)                         ((0x30000000&(data))>>28)
#define  AUDIO_spdif_out_cs_3_get_sampling_freq_r(data)                          ((0x0F000000&(data))>>24)
#define  AUDIO_spdif_out_cs_3_get_channel_number_r(data)                         ((0x00F00000&(data))>>20)
#define  AUDIO_spdif_out_cs_3_get_source_number_r(data)                          ((0x000F0000&(data))>>16)
#define  AUDIO_spdif_out_cs_3_get_category_code_r(data)                          ((0x0000FF00&(data))>>8)
#define  AUDIO_spdif_out_cs_3_get_mode_r(data)                                   ((0x000000C0&(data))>>6)
#define  AUDIO_spdif_out_cs_3_get_pre_emphasis_r(data)                           ((0x00000038&(data))>>3)
#define  AUDIO_spdif_out_cs_3_get_copyright_r(data)                              ((0x00000004&(data))>>2)
#define  AUDIO_spdif_out_cs_3_get_data_type_r(data)                              ((0x00000002&(data))>>1)
#define  AUDIO_spdif_out_cs_3_get_professional_r(data)                           (0x00000001&(data))

#define  AUDIO_spdif_out_cs_4                                                   0x18006E34
#define  AUDIO_spdif_out_cs_4_reg_addr                                           "0xB8006E34"
#define  AUDIO_spdif_out_cs_4_reg                                                0xB8006E34
#define  AUDIO_spdif_out_cs_4_inst_addr                                          "0x0039"
#define  set_AUDIO_spdif_out_cs_4_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_out_cs_4_reg)=data)
#define  get_AUDIO_spdif_out_cs_4_reg                                            (*((volatile unsigned int*)AUDIO_spdif_out_cs_4_reg))
#define  AUDIO_spdif_out_cs_4_cgms_a_r_shift                                     (8)
#define  AUDIO_spdif_out_cs_4_original_sampling_freq_r_shift                     (4)
#define  AUDIO_spdif_out_cs_4_word_length_r_shift                                (0)
#define  AUDIO_spdif_out_cs_4_cgms_a_r_mask                                      (0x00000300)
#define  AUDIO_spdif_out_cs_4_original_sampling_freq_r_mask                      (0x000000F0)
#define  AUDIO_spdif_out_cs_4_word_length_r_mask                                 (0x0000000F)
#define  AUDIO_spdif_out_cs_4_cgms_a_r(data)                                     (0x00000300&((data)<<8))
#define  AUDIO_spdif_out_cs_4_original_sampling_freq_r(data)                     (0x000000F0&((data)<<4))
#define  AUDIO_spdif_out_cs_4_word_length_r(data)                                (0x0000000F&(data))
#define  AUDIO_spdif_out_cs_4_get_cgms_a_r(data)                                 ((0x00000300&(data))>>8)
#define  AUDIO_spdif_out_cs_4_get_original_sampling_freq_r(data)                 ((0x000000F0&(data))>>4)
#define  AUDIO_spdif_out_cs_4_get_word_length_r(data)                            (0x0000000F&(data))

#define  AUDIO_spdif_out_cs_5                                                   0x18006E38
#define  AUDIO_spdif_out_cs_5_reg_addr                                           "0xB8006E38"
#define  AUDIO_spdif_out_cs_5_reg                                                0xB8006E38
#define  AUDIO_spdif_out_cs_5_inst_addr                                          "0x003A"
#define  set_AUDIO_spdif_out_cs_5_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_out_cs_5_reg)=data)
#define  get_AUDIO_spdif_out_cs_5_reg                                            (*((volatile unsigned int*)AUDIO_spdif_out_cs_5_reg))
#define  AUDIO_spdif_out_cs_5_cs_byte_7_5_l_shift                                (0)
#define  AUDIO_spdif_out_cs_5_cs_byte_7_5_l_mask                                 (0x003FFFFF)
#define  AUDIO_spdif_out_cs_5_cs_byte_7_5_l(data)                                (0x003FFFFF&(data))
#define  AUDIO_spdif_out_cs_5_get_cs_byte_7_5_l(data)                            (0x003FFFFF&(data))

#define  AUDIO_spdif_out_cs_6                                                   0x18006E3C
#define  AUDIO_spdif_out_cs_6_reg_addr                                           "0xB8006E3C"
#define  AUDIO_spdif_out_cs_6_reg                                                0xB8006E3C
#define  AUDIO_spdif_out_cs_6_inst_addr                                          "0x003B"
#define  set_AUDIO_spdif_out_cs_6_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_out_cs_6_reg)=data)
#define  get_AUDIO_spdif_out_cs_6_reg                                            (*((volatile unsigned int*)AUDIO_spdif_out_cs_6_reg))
#define  AUDIO_spdif_out_cs_6_cs_byte_11_8_l_shift                               (0)
#define  AUDIO_spdif_out_cs_6_cs_byte_11_8_l_mask                                (0xFFFFFFFF)
#define  AUDIO_spdif_out_cs_6_cs_byte_11_8_l(data)                               (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_cs_6_get_cs_byte_11_8_l(data)                           (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_cs_7                                                   0x18006E40
#define  AUDIO_spdif_out_cs_7_reg_addr                                           "0xB8006E40"
#define  AUDIO_spdif_out_cs_7_reg                                                0xB8006E40
#define  AUDIO_spdif_out_cs_7_inst_addr                                          "0x003C"
#define  set_AUDIO_spdif_out_cs_7_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_out_cs_7_reg)=data)
#define  get_AUDIO_spdif_out_cs_7_reg                                            (*((volatile unsigned int*)AUDIO_spdif_out_cs_7_reg))
#define  AUDIO_spdif_out_cs_7_cs_byte_15_12_l_shift                              (0)
#define  AUDIO_spdif_out_cs_7_cs_byte_15_12_l_mask                               (0xFFFFFFFF)
#define  AUDIO_spdif_out_cs_7_cs_byte_15_12_l(data)                              (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_cs_7_get_cs_byte_15_12_l(data)                          (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_cs_8                                                   0x18006E44
#define  AUDIO_spdif_out_cs_8_reg_addr                                           "0xB8006E44"
#define  AUDIO_spdif_out_cs_8_reg                                                0xB8006E44
#define  AUDIO_spdif_out_cs_8_inst_addr                                          "0x003D"
#define  set_AUDIO_spdif_out_cs_8_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_out_cs_8_reg)=data)
#define  get_AUDIO_spdif_out_cs_8_reg                                            (*((volatile unsigned int*)AUDIO_spdif_out_cs_8_reg))
#define  AUDIO_spdif_out_cs_8_cs_byte_19_16_l_shift                              (0)
#define  AUDIO_spdif_out_cs_8_cs_byte_19_16_l_mask                               (0xFFFFFFFF)
#define  AUDIO_spdif_out_cs_8_cs_byte_19_16_l(data)                              (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_cs_8_get_cs_byte_19_16_l(data)                          (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_cs_9                                                   0x18006E48
#define  AUDIO_spdif_out_cs_9_reg_addr                                           "0xB8006E48"
#define  AUDIO_spdif_out_cs_9_reg                                                0xB8006E48
#define  AUDIO_spdif_out_cs_9_inst_addr                                          "0x003E"
#define  set_AUDIO_spdif_out_cs_9_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_out_cs_9_reg)=data)
#define  get_AUDIO_spdif_out_cs_9_reg                                            (*((volatile unsigned int*)AUDIO_spdif_out_cs_9_reg))
#define  AUDIO_spdif_out_cs_9_cs_byte_23_20_l_shift                              (0)
#define  AUDIO_spdif_out_cs_9_cs_byte_23_20_l_mask                               (0xFFFFFFFF)
#define  AUDIO_spdif_out_cs_9_cs_byte_23_20_l(data)                              (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_cs_9_get_cs_byte_23_20_l(data)                          (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_cs_10                                                  0x18006E4C
#define  AUDIO_spdif_out_cs_10_reg_addr                                          "0xB8006E4C"
#define  AUDIO_spdif_out_cs_10_reg                                               0xB8006E4C
#define  AUDIO_spdif_out_cs_10_inst_addr                                         "0x003F"
#define  set_AUDIO_spdif_out_cs_10_reg(data)                                     (*((volatile unsigned int*)AUDIO_spdif_out_cs_10_reg)=data)
#define  get_AUDIO_spdif_out_cs_10_reg                                           (*((volatile unsigned int*)AUDIO_spdif_out_cs_10_reg))
#define  AUDIO_spdif_out_cs_10_cs_byte_7_5_r_shift                               (0)
#define  AUDIO_spdif_out_cs_10_cs_byte_7_5_r_mask                                (0x003FFFFF)
#define  AUDIO_spdif_out_cs_10_cs_byte_7_5_r(data)                               (0x003FFFFF&(data))
#define  AUDIO_spdif_out_cs_10_get_cs_byte_7_5_r(data)                           (0x003FFFFF&(data))

#define  AUDIO_spdif_out_cs_11                                                  0x18006E50
#define  AUDIO_spdif_out_cs_11_reg_addr                                          "0xB8006E50"
#define  AUDIO_spdif_out_cs_11_reg                                               0xB8006E50
#define  AUDIO_spdif_out_cs_11_inst_addr                                         "0x0040"
#define  set_AUDIO_spdif_out_cs_11_reg(data)                                     (*((volatile unsigned int*)AUDIO_spdif_out_cs_11_reg)=data)
#define  get_AUDIO_spdif_out_cs_11_reg                                           (*((volatile unsigned int*)AUDIO_spdif_out_cs_11_reg))
#define  AUDIO_spdif_out_cs_11_cs_byte_11_8_r_shift                              (0)
#define  AUDIO_spdif_out_cs_11_cs_byte_11_8_r_mask                               (0xFFFFFFFF)
#define  AUDIO_spdif_out_cs_11_cs_byte_11_8_r(data)                              (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_cs_11_get_cs_byte_11_8_r(data)                          (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_cs_12                                                  0x18006E54
#define  AUDIO_spdif_out_cs_12_reg_addr                                          "0xB8006E54"
#define  AUDIO_spdif_out_cs_12_reg                                               0xB8006E54
#define  AUDIO_spdif_out_cs_12_inst_addr                                         "0x0041"
#define  set_AUDIO_spdif_out_cs_12_reg(data)                                     (*((volatile unsigned int*)AUDIO_spdif_out_cs_12_reg)=data)
#define  get_AUDIO_spdif_out_cs_12_reg                                           (*((volatile unsigned int*)AUDIO_spdif_out_cs_12_reg))
#define  AUDIO_spdif_out_cs_12_cs_byte_15_12_r_shift                             (0)
#define  AUDIO_spdif_out_cs_12_cs_byte_15_12_r_mask                              (0xFFFFFFFF)
#define  AUDIO_spdif_out_cs_12_cs_byte_15_12_r(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_cs_12_get_cs_byte_15_12_r(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_cs_13                                                  0x18006E58
#define  AUDIO_spdif_out_cs_13_reg_addr                                          "0xB8006E58"
#define  AUDIO_spdif_out_cs_13_reg                                               0xB8006E58
#define  AUDIO_spdif_out_cs_13_inst_addr                                         "0x0042"
#define  set_AUDIO_spdif_out_cs_13_reg(data)                                     (*((volatile unsigned int*)AUDIO_spdif_out_cs_13_reg)=data)
#define  get_AUDIO_spdif_out_cs_13_reg                                           (*((volatile unsigned int*)AUDIO_spdif_out_cs_13_reg))
#define  AUDIO_spdif_out_cs_13_cs_byte_19_16_r_shift                             (0)
#define  AUDIO_spdif_out_cs_13_cs_byte_19_16_r_mask                              (0xFFFFFFFF)
#define  AUDIO_spdif_out_cs_13_cs_byte_19_16_r(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_cs_13_get_cs_byte_19_16_r(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_cs_14                                                  0x18006E5C
#define  AUDIO_spdif_out_cs_14_reg_addr                                          "0xB8006E5C"
#define  AUDIO_spdif_out_cs_14_reg                                               0xB8006E5C
#define  AUDIO_spdif_out_cs_14_inst_addr                                         "0x0043"
#define  set_AUDIO_spdif_out_cs_14_reg(data)                                     (*((volatile unsigned int*)AUDIO_spdif_out_cs_14_reg)=data)
#define  get_AUDIO_spdif_out_cs_14_reg                                           (*((volatile unsigned int*)AUDIO_spdif_out_cs_14_reg))
#define  AUDIO_spdif_out_cs_14_cs_byte_23_20_r_shift                             (0)
#define  AUDIO_spdif_out_cs_14_cs_byte_23_20_r_mask                              (0xFFFFFFFF)
#define  AUDIO_spdif_out_cs_14_cs_byte_23_20_r(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_cs_14_get_cs_byte_23_20_r(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_1                                                      0x18006E60
#define  AUDIO_spdif_out_1_reg_addr                                              "0xB8006E60"
#define  AUDIO_spdif_out_1_reg                                                   0xB8006E60
#define  AUDIO_spdif_out_1_inst_addr                                             "0x0044"
#define  set_AUDIO_spdif_out_1_reg(data)                                         (*((volatile unsigned int*)AUDIO_spdif_out_1_reg)=data)
#define  get_AUDIO_spdif_out_1_reg                                               (*((volatile unsigned int*)AUDIO_spdif_out_1_reg))
#define  AUDIO_spdif_out_1_output_sel_shift                                      (30)
#define  AUDIO_spdif_out_1_wait_en_shift                                         (29)
#define  AUDIO_spdif_out_1_validity_ctrl_shift                                   (28)
#define  AUDIO_spdif_out_1_spdif_out_null_burst_shift                            (27)
#define  AUDIO_spdif_out_1_pcm_source_sel_shift                                  (23)
#define  AUDIO_spdif_out_1_spdif_output_ch_sel_shift                             (21)
#define  AUDIO_spdif_out_1_spdif_output_mux_shift                                (20)
#define  AUDIO_spdif_out_1_spo_pb_vr_sel_shift                                   (18)
#define  AUDIO_spdif_out_1_swap_sel_shift                                        (16)
#define  AUDIO_spdif_out_1_dummy_15_0_shift                                      (0)
#define  AUDIO_spdif_out_1_output_sel_mask                                       (0xC0000000)
#define  AUDIO_spdif_out_1_wait_en_mask                                          (0x20000000)
#define  AUDIO_spdif_out_1_validity_ctrl_mask                                    (0x10000000)
#define  AUDIO_spdif_out_1_spdif_out_null_burst_mask                             (0x08000000)
#define  AUDIO_spdif_out_1_pcm_source_sel_mask                                   (0x07800000)
#define  AUDIO_spdif_out_1_spdif_output_ch_sel_mask                              (0x00600000)
#define  AUDIO_spdif_out_1_spdif_output_mux_mask                                 (0x00100000)
#define  AUDIO_spdif_out_1_spo_pb_vr_sel_mask                                    (0x000C0000)
#define  AUDIO_spdif_out_1_swap_sel_mask                                         (0x00030000)
#define  AUDIO_spdif_out_1_dummy_15_0_mask                                       (0x0000FFFF)
#define  AUDIO_spdif_out_1_output_sel(data)                                      (0xC0000000&((data)<<30))
#define  AUDIO_spdif_out_1_wait_en(data)                                         (0x20000000&((data)<<29))
#define  AUDIO_spdif_out_1_validity_ctrl(data)                                   (0x10000000&((data)<<28))
#define  AUDIO_spdif_out_1_spdif_out_null_burst(data)                            (0x08000000&((data)<<27))
#define  AUDIO_spdif_out_1_pcm_source_sel(data)                                  (0x07800000&((data)<<23))
#define  AUDIO_spdif_out_1_spdif_output_ch_sel(data)                             (0x00600000&((data)<<21))
#define  AUDIO_spdif_out_1_spdif_output_mux(data)                                (0x00100000&((data)<<20))
#define  AUDIO_spdif_out_1_spo_pb_vr_sel(data)                                   (0x000C0000&((data)<<18))
#define  AUDIO_spdif_out_1_swap_sel(data)                                        (0x00030000&((data)<<16))
#define  AUDIO_spdif_out_1_dummy_15_0(data)                                      (0x0000FFFF&(data))
#define  AUDIO_spdif_out_1_get_output_sel(data)                                  ((0xC0000000&(data))>>30)
#define  AUDIO_spdif_out_1_get_wait_en(data)                                     ((0x20000000&(data))>>29)
#define  AUDIO_spdif_out_1_get_validity_ctrl(data)                               ((0x10000000&(data))>>28)
#define  AUDIO_spdif_out_1_get_spdif_out_null_burst(data)                        ((0x08000000&(data))>>27)
#define  AUDIO_spdif_out_1_get_pcm_source_sel(data)                              ((0x07800000&(data))>>23)
#define  AUDIO_spdif_out_1_get_spdif_output_ch_sel(data)                         ((0x00600000&(data))>>21)
#define  AUDIO_spdif_out_1_get_spdif_output_mux(data)                            ((0x00100000&(data))>>20)
#define  AUDIO_spdif_out_1_get_spo_pb_vr_sel(data)                               ((0x000C0000&(data))>>18)
#define  AUDIO_spdif_out_1_get_swap_sel(data)                                    ((0x00030000&(data))>>16)
#define  AUDIO_spdif_out_1_get_dummy_15_0(data)                                  (0x0000FFFF&(data))

#define  AUDIO_spdif_out_1_cs                                                   0x18006E64
#define  AUDIO_spdif_out_1_cs_reg_addr                                           "0xB8006E64"
#define  AUDIO_spdif_out_1_cs_reg                                                0xB8006E64
#define  AUDIO_spdif_out_1_cs_inst_addr                                          "0x0045"
#define  set_AUDIO_spdif_out_1_cs_reg(data)                                      (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_reg                                            (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_reg))
#define  AUDIO_spdif_out_1_cs_cs_lb3_31_30_shift                                 (30)
#define  AUDIO_spdif_out_1_cs_clock_accuracy_shift                               (28)
#define  AUDIO_spdif_out_1_cs_sampling_freq_shift                                (24)
#define  AUDIO_spdif_out_1_cs_channel_number_shift                               (20)
#define  AUDIO_spdif_out_1_cs_source_number_shift                                (16)
#define  AUDIO_spdif_out_1_cs_category_code_shift                                (8)
#define  AUDIO_spdif_out_1_cs_mode_shift                                         (6)
#define  AUDIO_spdif_out_1_cs_pre_emphasis_shift                                 (3)
#define  AUDIO_spdif_out_1_cs_copyright_shift                                    (2)
#define  AUDIO_spdif_out_1_cs_data_type_shift                                    (1)
#define  AUDIO_spdif_out_1_cs_professional_shift                                 (0)
#define  AUDIO_spdif_out_1_cs_cs_lb3_31_30_mask                                  (0xC0000000)
#define  AUDIO_spdif_out_1_cs_clock_accuracy_mask                                (0x30000000)
#define  AUDIO_spdif_out_1_cs_sampling_freq_mask                                 (0x0F000000)
#define  AUDIO_spdif_out_1_cs_channel_number_mask                                (0x00F00000)
#define  AUDIO_spdif_out_1_cs_source_number_mask                                 (0x000F0000)
#define  AUDIO_spdif_out_1_cs_category_code_mask                                 (0x0000FF00)
#define  AUDIO_spdif_out_1_cs_mode_mask                                          (0x000000C0)
#define  AUDIO_spdif_out_1_cs_pre_emphasis_mask                                  (0x00000038)
#define  AUDIO_spdif_out_1_cs_copyright_mask                                     (0x00000004)
#define  AUDIO_spdif_out_1_cs_data_type_mask                                     (0x00000002)
#define  AUDIO_spdif_out_1_cs_professional_mask                                  (0x00000001)
#define  AUDIO_spdif_out_1_cs_cs_lb3_31_30(data)                                 (0xC0000000&((data)<<30))
#define  AUDIO_spdif_out_1_cs_clock_accuracy(data)                               (0x30000000&((data)<<28))
#define  AUDIO_spdif_out_1_cs_sampling_freq(data)                                (0x0F000000&((data)<<24))
#define  AUDIO_spdif_out_1_cs_channel_number(data)                               (0x00F00000&((data)<<20))
#define  AUDIO_spdif_out_1_cs_source_number(data)                                (0x000F0000&((data)<<16))
#define  AUDIO_spdif_out_1_cs_category_code(data)                                (0x0000FF00&((data)<<8))
#define  AUDIO_spdif_out_1_cs_mode(data)                                         (0x000000C0&((data)<<6))
#define  AUDIO_spdif_out_1_cs_pre_emphasis(data)                                 (0x00000038&((data)<<3))
#define  AUDIO_spdif_out_1_cs_copyright(data)                                    (0x00000004&((data)<<2))
#define  AUDIO_spdif_out_1_cs_data_type(data)                                    (0x00000002&((data)<<1))
#define  AUDIO_spdif_out_1_cs_professional(data)                                 (0x00000001&(data))
#define  AUDIO_spdif_out_1_cs_get_cs_lb3_31_30(data)                             ((0xC0000000&(data))>>30)
#define  AUDIO_spdif_out_1_cs_get_clock_accuracy(data)                           ((0x30000000&(data))>>28)
#define  AUDIO_spdif_out_1_cs_get_sampling_freq(data)                            ((0x0F000000&(data))>>24)
#define  AUDIO_spdif_out_1_cs_get_channel_number(data)                           ((0x00F00000&(data))>>20)
#define  AUDIO_spdif_out_1_cs_get_source_number(data)                            ((0x000F0000&(data))>>16)
#define  AUDIO_spdif_out_1_cs_get_category_code(data)                            ((0x0000FF00&(data))>>8)
#define  AUDIO_spdif_out_1_cs_get_mode(data)                                     ((0x000000C0&(data))>>6)
#define  AUDIO_spdif_out_1_cs_get_pre_emphasis(data)                             ((0x00000038&(data))>>3)
#define  AUDIO_spdif_out_1_cs_get_copyright(data)                                ((0x00000004&(data))>>2)
#define  AUDIO_spdif_out_1_cs_get_data_type(data)                                ((0x00000002&(data))>>1)
#define  AUDIO_spdif_out_1_cs_get_professional(data)                             (0x00000001&(data))

#define  AUDIO_spdif_out_1_cs_2                                                 0x18006E68
#define  AUDIO_spdif_out_1_cs_2_reg_addr                                         "0xB8006E68"
#define  AUDIO_spdif_out_1_cs_2_reg                                              0xB8006E68
#define  AUDIO_spdif_out_1_cs_2_inst_addr                                        "0x0046"
#define  set_AUDIO_spdif_out_1_cs_2_reg(data)                                    (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_2_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_2_reg                                          (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_2_reg))
#define  AUDIO_spdif_out_1_cs_2_cgms_a_shift                                     (8)
#define  AUDIO_spdif_out_1_cs_2_original_sampling_freq_shift                     (4)
#define  AUDIO_spdif_out_1_cs_2_word_length_shift                                (0)
#define  AUDIO_spdif_out_1_cs_2_cgms_a_mask                                      (0x00000300)
#define  AUDIO_spdif_out_1_cs_2_original_sampling_freq_mask                      (0x000000F0)
#define  AUDIO_spdif_out_1_cs_2_word_length_mask                                 (0x0000000F)
#define  AUDIO_spdif_out_1_cs_2_cgms_a(data)                                     (0x00000300&((data)<<8))
#define  AUDIO_spdif_out_1_cs_2_original_sampling_freq(data)                     (0x000000F0&((data)<<4))
#define  AUDIO_spdif_out_1_cs_2_word_length(data)                                (0x0000000F&(data))
#define  AUDIO_spdif_out_1_cs_2_get_cgms_a(data)                                 ((0x00000300&(data))>>8)
#define  AUDIO_spdif_out_1_cs_2_get_original_sampling_freq(data)                 ((0x000000F0&(data))>>4)
#define  AUDIO_spdif_out_1_cs_2_get_word_length(data)                            (0x0000000F&(data))

#define  AUDIO_spdif_out_1_2                                                    0x18006E6C
#define  AUDIO_spdif_out_1_2_reg_addr                                            "0xB8006E6C"
#define  AUDIO_spdif_out_1_2_reg                                                 0xB8006E6C
#define  AUDIO_spdif_out_1_2_inst_addr                                           "0x0047"
#define  set_AUDIO_spdif_out_1_2_reg(data)                                       (*((volatile unsigned int*)AUDIO_spdif_out_1_2_reg)=data)
#define  get_AUDIO_spdif_out_1_2_reg                                             (*((volatile unsigned int*)AUDIO_spdif_out_1_2_reg))
#define  AUDIO_spdif_out_1_2_hw_limit_en_shift                                   (7)
#define  AUDIO_spdif_out_1_2_hw_limit_shift                                      (0)
#define  AUDIO_spdif_out_1_2_hw_limit_en_mask                                    (0x00000080)
#define  AUDIO_spdif_out_1_2_hw_limit_mask                                       (0x0000007F)
#define  AUDIO_spdif_out_1_2_hw_limit_en(data)                                   (0x00000080&((data)<<7))
#define  AUDIO_spdif_out_1_2_hw_limit(data)                                      (0x0000007F&(data))
#define  AUDIO_spdif_out_1_2_get_hw_limit_en(data)                               ((0x00000080&(data))>>7)
#define  AUDIO_spdif_out_1_2_get_hw_limit(data)                                  (0x0000007F&(data))

#define  AUDIO_spdif_out_1_cs_3                                                 0x18006E70
#define  AUDIO_spdif_out_1_cs_3_reg_addr                                         "0xB8006E70"
#define  AUDIO_spdif_out_1_cs_3_reg                                              0xB8006E70
#define  AUDIO_spdif_out_1_cs_3_inst_addr                                        "0x0048"
#define  set_AUDIO_spdif_out_1_cs_3_reg(data)                                    (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_3_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_3_reg                                          (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_3_reg))
#define  AUDIO_spdif_out_1_cs_3_cs_rb3_31_30_shift                               (30)
#define  AUDIO_spdif_out_1_cs_3_clock_accuracy_r_shift                           (28)
#define  AUDIO_spdif_out_1_cs_3_sampling_freq_r_shift                            (24)
#define  AUDIO_spdif_out_1_cs_3_channel_number_r_shift                           (20)
#define  AUDIO_spdif_out_1_cs_3_source_number_r_shift                            (16)
#define  AUDIO_spdif_out_1_cs_3_category_code_r_shift                            (8)
#define  AUDIO_spdif_out_1_cs_3_mode_r_shift                                     (6)
#define  AUDIO_spdif_out_1_cs_3_pre_emphasis_r_shift                             (3)
#define  AUDIO_spdif_out_1_cs_3_copyright_r_shift                                (2)
#define  AUDIO_spdif_out_1_cs_3_data_type_r_shift                                (1)
#define  AUDIO_spdif_out_1_cs_3_professional_r_shift                             (0)
#define  AUDIO_spdif_out_1_cs_3_cs_rb3_31_30_mask                                (0xC0000000)
#define  AUDIO_spdif_out_1_cs_3_clock_accuracy_r_mask                            (0x30000000)
#define  AUDIO_spdif_out_1_cs_3_sampling_freq_r_mask                             (0x0F000000)
#define  AUDIO_spdif_out_1_cs_3_channel_number_r_mask                            (0x00F00000)
#define  AUDIO_spdif_out_1_cs_3_source_number_r_mask                             (0x000F0000)
#define  AUDIO_spdif_out_1_cs_3_category_code_r_mask                             (0x0000FF00)
#define  AUDIO_spdif_out_1_cs_3_mode_r_mask                                      (0x000000C0)
#define  AUDIO_spdif_out_1_cs_3_pre_emphasis_r_mask                              (0x00000038)
#define  AUDIO_spdif_out_1_cs_3_copyright_r_mask                                 (0x00000004)
#define  AUDIO_spdif_out_1_cs_3_data_type_r_mask                                 (0x00000002)
#define  AUDIO_spdif_out_1_cs_3_professional_r_mask                              (0x00000001)
#define  AUDIO_spdif_out_1_cs_3_cs_rb3_31_30(data)                               (0xC0000000&((data)<<30))
#define  AUDIO_spdif_out_1_cs_3_clock_accuracy_r(data)                           (0x30000000&((data)<<28))
#define  AUDIO_spdif_out_1_cs_3_sampling_freq_r(data)                            (0x0F000000&((data)<<24))
#define  AUDIO_spdif_out_1_cs_3_channel_number_r(data)                           (0x00F00000&((data)<<20))
#define  AUDIO_spdif_out_1_cs_3_source_number_r(data)                            (0x000F0000&((data)<<16))
#define  AUDIO_spdif_out_1_cs_3_category_code_r(data)                            (0x0000FF00&((data)<<8))
#define  AUDIO_spdif_out_1_cs_3_mode_r(data)                                     (0x000000C0&((data)<<6))
#define  AUDIO_spdif_out_1_cs_3_pre_emphasis_r(data)                             (0x00000038&((data)<<3))
#define  AUDIO_spdif_out_1_cs_3_copyright_r(data)                                (0x00000004&((data)<<2))
#define  AUDIO_spdif_out_1_cs_3_data_type_r(data)                                (0x00000002&((data)<<1))
#define  AUDIO_spdif_out_1_cs_3_professional_r(data)                             (0x00000001&(data))
#define  AUDIO_spdif_out_1_cs_3_get_cs_rb3_31_30(data)                           ((0xC0000000&(data))>>30)
#define  AUDIO_spdif_out_1_cs_3_get_clock_accuracy_r(data)                       ((0x30000000&(data))>>28)
#define  AUDIO_spdif_out_1_cs_3_get_sampling_freq_r(data)                        ((0x0F000000&(data))>>24)
#define  AUDIO_spdif_out_1_cs_3_get_channel_number_r(data)                       ((0x00F00000&(data))>>20)
#define  AUDIO_spdif_out_1_cs_3_get_source_number_r(data)                        ((0x000F0000&(data))>>16)
#define  AUDIO_spdif_out_1_cs_3_get_category_code_r(data)                        ((0x0000FF00&(data))>>8)
#define  AUDIO_spdif_out_1_cs_3_get_mode_r(data)                                 ((0x000000C0&(data))>>6)
#define  AUDIO_spdif_out_1_cs_3_get_pre_emphasis_r(data)                         ((0x00000038&(data))>>3)
#define  AUDIO_spdif_out_1_cs_3_get_copyright_r(data)                            ((0x00000004&(data))>>2)
#define  AUDIO_spdif_out_1_cs_3_get_data_type_r(data)                            ((0x00000002&(data))>>1)
#define  AUDIO_spdif_out_1_cs_3_get_professional_r(data)                         (0x00000001&(data))

#define  AUDIO_spdif_out_1_cs_4                                                 0x18006E74
#define  AUDIO_spdif_out_1_cs_4_reg_addr                                         "0xB8006E74"
#define  AUDIO_spdif_out_1_cs_4_reg                                              0xB8006E74
#define  AUDIO_spdif_out_1_cs_4_inst_addr                                        "0x0049"
#define  set_AUDIO_spdif_out_1_cs_4_reg(data)                                    (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_4_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_4_reg                                          (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_4_reg))
#define  AUDIO_spdif_out_1_cs_4_cgms_a_r_shift                                   (8)
#define  AUDIO_spdif_out_1_cs_4_original_sampling_freq_r_shift                   (4)
#define  AUDIO_spdif_out_1_cs_4_word_length_r_shift                              (0)
#define  AUDIO_spdif_out_1_cs_4_cgms_a_r_mask                                    (0x00000300)
#define  AUDIO_spdif_out_1_cs_4_original_sampling_freq_r_mask                    (0x000000F0)
#define  AUDIO_spdif_out_1_cs_4_word_length_r_mask                               (0x0000000F)
#define  AUDIO_spdif_out_1_cs_4_cgms_a_r(data)                                   (0x00000300&((data)<<8))
#define  AUDIO_spdif_out_1_cs_4_original_sampling_freq_r(data)                   (0x000000F0&((data)<<4))
#define  AUDIO_spdif_out_1_cs_4_word_length_r(data)                              (0x0000000F&(data))
#define  AUDIO_spdif_out_1_cs_4_get_cgms_a_r(data)                               ((0x00000300&(data))>>8)
#define  AUDIO_spdif_out_1_cs_4_get_original_sampling_freq_r(data)               ((0x000000F0&(data))>>4)
#define  AUDIO_spdif_out_1_cs_4_get_word_length_r(data)                          (0x0000000F&(data))

#define  AUDIO_spdif_out_1_cs_5                                                 0x18006E78
#define  AUDIO_spdif_out_1_cs_5_reg_addr                                         "0xB8006E78"
#define  AUDIO_spdif_out_1_cs_5_reg                                              0xB8006E78
#define  AUDIO_spdif_out_1_cs_5_inst_addr                                        "0x004A"
#define  set_AUDIO_spdif_out_1_cs_5_reg(data)                                    (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_5_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_5_reg                                          (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_5_reg))
#define  AUDIO_spdif_out_1_cs_5_cs_byte_7_5_l_shift                              (0)
#define  AUDIO_spdif_out_1_cs_5_cs_byte_7_5_l_mask                               (0x003FFFFF)
#define  AUDIO_spdif_out_1_cs_5_cs_byte_7_5_l(data)                              (0x003FFFFF&(data))
#define  AUDIO_spdif_out_1_cs_5_get_cs_byte_7_5_l(data)                          (0x003FFFFF&(data))

#define  AUDIO_spdif_out_1_cs_6                                                 0x18006E7C
#define  AUDIO_spdif_out_1_cs_6_reg_addr                                         "0xB8006E7C"
#define  AUDIO_spdif_out_1_cs_6_reg                                              0xB8006E7C
#define  AUDIO_spdif_out_1_cs_6_inst_addr                                        "0x004B"
#define  set_AUDIO_spdif_out_1_cs_6_reg(data)                                    (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_6_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_6_reg                                          (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_6_reg))
#define  AUDIO_spdif_out_1_cs_6_cs_byte_11_8_l_shift                             (0)
#define  AUDIO_spdif_out_1_cs_6_cs_byte_11_8_l_mask                              (0xFFFFFFFF)
#define  AUDIO_spdif_out_1_cs_6_cs_byte_11_8_l(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_1_cs_6_get_cs_byte_11_8_l(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_1_cs_7                                                 0x18006E80
#define  AUDIO_spdif_out_1_cs_7_reg_addr                                         "0xB8006E80"
#define  AUDIO_spdif_out_1_cs_7_reg                                              0xB8006E80
#define  AUDIO_spdif_out_1_cs_7_inst_addr                                        "0x004C"
#define  set_AUDIO_spdif_out_1_cs_7_reg(data)                                    (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_7_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_7_reg                                          (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_7_reg))
#define  AUDIO_spdif_out_1_cs_7_cs_byte_15_12_l_shift                            (0)
#define  AUDIO_spdif_out_1_cs_7_cs_byte_15_12_l_mask                             (0xFFFFFFFF)
#define  AUDIO_spdif_out_1_cs_7_cs_byte_15_12_l(data)                            (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_1_cs_7_get_cs_byte_15_12_l(data)                        (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_1_cs_8                                                 0x18006E84
#define  AUDIO_spdif_out_1_cs_8_reg_addr                                         "0xB8006E84"
#define  AUDIO_spdif_out_1_cs_8_reg                                              0xB8006E84
#define  AUDIO_spdif_out_1_cs_8_inst_addr                                        "0x004D"
#define  set_AUDIO_spdif_out_1_cs_8_reg(data)                                    (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_8_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_8_reg                                          (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_8_reg))
#define  AUDIO_spdif_out_1_cs_8_cs_byte_19_16_l_shift                            (0)
#define  AUDIO_spdif_out_1_cs_8_cs_byte_19_16_l_mask                             (0xFFFFFFFF)
#define  AUDIO_spdif_out_1_cs_8_cs_byte_19_16_l(data)                            (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_1_cs_8_get_cs_byte_19_16_l(data)                        (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_1_cs_9                                                 0x18006E88
#define  AUDIO_spdif_out_1_cs_9_reg_addr                                         "0xB8006E88"
#define  AUDIO_spdif_out_1_cs_9_reg                                              0xB8006E88
#define  AUDIO_spdif_out_1_cs_9_inst_addr                                        "0x004E"
#define  set_AUDIO_spdif_out_1_cs_9_reg(data)                                    (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_9_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_9_reg                                          (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_9_reg))
#define  AUDIO_spdif_out_1_cs_9_cs_byte_23_20_l_shift                            (0)
#define  AUDIO_spdif_out_1_cs_9_cs_byte_23_20_l_mask                             (0xFFFFFFFF)
#define  AUDIO_spdif_out_1_cs_9_cs_byte_23_20_l(data)                            (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_1_cs_9_get_cs_byte_23_20_l(data)                        (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_1_cs_10                                                0x18006E8C
#define  AUDIO_spdif_out_1_cs_10_reg_addr                                        "0xB8006E8C"
#define  AUDIO_spdif_out_1_cs_10_reg                                             0xB8006E8C
#define  AUDIO_spdif_out_1_cs_10_inst_addr                                       "0x004F"
#define  set_AUDIO_spdif_out_1_cs_10_reg(data)                                   (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_10_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_10_reg                                         (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_10_reg))
#define  AUDIO_spdif_out_1_cs_10_cs_byte_7_5_r_shift                             (0)
#define  AUDIO_spdif_out_1_cs_10_cs_byte_7_5_r_mask                              (0x003FFFFF)
#define  AUDIO_spdif_out_1_cs_10_cs_byte_7_5_r(data)                             (0x003FFFFF&(data))
#define  AUDIO_spdif_out_1_cs_10_get_cs_byte_7_5_r(data)                         (0x003FFFFF&(data))

#define  AUDIO_spdif_out_1_cs_11                                                0x18006E90
#define  AUDIO_spdif_out_1_cs_11_reg_addr                                        "0xB8006E90"
#define  AUDIO_spdif_out_1_cs_11_reg                                             0xB8006E90
#define  AUDIO_spdif_out_1_cs_11_inst_addr                                       "0x0050"
#define  set_AUDIO_spdif_out_1_cs_11_reg(data)                                   (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_11_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_11_reg                                         (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_11_reg))
#define  AUDIO_spdif_out_1_cs_11_cs_byte_11_8_r_shift                            (0)
#define  AUDIO_spdif_out_1_cs_11_cs_byte_11_8_r_mask                             (0xFFFFFFFF)
#define  AUDIO_spdif_out_1_cs_11_cs_byte_11_8_r(data)                            (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_1_cs_11_get_cs_byte_11_8_r(data)                        (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_1_cs_12                                                0x18006E94
#define  AUDIO_spdif_out_1_cs_12_reg_addr                                        "0xB8006E94"
#define  AUDIO_spdif_out_1_cs_12_reg                                             0xB8006E94
#define  AUDIO_spdif_out_1_cs_12_inst_addr                                       "0x0051"
#define  set_AUDIO_spdif_out_1_cs_12_reg(data)                                   (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_12_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_12_reg                                         (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_12_reg))
#define  AUDIO_spdif_out_1_cs_12_cs_byte_15_12_r_shift                           (0)
#define  AUDIO_spdif_out_1_cs_12_cs_byte_15_12_r_mask                            (0xFFFFFFFF)
#define  AUDIO_spdif_out_1_cs_12_cs_byte_15_12_r(data)                           (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_1_cs_12_get_cs_byte_15_12_r(data)                       (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_1_cs_13                                                0x18006E98
#define  AUDIO_spdif_out_1_cs_13_reg_addr                                        "0xB8006E98"
#define  AUDIO_spdif_out_1_cs_13_reg                                             0xB8006E98
#define  AUDIO_spdif_out_1_cs_13_inst_addr                                       "0x0052"
#define  set_AUDIO_spdif_out_1_cs_13_reg(data)                                   (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_13_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_13_reg                                         (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_13_reg))
#define  AUDIO_spdif_out_1_cs_13_cs_byte_19_16_r_shift                           (0)
#define  AUDIO_spdif_out_1_cs_13_cs_byte_19_16_r_mask                            (0xFFFFFFFF)
#define  AUDIO_spdif_out_1_cs_13_cs_byte_19_16_r(data)                           (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_1_cs_13_get_cs_byte_19_16_r(data)                       (0xFFFFFFFF&(data))

#define  AUDIO_spdif_out_1_cs_14                                                0x18006E9C
#define  AUDIO_spdif_out_1_cs_14_reg_addr                                        "0xB8006E9C"
#define  AUDIO_spdif_out_1_cs_14_reg                                             0xB8006E9C
#define  AUDIO_spdif_out_1_cs_14_inst_addr                                       "0x0053"
#define  set_AUDIO_spdif_out_1_cs_14_reg(data)                                   (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_14_reg)=data)
#define  get_AUDIO_spdif_out_1_cs_14_reg                                         (*((volatile unsigned int*)AUDIO_spdif_out_1_cs_14_reg))
#define  AUDIO_spdif_out_1_cs_14_cs_byte_23_20_r_shift                           (0)
#define  AUDIO_spdif_out_1_cs_14_cs_byte_23_20_r_mask                            (0xFFFFFFFF)
#define  AUDIO_spdif_out_1_cs_14_cs_byte_23_20_r(data)                           (0xFFFFFFFF&(data))
#define  AUDIO_spdif_out_1_cs_14_get_cs_byte_23_20_r(data)                       (0xFFFFFFFF&(data))

#define  AUDIO_sif_agc_eval_cnt                                                 0x18006180
#define  AUDIO_sif_agc_eval_cnt_reg_addr                                         "0xB8006180"
#define  AUDIO_sif_agc_eval_cnt_reg                                              0xB8006180
#define  AUDIO_sif_agc_eval_cnt_inst_addr                                        "0x0054"
#define  set_AUDIO_sif_agc_eval_cnt_reg(data)                                    (*((volatile unsigned int*)AUDIO_sif_agc_eval_cnt_reg)=data)
#define  get_AUDIO_sif_agc_eval_cnt_reg                                          (*((volatile unsigned int*)AUDIO_sif_agc_eval_cnt_reg))
#define  AUDIO_sif_agc_eval_cnt_dummy_19_17_shift                                (17)
#define  AUDIO_sif_agc_eval_cnt_hw_agc_en_shift                                  (16)
#define  AUDIO_sif_agc_eval_cnt_ob_time_shift                                    (0)
#define  AUDIO_sif_agc_eval_cnt_dummy_19_17_mask                                 (0x000E0000)
#define  AUDIO_sif_agc_eval_cnt_hw_agc_en_mask                                   (0x00010000)
#define  AUDIO_sif_agc_eval_cnt_ob_time_mask                                     (0x0000FFFF)
#define  AUDIO_sif_agc_eval_cnt_dummy_19_17(data)                                (0x000E0000&((data)<<17))
#define  AUDIO_sif_agc_eval_cnt_hw_agc_en(data)                                  (0x00010000&((data)<<16))
#define  AUDIO_sif_agc_eval_cnt_ob_time(data)                                    (0x0000FFFF&(data))
#define  AUDIO_sif_agc_eval_cnt_get_dummy_19_17(data)                            ((0x000E0000&(data))>>17)
#define  AUDIO_sif_agc_eval_cnt_get_hw_agc_en(data)                              ((0x00010000&(data))>>16)
#define  AUDIO_sif_agc_eval_cnt_get_ob_time(data)                                (0x0000FFFF&(data))

#define  AUDIO_sif_agc_optimal                                                  0x18006184
#define  AUDIO_sif_agc_optimal_reg_addr                                          "0xB8006184"
#define  AUDIO_sif_agc_optimal_reg                                               0xB8006184
#define  AUDIO_sif_agc_optimal_inst_addr                                         "0x0055"
#define  set_AUDIO_sif_agc_optimal_reg(data)                                     (*((volatile unsigned int*)AUDIO_sif_agc_optimal_reg)=data)
#define  get_AUDIO_sif_agc_optimal_reg                                           (*((volatile unsigned int*)AUDIO_sif_agc_optimal_reg))
#define  AUDIO_sif_agc_optimal_non_opt_cnt_th_shift                              (16)
#define  AUDIO_sif_agc_optimal_non_opt_cnt_under_shift                           (8)
#define  AUDIO_sif_agc_optimal_non_opt_cnt_ovf_shift                             (0)
#define  AUDIO_sif_agc_optimal_non_opt_cnt_th_mask                               (0x00070000)
#define  AUDIO_sif_agc_optimal_non_opt_cnt_under_mask                            (0x0000FF00)
#define  AUDIO_sif_agc_optimal_non_opt_cnt_ovf_mask                              (0x000000FF)
#define  AUDIO_sif_agc_optimal_non_opt_cnt_th(data)                              (0x00070000&((data)<<16))
#define  AUDIO_sif_agc_optimal_non_opt_cnt_under(data)                           (0x0000FF00&((data)<<8))
#define  AUDIO_sif_agc_optimal_non_opt_cnt_ovf(data)                             (0x000000FF&(data))
#define  AUDIO_sif_agc_optimal_get_non_opt_cnt_th(data)                          ((0x00070000&(data))>>16)
#define  AUDIO_sif_agc_optimal_get_non_opt_cnt_under(data)                       ((0x0000FF00&(data))>>8)
#define  AUDIO_sif_agc_optimal_get_non_opt_cnt_ovf(data)                         (0x000000FF&(data))

#define  AUDIO_sif_agc_threshold                                                0x18006188
#define  AUDIO_sif_agc_threshold_reg_addr                                        "0xB8006188"
#define  AUDIO_sif_agc_threshold_reg                                             0xB8006188
#define  AUDIO_sif_agc_threshold_inst_addr                                       "0x0056"
#define  set_AUDIO_sif_agc_threshold_reg(data)                                   (*((volatile unsigned int*)AUDIO_sif_agc_threshold_reg)=data)
#define  get_AUDIO_sif_agc_threshold_reg                                         (*((volatile unsigned int*)AUDIO_sif_agc_threshold_reg))
#define  AUDIO_sif_agc_threshold_ovf_th_shift                                    (16)
#define  AUDIO_sif_agc_threshold_opt_th_shift                                    (0)
#define  AUDIO_sif_agc_threshold_ovf_th_mask                                     (0x03FF0000)
#define  AUDIO_sif_agc_threshold_opt_th_mask                                     (0x000003FF)
#define  AUDIO_sif_agc_threshold_ovf_th(data)                                    (0x03FF0000&((data)<<16))
#define  AUDIO_sif_agc_threshold_opt_th(data)                                    (0x000003FF&(data))
#define  AUDIO_sif_agc_threshold_get_ovf_th(data)                                ((0x03FF0000&(data))>>16)
#define  AUDIO_sif_agc_threshold_get_opt_th(data)                                (0x000003FF&(data))

#define  AUDIO_sif_agc_status                                                   0x1800618C
#define  AUDIO_sif_agc_status_reg_addr                                           "0xB800618C"
#define  AUDIO_sif_agc_status_reg                                                0xB800618C
#define  AUDIO_sif_agc_status_inst_addr                                          "0x0057"
#define  set_AUDIO_sif_agc_status_reg(data)                                      (*((volatile unsigned int*)AUDIO_sif_agc_status_reg)=data)
#define  get_AUDIO_sif_agc_status_reg                                            (*((volatile unsigned int*)AUDIO_sif_agc_status_reg))
#define  AUDIO_sif_agc_status_ovf_shift                                          (13)
#define  AUDIO_sif_agc_status_opt_shift                                          (12)
#define  AUDIO_sif_agc_status_abs_peak_shift                                     (0)
#define  AUDIO_sif_agc_status_ovf_mask                                           (0x00002000)
#define  AUDIO_sif_agc_status_opt_mask                                           (0x00001000)
#define  AUDIO_sif_agc_status_abs_peak_mask                                      (0x000003FF)
#define  AUDIO_sif_agc_status_ovf(data)                                          (0x00002000&((data)<<13))
#define  AUDIO_sif_agc_status_opt(data)                                          (0x00001000&((data)<<12))
#define  AUDIO_sif_agc_status_abs_peak(data)                                     (0x000003FF&(data))
#define  AUDIO_sif_agc_status_get_ovf(data)                                      ((0x00002000&(data))>>13)
#define  AUDIO_sif_agc_status_get_opt(data)                                      ((0x00001000&(data))>>12)
#define  AUDIO_sif_agc_status_get_abs_peak(data)                                 (0x000003FF&(data))

#define  AUDIO_sif_agc2_ctrl                                                    0x18006190
#define  AUDIO_sif_agc2_ctrl_reg_addr                                            "0xB8006190"
#define  AUDIO_sif_agc2_ctrl_reg                                                 0xB8006190
#define  AUDIO_sif_agc2_ctrl_inst_addr                                           "0x0058"
#define  set_AUDIO_sif_agc2_ctrl_reg(data)                                       (*((volatile unsigned int*)AUDIO_sif_agc2_ctrl_reg)=data)
#define  get_AUDIO_sif_agc2_ctrl_reg                                             (*((volatile unsigned int*)AUDIO_sif_agc2_ctrl_reg))
#define  AUDIO_sif_agc2_ctrl_agc2_debounce_cnt_shift                             (28)
#define  AUDIO_sif_agc2_ctrl_agc2_stepsize_shift                                 (26)
#define  AUDIO_sif_agc2_ctrl_agc2_gain_a_shift                                   (24)
#define  AUDIO_sif_agc2_ctrl_agc2_gain_b_shift                                   (16)
#define  AUDIO_sif_agc2_ctrl_agc2_obtime_shift                                   (0)
#define  AUDIO_sif_agc2_ctrl_agc2_debounce_cnt_mask                              (0x70000000)
#define  AUDIO_sif_agc2_ctrl_agc2_stepsize_mask                                  (0x0C000000)
#define  AUDIO_sif_agc2_ctrl_agc2_gain_a_mask                                    (0x03000000)
#define  AUDIO_sif_agc2_ctrl_agc2_gain_b_mask                                    (0x003F0000)
#define  AUDIO_sif_agc2_ctrl_agc2_obtime_mask                                    (0x0000FFFF)
#define  AUDIO_sif_agc2_ctrl_agc2_debounce_cnt(data)                             (0x70000000&((data)<<28))
#define  AUDIO_sif_agc2_ctrl_agc2_stepsize(data)                                 (0x0C000000&((data)<<26))
#define  AUDIO_sif_agc2_ctrl_agc2_gain_a(data)                                   (0x03000000&((data)<<24))
#define  AUDIO_sif_agc2_ctrl_agc2_gain_b(data)                                   (0x003F0000&((data)<<16))
#define  AUDIO_sif_agc2_ctrl_agc2_obtime(data)                                   (0x0000FFFF&(data))
#define  AUDIO_sif_agc2_ctrl_get_agc2_debounce_cnt(data)                         ((0x70000000&(data))>>28)
#define  AUDIO_sif_agc2_ctrl_get_agc2_stepsize(data)                             ((0x0C000000&(data))>>26)
#define  AUDIO_sif_agc2_ctrl_get_agc2_gain_a(data)                               ((0x03000000&(data))>>24)
#define  AUDIO_sif_agc2_ctrl_get_agc2_gain_b(data)                               ((0x003F0000&(data))>>16)
#define  AUDIO_sif_agc2_ctrl_get_agc2_obtime(data)                               (0x0000FFFF&(data))

#define  AUDIO_sif_agc2_status                                                  0x18006194
#define  AUDIO_sif_agc2_status_reg_addr                                          "0xB8006194"
#define  AUDIO_sif_agc2_status_reg                                               0xB8006194
#define  AUDIO_sif_agc2_status_inst_addr                                         "0x0059"
#define  set_AUDIO_sif_agc2_status_reg(data)                                     (*((volatile unsigned int*)AUDIO_sif_agc2_status_reg)=data)
#define  get_AUDIO_sif_agc2_status_reg                                           (*((volatile unsigned int*)AUDIO_sif_agc2_status_reg))
#define  AUDIO_sif_agc2_status_agc2_en_shift                                     (31)
#define  AUDIO_sif_agc2_status_agc2_overflow_shift                               (29)
#define  AUDIO_sif_agc2_status_agc2_underflow_shift                              (28)
#define  AUDIO_sif_agc2_status_agc2_sif_mag_shift                                (0)
#define  AUDIO_sif_agc2_status_agc2_en_mask                                      (0x80000000)
#define  AUDIO_sif_agc2_status_agc2_overflow_mask                                (0x20000000)
#define  AUDIO_sif_agc2_status_agc2_underflow_mask                               (0x10000000)
#define  AUDIO_sif_agc2_status_agc2_sif_mag_mask                                 (0x000003FF)
#define  AUDIO_sif_agc2_status_agc2_en(data)                                     (0x80000000&((data)<<31))
#define  AUDIO_sif_agc2_status_agc2_overflow(data)                               (0x20000000&((data)<<29))
#define  AUDIO_sif_agc2_status_agc2_underflow(data)                              (0x10000000&((data)<<28))
#define  AUDIO_sif_agc2_status_agc2_sif_mag(data)                                (0x000003FF&(data))
#define  AUDIO_sif_agc2_status_get_agc2_en(data)                                 ((0x80000000&(data))>>31)
#define  AUDIO_sif_agc2_status_get_agc2_overflow(data)                           ((0x20000000&(data))>>29)
#define  AUDIO_sif_agc2_status_get_agc2_underflow(data)                          ((0x10000000&(data))>>28)
#define  AUDIO_sif_agc2_status_get_agc2_sif_mag(data)                            (0x000003FF&(data))

#define  AUDIO_sif_agc3_ctrl                                                    0x18006198
#define  AUDIO_sif_agc3_ctrl_reg_addr                                            "0xB8006198"
#define  AUDIO_sif_agc3_ctrl_reg                                                 0xB8006198
#define  AUDIO_sif_agc3_ctrl_inst_addr                                           "0x005A"
#define  set_AUDIO_sif_agc3_ctrl_reg(data)                                       (*((volatile unsigned int*)AUDIO_sif_agc3_ctrl_reg)=data)
#define  get_AUDIO_sif_agc3_ctrl_reg                                             (*((volatile unsigned int*)AUDIO_sif_agc3_ctrl_reg))
#define  AUDIO_sif_agc3_ctrl_sif_sel_shift                                       (29)
#define  AUDIO_sif_agc3_ctrl_aagc_en_shift                                       (28)
#define  AUDIO_sif_agc3_ctrl_audio_gain_manual_shift                             (16)
#define  AUDIO_sif_agc3_ctrl_output_bpf_input_div2_shift                         (12)
#define  AUDIO_sif_agc3_ctrl_audio_bp_sel_shift                                  (4)
#define  AUDIO_sif_agc3_ctrl_audio_upsample_lp_sel_shift                         (0)
#define  AUDIO_sif_agc3_ctrl_sif_sel_mask                                        (0x20000000)
#define  AUDIO_sif_agc3_ctrl_aagc_en_mask                                        (0x10000000)
#define  AUDIO_sif_agc3_ctrl_audio_gain_manual_mask                              (0x01FF0000)
#define  AUDIO_sif_agc3_ctrl_output_bpf_input_div2_mask                          (0x00003000)
#define  AUDIO_sif_agc3_ctrl_audio_bp_sel_mask                                   (0x00000FF0)
#define  AUDIO_sif_agc3_ctrl_audio_upsample_lp_sel_mask                          (0x00000003)
#define  AUDIO_sif_agc3_ctrl_sif_sel(data)                                       (0x20000000&((data)<<29))
#define  AUDIO_sif_agc3_ctrl_aagc_en(data)                                       (0x10000000&((data)<<28))
#define  AUDIO_sif_agc3_ctrl_audio_gain_manual(data)                             (0x01FF0000&((data)<<16))
#define  AUDIO_sif_agc3_ctrl_output_bpf_input_div2(data)                         (0x00003000&((data)<<12))
#define  AUDIO_sif_agc3_ctrl_audio_bp_sel(data)                                  (0x00000FF0&((data)<<4))
#define  AUDIO_sif_agc3_ctrl_audio_upsample_lp_sel(data)                         (0x00000003&(data))
#define  AUDIO_sif_agc3_ctrl_get_sif_sel(data)                                   ((0x20000000&(data))>>29)
#define  AUDIO_sif_agc3_ctrl_get_aagc_en(data)                                   ((0x10000000&(data))>>28)
#define  AUDIO_sif_agc3_ctrl_get_audio_gain_manual(data)                         ((0x01FF0000&(data))>>16)
#define  AUDIO_sif_agc3_ctrl_get_output_bpf_input_div2(data)                     ((0x00003000&(data))>>12)
#define  AUDIO_sif_agc3_ctrl_get_audio_bp_sel(data)                              ((0x00000FF0&(data))>>4)
#define  AUDIO_sif_agc3_ctrl_get_audio_upsample_lp_sel(data)                     (0x00000003&(data))

#define  AUDIO_sif_agc3_ctrl_2                                                  0x1800619C
#define  AUDIO_sif_agc3_ctrl_2_reg_addr                                          "0xB800619C"
#define  AUDIO_sif_agc3_ctrl_2_reg                                               0xB800619C
#define  AUDIO_sif_agc3_ctrl_2_inst_addr                                         "0x005B"
#define  set_AUDIO_sif_agc3_ctrl_2_reg(data)                                     (*((volatile unsigned int*)AUDIO_sif_agc3_ctrl_2_reg)=data)
#define  get_AUDIO_sif_agc3_ctrl_2_reg                                           (*((volatile unsigned int*)AUDIO_sif_agc3_ctrl_2_reg))
#define  AUDIO_sif_agc3_ctrl_2_soft_reset_shift                                  (28)
#define  AUDIO_sif_agc3_ctrl_2_audiodn_fifo_clr_shift                            (24)
#define  AUDIO_sif_agc3_ctrl_2_audiodn_fifo_full_shift                           (21)
#define  AUDIO_sif_agc3_ctrl_2_audiodn_fifo_empty_shift                          (20)
#define  AUDIO_sif_agc3_ctrl_2_audiodbg_fifo_clr_shift                           (16)
#define  AUDIO_sif_agc3_ctrl_2_audiodbg_fifo_full_shift                          (15)
#define  AUDIO_sif_agc3_ctrl_2_audiodbg_fifo_empty_shift                         (14)
#define  AUDIO_sif_agc3_ctrl_2_debug_mode2_shift                                 (12)
#define  AUDIO_sif_agc3_ctrl_2_soft_reset_mask                                   (0x10000000)
#define  AUDIO_sif_agc3_ctrl_2_audiodn_fifo_clr_mask                             (0x01000000)
#define  AUDIO_sif_agc3_ctrl_2_audiodn_fifo_full_mask                            (0x00200000)
#define  AUDIO_sif_agc3_ctrl_2_audiodn_fifo_empty_mask                           (0x00100000)
#define  AUDIO_sif_agc3_ctrl_2_audiodbg_fifo_clr_mask                            (0x00010000)
#define  AUDIO_sif_agc3_ctrl_2_audiodbg_fifo_full_mask                           (0x00008000)
#define  AUDIO_sif_agc3_ctrl_2_audiodbg_fifo_empty_mask                          (0x00004000)
#define  AUDIO_sif_agc3_ctrl_2_debug_mode2_mask                                  (0x00003000)
#define  AUDIO_sif_agc3_ctrl_2_soft_reset(data)                                  (0x10000000&((data)<<28))
#define  AUDIO_sif_agc3_ctrl_2_audiodn_fifo_clr(data)                            (0x01000000&((data)<<24))
#define  AUDIO_sif_agc3_ctrl_2_audiodn_fifo_full(data)                           (0x00200000&((data)<<21))
#define  AUDIO_sif_agc3_ctrl_2_audiodn_fifo_empty(data)                          (0x00100000&((data)<<20))
#define  AUDIO_sif_agc3_ctrl_2_audiodbg_fifo_clr(data)                           (0x00010000&((data)<<16))
#define  AUDIO_sif_agc3_ctrl_2_audiodbg_fifo_full(data)                          (0x00008000&((data)<<15))
#define  AUDIO_sif_agc3_ctrl_2_audiodbg_fifo_empty(data)                         (0x00004000&((data)<<14))
#define  AUDIO_sif_agc3_ctrl_2_debug_mode2(data)                                 (0x00003000&((data)<<12))
#define  AUDIO_sif_agc3_ctrl_2_get_soft_reset(data)                              ((0x10000000&(data))>>28)
#define  AUDIO_sif_agc3_ctrl_2_get_audiodn_fifo_clr(data)                        ((0x01000000&(data))>>24)
#define  AUDIO_sif_agc3_ctrl_2_get_audiodn_fifo_full(data)                       ((0x00200000&(data))>>21)
#define  AUDIO_sif_agc3_ctrl_2_get_audiodn_fifo_empty(data)                      ((0x00100000&(data))>>20)
#define  AUDIO_sif_agc3_ctrl_2_get_audiodbg_fifo_clr(data)                       ((0x00010000&(data))>>16)
#define  AUDIO_sif_agc3_ctrl_2_get_audiodbg_fifo_full(data)                      ((0x00008000&(data))>>15)
#define  AUDIO_sif_agc3_ctrl_2_get_audiodbg_fifo_empty(data)                     ((0x00004000&(data))>>14)
#define  AUDIO_sif_agc3_ctrl_2_get_debug_mode2(data)                             ((0x00003000&(data))>>12)

#define  AUDIO_peak_contorl                                                     0x180061A0
#define  AUDIO_peak_contorl_reg_addr                                             "0xB80061A0"
#define  AUDIO_peak_contorl_reg                                                  0xB80061A0
#define  AUDIO_peak_contorl_inst_addr                                            "0x005C"
#define  set_AUDIO_peak_contorl_reg(data)                                        (*((volatile unsigned int*)AUDIO_peak_contorl_reg)=data)
#define  get_AUDIO_peak_contorl_reg                                              (*((volatile unsigned int*)AUDIO_peak_contorl_reg))
#define  AUDIO_peak_contorl_pdetect_enable_shift                                 (4)
#define  AUDIO_peak_contorl_detect_source_sel_shift                              (0)
#define  AUDIO_peak_contorl_pdetect_enable_mask                                  (0x00000010)
#define  AUDIO_peak_contorl_detect_source_sel_mask                               (0x0000000F)
#define  AUDIO_peak_contorl_pdetect_enable(data)                                 (0x00000010&((data)<<4))
#define  AUDIO_peak_contorl_detect_source_sel(data)                              (0x0000000F&(data))
#define  AUDIO_peak_contorl_get_pdetect_enable(data)                             ((0x00000010&(data))>>4)
#define  AUDIO_peak_contorl_get_detect_source_sel(data)                          (0x0000000F&(data))

#define  AUDIO_peak_contorl_l_0                                                 0x180061B0
#define  AUDIO_peak_contorl_l_0_reg_addr                                         "0xB80061B0"
#define  AUDIO_peak_contorl_l_0_reg                                              0xB80061B0
#define  AUDIO_peak_contorl_l_0_inst_addr                                        "0x005D"
#define  set_AUDIO_peak_contorl_l_0_reg(data)                                    (*((volatile unsigned int*)AUDIO_peak_contorl_l_0_reg)=data)
#define  get_AUDIO_peak_contorl_l_0_reg                                          (*((volatile unsigned int*)AUDIO_peak_contorl_l_0_reg))
#define  AUDIO_peak_contorl_l_0_opt_th_l_shift                                   (16)
#define  AUDIO_peak_contorl_l_0_ovf_th_l_shift                                   (0)
#define  AUDIO_peak_contorl_l_0_opt_th_l_mask                                    (0xFFFF0000)
#define  AUDIO_peak_contorl_l_0_ovf_th_l_mask                                    (0x0000FFFF)
#define  AUDIO_peak_contorl_l_0_opt_th_l(data)                                   (0xFFFF0000&((data)<<16))
#define  AUDIO_peak_contorl_l_0_ovf_th_l(data)                                   (0x0000FFFF&(data))
#define  AUDIO_peak_contorl_l_0_get_opt_th_l(data)                               ((0xFFFF0000&(data))>>16)
#define  AUDIO_peak_contorl_l_0_get_ovf_th_l(data)                               (0x0000FFFF&(data))

#define  AUDIO_peak_control_l_1                                                 0x180061B4
#define  AUDIO_peak_control_l_1_reg_addr                                         "0xB80061B4"
#define  AUDIO_peak_control_l_1_reg                                              0xB80061B4
#define  AUDIO_peak_control_l_1_inst_addr                                        "0x005E"
#define  set_AUDIO_peak_control_l_1_reg(data)                                    (*((volatile unsigned int*)AUDIO_peak_control_l_1_reg)=data)
#define  get_AUDIO_peak_control_l_1_reg                                          (*((volatile unsigned int*)AUDIO_peak_control_l_1_reg))
#define  AUDIO_peak_control_l_1_dummy_31_19_shift                                (19)
#define  AUDIO_peak_control_l_1_nonopt_cnt_tr_l_shift                            (16)
#define  AUDIO_peak_control_l_1_vpp_eval_cnt_l_shift                             (0)
#define  AUDIO_peak_control_l_1_dummy_31_19_mask                                 (0xFFF80000)
#define  AUDIO_peak_control_l_1_nonopt_cnt_tr_l_mask                             (0x00070000)
#define  AUDIO_peak_control_l_1_vpp_eval_cnt_l_mask                              (0x00003FFF)
#define  AUDIO_peak_control_l_1_dummy_31_19(data)                                (0xFFF80000&((data)<<19))
#define  AUDIO_peak_control_l_1_nonopt_cnt_tr_l(data)                            (0x00070000&((data)<<16))
#define  AUDIO_peak_control_l_1_vpp_eval_cnt_l(data)                             (0x00003FFF&(data))
#define  AUDIO_peak_control_l_1_get_dummy_31_19(data)                            ((0xFFF80000&(data))>>19)
#define  AUDIO_peak_control_l_1_get_nonopt_cnt_tr_l(data)                        ((0x00070000&(data))>>16)
#define  AUDIO_peak_control_l_1_get_vpp_eval_cnt_l(data)                         (0x00003FFF&(data))

#define  AUDIO_peak_status_l                                                    0x180061B8
#define  AUDIO_peak_status_l_reg_addr                                            "0xB80061B8"
#define  AUDIO_peak_status_l_reg                                                 0xB80061B8
#define  AUDIO_peak_status_l_inst_addr                                           "0x005F"
#define  set_AUDIO_peak_status_l_reg(data)                                       (*((volatile unsigned int*)AUDIO_peak_status_l_reg)=data)
#define  get_AUDIO_peak_status_l_reg                                             (*((volatile unsigned int*)AUDIO_peak_status_l_reg))
#define  AUDIO_peak_status_l_optimize_l_irq_en_shift                             (31)
#define  AUDIO_peak_status_l_overflow_l_irq_en_shift                             (30)
#define  AUDIO_peak_status_l_optimize_l_shift                                    (23)
#define  AUDIO_peak_status_l_overflow_l_shift                                    (22)
#define  AUDIO_peak_status_l_pk_adj_l_shift                                      (16)
#define  AUDIO_peak_status_l_magnitude_l_shift                                   (0)
#define  AUDIO_peak_status_l_optimize_l_irq_en_mask                              (0x80000000)
#define  AUDIO_peak_status_l_overflow_l_irq_en_mask                              (0x40000000)
#define  AUDIO_peak_status_l_optimize_l_mask                                     (0x00800000)
#define  AUDIO_peak_status_l_overflow_l_mask                                     (0x00400000)
#define  AUDIO_peak_status_l_pk_adj_l_mask                                       (0x003F0000)
#define  AUDIO_peak_status_l_magnitude_l_mask                                    (0x0000FFFF)
#define  AUDIO_peak_status_l_optimize_l_irq_en(data)                             (0x80000000&((data)<<31))
#define  AUDIO_peak_status_l_overflow_l_irq_en(data)                             (0x40000000&((data)<<30))
#define  AUDIO_peak_status_l_optimize_l(data)                                    (0x00800000&((data)<<23))
#define  AUDIO_peak_status_l_overflow_l(data)                                    (0x00400000&((data)<<22))
#define  AUDIO_peak_status_l_pk_adj_l(data)                                      (0x003F0000&((data)<<16))
#define  AUDIO_peak_status_l_magnitude_l(data)                                   (0x0000FFFF&(data))
#define  AUDIO_peak_status_l_get_optimize_l_irq_en(data)                         ((0x80000000&(data))>>31)
#define  AUDIO_peak_status_l_get_overflow_l_irq_en(data)                         ((0x40000000&(data))>>30)
#define  AUDIO_peak_status_l_get_optimize_l(data)                                ((0x00800000&(data))>>23)
#define  AUDIO_peak_status_l_get_overflow_l(data)                                ((0x00400000&(data))>>22)
#define  AUDIO_peak_status_l_get_pk_adj_l(data)                                  ((0x003F0000&(data))>>16)
#define  AUDIO_peak_status_l_get_magnitude_l(data)                               (0x0000FFFF&(data))

#define  AUDIO_peak_status_l_2                                                  0x180061BC
#define  AUDIO_peak_status_l_2_reg_addr                                          "0xB80061BC"
#define  AUDIO_peak_status_l_2_reg                                               0xB80061BC
#define  AUDIO_peak_status_l_2_inst_addr                                         "0x0060"
#define  set_AUDIO_peak_status_l_2_reg(data)                                     (*((volatile unsigned int*)AUDIO_peak_status_l_2_reg)=data)
#define  get_AUDIO_peak_status_l_2_reg                                           (*((volatile unsigned int*)AUDIO_peak_status_l_2_reg))
#define  AUDIO_peak_status_l_2_toggle_cnt_shift                                  (24)
#define  AUDIO_peak_status_l_2_pcm_l_monitor_shift                               (0)
#define  AUDIO_peak_status_l_2_toggle_cnt_mask                                   (0xFF000000)
#define  AUDIO_peak_status_l_2_pcm_l_monitor_mask                                (0x00FFFFFF)
#define  AUDIO_peak_status_l_2_toggle_cnt(data)                                  (0xFF000000&((data)<<24))
#define  AUDIO_peak_status_l_2_pcm_l_monitor(data)                               (0x00FFFFFF&(data))
#define  AUDIO_peak_status_l_2_get_toggle_cnt(data)                              ((0xFF000000&(data))>>24)
#define  AUDIO_peak_status_l_2_get_pcm_l_monitor(data)                           (0x00FFFFFF&(data))

#define  AUDIO_peak_contorl_r_0                                                 0x180061C0
#define  AUDIO_peak_contorl_r_0_reg_addr                                         "0xB80061C0"
#define  AUDIO_peak_contorl_r_0_reg                                              0xB80061C0
#define  AUDIO_peak_contorl_r_0_inst_addr                                        "0x0061"
#define  set_AUDIO_peak_contorl_r_0_reg(data)                                    (*((volatile unsigned int*)AUDIO_peak_contorl_r_0_reg)=data)
#define  get_AUDIO_peak_contorl_r_0_reg                                          (*((volatile unsigned int*)AUDIO_peak_contorl_r_0_reg))
#define  AUDIO_peak_contorl_r_0_opt_th_r_shift                                   (16)
#define  AUDIO_peak_contorl_r_0_ovf_th_r_shift                                   (0)
#define  AUDIO_peak_contorl_r_0_opt_th_r_mask                                    (0xFFFF0000)
#define  AUDIO_peak_contorl_r_0_ovf_th_r_mask                                    (0x0000FFFF)
#define  AUDIO_peak_contorl_r_0_opt_th_r(data)                                   (0xFFFF0000&((data)<<16))
#define  AUDIO_peak_contorl_r_0_ovf_th_r(data)                                   (0x0000FFFF&(data))
#define  AUDIO_peak_contorl_r_0_get_opt_th_r(data)                               ((0xFFFF0000&(data))>>16)
#define  AUDIO_peak_contorl_r_0_get_ovf_th_r(data)                               (0x0000FFFF&(data))

#define  AUDIO_peak_contorl_r_1                                                 0x180061C4
#define  AUDIO_peak_contorl_r_1_reg_addr                                         "0xB80061C4"
#define  AUDIO_peak_contorl_r_1_reg                                              0xB80061C4
#define  AUDIO_peak_contorl_r_1_inst_addr                                        "0x0062"
#define  set_AUDIO_peak_contorl_r_1_reg(data)                                    (*((volatile unsigned int*)AUDIO_peak_contorl_r_1_reg)=data)
#define  get_AUDIO_peak_contorl_r_1_reg                                          (*((volatile unsigned int*)AUDIO_peak_contorl_r_1_reg))
#define  AUDIO_peak_contorl_r_1_dummy_31_19_shift                                (19)
#define  AUDIO_peak_contorl_r_1_nonopt_cnt_tr_r_shift                            (16)
#define  AUDIO_peak_contorl_r_1_vpp_eval_cnt_r_shift                             (0)
#define  AUDIO_peak_contorl_r_1_dummy_31_19_mask                                 (0xFFF80000)
#define  AUDIO_peak_contorl_r_1_nonopt_cnt_tr_r_mask                             (0x00070000)
#define  AUDIO_peak_contorl_r_1_vpp_eval_cnt_r_mask                              (0x00003FFF)
#define  AUDIO_peak_contorl_r_1_dummy_31_19(data)                                (0xFFF80000&((data)<<19))
#define  AUDIO_peak_contorl_r_1_nonopt_cnt_tr_r(data)                            (0x00070000&((data)<<16))
#define  AUDIO_peak_contorl_r_1_vpp_eval_cnt_r(data)                             (0x00003FFF&(data))
#define  AUDIO_peak_contorl_r_1_get_dummy_31_19(data)                            ((0xFFF80000&(data))>>19)
#define  AUDIO_peak_contorl_r_1_get_nonopt_cnt_tr_r(data)                        ((0x00070000&(data))>>16)
#define  AUDIO_peak_contorl_r_1_get_vpp_eval_cnt_r(data)                         (0x00003FFF&(data))

#define  AUDIO_peak_status_r                                                    0x180061C8
#define  AUDIO_peak_status_r_reg_addr                                            "0xB80061C8"
#define  AUDIO_peak_status_r_reg                                                 0xB80061C8
#define  AUDIO_peak_status_r_inst_addr                                           "0x0063"
#define  set_AUDIO_peak_status_r_reg(data)                                       (*((volatile unsigned int*)AUDIO_peak_status_r_reg)=data)
#define  get_AUDIO_peak_status_r_reg                                             (*((volatile unsigned int*)AUDIO_peak_status_r_reg))
#define  AUDIO_peak_status_r_optimize_r_irq_en_shift                             (31)
#define  AUDIO_peak_status_r_overflow_r_irq_en_shift                             (30)
#define  AUDIO_peak_status_r_optimize_r_shift                                    (23)
#define  AUDIO_peak_status_r_overflow_r_shift                                    (22)
#define  AUDIO_peak_status_r_pk_adj_r_shift                                      (16)
#define  AUDIO_peak_status_r_magnitude_r_shift                                   (0)
#define  AUDIO_peak_status_r_optimize_r_irq_en_mask                              (0x80000000)
#define  AUDIO_peak_status_r_overflow_r_irq_en_mask                              (0x40000000)
#define  AUDIO_peak_status_r_optimize_r_mask                                     (0x00800000)
#define  AUDIO_peak_status_r_overflow_r_mask                                     (0x00400000)
#define  AUDIO_peak_status_r_pk_adj_r_mask                                       (0x003F0000)
#define  AUDIO_peak_status_r_magnitude_r_mask                                    (0x0000FFFF)
#define  AUDIO_peak_status_r_optimize_r_irq_en(data)                             (0x80000000&((data)<<31))
#define  AUDIO_peak_status_r_overflow_r_irq_en(data)                             (0x40000000&((data)<<30))
#define  AUDIO_peak_status_r_optimize_r(data)                                    (0x00800000&((data)<<23))
#define  AUDIO_peak_status_r_overflow_r(data)                                    (0x00400000&((data)<<22))
#define  AUDIO_peak_status_r_pk_adj_r(data)                                      (0x003F0000&((data)<<16))
#define  AUDIO_peak_status_r_magnitude_r(data)                                   (0x0000FFFF&(data))
#define  AUDIO_peak_status_r_get_optimize_r_irq_en(data)                         ((0x80000000&(data))>>31)
#define  AUDIO_peak_status_r_get_overflow_r_irq_en(data)                         ((0x40000000&(data))>>30)
#define  AUDIO_peak_status_r_get_optimize_r(data)                                ((0x00800000&(data))>>23)
#define  AUDIO_peak_status_r_get_overflow_r(data)                                ((0x00400000&(data))>>22)
#define  AUDIO_peak_status_r_get_pk_adj_r(data)                                  ((0x003F0000&(data))>>16)
#define  AUDIO_peak_status_r_get_magnitude_r(data)                               (0x0000FFFF&(data))

#define  AUDIO_peak_status_r_2                                                  0x180061CC
#define  AUDIO_peak_status_r_2_reg_addr                                          "0xB80061CC"
#define  AUDIO_peak_status_r_2_reg                                               0xB80061CC
#define  AUDIO_peak_status_r_2_inst_addr                                         "0x0064"
#define  set_AUDIO_peak_status_r_2_reg(data)                                     (*((volatile unsigned int*)AUDIO_peak_status_r_2_reg)=data)
#define  get_AUDIO_peak_status_r_2_reg                                           (*((volatile unsigned int*)AUDIO_peak_status_r_2_reg))
#define  AUDIO_peak_status_r_2_pcm_r_monitor_shift                               (0)
#define  AUDIO_peak_status_r_2_pcm_r_monitor_mask                                (0x00FFFFFF)
#define  AUDIO_peak_status_r_2_pcm_r_monitor(data)                               (0x00FFFFFF&(data))
#define  AUDIO_peak_status_r_2_get_pcm_r_monitor(data)                           (0x00FFFFFF&(data))

#define  AUDIO_msd_crtl_word                                                    0x18006200
#define  AUDIO_msd_crtl_word_reg_addr                                            "0xB8006200"
#define  AUDIO_msd_crtl_word_reg                                                 0xB8006200
#define  AUDIO_msd_crtl_word_inst_addr                                           "0x0065"
#define  set_AUDIO_msd_crtl_word_reg(data)                                       (*((volatile unsigned int*)AUDIO_msd_crtl_word_reg)=data)
#define  get_AUDIO_msd_crtl_word_reg                                             (*((volatile unsigned int*)AUDIO_msd_crtl_word_reg))
#define  AUDIO_msd_crtl_word_msd_en_shift                                        (29)
#define  AUDIO_msd_crtl_word_update_en_shift                                     (28)
#define  AUDIO_msd_crtl_word_carrier_shift_scan_en_shift                         (27)
#define  AUDIO_msd_crtl_word_carrier_phase_delta_shift                           (24)
#define  AUDIO_msd_crtl_word_msd_reset_n_shift                                   (23)
#define  AUDIO_msd_crtl_word_msd_debounce_cnt_shift                              (20)
#define  AUDIO_msd_crtl_word_reg_scan_cnt_shift                                  (12)
#define  AUDIO_msd_crtl_word_mn_priority_shift                                   (9)
#define  AUDIO_msd_crtl_word_dkl_priority_shift                                  (8)
#define  AUDIO_msd_crtl_word_calc_time_sel_shift                                 (6)
#define  AUDIO_msd_crtl_word_sound_select_shift                                  (4)
#define  AUDIO_msd_crtl_word_fw_scan_freq_shift                                  (0)
#define  AUDIO_msd_crtl_word_msd_en_mask                                         (0x20000000)
#define  AUDIO_msd_crtl_word_update_en_mask                                      (0x10000000)
#define  AUDIO_msd_crtl_word_carrier_shift_scan_en_mask                          (0x08000000)
#define  AUDIO_msd_crtl_word_carrier_phase_delta_mask                            (0x07000000)
#define  AUDIO_msd_crtl_word_msd_reset_n_mask                                    (0x00800000)
#define  AUDIO_msd_crtl_word_msd_debounce_cnt_mask                               (0x00700000)
#define  AUDIO_msd_crtl_word_reg_scan_cnt_mask                                   (0x000FF000)
#define  AUDIO_msd_crtl_word_mn_priority_mask                                    (0x00000600)
#define  AUDIO_msd_crtl_word_dkl_priority_mask                                   (0x00000100)
#define  AUDIO_msd_crtl_word_calc_time_sel_mask                                  (0x00000040)
#define  AUDIO_msd_crtl_word_sound_select_mask                                   (0x00000030)
#define  AUDIO_msd_crtl_word_fw_scan_freq_mask                                   (0x00000007)
#define  AUDIO_msd_crtl_word_msd_en(data)                                        (0x20000000&((data)<<29))
#define  AUDIO_msd_crtl_word_update_en(data)                                     (0x10000000&((data)<<28))
#define  AUDIO_msd_crtl_word_carrier_shift_scan_en(data)                         (0x08000000&((data)<<27))
#define  AUDIO_msd_crtl_word_carrier_phase_delta(data)                           (0x07000000&((data)<<24))
#define  AUDIO_msd_crtl_word_msd_reset_n(data)                                   (0x00800000&((data)<<23))
#define  AUDIO_msd_crtl_word_msd_debounce_cnt(data)                              (0x00700000&((data)<<20))
#define  AUDIO_msd_crtl_word_reg_scan_cnt(data)                                  (0x000FF000&((data)<<12))
#define  AUDIO_msd_crtl_word_mn_priority(data)                                   (0x00000600&((data)<<9))
#define  AUDIO_msd_crtl_word_dkl_priority(data)                                  (0x00000100&((data)<<8))
#define  AUDIO_msd_crtl_word_calc_time_sel(data)                                 (0x00000040&((data)<<6))
#define  AUDIO_msd_crtl_word_sound_select(data)                                  (0x00000030&((data)<<4))
#define  AUDIO_msd_crtl_word_fw_scan_freq(data)                                  (0x00000007&(data))
#define  AUDIO_msd_crtl_word_get_msd_en(data)                                    ((0x20000000&(data))>>29)
#define  AUDIO_msd_crtl_word_get_update_en(data)                                 ((0x10000000&(data))>>28)
#define  AUDIO_msd_crtl_word_get_carrier_shift_scan_en(data)                     ((0x08000000&(data))>>27)
#define  AUDIO_msd_crtl_word_get_carrier_phase_delta(data)                       ((0x07000000&(data))>>24)
#define  AUDIO_msd_crtl_word_get_msd_reset_n(data)                               ((0x00800000&(data))>>23)
#define  AUDIO_msd_crtl_word_get_msd_debounce_cnt(data)                          ((0x00700000&(data))>>20)
#define  AUDIO_msd_crtl_word_get_reg_scan_cnt(data)                              ((0x000FF000&(data))>>12)
#define  AUDIO_msd_crtl_word_get_mn_priority(data)                               ((0x00000600&(data))>>9)
#define  AUDIO_msd_crtl_word_get_dkl_priority(data)                              ((0x00000100&(data))>>8)
#define  AUDIO_msd_crtl_word_get_calc_time_sel(data)                             ((0x00000040&(data))>>6)
#define  AUDIO_msd_crtl_word_get_sound_select(data)                              ((0x00000030&(data))>>4)
#define  AUDIO_msd_crtl_word_get_fw_scan_freq(data)                              (0x00000007&(data))

#define  AUDIO_msd_result                                                       0x18006204
#define  AUDIO_msd_result_reg_addr                                               "0xB8006204"
#define  AUDIO_msd_result_reg                                                    0xB8006204
#define  AUDIO_msd_result_inst_addr                                              "0x0066"
#define  set_AUDIO_msd_result_reg(data)                                          (*((volatile unsigned int*)AUDIO_msd_result_reg)=data)
#define  get_AUDIO_msd_result_reg                                                (*((volatile unsigned int*)AUDIO_msd_result_reg))
#define  AUDIO_msd_result_deviation_unnormal_shift                               (24)
#define  AUDIO_msd_result_case_subtomain_shift                                   (20)
#define  AUDIO_msd_result_flag_unnormal_shift                                    (18)
#define  AUDIO_msd_result_flag_subtomain_shift                                   (17)
#define  AUDIO_msd_result_h_dv_th_sel_shift                                      (16)
#define  AUDIO_msd_result_hw_detected_std_shift                                  (8)
#define  AUDIO_msd_result_reg_std_shift                                          (0)
#define  AUDIO_msd_result_deviation_unnormal_mask                                (0x03000000)
#define  AUDIO_msd_result_case_subtomain_mask                                    (0x00F00000)
#define  AUDIO_msd_result_flag_unnormal_mask                                     (0x00040000)
#define  AUDIO_msd_result_flag_subtomain_mask                                    (0x00020000)
#define  AUDIO_msd_result_h_dv_th_sel_mask                                       (0x00010000)
#define  AUDIO_msd_result_hw_detected_std_mask                                   (0x00001F00)
#define  AUDIO_msd_result_reg_std_mask                                           (0x0000001F)
#define  AUDIO_msd_result_deviation_unnormal(data)                               (0x03000000&((data)<<24))
#define  AUDIO_msd_result_case_subtomain(data)                                   (0x00F00000&((data)<<20))
#define  AUDIO_msd_result_flag_unnormal(data)                                    (0x00040000&((data)<<18))
#define  AUDIO_msd_result_flag_subtomain(data)                                   (0x00020000&((data)<<17))
#define  AUDIO_msd_result_h_dv_th_sel(data)                                      (0x00010000&((data)<<16))
#define  AUDIO_msd_result_hw_detected_std(data)                                  (0x00001F00&((data)<<8))
#define  AUDIO_msd_result_reg_std(data)                                          (0x0000001F&(data))
#define  AUDIO_msd_result_get_deviation_unnormal(data)                           ((0x03000000&(data))>>24)
#define  AUDIO_msd_result_get_case_subtomain(data)                               ((0x00F00000&(data))>>20)
#define  AUDIO_msd_result_get_flag_unnormal(data)                                ((0x00040000&(data))>>18)
#define  AUDIO_msd_result_get_flag_subtomain(data)                               ((0x00020000&(data))>>17)
#define  AUDIO_msd_result_get_h_dv_th_sel(data)                                  ((0x00010000&(data))>>16)
#define  AUDIO_msd_result_get_hw_detected_std(data)                              ((0x00001F00&(data))>>8)
#define  AUDIO_msd_result_get_reg_std(data)                                      (0x0000001F&(data))

#define  AUDIO_msd_status                                                       0x18006208
#define  AUDIO_msd_status_reg_addr                                               "0xB8006208"
#define  AUDIO_msd_status_reg                                                    0xB8006208
#define  AUDIO_msd_status_inst_addr                                              "0x0067"
#define  set_AUDIO_msd_status_reg(data)                                          (*((volatile unsigned int*)AUDIO_msd_status_reg)=data)
#define  get_AUDIO_msd_status_reg                                                (*((volatile unsigned int*)AUDIO_msd_status_reg))
#define  AUDIO_msd_status_bw_cnt_max_shift                                       (24)
#define  AUDIO_msd_status_bw_cnt_min_shift                                       (16)
#define  AUDIO_msd_status_shift_value_shift                                      (8)
#define  AUDIO_msd_status_main_cari_idx_shift                                    (4)
#define  AUDIO_msd_status_deviation_shift                                        (0)
#define  AUDIO_msd_status_bw_cnt_max_mask                                        (0x1F000000)
#define  AUDIO_msd_status_bw_cnt_min_mask                                        (0x001F0000)
#define  AUDIO_msd_status_shift_value_mask                                       (0x00000F00)
#define  AUDIO_msd_status_main_cari_idx_mask                                     (0x00000070)
#define  AUDIO_msd_status_deviation_mask                                         (0x0000000F)
#define  AUDIO_msd_status_bw_cnt_max(data)                                       (0x1F000000&((data)<<24))
#define  AUDIO_msd_status_bw_cnt_min(data)                                       (0x001F0000&((data)<<16))
#define  AUDIO_msd_status_shift_value(data)                                      (0x00000F00&((data)<<8))
#define  AUDIO_msd_status_main_cari_idx(data)                                    (0x00000070&((data)<<4))
#define  AUDIO_msd_status_deviation(data)                                        (0x0000000F&(data))
#define  AUDIO_msd_status_get_bw_cnt_max(data)                                   ((0x1F000000&(data))>>24)
#define  AUDIO_msd_status_get_bw_cnt_min(data)                                   ((0x001F0000&(data))>>16)
#define  AUDIO_msd_status_get_shift_value(data)                                  ((0x00000F00&(data))>>8)
#define  AUDIO_msd_status_get_main_cari_idx(data)                                ((0x00000070&(data))>>4)
#define  AUDIO_msd_status_get_deviation(data)                                    (0x0000000F&(data))

#define  AUDIO_main_tone_threshold                                              0x1800620C
#define  AUDIO_main_tone_threshold_reg_addr                                      "0xB800620C"
#define  AUDIO_main_tone_threshold_reg                                           0xB800620C
#define  AUDIO_main_tone_threshold_inst_addr                                     "0x0068"
#define  set_AUDIO_main_tone_threshold_reg(data)                                 (*((volatile unsigned int*)AUDIO_main_tone_threshold_reg)=data)
#define  get_AUDIO_main_tone_threshold_reg                                       (*((volatile unsigned int*)AUDIO_main_tone_threshold_reg))
#define  AUDIO_main_tone_threshold_main_thresh_shift                             (16)
#define  AUDIO_main_tone_threshold_main_thresh_low_shift                         (0)
#define  AUDIO_main_tone_threshold_main_thresh_mask                              (0xFFFF0000)
#define  AUDIO_main_tone_threshold_main_thresh_low_mask                          (0x0000FFFF)
#define  AUDIO_main_tone_threshold_main_thresh(data)                             (0xFFFF0000&((data)<<16))
#define  AUDIO_main_tone_threshold_main_thresh_low(data)                         (0x0000FFFF&(data))
#define  AUDIO_main_tone_threshold_get_main_thresh(data)                         ((0xFFFF0000&(data))>>16)
#define  AUDIO_main_tone_threshold_get_main_thresh_low(data)                     (0x0000FFFF&(data))

#define  AUDIO_main_tone_threshold_hd                                           0x18006210
#define  AUDIO_main_tone_threshold_hd_reg_addr                                   "0xB8006210"
#define  AUDIO_main_tone_threshold_hd_reg                                        0xB8006210
#define  AUDIO_main_tone_threshold_hd_inst_addr                                  "0x0069"
#define  set_AUDIO_main_tone_threshold_hd_reg(data)                              (*((volatile unsigned int*)AUDIO_main_tone_threshold_hd_reg)=data)
#define  get_AUDIO_main_tone_threshold_hd_reg                                    (*((volatile unsigned int*)AUDIO_main_tone_threshold_hd_reg))
#define  AUDIO_main_tone_threshold_hd_main_thresh_hd_shift                       (16)
#define  AUDIO_main_tone_threshold_hd_main_thresh_hd_low_shift                   (0)
#define  AUDIO_main_tone_threshold_hd_main_thresh_hd_mask                        (0xFFFF0000)
#define  AUDIO_main_tone_threshold_hd_main_thresh_hd_low_mask                    (0x0000FFFF)
#define  AUDIO_main_tone_threshold_hd_main_thresh_hd(data)                       (0xFFFF0000&((data)<<16))
#define  AUDIO_main_tone_threshold_hd_main_thresh_hd_low(data)                   (0x0000FFFF&(data))
#define  AUDIO_main_tone_threshold_hd_get_main_thresh_hd(data)                   ((0xFFFF0000&(data))>>16)
#define  AUDIO_main_tone_threshold_hd_get_main_thresh_hd_low(data)               (0x0000FFFF&(data))

#define  AUDIO_bw_threshold                                                     0x18006214
#define  AUDIO_bw_threshold_reg_addr                                             "0xB8006214"
#define  AUDIO_bw_threshold_reg                                                  0xB8006214
#define  AUDIO_bw_threshold_inst_addr                                            "0x006A"
#define  set_AUDIO_bw_threshold_reg(data)                                        (*((volatile unsigned int*)AUDIO_bw_threshold_reg)=data)
#define  get_AUDIO_bw_threshold_reg                                              (*((volatile unsigned int*)AUDIO_bw_threshold_reg))
#define  AUDIO_bw_threshold_bw_dev_thresh_hd_shift                               (16)
#define  AUDIO_bw_threshold_bw_dev_thresh_shift                                  (0)
#define  AUDIO_bw_threshold_bw_dev_thresh_hd_mask                                (0xFFFF0000)
#define  AUDIO_bw_threshold_bw_dev_thresh_mask                                   (0x0000FFFF)
#define  AUDIO_bw_threshold_bw_dev_thresh_hd(data)                               (0xFFFF0000&((data)<<16))
#define  AUDIO_bw_threshold_bw_dev_thresh(data)                                  (0x0000FFFF&(data))
#define  AUDIO_bw_threshold_get_bw_dev_thresh_hd(data)                           ((0xFFFF0000&(data))>>16)
#define  AUDIO_bw_threshold_get_bw_dev_thresh(data)                              (0x0000FFFF&(data))

#define  AUDIO_main_sub_ratio                                                   0x18006218
#define  AUDIO_main_sub_ratio_reg_addr                                           "0xB8006218"
#define  AUDIO_main_sub_ratio_reg                                                0xB8006218
#define  AUDIO_main_sub_ratio_inst_addr                                          "0x006B"
#define  set_AUDIO_main_sub_ratio_reg(data)                                      (*((volatile unsigned int*)AUDIO_main_sub_ratio_reg)=data)
#define  get_AUDIO_main_sub_ratio_reg                                            (*((volatile unsigned int*)AUDIO_main_sub_ratio_reg))
#define  AUDIO_main_sub_ratio_bw_dev_thresh_low_shift                            (16)
#define  AUDIO_main_sub_ratio_main_sub_ratio_shift                               (0)
#define  AUDIO_main_sub_ratio_bw_dev_thresh_low_mask                             (0xFFFF0000)
#define  AUDIO_main_sub_ratio_main_sub_ratio_mask                                (0x0000FFFF)
#define  AUDIO_main_sub_ratio_bw_dev_thresh_low(data)                            (0xFFFF0000&((data)<<16))
#define  AUDIO_main_sub_ratio_main_sub_ratio(data)                               (0x0000FFFF&(data))
#define  AUDIO_main_sub_ratio_get_bw_dev_thresh_low(data)                        ((0xFFFF0000&(data))>>16)
#define  AUDIO_main_sub_ratio_get_main_sub_ratio(data)                           (0x0000FFFF&(data))

#define  AUDIO_msd_mag_4_5                                                      0x1800621C
#define  AUDIO_msd_mag_4_5_reg_addr                                              "0xB800621C"
#define  AUDIO_msd_mag_4_5_reg                                                   0xB800621C
#define  AUDIO_msd_mag_4_5_inst_addr                                             "0x006C"
#define  set_AUDIO_msd_mag_4_5_reg(data)                                         (*((volatile unsigned int*)AUDIO_msd_mag_4_5_reg)=data)
#define  get_AUDIO_msd_mag_4_5_reg                                               (*((volatile unsigned int*)AUDIO_msd_mag_4_5_reg))
#define  AUDIO_msd_mag_4_5_reg_mag_4_5_shift                                     (0)
#define  AUDIO_msd_mag_4_5_reg_mag_4_5_mask                                      (0x0000FFFF)
#define  AUDIO_msd_mag_4_5_reg_mag_4_5(data)                                     (0x0000FFFF&(data))
#define  AUDIO_msd_mag_4_5_get_reg_mag_4_5(data)                                 (0x0000FFFF&(data))

#define  AUDIO_msd_mag_4_28                                                     0x18006220
#define  AUDIO_msd_mag_4_28_reg_addr                                             "0xB8006220"
#define  AUDIO_msd_mag_4_28_reg                                                  0xB8006220
#define  AUDIO_msd_mag_4_28_inst_addr                                            "0x006D"
#define  set_AUDIO_msd_mag_4_28_reg(data)                                        (*((volatile unsigned int*)AUDIO_msd_mag_4_28_reg)=data)
#define  get_AUDIO_msd_mag_4_28_reg                                              (*((volatile unsigned int*)AUDIO_msd_mag_4_28_reg))
#define  AUDIO_msd_mag_4_28_reg_mag_4_28_shift                                   (0)
#define  AUDIO_msd_mag_4_28_reg_mag_4_28_mask                                    (0x0000FFFF)
#define  AUDIO_msd_mag_4_28_reg_mag_4_28(data)                                   (0x0000FFFF&(data))
#define  AUDIO_msd_mag_4_28_get_reg_mag_4_28(data)                               (0x0000FFFF&(data))

#define  AUDIO_msd_mag_4_72                                                     0x18006224
#define  AUDIO_msd_mag_4_72_reg_addr                                             "0xB8006224"
#define  AUDIO_msd_mag_4_72_reg                                                  0xB8006224
#define  AUDIO_msd_mag_4_72_inst_addr                                            "0x006E"
#define  set_AUDIO_msd_mag_4_72_reg(data)                                        (*((volatile unsigned int*)AUDIO_msd_mag_4_72_reg)=data)
#define  get_AUDIO_msd_mag_4_72_reg                                              (*((volatile unsigned int*)AUDIO_msd_mag_4_72_reg))
#define  AUDIO_msd_mag_4_72_reg_mag_4_72_shift                                   (0)
#define  AUDIO_msd_mag_4_72_reg_mag_4_72_mask                                    (0x0000FFFF)
#define  AUDIO_msd_mag_4_72_reg_mag_4_72(data)                                   (0x0000FFFF&(data))
#define  AUDIO_msd_mag_4_72_get_reg_mag_4_72(data)                               (0x0000FFFF&(data))

#define  AUDIO_msd_mag_5_5                                                      0x18006228
#define  AUDIO_msd_mag_5_5_reg_addr                                              "0xB8006228"
#define  AUDIO_msd_mag_5_5_reg                                                   0xB8006228
#define  AUDIO_msd_mag_5_5_inst_addr                                             "0x006F"
#define  set_AUDIO_msd_mag_5_5_reg(data)                                         (*((volatile unsigned int*)AUDIO_msd_mag_5_5_reg)=data)
#define  get_AUDIO_msd_mag_5_5_reg                                               (*((volatile unsigned int*)AUDIO_msd_mag_5_5_reg))
#define  AUDIO_msd_mag_5_5_reg_mag_5_5_shift                                     (0)
#define  AUDIO_msd_mag_5_5_reg_mag_5_5_mask                                      (0x0000FFFF)
#define  AUDIO_msd_mag_5_5_reg_mag_5_5(data)                                     (0x0000FFFF&(data))
#define  AUDIO_msd_mag_5_5_get_reg_mag_5_5(data)                                 (0x0000FFFF&(data))

#define  AUDIO_msd_mag_5_25                                                     0x1800622C
#define  AUDIO_msd_mag_5_25_reg_addr                                             "0xB800622C"
#define  AUDIO_msd_mag_5_25_reg                                                  0xB800622C
#define  AUDIO_msd_mag_5_25_inst_addr                                            "0x0070"
#define  set_AUDIO_msd_mag_5_25_reg(data)                                        (*((volatile unsigned int*)AUDIO_msd_mag_5_25_reg)=data)
#define  get_AUDIO_msd_mag_5_25_reg                                              (*((volatile unsigned int*)AUDIO_msd_mag_5_25_reg))
#define  AUDIO_msd_mag_5_25_reg_mag_5_25_shift                                   (0)
#define  AUDIO_msd_mag_5_25_reg_mag_5_25_mask                                    (0x0000FFFF)
#define  AUDIO_msd_mag_5_25_reg_mag_5_25(data)                                   (0x0000FFFF&(data))
#define  AUDIO_msd_mag_5_25_get_reg_mag_5_25(data)                               (0x0000FFFF&(data))

#define  AUDIO_msd_mag_5_74                                                     0x18006230
#define  AUDIO_msd_mag_5_74_reg_addr                                             "0xB8006230"
#define  AUDIO_msd_mag_5_74_reg                                                  0xB8006230
#define  AUDIO_msd_mag_5_74_inst_addr                                            "0x0071"
#define  set_AUDIO_msd_mag_5_74_reg(data)                                        (*((volatile unsigned int*)AUDIO_msd_mag_5_74_reg)=data)
#define  get_AUDIO_msd_mag_5_74_reg                                              (*((volatile unsigned int*)AUDIO_msd_mag_5_74_reg))
#define  AUDIO_msd_mag_5_74_reg_mag_5_74_shift                                   (0)
#define  AUDIO_msd_mag_5_74_reg_mag_5_74_mask                                    (0x0000FFFF)
#define  AUDIO_msd_mag_5_74_reg_mag_5_74(data)                                   (0x0000FFFF&(data))
#define  AUDIO_msd_mag_5_74_get_reg_mag_5_74(data)                               (0x0000FFFF&(data))

#define  AUDIO_msd_carrier_5_85                                                 0x18006234
#define  AUDIO_msd_carrier_5_85_reg_addr                                         "0xB8006234"
#define  AUDIO_msd_carrier_5_85_reg                                              0xB8006234
#define  AUDIO_msd_carrier_5_85_inst_addr                                        "0x0072"
#define  set_AUDIO_msd_carrier_5_85_reg(data)                                    (*((volatile unsigned int*)AUDIO_msd_carrier_5_85_reg)=data)
#define  get_AUDIO_msd_carrier_5_85_reg                                          (*((volatile unsigned int*)AUDIO_msd_carrier_5_85_reg))
#define  AUDIO_msd_carrier_5_85_reg_mag_5_85_shift                               (0)
#define  AUDIO_msd_carrier_5_85_reg_mag_5_85_mask                                (0x0000FFFF)
#define  AUDIO_msd_carrier_5_85_reg_mag_5_85(data)                               (0x0000FFFF&(data))
#define  AUDIO_msd_carrier_5_85_get_reg_mag_5_85(data)                           (0x0000FFFF&(data))

#define  AUDIO_msd_carrier_5_95                                                 0x18006238
#define  AUDIO_msd_carrier_5_95_reg_addr                                         "0xB8006238"
#define  AUDIO_msd_carrier_5_95_reg                                              0xB8006238
#define  AUDIO_msd_carrier_5_95_inst_addr                                        "0x0073"
#define  set_AUDIO_msd_carrier_5_95_reg(data)                                    (*((volatile unsigned int*)AUDIO_msd_carrier_5_95_reg)=data)
#define  get_AUDIO_msd_carrier_5_95_reg                                          (*((volatile unsigned int*)AUDIO_msd_carrier_5_95_reg))
#define  AUDIO_msd_carrier_5_95_reg_mag_5_95_shift                               (0)
#define  AUDIO_msd_carrier_5_95_reg_mag_5_95_mask                                (0x0000FFFF)
#define  AUDIO_msd_carrier_5_95_reg_mag_5_95(data)                               (0x0000FFFF&(data))
#define  AUDIO_msd_carrier_5_95_get_reg_mag_5_95(data)                           (0x0000FFFF&(data))

#define  AUDIO_msd_mag_6                                                        0x1800623C
#define  AUDIO_msd_mag_6_reg_addr                                                "0xB800623C"
#define  AUDIO_msd_mag_6_reg                                                     0xB800623C
#define  AUDIO_msd_mag_6_inst_addr                                               "0x0074"
#define  set_AUDIO_msd_mag_6_reg(data)                                           (*((volatile unsigned int*)AUDIO_msd_mag_6_reg)=data)
#define  get_AUDIO_msd_mag_6_reg                                                 (*((volatile unsigned int*)AUDIO_msd_mag_6_reg))
#define  AUDIO_msd_mag_6_reg_mag_6_shift                                         (0)
#define  AUDIO_msd_mag_6_reg_mag_6_mask                                          (0x0000FFFF)
#define  AUDIO_msd_mag_6_reg_mag_6(data)                                         (0x0000FFFF&(data))
#define  AUDIO_msd_mag_6_get_reg_mag_6(data)                                     (0x0000FFFF&(data))

#define  AUDIO_msd_mag_6_25                                                     0x18006240
#define  AUDIO_msd_mag_6_25_reg_addr                                             "0xB8006240"
#define  AUDIO_msd_mag_6_25_reg                                                  0xB8006240
#define  AUDIO_msd_mag_6_25_inst_addr                                            "0x0075"
#define  set_AUDIO_msd_mag_6_25_reg(data)                                        (*((volatile unsigned int*)AUDIO_msd_mag_6_25_reg)=data)
#define  get_AUDIO_msd_mag_6_25_reg                                              (*((volatile unsigned int*)AUDIO_msd_mag_6_25_reg))
#define  AUDIO_msd_mag_6_25_reg_mag_6_25_shift                                   (0)
#define  AUDIO_msd_mag_6_25_reg_mag_6_25_mask                                    (0x0000FFFF)
#define  AUDIO_msd_mag_6_25_reg_mag_6_25(data)                                   (0x0000FFFF&(data))
#define  AUDIO_msd_mag_6_25_get_reg_mag_6_25(data)                               (0x0000FFFF&(data))

#define  AUDIO_msd_carrier_6_5                                                  0x18006244
#define  AUDIO_msd_carrier_6_5_reg_addr                                          "0xB8006244"
#define  AUDIO_msd_carrier_6_5_reg                                               0xB8006244
#define  AUDIO_msd_carrier_6_5_inst_addr                                         "0x0076"
#define  set_AUDIO_msd_carrier_6_5_reg(data)                                     (*((volatile unsigned int*)AUDIO_msd_carrier_6_5_reg)=data)
#define  get_AUDIO_msd_carrier_6_5_reg                                           (*((volatile unsigned int*)AUDIO_msd_carrier_6_5_reg))
#define  AUDIO_msd_carrier_6_5_reg_mag_6_5_shift                                 (0)
#define  AUDIO_msd_carrier_6_5_reg_mag_6_5_mask                                  (0x0000FFFF)
#define  AUDIO_msd_carrier_6_5_reg_mag_6_5(data)                                 (0x0000FFFF&(data))
#define  AUDIO_msd_carrier_6_5_get_reg_mag_6_5(data)                             (0x0000FFFF&(data))

#define  AUDIO_msd_mag_6_552                                                    0x18006248
#define  AUDIO_msd_mag_6_552_reg_addr                                            "0xB8006248"
#define  AUDIO_msd_mag_6_552_reg                                                 0xB8006248
#define  AUDIO_msd_mag_6_552_inst_addr                                           "0x0077"
#define  set_AUDIO_msd_mag_6_552_reg(data)                                       (*((volatile unsigned int*)AUDIO_msd_mag_6_552_reg)=data)
#define  get_AUDIO_msd_mag_6_552_reg                                             (*((volatile unsigned int*)AUDIO_msd_mag_6_552_reg))
#define  AUDIO_msd_mag_6_552_reg_mag_6_552_shift                                 (0)
#define  AUDIO_msd_mag_6_552_reg_mag_6_552_mask                                  (0x0000FFFF)
#define  AUDIO_msd_mag_6_552_reg_mag_6_552(data)                                 (0x0000FFFF&(data))
#define  AUDIO_msd_mag_6_552_get_reg_mag_6_552(data)                             (0x0000FFFF&(data))

#define  AUDIO_msd_carrier_6_74                                                 0x1800624C
#define  AUDIO_msd_carrier_6_74_reg_addr                                         "0xB800624C"
#define  AUDIO_msd_carrier_6_74_reg                                              0xB800624C
#define  AUDIO_msd_carrier_6_74_inst_addr                                        "0x0078"
#define  set_AUDIO_msd_carrier_6_74_reg(data)                                    (*((volatile unsigned int*)AUDIO_msd_carrier_6_74_reg)=data)
#define  get_AUDIO_msd_carrier_6_74_reg                                          (*((volatile unsigned int*)AUDIO_msd_carrier_6_74_reg))
#define  AUDIO_msd_carrier_6_74_reg_mag_6_74_shift                               (0)
#define  AUDIO_msd_carrier_6_74_reg_mag_6_74_mask                                (0x0000FFFF)
#define  AUDIO_msd_carrier_6_74_reg_mag_6_74(data)                               (0x0000FFFF&(data))
#define  AUDIO_msd_carrier_6_74_get_reg_mag_6_74(data)                           (0x0000FFFF&(data))

#define  AUDIO_msd_flags                                                        0x18006250
#define  AUDIO_msd_flags_reg_addr                                                "0xB8006250"
#define  AUDIO_msd_flags_reg                                                     0xB8006250
#define  AUDIO_msd_flags_inst_addr                                               "0x0079"
#define  set_AUDIO_msd_flags_reg(data)                                           (*((volatile unsigned int*)AUDIO_msd_flags_reg)=data)
#define  get_AUDIO_msd_flags_reg                                                 (*((volatile unsigned int*)AUDIO_msd_flags_reg))
#define  AUDIO_msd_flags_flag_fw_4_shift                                         (14)
#define  AUDIO_msd_flags_flag_fw_3_shift                                         (13)
#define  AUDIO_msd_flags_flag_fw_2_shift                                         (12)
#define  AUDIO_msd_flags_flag_fw_1_shift                                         (11)
#define  AUDIO_msd_flags_flag_fw_shift                                           (10)
#define  AUDIO_msd_flags_flag_4_5_shift                                          (9)
#define  AUDIO_msd_flags_flag_5_5_shift                                          (8)
#define  AUDIO_msd_flags_flag_6_shift                                            (7)
#define  AUDIO_msd_flags_flag_6_5_shift                                          (6)
#define  AUDIO_msd_flags_flag_4_72_shift                                         (5)
#define  AUDIO_msd_flags_flag_5_74_shift                                         (4)
#define  AUDIO_msd_flags_flag_5_85_shift                                         (3)
#define  AUDIO_msd_flags_flag_6_25_shift                                         (2)
#define  AUDIO_msd_flags_flag_6_552_shift                                        (1)
#define  AUDIO_msd_flags_flag_6_74_shift                                         (0)
#define  AUDIO_msd_flags_flag_fw_4_mask                                          (0x00004000)
#define  AUDIO_msd_flags_flag_fw_3_mask                                          (0x00002000)
#define  AUDIO_msd_flags_flag_fw_2_mask                                          (0x00001000)
#define  AUDIO_msd_flags_flag_fw_1_mask                                          (0x00000800)
#define  AUDIO_msd_flags_flag_fw_mask                                            (0x00000400)
#define  AUDIO_msd_flags_flag_4_5_mask                                           (0x00000200)
#define  AUDIO_msd_flags_flag_5_5_mask                                           (0x00000100)
#define  AUDIO_msd_flags_flag_6_mask                                             (0x00000080)
#define  AUDIO_msd_flags_flag_6_5_mask                                           (0x00000040)
#define  AUDIO_msd_flags_flag_4_72_mask                                          (0x00000020)
#define  AUDIO_msd_flags_flag_5_74_mask                                          (0x00000010)
#define  AUDIO_msd_flags_flag_5_85_mask                                          (0x00000008)
#define  AUDIO_msd_flags_flag_6_25_mask                                          (0x00000004)
#define  AUDIO_msd_flags_flag_6_552_mask                                         (0x00000002)
#define  AUDIO_msd_flags_flag_6_74_mask                                          (0x00000001)
#define  AUDIO_msd_flags_flag_fw_4(data)                                         (0x00004000&((data)<<14))
#define  AUDIO_msd_flags_flag_fw_3(data)                                         (0x00002000&((data)<<13))
#define  AUDIO_msd_flags_flag_fw_2(data)                                         (0x00001000&((data)<<12))
#define  AUDIO_msd_flags_flag_fw_1(data)                                         (0x00000800&((data)<<11))
#define  AUDIO_msd_flags_flag_fw(data)                                           (0x00000400&((data)<<10))
#define  AUDIO_msd_flags_flag_4_5(data)                                          (0x00000200&((data)<<9))
#define  AUDIO_msd_flags_flag_5_5(data)                                          (0x00000100&((data)<<8))
#define  AUDIO_msd_flags_flag_6(data)                                            (0x00000080&((data)<<7))
#define  AUDIO_msd_flags_flag_6_5(data)                                          (0x00000040&((data)<<6))
#define  AUDIO_msd_flags_flag_4_72(data)                                         (0x00000020&((data)<<5))
#define  AUDIO_msd_flags_flag_5_74(data)                                         (0x00000010&((data)<<4))
#define  AUDIO_msd_flags_flag_5_85(data)                                         (0x00000008&((data)<<3))
#define  AUDIO_msd_flags_flag_6_25(data)                                         (0x00000004&((data)<<2))
#define  AUDIO_msd_flags_flag_6_552(data)                                        (0x00000002&((data)<<1))
#define  AUDIO_msd_flags_flag_6_74(data)                                         (0x00000001&(data))
#define  AUDIO_msd_flags_get_flag_fw_4(data)                                     ((0x00004000&(data))>>14)
#define  AUDIO_msd_flags_get_flag_fw_3(data)                                     ((0x00002000&(data))>>13)
#define  AUDIO_msd_flags_get_flag_fw_2(data)                                     ((0x00001000&(data))>>12)
#define  AUDIO_msd_flags_get_flag_fw_1(data)                                     ((0x00000800&(data))>>11)
#define  AUDIO_msd_flags_get_flag_fw(data)                                       ((0x00000400&(data))>>10)
#define  AUDIO_msd_flags_get_flag_4_5(data)                                      ((0x00000200&(data))>>9)
#define  AUDIO_msd_flags_get_flag_5_5(data)                                      ((0x00000100&(data))>>8)
#define  AUDIO_msd_flags_get_flag_6(data)                                        ((0x00000080&(data))>>7)
#define  AUDIO_msd_flags_get_flag_6_5(data)                                      ((0x00000040&(data))>>6)
#define  AUDIO_msd_flags_get_flag_4_72(data)                                     ((0x00000020&(data))>>5)
#define  AUDIO_msd_flags_get_flag_5_74(data)                                     ((0x00000010&(data))>>4)
#define  AUDIO_msd_flags_get_flag_5_85(data)                                     ((0x00000008&(data))>>3)
#define  AUDIO_msd_flags_get_flag_6_25(data)                                     ((0x00000004&(data))>>2)
#define  AUDIO_msd_flags_get_flag_6_552(data)                                    ((0x00000002&(data))>>1)
#define  AUDIO_msd_flags_get_flag_6_74(data)                                     (0x00000001&(data))

#define  AUDIO_msd_programmable_freq                                            0x18006254
#define  AUDIO_msd_programmable_freq_reg_addr                                    "0xB8006254"
#define  AUDIO_msd_programmable_freq_reg                                         0xB8006254
#define  AUDIO_msd_programmable_freq_inst_addr                                   "0x007A"
#define  set_AUDIO_msd_programmable_freq_reg(data)                               (*((volatile unsigned int*)AUDIO_msd_programmable_freq_reg)=data)
#define  get_AUDIO_msd_programmable_freq_reg                                     (*((volatile unsigned int*)AUDIO_msd_programmable_freq_reg))
#define  AUDIO_msd_programmable_freq_fw_phase_delta_shift                        (16)
#define  AUDIO_msd_programmable_freq_reg_mag_fw_shift                            (0)
#define  AUDIO_msd_programmable_freq_fw_phase_delta_mask                         (0x3FFF0000)
#define  AUDIO_msd_programmable_freq_reg_mag_fw_mask                             (0x0000FFFF)
#define  AUDIO_msd_programmable_freq_fw_phase_delta(data)                        (0x3FFF0000&((data)<<16))
#define  AUDIO_msd_programmable_freq_reg_mag_fw(data)                            (0x0000FFFF&(data))
#define  AUDIO_msd_programmable_freq_get_fw_phase_delta(data)                    ((0x3FFF0000&(data))>>16)
#define  AUDIO_msd_programmable_freq_get_reg_mag_fw(data)                        (0x0000FFFF&(data))

#define  AUDIO_threshold_msd_carrier_fw                                         0x18006258
#define  AUDIO_threshold_msd_carrier_fw_reg_addr                                 "0xB8006258"
#define  AUDIO_threshold_msd_carrier_fw_reg                                      0xB8006258
#define  AUDIO_threshold_msd_carrier_fw_inst_addr                                "0x007B"
#define  set_AUDIO_threshold_msd_carrier_fw_reg(data)                            (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_reg)=data)
#define  get_AUDIO_threshold_msd_carrier_fw_reg                                  (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_reg))
#define  AUDIO_threshold_msd_carrier_fw_fw_thresh_shift                          (16)
#define  AUDIO_threshold_msd_carrier_fw_fw_thresh_low_shift                      (0)
#define  AUDIO_threshold_msd_carrier_fw_fw_thresh_mask                           (0xFFFF0000)
#define  AUDIO_threshold_msd_carrier_fw_fw_thresh_low_mask                       (0x0000FFFF)
#define  AUDIO_threshold_msd_carrier_fw_fw_thresh(data)                          (0xFFFF0000&((data)<<16))
#define  AUDIO_threshold_msd_carrier_fw_fw_thresh_low(data)                      (0x0000FFFF&(data))
#define  AUDIO_threshold_msd_carrier_fw_get_fw_thresh(data)                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_threshold_msd_carrier_fw_get_fw_thresh_low(data)                  (0x0000FFFF&(data))

#define  AUDIO_msd_programmable_freq_1                                          0x1800625C
#define  AUDIO_msd_programmable_freq_1_reg_addr                                  "0xB800625C"
#define  AUDIO_msd_programmable_freq_1_reg                                       0xB800625C
#define  AUDIO_msd_programmable_freq_1_inst_addr                                 "0x007C"
#define  set_AUDIO_msd_programmable_freq_1_reg(data)                             (*((volatile unsigned int*)AUDIO_msd_programmable_freq_1_reg)=data)
#define  get_AUDIO_msd_programmable_freq_1_reg                                   (*((volatile unsigned int*)AUDIO_msd_programmable_freq_1_reg))
#define  AUDIO_msd_programmable_freq_1_fw_phase_delta_1_shift                    (16)
#define  AUDIO_msd_programmable_freq_1_reg_mag_fw_1_shift                        (0)
#define  AUDIO_msd_programmable_freq_1_fw_phase_delta_1_mask                     (0x3FFF0000)
#define  AUDIO_msd_programmable_freq_1_reg_mag_fw_1_mask                         (0x0000FFFF)
#define  AUDIO_msd_programmable_freq_1_fw_phase_delta_1(data)                    (0x3FFF0000&((data)<<16))
#define  AUDIO_msd_programmable_freq_1_reg_mag_fw_1(data)                        (0x0000FFFF&(data))
#define  AUDIO_msd_programmable_freq_1_get_fw_phase_delta_1(data)                ((0x3FFF0000&(data))>>16)
#define  AUDIO_msd_programmable_freq_1_get_reg_mag_fw_1(data)                    (0x0000FFFF&(data))

#define  AUDIO_threshold_msd_carrier_fw_1                                       0x18006260
#define  AUDIO_threshold_msd_carrier_fw_1_reg_addr                               "0xB8006260"
#define  AUDIO_threshold_msd_carrier_fw_1_reg                                    0xB8006260
#define  AUDIO_threshold_msd_carrier_fw_1_inst_addr                              "0x007D"
#define  set_AUDIO_threshold_msd_carrier_fw_1_reg(data)                          (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_1_reg)=data)
#define  get_AUDIO_threshold_msd_carrier_fw_1_reg                                (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_1_reg))
#define  AUDIO_threshold_msd_carrier_fw_1_fw_thresh_1_shift                      (16)
#define  AUDIO_threshold_msd_carrier_fw_1_fw_thresh_1_low_shift                  (0)
#define  AUDIO_threshold_msd_carrier_fw_1_fw_thresh_1_mask                       (0xFFFF0000)
#define  AUDIO_threshold_msd_carrier_fw_1_fw_thresh_1_low_mask                   (0x0000FFFF)
#define  AUDIO_threshold_msd_carrier_fw_1_fw_thresh_1(data)                      (0xFFFF0000&((data)<<16))
#define  AUDIO_threshold_msd_carrier_fw_1_fw_thresh_1_low(data)                  (0x0000FFFF&(data))
#define  AUDIO_threshold_msd_carrier_fw_1_get_fw_thresh_1(data)                  ((0xFFFF0000&(data))>>16)
#define  AUDIO_threshold_msd_carrier_fw_1_get_fw_thresh_1_low(data)              (0x0000FFFF&(data))

#define  AUDIO_msd_programmable_freq_2                                          0x18006264
#define  AUDIO_msd_programmable_freq_2_reg_addr                                  "0xB8006264"
#define  AUDIO_msd_programmable_freq_2_reg                                       0xB8006264
#define  AUDIO_msd_programmable_freq_2_inst_addr                                 "0x007E"
#define  set_AUDIO_msd_programmable_freq_2_reg(data)                             (*((volatile unsigned int*)AUDIO_msd_programmable_freq_2_reg)=data)
#define  get_AUDIO_msd_programmable_freq_2_reg                                   (*((volatile unsigned int*)AUDIO_msd_programmable_freq_2_reg))
#define  AUDIO_msd_programmable_freq_2_fw_phase_delta_2_shift                    (16)
#define  AUDIO_msd_programmable_freq_2_reg_mag_fw_2_shift                        (0)
#define  AUDIO_msd_programmable_freq_2_fw_phase_delta_2_mask                     (0x3FFF0000)
#define  AUDIO_msd_programmable_freq_2_reg_mag_fw_2_mask                         (0x0000FFFF)
#define  AUDIO_msd_programmable_freq_2_fw_phase_delta_2(data)                    (0x3FFF0000&((data)<<16))
#define  AUDIO_msd_programmable_freq_2_reg_mag_fw_2(data)                        (0x0000FFFF&(data))
#define  AUDIO_msd_programmable_freq_2_get_fw_phase_delta_2(data)                ((0x3FFF0000&(data))>>16)
#define  AUDIO_msd_programmable_freq_2_get_reg_mag_fw_2(data)                    (0x0000FFFF&(data))

#define  AUDIO_threshold_msd_carrier_fw_2                                       0x18006268
#define  AUDIO_threshold_msd_carrier_fw_2_reg_addr                               "0xB8006268"
#define  AUDIO_threshold_msd_carrier_fw_2_reg                                    0xB8006268
#define  AUDIO_threshold_msd_carrier_fw_2_inst_addr                              "0x007F"
#define  set_AUDIO_threshold_msd_carrier_fw_2_reg(data)                          (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_2_reg)=data)
#define  get_AUDIO_threshold_msd_carrier_fw_2_reg                                (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_2_reg))
#define  AUDIO_threshold_msd_carrier_fw_2_fw_thresh_2_shift                      (16)
#define  AUDIO_threshold_msd_carrier_fw_2_fw_thresh_2_low_shift                  (0)
#define  AUDIO_threshold_msd_carrier_fw_2_fw_thresh_2_mask                       (0xFFFF0000)
#define  AUDIO_threshold_msd_carrier_fw_2_fw_thresh_2_low_mask                   (0x0000FFFF)
#define  AUDIO_threshold_msd_carrier_fw_2_fw_thresh_2(data)                      (0xFFFF0000&((data)<<16))
#define  AUDIO_threshold_msd_carrier_fw_2_fw_thresh_2_low(data)                  (0x0000FFFF&(data))
#define  AUDIO_threshold_msd_carrier_fw_2_get_fw_thresh_2(data)                  ((0xFFFF0000&(data))>>16)
#define  AUDIO_threshold_msd_carrier_fw_2_get_fw_thresh_2_low(data)              (0x0000FFFF&(data))

#define  AUDIO_msd_programmable_freq_3                                          0x1800626C
#define  AUDIO_msd_programmable_freq_3_reg_addr                                  "0xB800626C"
#define  AUDIO_msd_programmable_freq_3_reg                                       0xB800626C
#define  AUDIO_msd_programmable_freq_3_inst_addr                                 "0x0080"
#define  set_AUDIO_msd_programmable_freq_3_reg(data)                             (*((volatile unsigned int*)AUDIO_msd_programmable_freq_3_reg)=data)
#define  get_AUDIO_msd_programmable_freq_3_reg                                   (*((volatile unsigned int*)AUDIO_msd_programmable_freq_3_reg))
#define  AUDIO_msd_programmable_freq_3_fw_phase_delta_3_shift                    (16)
#define  AUDIO_msd_programmable_freq_3_reg_mag_fw_3_shift                        (0)
#define  AUDIO_msd_programmable_freq_3_fw_phase_delta_3_mask                     (0x3FFF0000)
#define  AUDIO_msd_programmable_freq_3_reg_mag_fw_3_mask                         (0x0000FFFF)
#define  AUDIO_msd_programmable_freq_3_fw_phase_delta_3(data)                    (0x3FFF0000&((data)<<16))
#define  AUDIO_msd_programmable_freq_3_reg_mag_fw_3(data)                        (0x0000FFFF&(data))
#define  AUDIO_msd_programmable_freq_3_get_fw_phase_delta_3(data)                ((0x3FFF0000&(data))>>16)
#define  AUDIO_msd_programmable_freq_3_get_reg_mag_fw_3(data)                    (0x0000FFFF&(data))

#define  AUDIO_threshold_msd_carrier_fw_3                                       0x18006270
#define  AUDIO_threshold_msd_carrier_fw_3_reg_addr                               "0xB8006270"
#define  AUDIO_threshold_msd_carrier_fw_3_reg                                    0xB8006270
#define  AUDIO_threshold_msd_carrier_fw_3_inst_addr                              "0x0081"
#define  set_AUDIO_threshold_msd_carrier_fw_3_reg(data)                          (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_3_reg)=data)
#define  get_AUDIO_threshold_msd_carrier_fw_3_reg                                (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_3_reg))
#define  AUDIO_threshold_msd_carrier_fw_3_fw_thresh_3_shift                      (16)
#define  AUDIO_threshold_msd_carrier_fw_3_fw_thresh_3_low_shift                  (0)
#define  AUDIO_threshold_msd_carrier_fw_3_fw_thresh_3_mask                       (0xFFFF0000)
#define  AUDIO_threshold_msd_carrier_fw_3_fw_thresh_3_low_mask                   (0x0000FFFF)
#define  AUDIO_threshold_msd_carrier_fw_3_fw_thresh_3(data)                      (0xFFFF0000&((data)<<16))
#define  AUDIO_threshold_msd_carrier_fw_3_fw_thresh_3_low(data)                  (0x0000FFFF&(data))
#define  AUDIO_threshold_msd_carrier_fw_3_get_fw_thresh_3(data)                  ((0xFFFF0000&(data))>>16)
#define  AUDIO_threshold_msd_carrier_fw_3_get_fw_thresh_3_low(data)              (0x0000FFFF&(data))

#define  AUDIO_msd_programmable_freq_4                                          0x18006274
#define  AUDIO_msd_programmable_freq_4_reg_addr                                  "0xB8006274"
#define  AUDIO_msd_programmable_freq_4_reg                                       0xB8006274
#define  AUDIO_msd_programmable_freq_4_inst_addr                                 "0x0082"
#define  set_AUDIO_msd_programmable_freq_4_reg(data)                             (*((volatile unsigned int*)AUDIO_msd_programmable_freq_4_reg)=data)
#define  get_AUDIO_msd_programmable_freq_4_reg                                   (*((volatile unsigned int*)AUDIO_msd_programmable_freq_4_reg))
#define  AUDIO_msd_programmable_freq_4_fw_phase_delta_4_shift                    (16)
#define  AUDIO_msd_programmable_freq_4_reg_mag_fw_4_shift                        (0)
#define  AUDIO_msd_programmable_freq_4_fw_phase_delta_4_mask                     (0x3FFF0000)
#define  AUDIO_msd_programmable_freq_4_reg_mag_fw_4_mask                         (0x0000FFFF)
#define  AUDIO_msd_programmable_freq_4_fw_phase_delta_4(data)                    (0x3FFF0000&((data)<<16))
#define  AUDIO_msd_programmable_freq_4_reg_mag_fw_4(data)                        (0x0000FFFF&(data))
#define  AUDIO_msd_programmable_freq_4_get_fw_phase_delta_4(data)                ((0x3FFF0000&(data))>>16)
#define  AUDIO_msd_programmable_freq_4_get_reg_mag_fw_4(data)                    (0x0000FFFF&(data))

#define  AUDIO_threshold_msd_carrier_fw_4                                       0x18006278
#define  AUDIO_threshold_msd_carrier_fw_4_reg_addr                               "0xB8006278"
#define  AUDIO_threshold_msd_carrier_fw_4_reg                                    0xB8006278
#define  AUDIO_threshold_msd_carrier_fw_4_inst_addr                              "0x0083"
#define  set_AUDIO_threshold_msd_carrier_fw_4_reg(data)                          (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_4_reg)=data)
#define  get_AUDIO_threshold_msd_carrier_fw_4_reg                                (*((volatile unsigned int*)AUDIO_threshold_msd_carrier_fw_4_reg))
#define  AUDIO_threshold_msd_carrier_fw_4_fw_thresh_4_shift                      (16)
#define  AUDIO_threshold_msd_carrier_fw_4_fw_thresh_4_low_shift                  (0)
#define  AUDIO_threshold_msd_carrier_fw_4_fw_thresh_4_mask                       (0xFFFF0000)
#define  AUDIO_threshold_msd_carrier_fw_4_fw_thresh_4_low_mask                   (0x0000FFFF)
#define  AUDIO_threshold_msd_carrier_fw_4_fw_thresh_4(data)                      (0xFFFF0000&((data)<<16))
#define  AUDIO_threshold_msd_carrier_fw_4_fw_thresh_4_low(data)                  (0x0000FFFF&(data))
#define  AUDIO_threshold_msd_carrier_fw_4_get_fw_thresh_4(data)                  ((0xFFFF0000&(data))>>16)
#define  AUDIO_threshold_msd_carrier_fw_4_get_fw_thresh_4_low(data)              (0x0000FFFF&(data))

#define  AUDIO_msd_second_reg_std                                               0x1800627C
#define  AUDIO_msd_second_reg_std_reg_addr                                       "0xB800627C"
#define  AUDIO_msd_second_reg_std_reg                                            0xB800627C
#define  AUDIO_msd_second_reg_std_inst_addr                                      "0x0084"
#define  set_AUDIO_msd_second_reg_std_reg(data)                                  (*((volatile unsigned int*)AUDIO_msd_second_reg_std_reg)=data)
#define  get_AUDIO_msd_second_reg_std_reg                                        (*((volatile unsigned int*)AUDIO_msd_second_reg_std_reg))
#define  AUDIO_msd_second_reg_std_reg_cari_sft_detect_en_shift                   (10)
#define  AUDIO_msd_second_reg_std_reg_bw_detect_en_shift                         (9)
#define  AUDIO_msd_second_reg_std_mono_std_sel_shift                             (8)
#define  AUDIO_msd_second_reg_std_second_reg_std_shift                           (0)
#define  AUDIO_msd_second_reg_std_reg_cari_sft_detect_en_mask                    (0x00000400)
#define  AUDIO_msd_second_reg_std_reg_bw_detect_en_mask                          (0x00000200)
#define  AUDIO_msd_second_reg_std_mono_std_sel_mask                              (0x00000100)
#define  AUDIO_msd_second_reg_std_second_reg_std_mask                            (0x0000001F)
#define  AUDIO_msd_second_reg_std_reg_cari_sft_detect_en(data)                   (0x00000400&((data)<<10))
#define  AUDIO_msd_second_reg_std_reg_bw_detect_en(data)                         (0x00000200&((data)<<9))
#define  AUDIO_msd_second_reg_std_mono_std_sel(data)                             (0x00000100&((data)<<8))
#define  AUDIO_msd_second_reg_std_second_reg_std(data)                           (0x0000001F&(data))
#define  AUDIO_msd_second_reg_std_get_reg_cari_sft_detect_en(data)               ((0x00000400&(data))>>10)
#define  AUDIO_msd_second_reg_std_get_reg_bw_detect_en(data)                     ((0x00000200&(data))>>9)
#define  AUDIO_msd_second_reg_std_get_mono_std_sel(data)                         ((0x00000100&(data))>>8)
#define  AUDIO_msd_second_reg_std_get_second_reg_std(data)                       (0x0000001F&(data))

#define  AUDIO_second_main_tone_threshold                                       0x18006280
#define  AUDIO_second_main_tone_threshold_reg_addr                               "0xB8006280"
#define  AUDIO_second_main_tone_threshold_reg                                    0xB8006280
#define  AUDIO_second_main_tone_threshold_inst_addr                              "0x0085"
#define  set_AUDIO_second_main_tone_threshold_reg(data)                          (*((volatile unsigned int*)AUDIO_second_main_tone_threshold_reg)=data)
#define  get_AUDIO_second_main_tone_threshold_reg                                (*((volatile unsigned int*)AUDIO_second_main_tone_threshold_reg))
#define  AUDIO_second_main_tone_threshold_sec_thresh_shift                       (16)
#define  AUDIO_second_main_tone_threshold_sec_thresh_low_shift                   (0)
#define  AUDIO_second_main_tone_threshold_sec_thresh_mask                        (0xFFFF0000)
#define  AUDIO_second_main_tone_threshold_sec_thresh_low_mask                    (0x0000FFFF)
#define  AUDIO_second_main_tone_threshold_sec_thresh(data)                       (0xFFFF0000&((data)<<16))
#define  AUDIO_second_main_tone_threshold_sec_thresh_low(data)                   (0x0000FFFF&(data))
#define  AUDIO_second_main_tone_threshold_get_sec_thresh(data)                   ((0xFFFF0000&(data))>>16)
#define  AUDIO_second_main_tone_threshold_get_sec_thresh_low(data)               (0x0000FFFF&(data))

#define  AUDIO_msd_bist                                                         0x18006284
#define  AUDIO_msd_bist_reg_addr                                                 "0xB8006284"
#define  AUDIO_msd_bist_reg                                                      0xB8006284
#define  AUDIO_msd_bist_inst_addr                                                "0x0086"
#define  set_AUDIO_msd_bist_reg(data)                                            (*((volatile unsigned int*)AUDIO_msd_bist_reg)=data)
#define  get_AUDIO_msd_bist_reg                                                  (*((volatile unsigned int*)AUDIO_msd_bist_reg))
#define  AUDIO_msd_bist_rme_0_shift                                              (4)
#define  AUDIO_msd_bist_rm_0_shift                                               (0)
#define  AUDIO_msd_bist_rme_0_mask                                               (0x00000010)
#define  AUDIO_msd_bist_rm_0_mask                                                (0x0000000F)
#define  AUDIO_msd_bist_rme_0(data)                                              (0x00000010&((data)<<4))
#define  AUDIO_msd_bist_rm_0(data)                                               (0x0000000F&(data))
#define  AUDIO_msd_bist_get_rme_0(data)                                          ((0x00000010&(data))>>4)
#define  AUDIO_msd_bist_get_rm_0(data)                                           (0x0000000F&(data))

#define  AUDIO_msd_main_mag_ori1                                                0x18006288
#define  AUDIO_msd_main_mag_ori1_reg_addr                                        "0xB8006288"
#define  AUDIO_msd_main_mag_ori1_reg                                             0xB8006288
#define  AUDIO_msd_main_mag_ori1_inst_addr                                       "0x0087"
#define  set_AUDIO_msd_main_mag_ori1_reg(data)                                   (*((volatile unsigned int*)AUDIO_msd_main_mag_ori1_reg)=data)
#define  get_AUDIO_msd_main_mag_ori1_reg                                         (*((volatile unsigned int*)AUDIO_msd_main_mag_ori1_reg))
#define  AUDIO_msd_main_mag_ori1_reg_mag_45_fix_shift                            (16)
#define  AUDIO_msd_main_mag_ori1_reg_mag_55_fix_shift                            (0)
#define  AUDIO_msd_main_mag_ori1_reg_mag_45_fix_mask                             (0xFFFF0000)
#define  AUDIO_msd_main_mag_ori1_reg_mag_55_fix_mask                             (0x0000FFFF)
#define  AUDIO_msd_main_mag_ori1_reg_mag_45_fix(data)                            (0xFFFF0000&((data)<<16))
#define  AUDIO_msd_main_mag_ori1_reg_mag_55_fix(data)                            (0x0000FFFF&(data))
#define  AUDIO_msd_main_mag_ori1_get_reg_mag_45_fix(data)                        ((0xFFFF0000&(data))>>16)
#define  AUDIO_msd_main_mag_ori1_get_reg_mag_55_fix(data)                        (0x0000FFFF&(data))

#define  AUDIO_msd_main_mag_ori2                                                0x1800628C
#define  AUDIO_msd_main_mag_ori2_reg_addr                                        "0xB800628C"
#define  AUDIO_msd_main_mag_ori2_reg                                             0xB800628C
#define  AUDIO_msd_main_mag_ori2_inst_addr                                       "0x0088"
#define  set_AUDIO_msd_main_mag_ori2_reg(data)                                   (*((volatile unsigned int*)AUDIO_msd_main_mag_ori2_reg)=data)
#define  get_AUDIO_msd_main_mag_ori2_reg                                         (*((volatile unsigned int*)AUDIO_msd_main_mag_ori2_reg))
#define  AUDIO_msd_main_mag_ori2_reg_mag_60_fix_shift                            (16)
#define  AUDIO_msd_main_mag_ori2_reg_mag_65_fix_shift                            (0)
#define  AUDIO_msd_main_mag_ori2_reg_mag_60_fix_mask                             (0xFFFF0000)
#define  AUDIO_msd_main_mag_ori2_reg_mag_65_fix_mask                             (0x0000FFFF)
#define  AUDIO_msd_main_mag_ori2_reg_mag_60_fix(data)                            (0xFFFF0000&((data)<<16))
#define  AUDIO_msd_main_mag_ori2_reg_mag_65_fix(data)                            (0x0000FFFF&(data))
#define  AUDIO_msd_main_mag_ori2_get_reg_mag_60_fix(data)                        ((0xFFFF0000&(data))>>16)
#define  AUDIO_msd_main_mag_ori2_get_reg_mag_65_fix(data)                        (0x0000FFFF&(data))

#define  AUDIO_msd_gain_ctrl                                                    0x18006290
#define  AUDIO_msd_gain_ctrl_reg_addr                                            "0xB8006290"
#define  AUDIO_msd_gain_ctrl_reg                                                 0xB8006290
#define  AUDIO_msd_gain_ctrl_inst_addr                                           "0x0089"
#define  set_AUDIO_msd_gain_ctrl_reg(data)                                       (*((volatile unsigned int*)AUDIO_msd_gain_ctrl_reg)=data)
#define  get_AUDIO_msd_gain_ctrl_reg                                             (*((volatile unsigned int*)AUDIO_msd_gain_ctrl_reg))
#define  AUDIO_msd_gain_ctrl_msd_gain_en_shift                                   (4)
#define  AUDIO_msd_gain_ctrl_msd_gain_result_shift                               (0)
#define  AUDIO_msd_gain_ctrl_msd_gain_en_mask                                    (0x00000010)
#define  AUDIO_msd_gain_ctrl_msd_gain_result_mask                                (0x0000000F)
#define  AUDIO_msd_gain_ctrl_msd_gain_en(data)                                   (0x00000010&((data)<<4))
#define  AUDIO_msd_gain_ctrl_msd_gain_result(data)                               (0x0000000F&(data))
#define  AUDIO_msd_gain_ctrl_get_msd_gain_en(data)                               ((0x00000010&(data))>>4)
#define  AUDIO_msd_gain_ctrl_get_msd_gain_result(data)                           (0x0000000F&(data))

#define  AUDIO_msd_update_count                                                 0x18006294
#define  AUDIO_msd_update_count_reg_addr                                         "0xB8006294"
#define  AUDIO_msd_update_count_reg                                              0xB8006294
#define  AUDIO_msd_update_count_inst_addr                                        "0x008A"
#define  set_AUDIO_msd_update_count_reg(data)                                    (*((volatile unsigned int*)AUDIO_msd_update_count_reg)=data)
#define  get_AUDIO_msd_update_count_reg                                          (*((volatile unsigned int*)AUDIO_msd_update_count_reg))
#define  AUDIO_msd_update_count_fw_update_count_shift                            (16)
#define  AUDIO_msd_update_count_msd_update_count_shift                           (0)
#define  AUDIO_msd_update_count_fw_update_count_mask                             (0xFFFF0000)
#define  AUDIO_msd_update_count_msd_update_count_mask                            (0x0000FFFF)
#define  AUDIO_msd_update_count_fw_update_count(data)                            (0xFFFF0000&((data)<<16))
#define  AUDIO_msd_update_count_msd_update_count(data)                           (0x0000FFFF&(data))
#define  AUDIO_msd_update_count_get_fw_update_count(data)                        ((0xFFFF0000&(data))>>16)
#define  AUDIO_msd_update_count_get_msd_update_count(data)                       (0x0000FFFF&(data))

#define  AUDIO_mode_detect                                                      0x18006300
#define  AUDIO_mode_detect_reg_addr                                              "0xB8006300"
#define  AUDIO_mode_detect_reg                                                   0xB8006300
#define  AUDIO_mode_detect_inst_addr                                             "0x008B"
#define  set_AUDIO_mode_detect_reg(data)                                         (*((volatile unsigned int*)AUDIO_mode_detect_reg)=data)
#define  get_AUDIO_mode_detect_reg                                               (*((volatile unsigned int*)AUDIO_mode_detect_reg))
#define  AUDIO_mode_detect_md_update_count_shift                                 (16)
#define  AUDIO_mode_detect_hw_mode_en_shift                                      (2)
#define  AUDIO_mode_detect_mode_result_shift                                     (0)
#define  AUDIO_mode_detect_md_update_count_mask                                  (0xFFFF0000)
#define  AUDIO_mode_detect_hw_mode_en_mask                                       (0x00000004)
#define  AUDIO_mode_detect_mode_result_mask                                      (0x00000003)
#define  AUDIO_mode_detect_md_update_count(data)                                 (0xFFFF0000&((data)<<16))
#define  AUDIO_mode_detect_hw_mode_en(data)                                      (0x00000004&((data)<<2))
#define  AUDIO_mode_detect_mode_result(data)                                     (0x00000003&(data))
#define  AUDIO_mode_detect_get_md_update_count(data)                             ((0xFFFF0000&(data))>>16)
#define  AUDIO_mode_detect_get_hw_mode_en(data)                                  ((0x00000004&(data))>>2)
#define  AUDIO_mode_detect_get_mode_result(data)                                 (0x00000003&(data))

#define  AUDIO_md_ctrl                                                          0x18006310
#define  AUDIO_md_ctrl_reg_addr                                                  "0xB8006310"
#define  AUDIO_md_ctrl_reg                                                       0xB8006310
#define  AUDIO_md_ctrl_inst_addr                                                 "0x008C"
#define  set_AUDIO_md_ctrl_reg(data)                                             (*((volatile unsigned int*)AUDIO_md_ctrl_reg)=data)
#define  get_AUDIO_md_ctrl_reg                                                   (*((volatile unsigned int*)AUDIO_md_ctrl_reg))
#define  AUDIO_md_ctrl_enable_shift                                              (31)
#define  AUDIO_md_ctrl_bpf_sel_shift                                             (30)
#define  AUDIO_md_ctrl_high_threshold_shift                                      (28)
#define  AUDIO_md_ctrl_low_threshold_shift                                       (26)
#define  AUDIO_md_ctrl_auto_pre_gain_ctrl_en_shift                               (25)
#define  AUDIO_md_ctrl_auto_gain_ctrl_en_shift                                   (24)
#define  AUDIO_md_ctrl_max_threshold_shift                                       (0)
#define  AUDIO_md_ctrl_enable_mask                                               (0x80000000)
#define  AUDIO_md_ctrl_bpf_sel_mask                                              (0x40000000)
#define  AUDIO_md_ctrl_high_threshold_mask                                       (0x30000000)
#define  AUDIO_md_ctrl_low_threshold_mask                                        (0x0C000000)
#define  AUDIO_md_ctrl_auto_pre_gain_ctrl_en_mask                                (0x02000000)
#define  AUDIO_md_ctrl_auto_gain_ctrl_en_mask                                    (0x01000000)
#define  AUDIO_md_ctrl_max_threshold_mask                                        (0x00FFFFFF)
#define  AUDIO_md_ctrl_enable(data)                                              (0x80000000&((data)<<31))
#define  AUDIO_md_ctrl_bpf_sel(data)                                             (0x40000000&((data)<<30))
#define  AUDIO_md_ctrl_high_threshold(data)                                      (0x30000000&((data)<<28))
#define  AUDIO_md_ctrl_low_threshold(data)                                       (0x0C000000&((data)<<26))
#define  AUDIO_md_ctrl_auto_pre_gain_ctrl_en(data)                               (0x02000000&((data)<<25))
#define  AUDIO_md_ctrl_auto_gain_ctrl_en(data)                                   (0x01000000&((data)<<24))
#define  AUDIO_md_ctrl_max_threshold(data)                                       (0x00FFFFFF&(data))
#define  AUDIO_md_ctrl_get_enable(data)                                          ((0x80000000&(data))>>31)
#define  AUDIO_md_ctrl_get_bpf_sel(data)                                         ((0x40000000&(data))>>30)
#define  AUDIO_md_ctrl_get_high_threshold(data)                                  ((0x30000000&(data))>>28)
#define  AUDIO_md_ctrl_get_low_threshold(data)                                   ((0x0C000000&(data))>>26)
#define  AUDIO_md_ctrl_get_auto_pre_gain_ctrl_en(data)                           ((0x02000000&(data))>>25)
#define  AUDIO_md_ctrl_get_auto_gain_ctrl_en(data)                               ((0x01000000&(data))>>24)
#define  AUDIO_md_ctrl_get_max_threshold(data)                                   (0x00FFFFFF&(data))

#define  AUDIO_md_status_1                                                      0x18006314
#define  AUDIO_md_status_1_reg_addr                                              "0xB8006314"
#define  AUDIO_md_status_1_reg                                                   0xB8006314
#define  AUDIO_md_status_1_inst_addr                                             "0x008D"
#define  set_AUDIO_md_status_1_reg(data)                                         (*((volatile unsigned int*)AUDIO_md_status_1_reg)=data)
#define  get_AUDIO_md_status_1_reg                                               (*((volatile unsigned int*)AUDIO_md_status_1_reg))
#define  AUDIO_md_status_1_gain_result_pre_shift                                 (28)
#define  AUDIO_md_status_1_gain_result_shift                                     (24)
#define  AUDIO_md_status_1_max_other_shift                                       (0)
#define  AUDIO_md_status_1_gain_result_pre_mask                                  (0xF0000000)
#define  AUDIO_md_status_1_gain_result_mask                                      (0x0F000000)
#define  AUDIO_md_status_1_max_other_mask                                        (0x00FFFFFF)
#define  AUDIO_md_status_1_gain_result_pre(data)                                 (0xF0000000&((data)<<28))
#define  AUDIO_md_status_1_gain_result(data)                                     (0x0F000000&((data)<<24))
#define  AUDIO_md_status_1_max_other(data)                                       (0x00FFFFFF&(data))
#define  AUDIO_md_status_1_get_gain_result_pre(data)                             ((0xF0000000&(data))>>28)
#define  AUDIO_md_status_1_get_gain_result(data)                                 ((0x0F000000&(data))>>24)
#define  AUDIO_md_status_1_get_max_other(data)                                   (0x00FFFFFF&(data))

#define  AUDIO_md_status_2                                                      0x18006318
#define  AUDIO_md_status_2_reg_addr                                              "0xB8006318"
#define  AUDIO_md_status_2_reg                                                   0xB8006318
#define  AUDIO_md_status_2_inst_addr                                             "0x008E"
#define  set_AUDIO_md_status_2_reg(data)                                         (*((volatile unsigned int*)AUDIO_md_status_2_reg)=data)
#define  get_AUDIO_md_status_2_reg                                               (*((volatile unsigned int*)AUDIO_md_status_2_reg))
#define  AUDIO_md_status_2_lpf_coef_sel_shift                                    (28)
#define  AUDIO_md_status_2_lpf_coef_sel_lock_shift                               (26)
#define  AUDIO_md_status_2_mode_result_shift                                     (24)
#define  AUDIO_md_status_2_max_dual_shift                                        (0)
#define  AUDIO_md_status_2_lpf_coef_sel_mask                                     (0x30000000)
#define  AUDIO_md_status_2_lpf_coef_sel_lock_mask                                (0x0C000000)
#define  AUDIO_md_status_2_mode_result_mask                                      (0x03000000)
#define  AUDIO_md_status_2_max_dual_mask                                         (0x00FFFFFF)
#define  AUDIO_md_status_2_lpf_coef_sel(data)                                    (0x30000000&((data)<<28))
#define  AUDIO_md_status_2_lpf_coef_sel_lock(data)                               (0x0C000000&((data)<<26))
#define  AUDIO_md_status_2_mode_result(data)                                     (0x03000000&((data)<<24))
#define  AUDIO_md_status_2_max_dual(data)                                        (0x00FFFFFF&(data))
#define  AUDIO_md_status_2_get_lpf_coef_sel(data)                                ((0x30000000&(data))>>28)
#define  AUDIO_md_status_2_get_lpf_coef_sel_lock(data)                           ((0x0C000000&(data))>>26)
#define  AUDIO_md_status_2_get_mode_result(data)                                 ((0x03000000&(data))>>24)
#define  AUDIO_md_status_2_get_max_dual(data)                                    (0x00FFFFFF&(data))

#define  AUDIO_md_status_3                                                      0x1800631C
#define  AUDIO_md_status_3_reg_addr                                              "0xB800631C"
#define  AUDIO_md_status_3_reg                                                   0xB800631C
#define  AUDIO_md_status_3_inst_addr                                             "0x008F"
#define  set_AUDIO_md_status_3_reg(data)                                         (*((volatile unsigned int*)AUDIO_md_status_3_reg)=data)
#define  get_AUDIO_md_status_3_reg                                               (*((volatile unsigned int*)AUDIO_md_status_3_reg))
#define  AUDIO_md_status_3_dummy_31_27_shift                                     (27)
#define  AUDIO_md_status_3_debounce_time_shift                                   (24)
#define  AUDIO_md_status_3_max_stereo_shift                                      (0)
#define  AUDIO_md_status_3_dummy_31_27_mask                                      (0xF8000000)
#define  AUDIO_md_status_3_debounce_time_mask                                    (0x07000000)
#define  AUDIO_md_status_3_max_stereo_mask                                       (0x00FFFFFF)
#define  AUDIO_md_status_3_dummy_31_27(data)                                     (0xF8000000&((data)<<27))
#define  AUDIO_md_status_3_debounce_time(data)                                   (0x07000000&((data)<<24))
#define  AUDIO_md_status_3_max_stereo(data)                                      (0x00FFFFFF&(data))
#define  AUDIO_md_status_3_get_dummy_31_27(data)                                 ((0xF8000000&(data))>>27)
#define  AUDIO_md_status_3_get_debounce_time(data)                               ((0x07000000&(data))>>24)
#define  AUDIO_md_status_3_get_max_stereo(data)                                  (0x00FFFFFF&(data))

#define  AUDIO_md_gain_window                                                   0x18006320
#define  AUDIO_md_gain_window_reg_addr                                           "0xB8006320"
#define  AUDIO_md_gain_window_reg                                                0xB8006320
#define  AUDIO_md_gain_window_inst_addr                                          "0x0090"
#define  set_AUDIO_md_gain_window_reg(data)                                      (*((volatile unsigned int*)AUDIO_md_gain_window_reg)=data)
#define  get_AUDIO_md_gain_window_reg                                            (*((volatile unsigned int*)AUDIO_md_gain_window_reg))
#define  AUDIO_md_gain_window_gain_win_shift                                     (16)
#define  AUDIO_md_gain_window_pre_gain_win_shift                                 (0)
#define  AUDIO_md_gain_window_gain_win_mask                                      (0xFFFF0000)
#define  AUDIO_md_gain_window_pre_gain_win_mask                                  (0x0000FFFF)
#define  AUDIO_md_gain_window_gain_win(data)                                     (0xFFFF0000&((data)<<16))
#define  AUDIO_md_gain_window_pre_gain_win(data)                                 (0x0000FFFF&(data))
#define  AUDIO_md_gain_window_get_gain_win(data)                                 ((0xFFFF0000&(data))>>16)
#define  AUDIO_md_gain_window_get_pre_gain_win(data)                             (0x0000FFFF&(data))

#define  AUDIO_md_limit_thre                                                    0x18006324
#define  AUDIO_md_limit_thre_reg_addr                                            "0xB8006324"
#define  AUDIO_md_limit_thre_reg                                                 0xB8006324
#define  AUDIO_md_limit_thre_inst_addr                                           "0x0091"
#define  set_AUDIO_md_limit_thre_reg(data)                                       (*((volatile unsigned int*)AUDIO_md_limit_thre_reg)=data)
#define  get_AUDIO_md_limit_thre_reg                                             (*((volatile unsigned int*)AUDIO_md_limit_thre_reg))
#define  AUDIO_md_limit_thre_md_limit_thre_shift                                 (0)
#define  AUDIO_md_limit_thre_md_limit_thre_mask                                  (0x00FFFFFF)
#define  AUDIO_md_limit_thre_md_limit_thre(data)                                 (0x00FFFFFF&(data))
#define  AUDIO_md_limit_thre_get_md_limit_thre(data)                             (0x00FFFFFF&(data))

#define  AUDIO_carrier_freq_deviation_ctrl                                      0x18006350
#define  AUDIO_carrier_freq_deviation_ctrl_reg_addr                              "0xB8006350"
#define  AUDIO_carrier_freq_deviation_ctrl_reg                                   0xB8006350
#define  AUDIO_carrier_freq_deviation_ctrl_inst_addr                             "0x0092"
#define  set_AUDIO_carrier_freq_deviation_ctrl_reg(data)                         (*((volatile unsigned int*)AUDIO_carrier_freq_deviation_ctrl_reg)=data)
#define  get_AUDIO_carrier_freq_deviation_ctrl_reg                               (*((volatile unsigned int*)AUDIO_carrier_freq_deviation_ctrl_reg))
#define  AUDIO_carrier_freq_deviation_ctrl_sif_data_source_shift                 (31)
#define  AUDIO_carrier_freq_deviation_ctrl_nicam_play_ana_sel_shift              (30)
#define  AUDIO_carrier_freq_deviation_ctrl_tone_det_en_shift                     (27)
#define  AUDIO_carrier_freq_deviation_ctrl_force_a2_dk_sel_shift                 (25)
#define  AUDIO_carrier_freq_deviation_ctrl_freq_manual_en_shift                  (24)
#define  AUDIO_carrier_freq_deviation_ctrl_phase_3rd_delta_shift                 (0)
#define  AUDIO_carrier_freq_deviation_ctrl_sif_data_source_mask                  (0x80000000)
#define  AUDIO_carrier_freq_deviation_ctrl_nicam_play_ana_sel_mask               (0x40000000)
#define  AUDIO_carrier_freq_deviation_ctrl_tone_det_en_mask                      (0x08000000)
#define  AUDIO_carrier_freq_deviation_ctrl_force_a2_dk_sel_mask                  (0x06000000)
#define  AUDIO_carrier_freq_deviation_ctrl_freq_manual_en_mask                   (0x01000000)
#define  AUDIO_carrier_freq_deviation_ctrl_phase_3rd_delta_mask                  (0x00003FFF)
#define  AUDIO_carrier_freq_deviation_ctrl_sif_data_source(data)                 (0x80000000&((data)<<31))
#define  AUDIO_carrier_freq_deviation_ctrl_nicam_play_ana_sel(data)              (0x40000000&((data)<<30))
#define  AUDIO_carrier_freq_deviation_ctrl_tone_det_en(data)                     (0x08000000&((data)<<27))
#define  AUDIO_carrier_freq_deviation_ctrl_force_a2_dk_sel(data)                 (0x06000000&((data)<<25))
#define  AUDIO_carrier_freq_deviation_ctrl_freq_manual_en(data)                  (0x01000000&((data)<<24))
#define  AUDIO_carrier_freq_deviation_ctrl_phase_3rd_delta(data)                 (0x00003FFF&(data))
#define  AUDIO_carrier_freq_deviation_ctrl_get_sif_data_source(data)             ((0x80000000&(data))>>31)
#define  AUDIO_carrier_freq_deviation_ctrl_get_nicam_play_ana_sel(data)          ((0x40000000&(data))>>30)
#define  AUDIO_carrier_freq_deviation_ctrl_get_tone_det_en(data)                 ((0x08000000&(data))>>27)
#define  AUDIO_carrier_freq_deviation_ctrl_get_force_a2_dk_sel(data)             ((0x06000000&(data))>>25)
#define  AUDIO_carrier_freq_deviation_ctrl_get_freq_manual_en(data)              ((0x01000000&(data))>>24)
#define  AUDIO_carrier_freq_deviation_ctrl_get_phase_3rd_delta(data)             (0x00003FFF&(data))

#define  AUDIO_carrier_phase_delta                                              0x18006354
#define  AUDIO_carrier_phase_delta_reg_addr                                      "0xB8006354"
#define  AUDIO_carrier_phase_delta_reg                                           0xB8006354
#define  AUDIO_carrier_phase_delta_inst_addr                                     "0x0093"
#define  set_AUDIO_carrier_phase_delta_reg(data)                                 (*((volatile unsigned int*)AUDIO_carrier_phase_delta_reg)=data)
#define  get_AUDIO_carrier_phase_delta_reg                                       (*((volatile unsigned int*)AUDIO_carrier_phase_delta_reg))
#define  AUDIO_carrier_phase_delta_main_phase_delta_shift                        (16)
#define  AUDIO_carrier_phase_delta_sub_phase_delta_shift                         (0)
#define  AUDIO_carrier_phase_delta_main_phase_delta_mask                         (0x3FFF0000)
#define  AUDIO_carrier_phase_delta_sub_phase_delta_mask                          (0x00003FFF)
#define  AUDIO_carrier_phase_delta_main_phase_delta(data)                        (0x3FFF0000&((data)<<16))
#define  AUDIO_carrier_phase_delta_sub_phase_delta(data)                         (0x00003FFF&(data))
#define  AUDIO_carrier_phase_delta_get_main_phase_delta(data)                    ((0x3FFF0000&(data))>>16)
#define  AUDIO_carrier_phase_delta_get_sub_phase_delta(data)                     (0x00003FFF&(data))

#define  AUDIO_a2_eiaj_dc_filter                                                0x18006358
#define  AUDIO_a2_eiaj_dc_filter_reg_addr                                        "0xB8006358"
#define  AUDIO_a2_eiaj_dc_filter_reg                                             0xB8006358
#define  AUDIO_a2_eiaj_dc_filter_inst_addr                                       "0x0094"
#define  set_AUDIO_a2_eiaj_dc_filter_reg(data)                                   (*((volatile unsigned int*)AUDIO_a2_eiaj_dc_filter_reg)=data)
#define  get_AUDIO_a2_eiaj_dc_filter_reg                                         (*((volatile unsigned int*)AUDIO_a2_eiaj_dc_filter_reg))
#define  AUDIO_a2_eiaj_dc_filter_fm_magnitude_shift                              (16)
#define  AUDIO_a2_eiaj_dc_filter_dummy_15_0_shift                                (0)
#define  AUDIO_a2_eiaj_dc_filter_fm_magnitude_mask                               (0xFFFF0000)
#define  AUDIO_a2_eiaj_dc_filter_dummy_15_0_mask                                 (0x0000FFFF)
#define  AUDIO_a2_eiaj_dc_filter_fm_magnitude(data)                              (0xFFFF0000&((data)<<16))
#define  AUDIO_a2_eiaj_dc_filter_dummy_15_0(data)                                (0x0000FFFF&(data))
#define  AUDIO_a2_eiaj_dc_filter_get_fm_magnitude(data)                          ((0xFFFF0000&(data))>>16)
#define  AUDIO_a2_eiaj_dc_filter_get_dummy_15_0(data)                            (0x0000FFFF&(data))

#define  AUDIO_TVdemod_Digital_Volume_Control                                   0x1800635C
#define  AUDIO_TVdemod_Digital_Volume_Control_reg_addr                           "0xB800635C"
#define  AUDIO_TVdemod_Digital_Volume_Control_reg                                0xB800635C
#define  AUDIO_TVdemod_Digital_Volume_Control_inst_addr                          "0x0095"
#define  set_AUDIO_TVdemod_Digital_Volume_Control_reg(data)                      (*((volatile unsigned int*)AUDIO_TVdemod_Digital_Volume_Control_reg)=data)
#define  get_AUDIO_TVdemod_Digital_Volume_Control_reg                            (*((volatile unsigned int*)AUDIO_TVdemod_Digital_Volume_Control_reg))
#define  AUDIO_TVdemod_Digital_Volume_Control_dvol_apply_tvd_shift               (28)
#define  AUDIO_TVdemod_Digital_Volume_Control_dvol_enable_tvd_shift              (27)
#define  AUDIO_TVdemod_Digital_Volume_Control_mode_sel_tvd_shift                 (26)
#define  AUDIO_TVdemod_Digital_Volume_Control_force_mute_tvd_shift               (25)
#define  AUDIO_TVdemod_Digital_Volume_Control_switch_status_tvd_shift            (23)
#define  AUDIO_TVdemod_Digital_Volume_Control_zcto_status_tvd_shift              (22)
#define  AUDIO_TVdemod_Digital_Volume_Control_zcth_tvd_shift                     (17)
#define  AUDIO_TVdemod_Digital_Volume_Control_dvcm_tvd_shift                     (15)
#define  AUDIO_TVdemod_Digital_Volume_Control_zcto_mute_tvd_shift                (12)
#define  AUDIO_TVdemod_Digital_Volume_Control_ramp_step_mute_tvd_shift           (10)
#define  AUDIO_TVdemod_Digital_Volume_Control_delay_ctrl_tvd_shift               (0)
#define  AUDIO_TVdemod_Digital_Volume_Control_dvol_apply_tvd_mask                (0x10000000)
#define  AUDIO_TVdemod_Digital_Volume_Control_dvol_enable_tvd_mask               (0x08000000)
#define  AUDIO_TVdemod_Digital_Volume_Control_mode_sel_tvd_mask                  (0x04000000)
#define  AUDIO_TVdemod_Digital_Volume_Control_force_mute_tvd_mask                (0x02000000)
#define  AUDIO_TVdemod_Digital_Volume_Control_switch_status_tvd_mask             (0x01800000)
#define  AUDIO_TVdemod_Digital_Volume_Control_zcto_status_tvd_mask               (0x00400000)
#define  AUDIO_TVdemod_Digital_Volume_Control_zcth_tvd_mask                      (0x003E0000)
#define  AUDIO_TVdemod_Digital_Volume_Control_dvcm_tvd_mask                      (0x00018000)
#define  AUDIO_TVdemod_Digital_Volume_Control_zcto_mute_tvd_mask                 (0x00007000)
#define  AUDIO_TVdemod_Digital_Volume_Control_ramp_step_mute_tvd_mask            (0x00000C00)
#define  AUDIO_TVdemod_Digital_Volume_Control_delay_ctrl_tvd_mask                (0x000003FF)
#define  AUDIO_TVdemod_Digital_Volume_Control_dvol_apply_tvd(data)               (0x10000000&((data)<<28))
#define  AUDIO_TVdemod_Digital_Volume_Control_dvol_enable_tvd(data)              (0x08000000&((data)<<27))
#define  AUDIO_TVdemod_Digital_Volume_Control_mode_sel_tvd(data)                 (0x04000000&((data)<<26))
#define  AUDIO_TVdemod_Digital_Volume_Control_force_mute_tvd(data)               (0x02000000&((data)<<25))
#define  AUDIO_TVdemod_Digital_Volume_Control_switch_status_tvd(data)            (0x01800000&((data)<<23))
#define  AUDIO_TVdemod_Digital_Volume_Control_zcto_status_tvd(data)              (0x00400000&((data)<<22))
#define  AUDIO_TVdemod_Digital_Volume_Control_zcth_tvd(data)                     (0x003E0000&((data)<<17))
#define  AUDIO_TVdemod_Digital_Volume_Control_dvcm_tvd(data)                     (0x00018000&((data)<<15))
#define  AUDIO_TVdemod_Digital_Volume_Control_zcto_mute_tvd(data)                (0x00007000&((data)<<12))
#define  AUDIO_TVdemod_Digital_Volume_Control_ramp_step_mute_tvd(data)           (0x00000C00&((data)<<10))
#define  AUDIO_TVdemod_Digital_Volume_Control_delay_ctrl_tvd(data)               (0x000003FF&(data))
#define  AUDIO_TVdemod_Digital_Volume_Control_get_dvol_apply_tvd(data)           ((0x10000000&(data))>>28)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_dvol_enable_tvd(data)          ((0x08000000&(data))>>27)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_mode_sel_tvd(data)             ((0x04000000&(data))>>26)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_force_mute_tvd(data)           ((0x02000000&(data))>>25)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_switch_status_tvd(data)        ((0x01800000&(data))>>23)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_zcto_status_tvd(data)          ((0x00400000&(data))>>22)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_zcth_tvd(data)                 ((0x003E0000&(data))>>17)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_dvcm_tvd(data)                 ((0x00018000&(data))>>15)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_zcto_mute_tvd(data)            ((0x00007000&(data))>>12)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_ramp_step_mute_tvd(data)       ((0x00000C00&(data))>>10)
#define  AUDIO_TVdemod_Digital_Volume_Control_get_delay_ctrl_tvd(data)           (0x000003FF&(data))

#define  AUDIO_TVdemod_Digital_Volume_Control_2                                 0x18006E28
#define  AUDIO_TVdemod_Digital_Volume_Control_2_reg_addr                         "0xB8006E28"
#define  AUDIO_TVdemod_Digital_Volume_Control_2_reg                              0xB8006E28
#define  AUDIO_TVdemod_Digital_Volume_Control_2_inst_addr                        "0x0096"
#define  set_AUDIO_TVdemod_Digital_Volume_Control_2_reg(data)                    (*((volatile unsigned int*)AUDIO_TVdemod_Digital_Volume_Control_2_reg)=data)
#define  get_AUDIO_TVdemod_Digital_Volume_Control_2_reg                          (*((volatile unsigned int*)AUDIO_TVdemod_Digital_Volume_Control_2_reg))
#define  AUDIO_TVdemod_Digital_Volume_Control_2_vol_a_tvd_shift                  (26)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_delay_ctrl_unmute_tvd_shift      (16)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_vol_b_tvd_shift                  (10)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_delay_ctrl_mute_tvd_shift        (0)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_vol_a_tvd_mask                   (0x7C000000)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_delay_ctrl_unmute_tvd_mask       (0x03FF0000)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_vol_b_tvd_mask                   (0x0000FC00)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_delay_ctrl_mute_tvd_mask         (0x000003FF)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_vol_a_tvd(data)                  (0x7C000000&((data)<<26))
#define  AUDIO_TVdemod_Digital_Volume_Control_2_delay_ctrl_unmute_tvd(data)      (0x03FF0000&((data)<<16))
#define  AUDIO_TVdemod_Digital_Volume_Control_2_vol_b_tvd(data)                  (0x0000FC00&((data)<<10))
#define  AUDIO_TVdemod_Digital_Volume_Control_2_delay_ctrl_mute_tvd(data)        (0x000003FF&(data))
#define  AUDIO_TVdemod_Digital_Volume_Control_2_get_vol_a_tvd(data)              ((0x7C000000&(data))>>26)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_get_delay_ctrl_unmute_tvd(data)  ((0x03FF0000&(data))>>16)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_get_vol_b_tvd(data)              ((0x0000FC00&(data))>>10)
#define  AUDIO_TVdemod_Digital_Volume_Control_2_get_delay_ctrl_mute_tvd(data)    (0x000003FF&(data))

#define  AUDIO_EQ_tvd_bp1_1                                                     0x18006EA0
#define  AUDIO_EQ_tvd_bp1_1_reg_addr                                             "0xB8006EA0"
#define  AUDIO_EQ_tvd_bp1_1_reg                                                  0xB8006EA0
#define  AUDIO_EQ_tvd_bp1_1_inst_addr                                            "0x0097"
#define  set_AUDIO_EQ_tvd_bp1_1_reg(data)                                        (*((volatile unsigned int*)AUDIO_EQ_tvd_bp1_1_reg)=data)
#define  get_AUDIO_EQ_tvd_bp1_1_reg                                              (*((volatile unsigned int*)AUDIO_EQ_tvd_bp1_1_reg))
#define  AUDIO_EQ_tvd_bp1_1_eq_tvd_bp1_a1_shift                                  (16)
#define  AUDIO_EQ_tvd_bp1_1_eq_tvd_bp1_a2_shift                                  (0)
#define  AUDIO_EQ_tvd_bp1_1_eq_tvd_bp1_a1_mask                                   (0xFFFF0000)
#define  AUDIO_EQ_tvd_bp1_1_eq_tvd_bp1_a2_mask                                   (0x0000FFFF)
#define  AUDIO_EQ_tvd_bp1_1_eq_tvd_bp1_a1(data)                                  (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_tvd_bp1_1_eq_tvd_bp1_a2(data)                                  (0x0000FFFF&(data))
#define  AUDIO_EQ_tvd_bp1_1_get_eq_tvd_bp1_a1(data)                              ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_tvd_bp1_1_get_eq_tvd_bp1_a2(data)                              (0x0000FFFF&(data))

#define  AUDIO_EQ_tvd_bp1_2                                                     0x18006EA4
#define  AUDIO_EQ_tvd_bp1_2_reg_addr                                             "0xB8006EA4"
#define  AUDIO_EQ_tvd_bp1_2_reg                                                  0xB8006EA4
#define  AUDIO_EQ_tvd_bp1_2_inst_addr                                            "0x0098"
#define  set_AUDIO_EQ_tvd_bp1_2_reg(data)                                        (*((volatile unsigned int*)AUDIO_EQ_tvd_bp1_2_reg)=data)
#define  get_AUDIO_EQ_tvd_bp1_2_reg                                              (*((volatile unsigned int*)AUDIO_EQ_tvd_bp1_2_reg))
#define  AUDIO_EQ_tvd_bp1_2_eq_tvd_bp1_h0_shift                                  (0)
#define  AUDIO_EQ_tvd_bp1_2_eq_tvd_bp1_h0_mask                                   (0x0000FFFF)
#define  AUDIO_EQ_tvd_bp1_2_eq_tvd_bp1_h0(data)                                  (0x0000FFFF&(data))
#define  AUDIO_EQ_tvd_bp1_2_get_eq_tvd_bp1_h0(data)                              (0x0000FFFF&(data))

#define  AUDIO_EQ_tvd_bp2_1                                                     0x18006EA8
#define  AUDIO_EQ_tvd_bp2_1_reg_addr                                             "0xB8006EA8"
#define  AUDIO_EQ_tvd_bp2_1_reg                                                  0xB8006EA8
#define  AUDIO_EQ_tvd_bp2_1_inst_addr                                            "0x0099"
#define  set_AUDIO_EQ_tvd_bp2_1_reg(data)                                        (*((volatile unsigned int*)AUDIO_EQ_tvd_bp2_1_reg)=data)
#define  get_AUDIO_EQ_tvd_bp2_1_reg                                              (*((volatile unsigned int*)AUDIO_EQ_tvd_bp2_1_reg))
#define  AUDIO_EQ_tvd_bp2_1_eq_tvd_bp2_a1_shift                                  (16)
#define  AUDIO_EQ_tvd_bp2_1_eq_tvd_bp2_a2_shift                                  (0)
#define  AUDIO_EQ_tvd_bp2_1_eq_tvd_bp2_a1_mask                                   (0xFFFF0000)
#define  AUDIO_EQ_tvd_bp2_1_eq_tvd_bp2_a2_mask                                   (0x0000FFFF)
#define  AUDIO_EQ_tvd_bp2_1_eq_tvd_bp2_a1(data)                                  (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_tvd_bp2_1_eq_tvd_bp2_a2(data)                                  (0x0000FFFF&(data))
#define  AUDIO_EQ_tvd_bp2_1_get_eq_tvd_bp2_a1(data)                              ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_tvd_bp2_1_get_eq_tvd_bp2_a2(data)                              (0x0000FFFF&(data))

#define  AUDIO_EQ_tvd_bp2_2                                                     0x18006EAC
#define  AUDIO_EQ_tvd_bp2_2_reg_addr                                             "0xB8006EAC"
#define  AUDIO_EQ_tvd_bp2_2_reg                                                  0xB8006EAC
#define  AUDIO_EQ_tvd_bp2_2_inst_addr                                            "0x009A"
#define  set_AUDIO_EQ_tvd_bp2_2_reg(data)                                        (*((volatile unsigned int*)AUDIO_EQ_tvd_bp2_2_reg)=data)
#define  get_AUDIO_EQ_tvd_bp2_2_reg                                              (*((volatile unsigned int*)AUDIO_EQ_tvd_bp2_2_reg))
#define  AUDIO_EQ_tvd_bp2_2_eq_tvd_bp2_h0_shift                                  (0)
#define  AUDIO_EQ_tvd_bp2_2_eq_tvd_bp2_h0_mask                                   (0x0000FFFF)
#define  AUDIO_EQ_tvd_bp2_2_eq_tvd_bp2_h0(data)                                  (0x0000FFFF&(data))
#define  AUDIO_EQ_tvd_bp2_2_get_eq_tvd_bp2_h0(data)                              (0x0000FFFF&(data))

#define  AUDIO_EQ_tvd_bp_Control                                                0x18006EB0
#define  AUDIO_EQ_tvd_bp_Control_reg_addr                                        "0xB8006EB0"
#define  AUDIO_EQ_tvd_bp_Control_reg                                             0xB8006EB0
#define  AUDIO_EQ_tvd_bp_Control_inst_addr                                       "0x009B"
#define  set_AUDIO_EQ_tvd_bp_Control_reg(data)                                   (*((volatile unsigned int*)AUDIO_EQ_tvd_bp_Control_reg)=data)
#define  get_AUDIO_EQ_tvd_bp_Control_reg                                         (*((volatile unsigned int*)AUDIO_EQ_tvd_bp_Control_reg))
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_deq_enable_shift                         (3)
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_lp_enable_shift                          (2)
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_band2_enable_shift                       (1)
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_band1_enable_shift                       (0)
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_deq_enable_mask                          (0x00000008)
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_lp_enable_mask                           (0x00000004)
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_band2_enable_mask                        (0x00000002)
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_band1_enable_mask                        (0x00000001)
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_deq_enable(data)                         (0x00000008&((data)<<3))
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_lp_enable(data)                          (0x00000004&((data)<<2))
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_band2_enable(data)                       (0x00000002&((data)<<1))
#define  AUDIO_EQ_tvd_bp_Control_eq_tvd_band1_enable(data)                       (0x00000001&(data))
#define  AUDIO_EQ_tvd_bp_Control_get_eq_tvd_deq_enable(data)                     ((0x00000008&(data))>>3)
#define  AUDIO_EQ_tvd_bp_Control_get_eq_tvd_lp_enable(data)                      ((0x00000004&(data))>>2)
#define  AUDIO_EQ_tvd_bp_Control_get_eq_tvd_band2_enable(data)                   ((0x00000002&(data))>>1)
#define  AUDIO_EQ_tvd_bp_Control_get_eq_tvd_band1_enable(data)                   (0x00000001&(data))

#define  AUDIO_EQ_tvd_bp_Status                                                 0x18006EB4
#define  AUDIO_EQ_tvd_bp_Status_reg_addr                                         "0xB8006EB4"
#define  AUDIO_EQ_tvd_bp_Status_reg                                              0xB8006EB4
#define  AUDIO_EQ_tvd_bp_Status_inst_addr                                        "0x009C"
#define  set_AUDIO_EQ_tvd_bp_Status_reg(data)                                    (*((volatile unsigned int*)AUDIO_EQ_tvd_bp_Status_reg)=data)
#define  get_AUDIO_EQ_tvd_bp_Status_reg                                          (*((volatile unsigned int*)AUDIO_EQ_tvd_bp_Status_reg))
#define  AUDIO_EQ_tvd_bp_Status_eq_tvd_lp_of_shift                               (2)
#define  AUDIO_EQ_tvd_bp_Status_eq_tvd_band2_of_shift                            (1)
#define  AUDIO_EQ_tvd_bp_Status_eq_tvd_band1_of_shift                            (0)
#define  AUDIO_EQ_tvd_bp_Status_eq_tvd_lp_of_mask                                (0x00000004)
#define  AUDIO_EQ_tvd_bp_Status_eq_tvd_band2_of_mask                             (0x00000002)
#define  AUDIO_EQ_tvd_bp_Status_eq_tvd_band1_of_mask                             (0x00000001)
#define  AUDIO_EQ_tvd_bp_Status_eq_tvd_lp_of(data)                               (0x00000004&((data)<<2))
#define  AUDIO_EQ_tvd_bp_Status_eq_tvd_band2_of(data)                            (0x00000002&((data)<<1))
#define  AUDIO_EQ_tvd_bp_Status_eq_tvd_band1_of(data)                            (0x00000001&(data))
#define  AUDIO_EQ_tvd_bp_Status_get_eq_tvd_lp_of(data)                           ((0x00000004&(data))>>2)
#define  AUDIO_EQ_tvd_bp_Status_get_eq_tvd_band2_of(data)                        ((0x00000002&(data))>>1)
#define  AUDIO_EQ_tvd_bp_Status_get_eq_tvd_band1_of(data)                        (0x00000001&(data))

#define  AUDIO_EQ_tvd_lp                                                        0x18006EB8
#define  AUDIO_EQ_tvd_lp_reg_addr                                                "0xB8006EB8"
#define  AUDIO_EQ_tvd_lp_reg                                                     0xB8006EB8
#define  AUDIO_EQ_tvd_lp_inst_addr                                               "0x009D"
#define  set_AUDIO_EQ_tvd_lp_reg(data)                                           (*((volatile unsigned int*)AUDIO_EQ_tvd_lp_reg)=data)
#define  get_AUDIO_EQ_tvd_lp_reg                                                 (*((volatile unsigned int*)AUDIO_EQ_tvd_lp_reg))
#define  AUDIO_EQ_tvd_lp_eq_tvd_lp_a1_shift                                      (16)
#define  AUDIO_EQ_tvd_lp_eq_tvd_lp_h0_shift                                      (0)
#define  AUDIO_EQ_tvd_lp_eq_tvd_lp_a1_mask                                       (0xFFFF0000)
#define  AUDIO_EQ_tvd_lp_eq_tvd_lp_h0_mask                                       (0x0000FFFF)
#define  AUDIO_EQ_tvd_lp_eq_tvd_lp_a1(data)                                      (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_tvd_lp_eq_tvd_lp_h0(data)                                      (0x0000FFFF&(data))
#define  AUDIO_EQ_tvd_lp_get_eq_tvd_lp_a1(data)                                  ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_tvd_lp_get_eq_tvd_lp_h0(data)                                  (0x0000FFFF&(data))

#define  AUDIO_am                                                               0x18006360
#define  AUDIO_am_reg_addr                                                       "0xB8006360"
#define  AUDIO_am_reg                                                            0xB8006360
#define  AUDIO_am_inst_addr                                                      "0x009E"
#define  set_AUDIO_am_reg(data)                                                  (*((volatile unsigned int*)AUDIO_am_reg)=data)
#define  get_AUDIO_am_reg                                                        (*((volatile unsigned int*)AUDIO_am_reg))
#define  AUDIO_am_dummy_7_4_shift                                                (4)
#define  AUDIO_am_am_bpf_bw_shift                                                (3)
#define  AUDIO_am_am_path_sel_shift                                              (2)
#define  AUDIO_am_hw_am_prescale_shift                                           (0)
#define  AUDIO_am_dummy_7_4_mask                                                 (0x000000F0)
#define  AUDIO_am_am_bpf_bw_mask                                                 (0x00000008)
#define  AUDIO_am_am_path_sel_mask                                               (0x00000004)
#define  AUDIO_am_hw_am_prescale_mask                                            (0x00000003)
#define  AUDIO_am_dummy_7_4(data)                                                (0x000000F0&((data)<<4))
#define  AUDIO_am_am_bpf_bw(data)                                                (0x00000008&((data)<<3))
#define  AUDIO_am_am_path_sel(data)                                              (0x00000004&((data)<<2))
#define  AUDIO_am_hw_am_prescale(data)                                           (0x00000003&(data))
#define  AUDIO_am_get_dummy_7_4(data)                                            ((0x000000F0&(data))>>4)
#define  AUDIO_am_get_am_bpf_bw(data)                                            ((0x00000008&(data))>>3)
#define  AUDIO_am_get_am_path_sel(data)                                          ((0x00000004&(data))>>2)
#define  AUDIO_am_get_hw_am_prescale(data)                                       (0x00000003&(data))

#define  AUDIO_bist_am                                                          0x18006364
#define  AUDIO_bist_am_reg_addr                                                  "0xB8006364"
#define  AUDIO_bist_am_reg                                                       0xB8006364
#define  AUDIO_bist_am_inst_addr                                                 "0x009F"
#define  set_AUDIO_bist_am_reg(data)                                             (*((volatile unsigned int*)AUDIO_bist_am_reg)=data)
#define  get_AUDIO_bist_am_reg                                                   (*((volatile unsigned int*)AUDIO_bist_am_reg))
#define  AUDIO_bist_am_rme_0_shift                                               (4)
#define  AUDIO_bist_am_rm_0_shift                                                (0)
#define  AUDIO_bist_am_rme_0_mask                                                (0x00000010)
#define  AUDIO_bist_am_rm_0_mask                                                 (0x0000000F)
#define  AUDIO_bist_am_rme_0(data)                                               (0x00000010&((data)<<4))
#define  AUDIO_bist_am_rm_0(data)                                                (0x0000000F&(data))
#define  AUDIO_bist_am_get_rme_0(data)                                           ((0x00000010&(data))>>4)
#define  AUDIO_bist_am_get_rm_0(data)                                            (0x0000000F&(data))

#define  AUDIO_sap_bpf_stage1_1                                                 0x180063D0
#define  AUDIO_sap_bpf_stage1_1_reg_addr                                         "0xB80063D0"
#define  AUDIO_sap_bpf_stage1_1_reg                                              0xB80063D0
#define  AUDIO_sap_bpf_stage1_1_inst_addr                                        "0x00A0"
#define  set_AUDIO_sap_bpf_stage1_1_reg(data)                                    (*((volatile unsigned int*)AUDIO_sap_bpf_stage1_1_reg)=data)
#define  get_AUDIO_sap_bpf_stage1_1_reg                                          (*((volatile unsigned int*)AUDIO_sap_bpf_stage1_1_reg))
#define  AUDIO_sap_bpf_stage1_1_sap_bpf_stage1_b0_shift                          (16)
#define  AUDIO_sap_bpf_stage1_1_sap_bpf_stage1_b1_shift                          (0)
#define  AUDIO_sap_bpf_stage1_1_sap_bpf_stage1_b0_mask                           (0xFFFF0000)
#define  AUDIO_sap_bpf_stage1_1_sap_bpf_stage1_b1_mask                           (0x0000FFFF)
#define  AUDIO_sap_bpf_stage1_1_sap_bpf_stage1_b0(data)                          (0xFFFF0000&((data)<<16))
#define  AUDIO_sap_bpf_stage1_1_sap_bpf_stage1_b1(data)                          (0x0000FFFF&(data))
#define  AUDIO_sap_bpf_stage1_1_get_sap_bpf_stage1_b0(data)                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_sap_bpf_stage1_1_get_sap_bpf_stage1_b1(data)                      (0x0000FFFF&(data))

#define  AUDIO_sap_bpf_stage1_2                                                 0x180063D4
#define  AUDIO_sap_bpf_stage1_2_reg_addr                                         "0xB80063D4"
#define  AUDIO_sap_bpf_stage1_2_reg                                              0xB80063D4
#define  AUDIO_sap_bpf_stage1_2_inst_addr                                        "0x00A1"
#define  set_AUDIO_sap_bpf_stage1_2_reg(data)                                    (*((volatile unsigned int*)AUDIO_sap_bpf_stage1_2_reg)=data)
#define  get_AUDIO_sap_bpf_stage1_2_reg                                          (*((volatile unsigned int*)AUDIO_sap_bpf_stage1_2_reg))
#define  AUDIO_sap_bpf_stage1_2_sap_bpf_stage1_b2_shift                          (0)
#define  AUDIO_sap_bpf_stage1_2_sap_bpf_stage1_b2_mask                           (0x0000FFFF)
#define  AUDIO_sap_bpf_stage1_2_sap_bpf_stage1_b2(data)                          (0x0000FFFF&(data))
#define  AUDIO_sap_bpf_stage1_2_get_sap_bpf_stage1_b2(data)                      (0x0000FFFF&(data))

#define  AUDIO_sap_bpf_stage1_3                                                 0x180063D8
#define  AUDIO_sap_bpf_stage1_3_reg_addr                                         "0xB80063D8"
#define  AUDIO_sap_bpf_stage1_3_reg                                              0xB80063D8
#define  AUDIO_sap_bpf_stage1_3_inst_addr                                        "0x00A2"
#define  set_AUDIO_sap_bpf_stage1_3_reg(data)                                    (*((volatile unsigned int*)AUDIO_sap_bpf_stage1_3_reg)=data)
#define  get_AUDIO_sap_bpf_stage1_3_reg                                          (*((volatile unsigned int*)AUDIO_sap_bpf_stage1_3_reg))
#define  AUDIO_sap_bpf_stage1_3_sap_bpf_stage1_a1_shift                          (16)
#define  AUDIO_sap_bpf_stage1_3_sap_bpf_stage1_a2_shift                          (0)
#define  AUDIO_sap_bpf_stage1_3_sap_bpf_stage1_a1_mask                           (0xFFFF0000)
#define  AUDIO_sap_bpf_stage1_3_sap_bpf_stage1_a2_mask                           (0x0000FFFF)
#define  AUDIO_sap_bpf_stage1_3_sap_bpf_stage1_a1(data)                          (0xFFFF0000&((data)<<16))
#define  AUDIO_sap_bpf_stage1_3_sap_bpf_stage1_a2(data)                          (0x0000FFFF&(data))
#define  AUDIO_sap_bpf_stage1_3_get_sap_bpf_stage1_a1(data)                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_sap_bpf_stage1_3_get_sap_bpf_stage1_a2(data)                      (0x0000FFFF&(data))

#define  AUDIO_sap_bpf_stage2_1                                                 0x180063E0
#define  AUDIO_sap_bpf_stage2_1_reg_addr                                         "0xB80063E0"
#define  AUDIO_sap_bpf_stage2_1_reg                                              0xB80063E0
#define  AUDIO_sap_bpf_stage2_1_inst_addr                                        "0x00A3"
#define  set_AUDIO_sap_bpf_stage2_1_reg(data)                                    (*((volatile unsigned int*)AUDIO_sap_bpf_stage2_1_reg)=data)
#define  get_AUDIO_sap_bpf_stage2_1_reg                                          (*((volatile unsigned int*)AUDIO_sap_bpf_stage2_1_reg))
#define  AUDIO_sap_bpf_stage2_1_sap_bpf_stage2_b0_shift                          (16)
#define  AUDIO_sap_bpf_stage2_1_sap_bpf_stage2_b1_shift                          (0)
#define  AUDIO_sap_bpf_stage2_1_sap_bpf_stage2_b0_mask                           (0xFFFF0000)
#define  AUDIO_sap_bpf_stage2_1_sap_bpf_stage2_b1_mask                           (0x0000FFFF)
#define  AUDIO_sap_bpf_stage2_1_sap_bpf_stage2_b0(data)                          (0xFFFF0000&((data)<<16))
#define  AUDIO_sap_bpf_stage2_1_sap_bpf_stage2_b1(data)                          (0x0000FFFF&(data))
#define  AUDIO_sap_bpf_stage2_1_get_sap_bpf_stage2_b0(data)                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_sap_bpf_stage2_1_get_sap_bpf_stage2_b1(data)                      (0x0000FFFF&(data))

#define  AUDIO_sap_bpf_stage2_2                                                 0x180063E4
#define  AUDIO_sap_bpf_stage2_2_reg_addr                                         "0xB80063E4"
#define  AUDIO_sap_bpf_stage2_2_reg                                              0xB80063E4
#define  AUDIO_sap_bpf_stage2_2_inst_addr                                        "0x00A4"
#define  set_AUDIO_sap_bpf_stage2_2_reg(data)                                    (*((volatile unsigned int*)AUDIO_sap_bpf_stage2_2_reg)=data)
#define  get_AUDIO_sap_bpf_stage2_2_reg                                          (*((volatile unsigned int*)AUDIO_sap_bpf_stage2_2_reg))
#define  AUDIO_sap_bpf_stage2_2_sap_bpf_stage2_b2_shift                          (0)
#define  AUDIO_sap_bpf_stage2_2_sap_bpf_stage2_b2_mask                           (0x0000FFFF)
#define  AUDIO_sap_bpf_stage2_2_sap_bpf_stage2_b2(data)                          (0x0000FFFF&(data))
#define  AUDIO_sap_bpf_stage2_2_get_sap_bpf_stage2_b2(data)                      (0x0000FFFF&(data))

#define  AUDIO_sap_bpf_stage2_3                                                 0x180063E8
#define  AUDIO_sap_bpf_stage2_3_reg_addr                                         "0xB80063E8"
#define  AUDIO_sap_bpf_stage2_3_reg                                              0xB80063E8
#define  AUDIO_sap_bpf_stage2_3_inst_addr                                        "0x00A5"
#define  set_AUDIO_sap_bpf_stage2_3_reg(data)                                    (*((volatile unsigned int*)AUDIO_sap_bpf_stage2_3_reg)=data)
#define  get_AUDIO_sap_bpf_stage2_3_reg                                          (*((volatile unsigned int*)AUDIO_sap_bpf_stage2_3_reg))
#define  AUDIO_sap_bpf_stage2_3_sap_bpf_stage2_a1_shift                          (16)
#define  AUDIO_sap_bpf_stage2_3_sap_bpf_stage2_a2_shift                          (0)
#define  AUDIO_sap_bpf_stage2_3_sap_bpf_stage2_a1_mask                           (0xFFFF0000)
#define  AUDIO_sap_bpf_stage2_3_sap_bpf_stage2_a2_mask                           (0x0000FFFF)
#define  AUDIO_sap_bpf_stage2_3_sap_bpf_stage2_a1(data)                          (0xFFFF0000&((data)<<16))
#define  AUDIO_sap_bpf_stage2_3_sap_bpf_stage2_a2(data)                          (0x0000FFFF&(data))
#define  AUDIO_sap_bpf_stage2_3_get_sap_bpf_stage2_a1(data)                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_sap_bpf_stage2_3_get_sap_bpf_stage2_a2(data)                      (0x0000FFFF&(data))

#define  AUDIO_sap_bpf_stage3_1                                                 0x180063F0
#define  AUDIO_sap_bpf_stage3_1_reg_addr                                         "0xB80063F0"
#define  AUDIO_sap_bpf_stage3_1_reg                                              0xB80063F0
#define  AUDIO_sap_bpf_stage3_1_inst_addr                                        "0x00A6"
#define  set_AUDIO_sap_bpf_stage3_1_reg(data)                                    (*((volatile unsigned int*)AUDIO_sap_bpf_stage3_1_reg)=data)
#define  get_AUDIO_sap_bpf_stage3_1_reg                                          (*((volatile unsigned int*)AUDIO_sap_bpf_stage3_1_reg))
#define  AUDIO_sap_bpf_stage3_1_sap_bpf_stage3_b0_shift                          (16)
#define  AUDIO_sap_bpf_stage3_1_sap_bpf_stage3_b1_shift                          (0)
#define  AUDIO_sap_bpf_stage3_1_sap_bpf_stage3_b0_mask                           (0xFFFF0000)
#define  AUDIO_sap_bpf_stage3_1_sap_bpf_stage3_b1_mask                           (0x0000FFFF)
#define  AUDIO_sap_bpf_stage3_1_sap_bpf_stage3_b0(data)                          (0xFFFF0000&((data)<<16))
#define  AUDIO_sap_bpf_stage3_1_sap_bpf_stage3_b1(data)                          (0x0000FFFF&(data))
#define  AUDIO_sap_bpf_stage3_1_get_sap_bpf_stage3_b0(data)                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_sap_bpf_stage3_1_get_sap_bpf_stage3_b1(data)                      (0x0000FFFF&(data))

#define  AUDIO_sap_bpf_stage3_2                                                 0x180063F4
#define  AUDIO_sap_bpf_stage3_2_reg_addr                                         "0xB80063F4"
#define  AUDIO_sap_bpf_stage3_2_reg                                              0xB80063F4
#define  AUDIO_sap_bpf_stage3_2_inst_addr                                        "0x00A7"
#define  set_AUDIO_sap_bpf_stage3_2_reg(data)                                    (*((volatile unsigned int*)AUDIO_sap_bpf_stage3_2_reg)=data)
#define  get_AUDIO_sap_bpf_stage3_2_reg                                          (*((volatile unsigned int*)AUDIO_sap_bpf_stage3_2_reg))
#define  AUDIO_sap_bpf_stage3_2_sap_bpf_stage3_b2_shift                          (0)
#define  AUDIO_sap_bpf_stage3_2_sap_bpf_stage3_b2_mask                           (0x0000FFFF)
#define  AUDIO_sap_bpf_stage3_2_sap_bpf_stage3_b2(data)                          (0x0000FFFF&(data))
#define  AUDIO_sap_bpf_stage3_2_get_sap_bpf_stage3_b2(data)                      (0x0000FFFF&(data))

#define  AUDIO_sap_bpf_stage3_3                                                 0x180063F8
#define  AUDIO_sap_bpf_stage3_3_reg_addr                                         "0xB80063F8"
#define  AUDIO_sap_bpf_stage3_3_reg                                              0xB80063F8
#define  AUDIO_sap_bpf_stage3_3_inst_addr                                        "0x00A8"
#define  set_AUDIO_sap_bpf_stage3_3_reg(data)                                    (*((volatile unsigned int*)AUDIO_sap_bpf_stage3_3_reg)=data)
#define  get_AUDIO_sap_bpf_stage3_3_reg                                          (*((volatile unsigned int*)AUDIO_sap_bpf_stage3_3_reg))
#define  AUDIO_sap_bpf_stage3_3_sap_bpf_stage3_a1_shift                          (16)
#define  AUDIO_sap_bpf_stage3_3_sap_bpf_stage3_a2_shift                          (0)
#define  AUDIO_sap_bpf_stage3_3_sap_bpf_stage3_a1_mask                           (0xFFFF0000)
#define  AUDIO_sap_bpf_stage3_3_sap_bpf_stage3_a2_mask                           (0x0000FFFF)
#define  AUDIO_sap_bpf_stage3_3_sap_bpf_stage3_a1(data)                          (0xFFFF0000&((data)<<16))
#define  AUDIO_sap_bpf_stage3_3_sap_bpf_stage3_a2(data)                          (0x0000FFFF&(data))
#define  AUDIO_sap_bpf_stage3_3_get_sap_bpf_stage3_a1(data)                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_sap_bpf_stage3_3_get_sap_bpf_stage3_a2(data)                      (0x0000FFFF&(data))

#define  AUDIO_btsc_pilot_thres                                                 0x18006400
#define  AUDIO_btsc_pilot_thres_reg_addr                                         "0xB8006400"
#define  AUDIO_btsc_pilot_thres_reg                                              0xB8006400
#define  AUDIO_btsc_pilot_thres_inst_addr                                        "0x00A9"
#define  set_AUDIO_btsc_pilot_thres_reg(data)                                    (*((volatile unsigned int*)AUDIO_btsc_pilot_thres_reg)=data)
#define  get_AUDIO_btsc_pilot_thres_reg                                          (*((volatile unsigned int*)AUDIO_btsc_pilot_thres_reg))
#define  AUDIO_btsc_pilot_thres_lock_reference_shift                             (31)
#define  AUDIO_btsc_pilot_thres_fm_radio_en_shift                                (30)
#define  AUDIO_btsc_pilot_thres_fm_radio_deem_sel_shift                          (29)
#define  AUDIO_btsc_pilot_thres_fm_radio_deem_bypass_shift                       (28)
#define  AUDIO_btsc_pilot_thres_bypass_com_hpf_shift                             (27)
#define  AUDIO_btsc_pilot_thres_bypass_com_bpf_shift                             (26)
#define  AUDIO_btsc_pilot_thres_pilot_hithresh_shift                             (16)
#define  AUDIO_btsc_pilot_thres_pilot_lothresh_shift                             (0)
#define  AUDIO_btsc_pilot_thres_lock_reference_mask                              (0x80000000)
#define  AUDIO_btsc_pilot_thres_fm_radio_en_mask                                 (0x40000000)
#define  AUDIO_btsc_pilot_thres_fm_radio_deem_sel_mask                           (0x20000000)
#define  AUDIO_btsc_pilot_thres_fm_radio_deem_bypass_mask                        (0x10000000)
#define  AUDIO_btsc_pilot_thres_bypass_com_hpf_mask                              (0x08000000)
#define  AUDIO_btsc_pilot_thres_bypass_com_bpf_mask                              (0x04000000)
#define  AUDIO_btsc_pilot_thres_pilot_hithresh_mask                              (0x03FF0000)
#define  AUDIO_btsc_pilot_thres_pilot_lothresh_mask                              (0x000003FF)
#define  AUDIO_btsc_pilot_thres_lock_reference(data)                             (0x80000000&((data)<<31))
#define  AUDIO_btsc_pilot_thres_fm_radio_en(data)                                (0x40000000&((data)<<30))
#define  AUDIO_btsc_pilot_thres_fm_radio_deem_sel(data)                          (0x20000000&((data)<<29))
#define  AUDIO_btsc_pilot_thres_fm_radio_deem_bypass(data)                       (0x10000000&((data)<<28))
#define  AUDIO_btsc_pilot_thres_bypass_com_hpf(data)                             (0x08000000&((data)<<27))
#define  AUDIO_btsc_pilot_thres_bypass_com_bpf(data)                             (0x04000000&((data)<<26))
#define  AUDIO_btsc_pilot_thres_pilot_hithresh(data)                             (0x03FF0000&((data)<<16))
#define  AUDIO_btsc_pilot_thres_pilot_lothresh(data)                             (0x000003FF&(data))
#define  AUDIO_btsc_pilot_thres_get_lock_reference(data)                         ((0x80000000&(data))>>31)
#define  AUDIO_btsc_pilot_thres_get_fm_radio_en(data)                            ((0x40000000&(data))>>30)
#define  AUDIO_btsc_pilot_thres_get_fm_radio_deem_sel(data)                      ((0x20000000&(data))>>29)
#define  AUDIO_btsc_pilot_thres_get_fm_radio_deem_bypass(data)                   ((0x10000000&(data))>>28)
#define  AUDIO_btsc_pilot_thres_get_bypass_com_hpf(data)                         ((0x08000000&(data))>>27)
#define  AUDIO_btsc_pilot_thres_get_bypass_com_bpf(data)                         ((0x04000000&(data))>>26)
#define  AUDIO_btsc_pilot_thres_get_pilot_hithresh(data)                         ((0x03FF0000&(data))>>16)
#define  AUDIO_btsc_pilot_thres_get_pilot_lothresh(data)                         (0x000003FF&(data))

#define  AUDIO_btsc_pilot_status                                                0x18006404
#define  AUDIO_btsc_pilot_status_reg_addr                                        "0xB8006404"
#define  AUDIO_btsc_pilot_status_reg                                             0xB8006404
#define  AUDIO_btsc_pilot_status_inst_addr                                       "0x00AA"
#define  set_AUDIO_btsc_pilot_status_reg(data)                                   (*((volatile unsigned int*)AUDIO_btsc_pilot_status_reg)=data)
#define  get_AUDIO_btsc_pilot_status_reg                                         (*((volatile unsigned int*)AUDIO_btsc_pilot_status_reg))
#define  AUDIO_btsc_pilot_status_pilot_lock_reset_shift                          (18)
#define  AUDIO_btsc_pilot_status_out_hpf_en_shift                                (17)
#define  AUDIO_btsc_pilot_status_w1pilotpresent_shift                            (16)
#define  AUDIO_btsc_pilot_status_w1pilotlocked_shift                             (15)
#define  AUDIO_btsc_pilot_status_pilot_level_pass_shift                          (14)
#define  AUDIO_btsc_pilot_status_pilot_hi_pass_shift                             (13)
#define  AUDIO_btsc_pilot_status_pilot_lo_refuse_shift                           (12)
#define  AUDIO_btsc_pilot_status_w10pilotmagnitude_shift                         (0)
#define  AUDIO_btsc_pilot_status_pilot_lock_reset_mask                           (0x00040000)
#define  AUDIO_btsc_pilot_status_out_hpf_en_mask                                 (0x00020000)
#define  AUDIO_btsc_pilot_status_w1pilotpresent_mask                             (0x00010000)
#define  AUDIO_btsc_pilot_status_w1pilotlocked_mask                              (0x00008000)
#define  AUDIO_btsc_pilot_status_pilot_level_pass_mask                           (0x00004000)
#define  AUDIO_btsc_pilot_status_pilot_hi_pass_mask                              (0x00002000)
#define  AUDIO_btsc_pilot_status_pilot_lo_refuse_mask                            (0x00001000)
#define  AUDIO_btsc_pilot_status_w10pilotmagnitude_mask                          (0x000003FF)
#define  AUDIO_btsc_pilot_status_pilot_lock_reset(data)                          (0x00040000&((data)<<18))
#define  AUDIO_btsc_pilot_status_out_hpf_en(data)                                (0x00020000&((data)<<17))
#define  AUDIO_btsc_pilot_status_w1pilotpresent(data)                            (0x00010000&((data)<<16))
#define  AUDIO_btsc_pilot_status_w1pilotlocked(data)                             (0x00008000&((data)<<15))
#define  AUDIO_btsc_pilot_status_pilot_level_pass(data)                          (0x00004000&((data)<<14))
#define  AUDIO_btsc_pilot_status_pilot_hi_pass(data)                             (0x00002000&((data)<<13))
#define  AUDIO_btsc_pilot_status_pilot_lo_refuse(data)                           (0x00001000&((data)<<12))
#define  AUDIO_btsc_pilot_status_w10pilotmagnitude(data)                         (0x000003FF&(data))
#define  AUDIO_btsc_pilot_status_get_pilot_lock_reset(data)                      ((0x00040000&(data))>>18)
#define  AUDIO_btsc_pilot_status_get_out_hpf_en(data)                            ((0x00020000&(data))>>17)
#define  AUDIO_btsc_pilot_status_get_w1pilotpresent(data)                        ((0x00010000&(data))>>16)
#define  AUDIO_btsc_pilot_status_get_w1pilotlocked(data)                         ((0x00008000&(data))>>15)
#define  AUDIO_btsc_pilot_status_get_pilot_level_pass(data)                      ((0x00004000&(data))>>14)
#define  AUDIO_btsc_pilot_status_get_pilot_hi_pass(data)                         ((0x00002000&(data))>>13)
#define  AUDIO_btsc_pilot_status_get_pilot_lo_refuse(data)                       ((0x00001000&(data))>>12)
#define  AUDIO_btsc_pilot_status_get_w10pilotmagnitude(data)                     (0x000003FF&(data))

#define  AUDIO_btsc_sap_thresh                                                  0x18006408
#define  AUDIO_btsc_sap_thresh_reg_addr                                          "0xB8006408"
#define  AUDIO_btsc_sap_thresh_reg                                               0xB8006408
#define  AUDIO_btsc_sap_thresh_inst_addr                                         "0x00AB"
#define  set_AUDIO_btsc_sap_thresh_reg(data)                                     (*((volatile unsigned int*)AUDIO_btsc_sap_thresh_reg)=data)
#define  get_AUDIO_btsc_sap_thresh_reg                                           (*((volatile unsigned int*)AUDIO_btsc_sap_thresh_reg))
#define  AUDIO_btsc_sap_thresh_sap_hithresh_shift                                (16)
#define  AUDIO_btsc_sap_thresh_sap_lothresh_shift                                (0)
#define  AUDIO_btsc_sap_thresh_sap_hithresh_mask                                 (0x03FF0000)
#define  AUDIO_btsc_sap_thresh_sap_lothresh_mask                                 (0x000003FF)
#define  AUDIO_btsc_sap_thresh_sap_hithresh(data)                                (0x03FF0000&((data)<<16))
#define  AUDIO_btsc_sap_thresh_sap_lothresh(data)                                (0x000003FF&(data))
#define  AUDIO_btsc_sap_thresh_get_sap_hithresh(data)                            ((0x03FF0000&(data))>>16)
#define  AUDIO_btsc_sap_thresh_get_sap_lothresh(data)                            (0x000003FF&(data))

#define  AUDIO_btsc_sap_noise_th                                                0x1800640C
#define  AUDIO_btsc_sap_noise_th_reg_addr                                        "0xB800640C"
#define  AUDIO_btsc_sap_noise_th_reg                                             0xB800640C
#define  AUDIO_btsc_sap_noise_th_inst_addr                                       "0x00AC"
#define  set_AUDIO_btsc_sap_noise_th_reg(data)                                   (*((volatile unsigned int*)AUDIO_btsc_sap_noise_th_reg)=data)
#define  get_AUDIO_btsc_sap_noise_th_reg                                         (*((volatile unsigned int*)AUDIO_btsc_sap_noise_th_reg))
#define  AUDIO_btsc_sap_noise_th_sap_noise_hi_thresh_shift                       (16)
#define  AUDIO_btsc_sap_noise_th_sap_noise_lo_thresh_shift                       (0)
#define  AUDIO_btsc_sap_noise_th_sap_noise_hi_thresh_mask                        (0x03FF0000)
#define  AUDIO_btsc_sap_noise_th_sap_noise_lo_thresh_mask                        (0x000003FF)
#define  AUDIO_btsc_sap_noise_th_sap_noise_hi_thresh(data)                       (0x03FF0000&((data)<<16))
#define  AUDIO_btsc_sap_noise_th_sap_noise_lo_thresh(data)                       (0x000003FF&(data))
#define  AUDIO_btsc_sap_noise_th_get_sap_noise_hi_thresh(data)                   ((0x03FF0000&(data))>>16)
#define  AUDIO_btsc_sap_noise_th_get_sap_noise_lo_thresh(data)                   (0x000003FF&(data))

#define  AUDIO_btsc_sap_noise                                                   0x18006410
#define  AUDIO_btsc_sap_noise_reg_addr                                           "0xB8006410"
#define  AUDIO_btsc_sap_noise_reg                                                0xB8006410
#define  AUDIO_btsc_sap_noise_inst_addr                                          "0x00AD"
#define  set_AUDIO_btsc_sap_noise_reg(data)                                      (*((volatile unsigned int*)AUDIO_btsc_sap_noise_reg)=data)
#define  get_AUDIO_btsc_sap_noise_reg                                            (*((volatile unsigned int*)AUDIO_btsc_sap_noise_reg))
#define  AUDIO_btsc_sap_noise_w10sapnoise_shift                                  (0)
#define  AUDIO_btsc_sap_noise_w10sapnoise_mask                                   (0x000003FF)
#define  AUDIO_btsc_sap_noise_w10sapnoise(data)                                  (0x000003FF&(data))
#define  AUDIO_btsc_sap_noise_get_w10sapnoise(data)                              (0x000003FF&(data))

#define  AUDIO_btsc_sap_status                                                  0x18006414
#define  AUDIO_btsc_sap_status_reg_addr                                          "0xB8006414"
#define  AUDIO_btsc_sap_status_reg                                               0xB8006414
#define  AUDIO_btsc_sap_status_inst_addr                                         "0x00AE"
#define  set_AUDIO_btsc_sap_status_reg(data)                                     (*((volatile unsigned int*)AUDIO_btsc_sap_status_reg)=data)
#define  get_AUDIO_btsc_sap_status_reg                                           (*((volatile unsigned int*)AUDIO_btsc_sap_status_reg))
#define  AUDIO_btsc_sap_status_w1sapqualitygood_shift                            (14)
#define  AUDIO_btsc_sap_status_sap_hi_pass_shift                                 (13)
#define  AUDIO_btsc_sap_status_sap_lo_refuse_shift                               (12)
#define  AUDIO_btsc_sap_status_sap_noise_flag_shift                              (11)
#define  AUDIO_btsc_sap_status_sap_compen_en_shift                               (10)
#define  AUDIO_btsc_sap_status_w10sapmagnitude_shift                             (0)
#define  AUDIO_btsc_sap_status_w1sapqualitygood_mask                             (0x00004000)
#define  AUDIO_btsc_sap_status_sap_hi_pass_mask                                  (0x00002000)
#define  AUDIO_btsc_sap_status_sap_lo_refuse_mask                                (0x00001000)
#define  AUDIO_btsc_sap_status_sap_noise_flag_mask                               (0x00000800)
#define  AUDIO_btsc_sap_status_sap_compen_en_mask                                (0x00000400)
#define  AUDIO_btsc_sap_status_w10sapmagnitude_mask                              (0x000003FF)
#define  AUDIO_btsc_sap_status_w1sapqualitygood(data)                            (0x00004000&((data)<<14))
#define  AUDIO_btsc_sap_status_sap_hi_pass(data)                                 (0x00002000&((data)<<13))
#define  AUDIO_btsc_sap_status_sap_lo_refuse(data)                               (0x00001000&((data)<<12))
#define  AUDIO_btsc_sap_status_sap_noise_flag(data)                              (0x00000800&((data)<<11))
#define  AUDIO_btsc_sap_status_sap_compen_en(data)                               (0x00000400&((data)<<10))
#define  AUDIO_btsc_sap_status_w10sapmagnitude(data)                             (0x000003FF&(data))
#define  AUDIO_btsc_sap_status_get_w1sapqualitygood(data)                        ((0x00004000&(data))>>14)
#define  AUDIO_btsc_sap_status_get_sap_hi_pass(data)                             ((0x00002000&(data))>>13)
#define  AUDIO_btsc_sap_status_get_sap_lo_refuse(data)                           ((0x00001000&(data))>>12)
#define  AUDIO_btsc_sap_status_get_sap_noise_flag(data)                          ((0x00000800&(data))>>11)
#define  AUDIO_btsc_sap_status_get_sap_compen_en(data)                           ((0x00000400&(data))>>10)
#define  AUDIO_btsc_sap_status_get_w10sapmagnitude(data)                         (0x000003FF&(data))

#define  AUDIO_btsc_sap_debounce                                                0x18006418
#define  AUDIO_btsc_sap_debounce_reg_addr                                        "0xB8006418"
#define  AUDIO_btsc_sap_debounce_reg                                             0xB8006418
#define  AUDIO_btsc_sap_debounce_inst_addr                                       "0x00AF"
#define  set_AUDIO_btsc_sap_debounce_reg(data)                                   (*((volatile unsigned int*)AUDIO_btsc_sap_debounce_reg)=data)
#define  get_AUDIO_btsc_sap_debounce_reg                                         (*((volatile unsigned int*)AUDIO_btsc_sap_debounce_reg))
#define  AUDIO_btsc_sap_debounce_sap_debounce_en_shift                           (4)
#define  AUDIO_btsc_sap_debounce_sap_debounce_shift                              (0)
#define  AUDIO_btsc_sap_debounce_sap_debounce_en_mask                            (0x00000010)
#define  AUDIO_btsc_sap_debounce_sap_debounce_mask                               (0x0000000F)
#define  AUDIO_btsc_sap_debounce_sap_debounce_en(data)                           (0x00000010&((data)<<4))
#define  AUDIO_btsc_sap_debounce_sap_debounce(data)                              (0x0000000F&(data))
#define  AUDIO_btsc_sap_debounce_get_sap_debounce_en(data)                       ((0x00000010&(data))>>4)
#define  AUDIO_btsc_sap_debounce_get_sap_debounce(data)                          (0x0000000F&(data))

#define  AUDIO_btsc_sif_fm_magnitude                                            0x1800641C
#define  AUDIO_btsc_sif_fm_magnitude_reg_addr                                    "0xB800641C"
#define  AUDIO_btsc_sif_fm_magnitude_reg                                         0xB800641C
#define  AUDIO_btsc_sif_fm_magnitude_inst_addr                                   "0x00B0"
#define  set_AUDIO_btsc_sif_fm_magnitude_reg(data)                               (*((volatile unsigned int*)AUDIO_btsc_sif_fm_magnitude_reg)=data)
#define  get_AUDIO_btsc_sif_fm_magnitude_reg                                     (*((volatile unsigned int*)AUDIO_btsc_sif_fm_magnitude_reg))
#define  AUDIO_btsc_sif_fm_magnitude_fm_mag_overflow_shift                       (13)
#define  AUDIO_btsc_sif_fm_magnitude_fm_mag_optimize_shift                       (12)
#define  AUDIO_btsc_sif_fm_magnitude_w10fmmagnitude_shift                        (0)
#define  AUDIO_btsc_sif_fm_magnitude_fm_mag_overflow_mask                        (0x00002000)
#define  AUDIO_btsc_sif_fm_magnitude_fm_mag_optimize_mask                        (0x00001000)
#define  AUDIO_btsc_sif_fm_magnitude_w10fmmagnitude_mask                         (0x000003FF)
#define  AUDIO_btsc_sif_fm_magnitude_fm_mag_overflow(data)                       (0x00002000&((data)<<13))
#define  AUDIO_btsc_sif_fm_magnitude_fm_mag_optimize(data)                       (0x00001000&((data)<<12))
#define  AUDIO_btsc_sif_fm_magnitude_w10fmmagnitude(data)                        (0x000003FF&(data))
#define  AUDIO_btsc_sif_fm_magnitude_get_fm_mag_overflow(data)                   ((0x00002000&(data))>>13)
#define  AUDIO_btsc_sif_fm_magnitude_get_fm_mag_optimize(data)                   ((0x00001000&(data))>>12)
#define  AUDIO_btsc_sif_fm_magnitude_get_w10fmmagnitude(data)                    (0x000003FF&(data))

#define  AUDIO_btsc_test_mux_sel                                                0x18006420
#define  AUDIO_btsc_test_mux_sel_reg_addr                                        "0xB8006420"
#define  AUDIO_btsc_test_mux_sel_reg                                             0xB8006420
#define  AUDIO_btsc_test_mux_sel_inst_addr                                       "0x00B1"
#define  set_AUDIO_btsc_test_mux_sel_reg(data)                                   (*((volatile unsigned int*)AUDIO_btsc_test_mux_sel_reg)=data)
#define  get_AUDIO_btsc_test_mux_sel_reg                                         (*((volatile unsigned int*)AUDIO_btsc_test_mux_sel_reg))
#define  AUDIO_btsc_test_mux_sel_testoutputselect_shift                          (0)
#define  AUDIO_btsc_test_mux_sel_testoutputselect_mask                           (0x0000000F)
#define  AUDIO_btsc_test_mux_sel_testoutputselect(data)                          (0x0000000F&(data))
#define  AUDIO_btsc_test_mux_sel_get_testoutputselect(data)                      (0x0000000F&(data))

#define  AUDIO_btsc_dummy                                                       0x18006424
#define  AUDIO_btsc_dummy_reg_addr                                               "0xB8006424"
#define  AUDIO_btsc_dummy_reg                                                    0xB8006424
#define  AUDIO_btsc_dummy_inst_addr                                              "0x00B2"
#define  set_AUDIO_btsc_dummy_reg(data)                                          (*((volatile unsigned int*)AUDIO_btsc_dummy_reg)=data)
#define  get_AUDIO_btsc_dummy_reg                                                (*((volatile unsigned int*)AUDIO_btsc_dummy_reg))
#define  AUDIO_btsc_dummy_dummy_6424_shift                                       (0)
#define  AUDIO_btsc_dummy_dummy_6424_mask                                        (0x0000FFFF)
#define  AUDIO_btsc_dummy_dummy_6424(data)                                       (0x0000FFFF&(data))
#define  AUDIO_btsc_dummy_get_dummy_6424(data)                                   (0x0000FFFF&(data))

#define  AUDIO_btsc_pilot_phase_delta                                           0x18006428
#define  AUDIO_btsc_pilot_phase_delta_reg_addr                                   "0xB8006428"
#define  AUDIO_btsc_pilot_phase_delta_reg                                        0xB8006428
#define  AUDIO_btsc_pilot_phase_delta_inst_addr                                  "0x00B3"
#define  set_AUDIO_btsc_pilot_phase_delta_reg(data)                              (*((volatile unsigned int*)AUDIO_btsc_pilot_phase_delta_reg)=data)
#define  get_AUDIO_btsc_pilot_phase_delta_reg                                    (*((volatile unsigned int*)AUDIO_btsc_pilot_phase_delta_reg))
#define  AUDIO_btsc_pilot_phase_delta_pilot_phase_delta_shift                    (0)
#define  AUDIO_btsc_pilot_phase_delta_pilot_phase_delta_mask                     (0xFFFFFFFF)
#define  AUDIO_btsc_pilot_phase_delta_pilot_phase_delta(data)                    (0xFFFFFFFF&(data))
#define  AUDIO_btsc_pilot_phase_delta_get_pilot_phase_delta(data)                (0xFFFFFFFF&(data))

#define  AUDIO_phase_error_pi_gain                                              0x1800642C
#define  AUDIO_phase_error_pi_gain_reg_addr                                      "0xB800642C"
#define  AUDIO_phase_error_pi_gain_reg                                           0xB800642C
#define  AUDIO_phase_error_pi_gain_inst_addr                                     "0x00B4"
#define  set_AUDIO_phase_error_pi_gain_reg(data)                                 (*((volatile unsigned int*)AUDIO_phase_error_pi_gain_reg)=data)
#define  get_AUDIO_phase_error_pi_gain_reg                                       (*((volatile unsigned int*)AUDIO_phase_error_pi_gain_reg))
#define  AUDIO_phase_error_pi_gain_unlock_p_gain_shift                           (12)
#define  AUDIO_phase_error_pi_gain_unlock_i_gain_shift                           (8)
#define  AUDIO_phase_error_pi_gain_locked_p_gain_shift                           (4)
#define  AUDIO_phase_error_pi_gain_locked_i_gain_shift                           (0)
#define  AUDIO_phase_error_pi_gain_unlock_p_gain_mask                            (0x0000F000)
#define  AUDIO_phase_error_pi_gain_unlock_i_gain_mask                            (0x00000F00)
#define  AUDIO_phase_error_pi_gain_locked_p_gain_mask                            (0x000000F0)
#define  AUDIO_phase_error_pi_gain_locked_i_gain_mask                            (0x0000000F)
#define  AUDIO_phase_error_pi_gain_unlock_p_gain(data)                           (0x0000F000&((data)<<12))
#define  AUDIO_phase_error_pi_gain_unlock_i_gain(data)                           (0x00000F00&((data)<<8))
#define  AUDIO_phase_error_pi_gain_locked_p_gain(data)                           (0x000000F0&((data)<<4))
#define  AUDIO_phase_error_pi_gain_locked_i_gain(data)                           (0x0000000F&(data))
#define  AUDIO_phase_error_pi_gain_get_unlock_p_gain(data)                       ((0x0000F000&(data))>>12)
#define  AUDIO_phase_error_pi_gain_get_unlock_i_gain(data)                       ((0x00000F00&(data))>>8)
#define  AUDIO_phase_error_pi_gain_get_locked_p_gain(data)                       ((0x000000F0&(data))>>4)
#define  AUDIO_phase_error_pi_gain_get_locked_i_gain(data)                       (0x0000000F&(data))

#define  AUDIO_phase_err_threshold                                              0x18006430
#define  AUDIO_phase_err_threshold_reg_addr                                      "0xB8006430"
#define  AUDIO_phase_err_threshold_reg                                           0xB8006430
#define  AUDIO_phase_err_threshold_inst_addr                                     "0x00B5"
#define  set_AUDIO_phase_err_threshold_reg(data)                                 (*((volatile unsigned int*)AUDIO_phase_err_threshold_reg)=data)
#define  get_AUDIO_phase_err_threshold_reg                                       (*((volatile unsigned int*)AUDIO_phase_err_threshold_reg))
#define  AUDIO_phase_err_threshold_sap_hpf_en_shift                              (31)
#define  AUDIO_phase_err_threshold_mono_lpf_sel_shift                            (30)
#define  AUDIO_phase_err_threshold_stereo_lpf_sel_shift                          (29)
#define  AUDIO_phase_err_threshold_phase_err_threshold_shift                     (0)
#define  AUDIO_phase_err_threshold_sap_hpf_en_mask                               (0x80000000)
#define  AUDIO_phase_err_threshold_mono_lpf_sel_mask                             (0x40000000)
#define  AUDIO_phase_err_threshold_stereo_lpf_sel_mask                           (0x20000000)
#define  AUDIO_phase_err_threshold_phase_err_threshold_mask                      (0x00FFFFFF)
#define  AUDIO_phase_err_threshold_sap_hpf_en(data)                              (0x80000000&((data)<<31))
#define  AUDIO_phase_err_threshold_mono_lpf_sel(data)                            (0x40000000&((data)<<30))
#define  AUDIO_phase_err_threshold_stereo_lpf_sel(data)                          (0x20000000&((data)<<29))
#define  AUDIO_phase_err_threshold_phase_err_threshold(data)                     (0x00FFFFFF&(data))
#define  AUDIO_phase_err_threshold_get_sap_hpf_en(data)                          ((0x80000000&(data))>>31)
#define  AUDIO_phase_err_threshold_get_mono_lpf_sel(data)                        ((0x40000000&(data))>>30)
#define  AUDIO_phase_err_threshold_get_stereo_lpf_sel(data)                      ((0x20000000&(data))>>29)
#define  AUDIO_phase_err_threshold_get_phase_err_threshold(data)                 (0x00FFFFFF&(data))

#define  AUDIO_phase_err_threshold2                                             0x18006434
#define  AUDIO_phase_err_threshold2_reg_addr                                     "0xB8006434"
#define  AUDIO_phase_err_threshold2_reg                                          0xB8006434
#define  AUDIO_phase_err_threshold2_inst_addr                                    "0x00B6"
#define  set_AUDIO_phase_err_threshold2_reg(data)                                (*((volatile unsigned int*)AUDIO_phase_err_threshold2_reg)=data)
#define  get_AUDIO_phase_err_threshold2_reg                                      (*((volatile unsigned int*)AUDIO_phase_err_threshold2_reg))
#define  AUDIO_phase_err_threshold2_phase_err_high_threshold_shift               (0)
#define  AUDIO_phase_err_threshold2_phase_err_high_threshold_mask                (0x00FFFFFF)
#define  AUDIO_phase_err_threshold2_phase_err_high_threshold(data)               (0x00FFFFFF&(data))
#define  AUDIO_phase_err_threshold2_get_phase_err_high_threshold(data)           (0x00FFFFFF&(data))

#define  AUDIO_freq_correction                                                  0x18006438
#define  AUDIO_freq_correction_reg_addr                                          "0xB8006438"
#define  AUDIO_freq_correction_reg                                               0xB8006438
#define  AUDIO_freq_correction_inst_addr                                         "0x00B7"
#define  set_AUDIO_freq_correction_reg(data)                                     (*((volatile unsigned int*)AUDIO_freq_correction_reg)=data)
#define  get_AUDIO_freq_correction_reg                                           (*((volatile unsigned int*)AUDIO_freq_correction_reg))
#define  AUDIO_freq_correction_freq_correction_shift                             (0)
#define  AUDIO_freq_correction_freq_correction_mask                              (0x003FFFFF)
#define  AUDIO_freq_correction_freq_correction(data)                             (0x003FFFFF&(data))
#define  AUDIO_freq_correction_get_freq_correction(data)                         (0x003FFFFF&(data))

#define  AUDIO_phase_error                                                      0x1800643C
#define  AUDIO_phase_error_reg_addr                                              "0xB800643C"
#define  AUDIO_phase_error_reg                                                   0xB800643C
#define  AUDIO_phase_error_inst_addr                                             "0x00B8"
#define  set_AUDIO_phase_error_reg(data)                                         (*((volatile unsigned int*)AUDIO_phase_error_reg)=data)
#define  get_AUDIO_phase_error_reg                                               (*((volatile unsigned int*)AUDIO_phase_error_reg))
#define  AUDIO_phase_error_average_movement_shift                                (0)
#define  AUDIO_phase_error_average_movement_mask                                 (0x00FFFFFF)
#define  AUDIO_phase_error_average_movement(data)                                (0x00FFFFFF&(data))
#define  AUDIO_phase_error_get_average_movement(data)                            (0x00FFFFFF&(data))

#define  AUDIO_a2_eiaj_demod                                                    0x18006450
#define  AUDIO_a2_eiaj_demod_reg_addr                                            "0xB8006450"
#define  AUDIO_a2_eiaj_demod_reg                                                 0xB8006450
#define  AUDIO_a2_eiaj_demod_inst_addr                                           "0x00B9"
#define  set_AUDIO_a2_eiaj_demod_reg(data)                                       (*((volatile unsigned int*)AUDIO_a2_eiaj_demod_reg)=data)
#define  get_AUDIO_a2_eiaj_demod_reg                                             (*((volatile unsigned int*)AUDIO_a2_eiaj_demod_reg))
#define  AUDIO_a2_eiaj_demod_a2_bw_sel_shift                                     (30)
#define  AUDIO_a2_eiaj_demod_de_emphasis_time_shift                              (28)
#define  AUDIO_a2_eiaj_demod_hdv_compen_en_shift                                 (25)
#define  AUDIO_a2_eiaj_demod_down_6db_shift                                      (24)
#define  AUDIO_a2_eiaj_demod_a2_sub_bw_sel_shift                                 (12)
#define  AUDIO_a2_eiaj_demod_fm1_deviation_gain_shift                            (8)
#define  AUDIO_a2_eiaj_demod_fm2_deviation_gain_shift                            (4)
#define  AUDIO_a2_eiaj_demod_a2_bw_sel_mask                                      (0xC0000000)
#define  AUDIO_a2_eiaj_demod_de_emphasis_time_mask                               (0x30000000)
#define  AUDIO_a2_eiaj_demod_hdv_compen_en_mask                                  (0x02000000)
#define  AUDIO_a2_eiaj_demod_down_6db_mask                                       (0x01000000)
#define  AUDIO_a2_eiaj_demod_a2_sub_bw_sel_mask                                  (0x00003000)
#define  AUDIO_a2_eiaj_demod_fm1_deviation_gain_mask                             (0x00000700)
#define  AUDIO_a2_eiaj_demod_fm2_deviation_gain_mask                             (0x00000070)
#define  AUDIO_a2_eiaj_demod_a2_bw_sel(data)                                     (0xC0000000&((data)<<30))
#define  AUDIO_a2_eiaj_demod_de_emphasis_time(data)                              (0x30000000&((data)<<28))
#define  AUDIO_a2_eiaj_demod_hdv_compen_en(data)                                 (0x02000000&((data)<<25))
#define  AUDIO_a2_eiaj_demod_down_6db(data)                                      (0x01000000&((data)<<24))
#define  AUDIO_a2_eiaj_demod_a2_sub_bw_sel(data)                                 (0x00003000&((data)<<12))
#define  AUDIO_a2_eiaj_demod_fm1_deviation_gain(data)                            (0x00000700&((data)<<8))
#define  AUDIO_a2_eiaj_demod_fm2_deviation_gain(data)                            (0x00000070&((data)<<4))
#define  AUDIO_a2_eiaj_demod_get_a2_bw_sel(data)                                 ((0xC0000000&(data))>>30)
#define  AUDIO_a2_eiaj_demod_get_de_emphasis_time(data)                          ((0x30000000&(data))>>28)
#define  AUDIO_a2_eiaj_demod_get_hdv_compen_en(data)                             ((0x02000000&(data))>>25)
#define  AUDIO_a2_eiaj_demod_get_down_6db(data)                                  ((0x01000000&(data))>>24)
#define  AUDIO_a2_eiaj_demod_get_a2_sub_bw_sel(data)                             ((0x00003000&(data))>>12)
#define  AUDIO_a2_eiaj_demod_get_fm1_deviation_gain(data)                        ((0x00000700&(data))>>8)
#define  AUDIO_a2_eiaj_demod_get_fm2_deviation_gain(data)                        ((0x00000070&(data))>>4)

#define  AUDIO_a2_eiaj_mag_noise_sub                                            0x18006454
#define  AUDIO_a2_eiaj_mag_noise_sub_reg_addr                                    "0xB8006454"
#define  AUDIO_a2_eiaj_mag_noise_sub_reg                                         0xB8006454
#define  AUDIO_a2_eiaj_mag_noise_sub_inst_addr                                   "0x00BA"
#define  set_AUDIO_a2_eiaj_mag_noise_sub_reg(data)                               (*((volatile unsigned int*)AUDIO_a2_eiaj_mag_noise_sub_reg)=data)
#define  get_AUDIO_a2_eiaj_mag_noise_sub_reg                                     (*((volatile unsigned int*)AUDIO_a2_eiaj_mag_noise_sub_reg))
#define  AUDIO_a2_eiaj_mag_noise_sub_magnitude_sub_shift                         (10)
#define  AUDIO_a2_eiaj_mag_noise_sub_noise_sub_shift                             (0)
#define  AUDIO_a2_eiaj_mag_noise_sub_magnitude_sub_mask                          (0x000FFC00)
#define  AUDIO_a2_eiaj_mag_noise_sub_noise_sub_mask                              (0x000003FF)
#define  AUDIO_a2_eiaj_mag_noise_sub_magnitude_sub(data)                         (0x000FFC00&((data)<<10))
#define  AUDIO_a2_eiaj_mag_noise_sub_noise_sub(data)                             (0x000003FF&(data))
#define  AUDIO_a2_eiaj_mag_noise_sub_get_magnitude_sub(data)                     ((0x000FFC00&(data))>>10)
#define  AUDIO_a2_eiaj_mag_noise_sub_get_noise_sub(data)                         (0x000003FF&(data))

#define  AUDIO_a2_eiaj_mag_noise                                                0x18006458
#define  AUDIO_a2_eiaj_mag_noise_reg_addr                                        "0xB8006458"
#define  AUDIO_a2_eiaj_mag_noise_reg                                             0xB8006458
#define  AUDIO_a2_eiaj_mag_noise_inst_addr                                       "0x00BB"
#define  set_AUDIO_a2_eiaj_mag_noise_reg(data)                                   (*((volatile unsigned int*)AUDIO_a2_eiaj_mag_noise_reg)=data)
#define  get_AUDIO_a2_eiaj_mag_noise_reg                                         (*((volatile unsigned int*)AUDIO_a2_eiaj_mag_noise_reg))
#define  AUDIO_a2_eiaj_mag_noise_magnitude_shift                                 (10)
#define  AUDIO_a2_eiaj_mag_noise_noise_shift                                     (0)
#define  AUDIO_a2_eiaj_mag_noise_magnitude_mask                                  (0x000FFC00)
#define  AUDIO_a2_eiaj_mag_noise_noise_mask                                      (0x000003FF)
#define  AUDIO_a2_eiaj_mag_noise_magnitude(data)                                 (0x000FFC00&((data)<<10))
#define  AUDIO_a2_eiaj_mag_noise_noise(data)                                     (0x000003FF&(data))
#define  AUDIO_a2_eiaj_mag_noise_get_magnitude(data)                             ((0x000FFC00&(data))>>10)
#define  AUDIO_a2_eiaj_mag_noise_get_noise(data)                                 (0x000003FF&(data))

#define  AUDIO_mbist_a2_eiaj_demod_rm_0                                         0x1800645C
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_reg_addr                                 "0xB800645C"
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_reg                                      0xB800645C
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_inst_addr                                "0x00BC"
#define  set_AUDIO_mbist_a2_eiaj_demod_rm_0_reg(data)                            (*((volatile unsigned int*)AUDIO_mbist_a2_eiaj_demod_rm_0_reg)=data)
#define  get_AUDIO_mbist_a2_eiaj_demod_rm_0_reg                                  (*((volatile unsigned int*)AUDIO_mbist_a2_eiaj_demod_rm_0_reg))
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_7_shift                               (28)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_6_shift                               (24)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_5_shift                               (20)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_4_shift                               (16)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_3_shift                               (12)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_2_shift                               (8)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_1_shift                               (4)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_0_shift                               (0)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_7_mask                                (0xF0000000)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_6_mask                                (0x0F000000)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_5_mask                                (0x00F00000)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_4_mask                                (0x000F0000)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_3_mask                                (0x0000F000)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_2_mask                                (0x00000F00)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_1_mask                                (0x000000F0)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_0_mask                                (0x0000000F)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_7(data)                               (0xF0000000&((data)<<28))
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_6(data)                               (0x0F000000&((data)<<24))
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_5(data)                               (0x00F00000&((data)<<20))
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_4(data)                               (0x000F0000&((data)<<16))
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_3(data)                               (0x0000F000&((data)<<12))
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_2(data)                               (0x00000F00&((data)<<8))
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_1(data)                               (0x000000F0&((data)<<4))
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_rm_0(data)                               (0x0000000F&(data))
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_get_rm_7(data)                           ((0xF0000000&(data))>>28)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_get_rm_6(data)                           ((0x0F000000&(data))>>24)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_get_rm_5(data)                           ((0x00F00000&(data))>>20)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_get_rm_4(data)                           ((0x000F0000&(data))>>16)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_get_rm_3(data)                           ((0x0000F000&(data))>>12)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_get_rm_2(data)                           ((0x00000F00&(data))>>8)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_get_rm_1(data)                           ((0x000000F0&(data))>>4)
#define  AUDIO_mbist_a2_eiaj_demod_rm_0_get_rm_0(data)                           (0x0000000F&(data))

#define  AUDIO_mbist_a2_eiaj_demod_rm_1                                         0x18006460
#define  AUDIO_mbist_a2_eiaj_demod_rm_1_reg_addr                                 "0xB8006460"
#define  AUDIO_mbist_a2_eiaj_demod_rm_1_reg                                      0xB8006460
#define  AUDIO_mbist_a2_eiaj_demod_rm_1_inst_addr                                "0x00BD"
#define  set_AUDIO_mbist_a2_eiaj_demod_rm_1_reg(data)                            (*((volatile unsigned int*)AUDIO_mbist_a2_eiaj_demod_rm_1_reg)=data)
#define  get_AUDIO_mbist_a2_eiaj_demod_rm_1_reg                                  (*((volatile unsigned int*)AUDIO_mbist_a2_eiaj_demod_rm_1_reg))
#define  AUDIO_mbist_a2_eiaj_demod_rm_1_rm_8_shift                               (0)
#define  AUDIO_mbist_a2_eiaj_demod_rm_1_rm_8_mask                                (0x0000000F)
#define  AUDIO_mbist_a2_eiaj_demod_rm_1_rm_8(data)                               (0x0000000F&(data))
#define  AUDIO_mbist_a2_eiaj_demod_rm_1_get_rm_8(data)                           (0x0000000F&(data))

#define  AUDIO_mbist_a2_eiaj_demod_rme                                          0x18006464
#define  AUDIO_mbist_a2_eiaj_demod_rme_reg_addr                                  "0xB8006464"
#define  AUDIO_mbist_a2_eiaj_demod_rme_reg                                       0xB8006464
#define  AUDIO_mbist_a2_eiaj_demod_rme_inst_addr                                 "0x00BE"
#define  set_AUDIO_mbist_a2_eiaj_demod_rme_reg(data)                             (*((volatile unsigned int*)AUDIO_mbist_a2_eiaj_demod_rme_reg)=data)
#define  get_AUDIO_mbist_a2_eiaj_demod_rme_reg                                   (*((volatile unsigned int*)AUDIO_mbist_a2_eiaj_demod_rme_reg))
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_8_shift                               (8)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_7_shift                               (7)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_6_shift                               (6)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_5_shift                               (5)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_4_shift                               (4)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_3_shift                               (3)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_2_shift                               (2)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_1_shift                               (1)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_0_shift                               (0)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_8_mask                                (0x00000100)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_7_mask                                (0x00000080)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_6_mask                                (0x00000040)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_5_mask                                (0x00000020)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_4_mask                                (0x00000010)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_3_mask                                (0x00000008)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_2_mask                                (0x00000004)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_1_mask                                (0x00000002)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_0_mask                                (0x00000001)
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_8(data)                               (0x00000100&((data)<<8))
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_7(data)                               (0x00000080&((data)<<7))
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_6(data)                               (0x00000040&((data)<<6))
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_5(data)                               (0x00000020&((data)<<5))
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_4(data)                               (0x00000010&((data)<<4))
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_3(data)                               (0x00000008&((data)<<3))
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_2(data)                               (0x00000004&((data)<<2))
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_1(data)                               (0x00000002&((data)<<1))
#define  AUDIO_mbist_a2_eiaj_demod_rme_rme_0(data)                               (0x00000001&(data))
#define  AUDIO_mbist_a2_eiaj_demod_rme_get_rme_8(data)                           ((0x00000100&(data))>>8)
#define  AUDIO_mbist_a2_eiaj_demod_rme_get_rme_7(data)                           ((0x00000080&(data))>>7)
#define  AUDIO_mbist_a2_eiaj_demod_rme_get_rme_6(data)                           ((0x00000040&(data))>>6)
#define  AUDIO_mbist_a2_eiaj_demod_rme_get_rme_5(data)                           ((0x00000020&(data))>>5)
#define  AUDIO_mbist_a2_eiaj_demod_rme_get_rme_4(data)                           ((0x00000010&(data))>>4)
#define  AUDIO_mbist_a2_eiaj_demod_rme_get_rme_3(data)                           ((0x00000008&(data))>>3)
#define  AUDIO_mbist_a2_eiaj_demod_rme_get_rme_2(data)                           ((0x00000004&(data))>>2)
#define  AUDIO_mbist_a2_eiaj_demod_rme_get_rme_1(data)                           ((0x00000002&(data))>>1)
#define  AUDIO_mbist_a2_eiaj_demod_rme_get_rme_0(data)                           (0x00000001&(data))

#define  AUDIO_nicam_demod                                                      0x18006500
#define  AUDIO_nicam_demod_reg_addr                                              "0xB8006500"
#define  AUDIO_nicam_demod_reg                                                   0xB8006500
#define  AUDIO_nicam_demod_inst_addr                                             "0x00BF"
#define  set_AUDIO_nicam_demod_reg(data)                                         (*((volatile unsigned int*)AUDIO_nicam_demod_reg)=data)
#define  get_AUDIO_nicam_demod_reg                                               (*((volatile unsigned int*)AUDIO_nicam_demod_reg))
#define  AUDIO_nicam_demod_psf_sel_shift                                         (31)
#define  AUDIO_nicam_demod_tr_lpf_kp_shift                                       (28)
#define  AUDIO_nicam_demod_psf_bg_sel_shift                                      (27)
#define  AUDIO_nicam_demod_cr_lpf_kp_shift                                       (24)
#define  AUDIO_nicam_demod_cr_lpf_ki_shift                                       (20)
#define  AUDIO_nicam_demod_tr_timing_step_shift                                  (0)
#define  AUDIO_nicam_demod_psf_sel_mask                                          (0x80000000)
#define  AUDIO_nicam_demod_tr_lpf_kp_mask                                        (0x70000000)
#define  AUDIO_nicam_demod_psf_bg_sel_mask                                       (0x08000000)
#define  AUDIO_nicam_demod_cr_lpf_kp_mask                                        (0x07000000)
#define  AUDIO_nicam_demod_cr_lpf_ki_mask                                        (0x00300000)
#define  AUDIO_nicam_demod_tr_timing_step_mask                                   (0x000FFFFF)
#define  AUDIO_nicam_demod_psf_sel(data)                                         (0x80000000&((data)<<31))
#define  AUDIO_nicam_demod_tr_lpf_kp(data)                                       (0x70000000&((data)<<28))
#define  AUDIO_nicam_demod_psf_bg_sel(data)                                      (0x08000000&((data)<<27))
#define  AUDIO_nicam_demod_cr_lpf_kp(data)                                       (0x07000000&((data)<<24))
#define  AUDIO_nicam_demod_cr_lpf_ki(data)                                       (0x00300000&((data)<<20))
#define  AUDIO_nicam_demod_tr_timing_step(data)                                  (0x000FFFFF&(data))
#define  AUDIO_nicam_demod_get_psf_sel(data)                                     ((0x80000000&(data))>>31)
#define  AUDIO_nicam_demod_get_tr_lpf_kp(data)                                   ((0x70000000&(data))>>28)
#define  AUDIO_nicam_demod_get_psf_bg_sel(data)                                  ((0x08000000&(data))>>27)
#define  AUDIO_nicam_demod_get_cr_lpf_kp(data)                                   ((0x07000000&(data))>>24)
#define  AUDIO_nicam_demod_get_cr_lpf_ki(data)                                   ((0x00300000&(data))>>20)
#define  AUDIO_nicam_demod_get_tr_timing_step(data)                              (0x000FFFFF&(data))

#define  AUDIO_nicam_dagc_ctrl                                                  0x18006504
#define  AUDIO_nicam_dagc_ctrl_reg_addr                                          "0xB8006504"
#define  AUDIO_nicam_dagc_ctrl_reg                                               0xB8006504
#define  AUDIO_nicam_dagc_ctrl_inst_addr                                         "0x00C0"
#define  set_AUDIO_nicam_dagc_ctrl_reg(data)                                     (*((volatile unsigned int*)AUDIO_nicam_dagc_ctrl_reg)=data)
#define  get_AUDIO_nicam_dagc_ctrl_reg                                           (*((volatile unsigned int*)AUDIO_nicam_dagc_ctrl_reg))
#define  AUDIO_nicam_dagc_ctrl_enable_shift                                      (31)
#define  AUDIO_nicam_dagc_ctrl_debounce_cnt_shift                                (28)
#define  AUDIO_nicam_dagc_ctrl_window_size_shift                                 (16)
#define  AUDIO_nicam_dagc_ctrl_gain_adjust_shift                                 (0)
#define  AUDIO_nicam_dagc_ctrl_enable_mask                                       (0x80000000)
#define  AUDIO_nicam_dagc_ctrl_debounce_cnt_mask                                 (0x70000000)
#define  AUDIO_nicam_dagc_ctrl_window_size_mask                                  (0x03FF0000)
#define  AUDIO_nicam_dagc_ctrl_gain_adjust_mask                                  (0x0000003F)
#define  AUDIO_nicam_dagc_ctrl_enable(data)                                      (0x80000000&((data)<<31))
#define  AUDIO_nicam_dagc_ctrl_debounce_cnt(data)                                (0x70000000&((data)<<28))
#define  AUDIO_nicam_dagc_ctrl_window_size(data)                                 (0x03FF0000&((data)<<16))
#define  AUDIO_nicam_dagc_ctrl_gain_adjust(data)                                 (0x0000003F&(data))
#define  AUDIO_nicam_dagc_ctrl_get_enable(data)                                  ((0x80000000&(data))>>31)
#define  AUDIO_nicam_dagc_ctrl_get_debounce_cnt(data)                            ((0x70000000&(data))>>28)
#define  AUDIO_nicam_dagc_ctrl_get_window_size(data)                             ((0x03FF0000&(data))>>16)
#define  AUDIO_nicam_dagc_ctrl_get_gain_adjust(data)                             (0x0000003F&(data))

#define  AUDIO_nicam_dagc_threshold                                             0x18006508
#define  AUDIO_nicam_dagc_threshold_reg_addr                                     "0xB8006508"
#define  AUDIO_nicam_dagc_threshold_reg                                          0xB8006508
#define  AUDIO_nicam_dagc_threshold_inst_addr                                    "0x00C1"
#define  set_AUDIO_nicam_dagc_threshold_reg(data)                                (*((volatile unsigned int*)AUDIO_nicam_dagc_threshold_reg)=data)
#define  get_AUDIO_nicam_dagc_threshold_reg                                      (*((volatile unsigned int*)AUDIO_nicam_dagc_threshold_reg))
#define  AUDIO_nicam_dagc_threshold_high_shift                                   (16)
#define  AUDIO_nicam_dagc_threshold_low_shift                                    (0)
#define  AUDIO_nicam_dagc_threshold_high_mask                                    (0xFFFF0000)
#define  AUDIO_nicam_dagc_threshold_low_mask                                     (0x0000FFFF)
#define  AUDIO_nicam_dagc_threshold_high(data)                                   (0xFFFF0000&((data)<<16))
#define  AUDIO_nicam_dagc_threshold_low(data)                                    (0x0000FFFF&(data))
#define  AUDIO_nicam_dagc_threshold_get_high(data)                               ((0xFFFF0000&(data))>>16)
#define  AUDIO_nicam_dagc_threshold_get_low(data)                                (0x0000FFFF&(data))

#define  AUDIO_nicam_dagc_mag                                                   0x1800650C
#define  AUDIO_nicam_dagc_mag_reg_addr                                           "0xB800650C"
#define  AUDIO_nicam_dagc_mag_reg                                                0xB800650C
#define  AUDIO_nicam_dagc_mag_inst_addr                                          "0x00C2"
#define  set_AUDIO_nicam_dagc_mag_reg(data)                                      (*((volatile unsigned int*)AUDIO_nicam_dagc_mag_reg)=data)
#define  get_AUDIO_nicam_dagc_mag_reg                                            (*((volatile unsigned int*)AUDIO_nicam_dagc_mag_reg))
#define  AUDIO_nicam_dagc_mag_magnitude_shift                                    (0)
#define  AUDIO_nicam_dagc_mag_magnitude_mask                                     (0x0000FFFF)
#define  AUDIO_nicam_dagc_mag_magnitude(data)                                    (0x0000FFFF&(data))
#define  AUDIO_nicam_dagc_mag_get_magnitude(data)                                (0x0000FFFF&(data))

#define  AUDIO_nicam_decode_ctrl                                                0x18006510
#define  AUDIO_nicam_decode_ctrl_reg_addr                                        "0xB8006510"
#define  AUDIO_nicam_decode_ctrl_reg                                             0xB8006510
#define  AUDIO_nicam_decode_ctrl_inst_addr                                       "0x00C3"
#define  set_AUDIO_nicam_decode_ctrl_reg(data)                                   (*((volatile unsigned int*)AUDIO_nicam_decode_ctrl_reg)=data)
#define  get_AUDIO_nicam_decode_ctrl_reg                                         (*((volatile unsigned int*)AUDIO_nicam_decode_ctrl_reg))
#define  AUDIO_nicam_decode_ctrl_data_channel_sel_shift                          (30)
#define  AUDIO_nicam_decode_ctrl_pcm_l_out_sel_shift                             (29)
#define  AUDIO_nicam_decode_ctrl_pcm_r_out_sel_shift                             (28)
#define  AUDIO_nicam_decode_ctrl_cib_1_shift                                     (27)
#define  AUDIO_nicam_decode_ctrl_cib_0_shift                                     (26)
#define  AUDIO_nicam_decode_ctrl_cib_mask_shift                                  (25)
#define  AUDIO_nicam_decode_ctrl_status_debounce_cnt_shift                       (20)
#define  AUDIO_nicam_decode_ctrl_bypass_interpol_shift                           (19)
#define  AUDIO_nicam_decode_ctrl_sat_en_shift                                    (18)
#define  AUDIO_nicam_decode_ctrl_de_em_by_pass_shift                             (17)
#define  AUDIO_nicam_decode_ctrl_dummy_0_shift                                   (16)
#define  AUDIO_nicam_decode_ctrl_level_sel_shift                                 (14)
#define  AUDIO_nicam_decode_ctrl_dummy_13_2_shift                                (2)
#define  AUDIO_nicam_decode_ctrl_nicam_to_mute_clk_sel_shift                     (1)
#define  AUDIO_nicam_decode_ctrl_nicam_to_mono_clk_sel_shift                     (0)
#define  AUDIO_nicam_decode_ctrl_data_channel_sel_mask                           (0x40000000)
#define  AUDIO_nicam_decode_ctrl_pcm_l_out_sel_mask                              (0x20000000)
#define  AUDIO_nicam_decode_ctrl_pcm_r_out_sel_mask                              (0x10000000)
#define  AUDIO_nicam_decode_ctrl_cib_1_mask                                      (0x08000000)
#define  AUDIO_nicam_decode_ctrl_cib_0_mask                                      (0x04000000)
#define  AUDIO_nicam_decode_ctrl_cib_mask_mask                                   (0x02000000)
#define  AUDIO_nicam_decode_ctrl_status_debounce_cnt_mask                        (0x00F00000)
#define  AUDIO_nicam_decode_ctrl_bypass_interpol_mask                            (0x00080000)
#define  AUDIO_nicam_decode_ctrl_sat_en_mask                                     (0x00040000)
#define  AUDIO_nicam_decode_ctrl_de_em_by_pass_mask                              (0x00020000)
#define  AUDIO_nicam_decode_ctrl_dummy_0_mask                                    (0x00010000)
#define  AUDIO_nicam_decode_ctrl_level_sel_mask                                  (0x0000C000)
#define  AUDIO_nicam_decode_ctrl_dummy_13_2_mask                                 (0x00003FFC)
#define  AUDIO_nicam_decode_ctrl_nicam_to_mute_clk_sel_mask                      (0x00000002)
#define  AUDIO_nicam_decode_ctrl_nicam_to_mono_clk_sel_mask                      (0x00000001)
#define  AUDIO_nicam_decode_ctrl_data_channel_sel(data)                          (0x40000000&((data)<<30))
#define  AUDIO_nicam_decode_ctrl_pcm_l_out_sel(data)                             (0x20000000&((data)<<29))
#define  AUDIO_nicam_decode_ctrl_pcm_r_out_sel(data)                             (0x10000000&((data)<<28))
#define  AUDIO_nicam_decode_ctrl_cib_1(data)                                     (0x08000000&((data)<<27))
#define  AUDIO_nicam_decode_ctrl_cib_0(data)                                     (0x04000000&((data)<<26))
#define  AUDIO_nicam_decode_ctrl_cib_mask(data)                                  (0x02000000&((data)<<25))
#define  AUDIO_nicam_decode_ctrl_status_debounce_cnt(data)                       (0x00F00000&((data)<<20))
#define  AUDIO_nicam_decode_ctrl_bypass_interpol(data)                           (0x00080000&((data)<<19))
#define  AUDIO_nicam_decode_ctrl_sat_en(data)                                    (0x00040000&((data)<<18))
#define  AUDIO_nicam_decode_ctrl_de_em_by_pass(data)                             (0x00020000&((data)<<17))
#define  AUDIO_nicam_decode_ctrl_dummy_0(data)                                   (0x00010000&((data)<<16))
#define  AUDIO_nicam_decode_ctrl_level_sel(data)                                 (0x0000C000&((data)<<14))
#define  AUDIO_nicam_decode_ctrl_dummy_13_2(data)                                (0x00003FFC&((data)<<2))
#define  AUDIO_nicam_decode_ctrl_nicam_to_mute_clk_sel(data)                     (0x00000002&((data)<<1))
#define  AUDIO_nicam_decode_ctrl_nicam_to_mono_clk_sel(data)                     (0x00000001&(data))
#define  AUDIO_nicam_decode_ctrl_get_data_channel_sel(data)                      ((0x40000000&(data))>>30)
#define  AUDIO_nicam_decode_ctrl_get_pcm_l_out_sel(data)                         ((0x20000000&(data))>>29)
#define  AUDIO_nicam_decode_ctrl_get_pcm_r_out_sel(data)                         ((0x10000000&(data))>>28)
#define  AUDIO_nicam_decode_ctrl_get_cib_1(data)                                 ((0x08000000&(data))>>27)
#define  AUDIO_nicam_decode_ctrl_get_cib_0(data)                                 ((0x04000000&(data))>>26)
#define  AUDIO_nicam_decode_ctrl_get_cib_mask(data)                              ((0x02000000&(data))>>25)
#define  AUDIO_nicam_decode_ctrl_get_status_debounce_cnt(data)                   ((0x00F00000&(data))>>20)
#define  AUDIO_nicam_decode_ctrl_get_bypass_interpol(data)                       ((0x00080000&(data))>>19)
#define  AUDIO_nicam_decode_ctrl_get_sat_en(data)                                ((0x00040000&(data))>>18)
#define  AUDIO_nicam_decode_ctrl_get_de_em_by_pass(data)                         ((0x00020000&(data))>>17)
#define  AUDIO_nicam_decode_ctrl_get_dummy_0(data)                               ((0x00010000&(data))>>16)
#define  AUDIO_nicam_decode_ctrl_get_level_sel(data)                             ((0x0000C000&(data))>>14)
#define  AUDIO_nicam_decode_ctrl_get_dummy_13_2(data)                            ((0x00003FFC&(data))>>2)
#define  AUDIO_nicam_decode_ctrl_get_nicam_to_mute_clk_sel(data)                 ((0x00000002&(data))>>1)
#define  AUDIO_nicam_decode_ctrl_get_nicam_to_mono_clk_sel(data)                 (0x00000001&(data))

#define  AUDIO_nicam_decode_status                                              0x18006514
#define  AUDIO_nicam_decode_status_reg_addr                                      "0xB8006514"
#define  AUDIO_nicam_decode_status_reg                                           0xB8006514
#define  AUDIO_nicam_decode_status_inst_addr                                     "0x00C4"
#define  set_AUDIO_nicam_decode_status_reg(data)                                 (*((volatile unsigned int*)AUDIO_nicam_decode_status_reg)=data)
#define  get_AUDIO_nicam_decode_status_reg                                       (*((volatile unsigned int*)AUDIO_nicam_decode_status_reg))
#define  AUDIO_nicam_decode_status_c0_shift                                      (31)
#define  AUDIO_nicam_decode_status_c1c2c3_shift                                  (28)
#define  AUDIO_nicam_decode_status_c4_shift                                      (27)
#define  AUDIO_nicam_decode_status_additional_data_shift                         (16)
#define  AUDIO_nicam_decode_status_bit_cnt_sync_shift                            (13)
#define  AUDIO_nicam_decode_status_true_detect_shift                             (12)
#define  AUDIO_nicam_decode_status_bit_error_rate_shift                          (0)
#define  AUDIO_nicam_decode_status_c0_mask                                       (0x80000000)
#define  AUDIO_nicam_decode_status_c1c2c3_mask                                   (0x70000000)
#define  AUDIO_nicam_decode_status_c4_mask                                       (0x08000000)
#define  AUDIO_nicam_decode_status_additional_data_mask                          (0x07FF0000)
#define  AUDIO_nicam_decode_status_bit_cnt_sync_mask                             (0x00002000)
#define  AUDIO_nicam_decode_status_true_detect_mask                              (0x00001000)
#define  AUDIO_nicam_decode_status_bit_error_rate_mask                           (0x00000FFF)
#define  AUDIO_nicam_decode_status_c0(data)                                      (0x80000000&((data)<<31))
#define  AUDIO_nicam_decode_status_c1c2c3(data)                                  (0x70000000&((data)<<28))
#define  AUDIO_nicam_decode_status_c4(data)                                      (0x08000000&((data)<<27))
#define  AUDIO_nicam_decode_status_additional_data(data)                         (0x07FF0000&((data)<<16))
#define  AUDIO_nicam_decode_status_bit_cnt_sync(data)                            (0x00002000&((data)<<13))
#define  AUDIO_nicam_decode_status_true_detect(data)                             (0x00001000&((data)<<12))
#define  AUDIO_nicam_decode_status_bit_error_rate(data)                          (0x00000FFF&(data))
#define  AUDIO_nicam_decode_status_get_c0(data)                                  ((0x80000000&(data))>>31)
#define  AUDIO_nicam_decode_status_get_c1c2c3(data)                              ((0x70000000&(data))>>28)
#define  AUDIO_nicam_decode_status_get_c4(data)                                  ((0x08000000&(data))>>27)
#define  AUDIO_nicam_decode_status_get_additional_data(data)                     ((0x07FF0000&(data))>>16)
#define  AUDIO_nicam_decode_status_get_bit_cnt_sync(data)                        ((0x00002000&(data))>>13)
#define  AUDIO_nicam_decode_status_get_true_detect(data)                         ((0x00001000&(data))>>12)
#define  AUDIO_nicam_decode_status_get_bit_error_rate(data)                      (0x00000FFF&(data))

#define  AUDIO_nicam_auto_switch                                                0x18006518
#define  AUDIO_nicam_auto_switch_reg_addr                                        "0xB8006518"
#define  AUDIO_nicam_auto_switch_reg                                             0xB8006518
#define  AUDIO_nicam_auto_switch_inst_addr                                       "0x00C5"
#define  set_AUDIO_nicam_auto_switch_reg(data)                                   (*((volatile unsigned int*)AUDIO_nicam_auto_switch_reg)=data)
#define  get_AUDIO_nicam_auto_switch_reg                                         (*((volatile unsigned int*)AUDIO_nicam_auto_switch_reg))
#define  AUDIO_nicam_auto_switch_enable_shift                                    (31)
#define  AUDIO_nicam_auto_switch_c4_hi_ber_shift                                 (28)
#define  AUDIO_nicam_auto_switch_analog_flag_shift                               (27)
#define  AUDIO_nicam_auto_switch_hi_ber_debounce_shift                           (24)
#define  AUDIO_nicam_auto_switch_high_threshold_shift                            (12)
#define  AUDIO_nicam_auto_switch_low_threshold_shift                             (0)
#define  AUDIO_nicam_auto_switch_enable_mask                                     (0x80000000)
#define  AUDIO_nicam_auto_switch_c4_hi_ber_mask                                  (0x30000000)
#define  AUDIO_nicam_auto_switch_analog_flag_mask                                (0x08000000)
#define  AUDIO_nicam_auto_switch_hi_ber_debounce_mask                            (0x07000000)
#define  AUDIO_nicam_auto_switch_high_threshold_mask                             (0x00FFF000)
#define  AUDIO_nicam_auto_switch_low_threshold_mask                              (0x00000FFF)
#define  AUDIO_nicam_auto_switch_enable(data)                                    (0x80000000&((data)<<31))
#define  AUDIO_nicam_auto_switch_c4_hi_ber(data)                                 (0x30000000&((data)<<28))
#define  AUDIO_nicam_auto_switch_analog_flag(data)                               (0x08000000&((data)<<27))
#define  AUDIO_nicam_auto_switch_hi_ber_debounce(data)                           (0x07000000&((data)<<24))
#define  AUDIO_nicam_auto_switch_high_threshold(data)                            (0x00FFF000&((data)<<12))
#define  AUDIO_nicam_auto_switch_low_threshold(data)                             (0x00000FFF&(data))
#define  AUDIO_nicam_auto_switch_get_enable(data)                                ((0x80000000&(data))>>31)
#define  AUDIO_nicam_auto_switch_get_c4_hi_ber(data)                             ((0x30000000&(data))>>28)
#define  AUDIO_nicam_auto_switch_get_analog_flag(data)                           ((0x08000000&(data))>>27)
#define  AUDIO_nicam_auto_switch_get_hi_ber_debounce(data)                       ((0x07000000&(data))>>24)
#define  AUDIO_nicam_auto_switch_get_high_threshold(data)                        ((0x00FFF000&(data))>>12)
#define  AUDIO_nicam_auto_switch_get_low_threshold(data)                         (0x00000FFF&(data))

#define  AUDIO_nicam_demod_auto_recovery                                        0x1800651C
#define  AUDIO_nicam_demod_auto_recovery_reg_addr                                "0xB800651C"
#define  AUDIO_nicam_demod_auto_recovery_reg                                     0xB800651C
#define  AUDIO_nicam_demod_auto_recovery_inst_addr                               "0x00C6"
#define  set_AUDIO_nicam_demod_auto_recovery_reg(data)                           (*((volatile unsigned int*)AUDIO_nicam_demod_auto_recovery_reg)=data)
#define  get_AUDIO_nicam_demod_auto_recovery_reg                                 (*((volatile unsigned int*)AUDIO_nicam_demod_auto_recovery_reg))
#define  AUDIO_nicam_demod_auto_recovery_enable_shift                            (31)
#define  AUDIO_nicam_demod_auto_recovery_dur_rand_en_shift                       (30)
#define  AUDIO_nicam_demod_auto_recovery_duration_shift                          (28)
#define  AUDIO_nicam_demod_auto_recovery_ted_error_threshold_shift               (20)
#define  AUDIO_nicam_demod_auto_recovery_ted_error_shift                         (0)
#define  AUDIO_nicam_demod_auto_recovery_enable_mask                             (0x80000000)
#define  AUDIO_nicam_demod_auto_recovery_dur_rand_en_mask                        (0x40000000)
#define  AUDIO_nicam_demod_auto_recovery_duration_mask                           (0x30000000)
#define  AUDIO_nicam_demod_auto_recovery_ted_error_threshold_mask                (0x00700000)
#define  AUDIO_nicam_demod_auto_recovery_ted_error_mask                          (0x0003FFFF)
#define  AUDIO_nicam_demod_auto_recovery_enable(data)                            (0x80000000&((data)<<31))
#define  AUDIO_nicam_demod_auto_recovery_dur_rand_en(data)                       (0x40000000&((data)<<30))
#define  AUDIO_nicam_demod_auto_recovery_duration(data)                          (0x30000000&((data)<<28))
#define  AUDIO_nicam_demod_auto_recovery_ted_error_threshold(data)               (0x00700000&((data)<<20))
#define  AUDIO_nicam_demod_auto_recovery_ted_error(data)                         (0x0003FFFF&(data))
#define  AUDIO_nicam_demod_auto_recovery_get_enable(data)                        ((0x80000000&(data))>>31)
#define  AUDIO_nicam_demod_auto_recovery_get_dur_rand_en(data)                   ((0x40000000&(data))>>30)
#define  AUDIO_nicam_demod_auto_recovery_get_duration(data)                      ((0x30000000&(data))>>28)
#define  AUDIO_nicam_demod_auto_recovery_get_ted_error_threshold(data)           ((0x00700000&(data))>>20)
#define  AUDIO_nicam_demod_auto_recovery_get_ted_error(data)                     (0x0003FFFF&(data))

#define  AUDIO_nicam_bit_error_rate                                             0x18006520
#define  AUDIO_nicam_bit_error_rate_reg_addr                                     "0xB8006520"
#define  AUDIO_nicam_bit_error_rate_reg                                          0xB8006520
#define  AUDIO_nicam_bit_error_rate_inst_addr                                    "0x00C7"
#define  set_AUDIO_nicam_bit_error_rate_reg(data)                                (*((volatile unsigned int*)AUDIO_nicam_bit_error_rate_reg)=data)
#define  get_AUDIO_nicam_bit_error_rate_reg                                      (*((volatile unsigned int*)AUDIO_nicam_bit_error_rate_reg))
#define  AUDIO_nicam_bit_error_rate_bit_error_rate_l_shift                       (12)
#define  AUDIO_nicam_bit_error_rate_bit_error_rate_r_shift                       (0)
#define  AUDIO_nicam_bit_error_rate_bit_error_rate_l_mask                        (0x00FFF000)
#define  AUDIO_nicam_bit_error_rate_bit_error_rate_r_mask                        (0x00000FFF)
#define  AUDIO_nicam_bit_error_rate_bit_error_rate_l(data)                       (0x00FFF000&((data)<<12))
#define  AUDIO_nicam_bit_error_rate_bit_error_rate_r(data)                       (0x00000FFF&(data))
#define  AUDIO_nicam_bit_error_rate_get_bit_error_rate_l(data)                   ((0x00FFF000&(data))>>12)
#define  AUDIO_nicam_bit_error_rate_get_bit_error_rate_r(data)                   (0x00000FFF&(data))

#define  AUDIO_nicam_ber_window                                                 0x18006524
#define  AUDIO_nicam_ber_window_reg_addr                                         "0xB8006524"
#define  AUDIO_nicam_ber_window_reg                                              0xB8006524
#define  AUDIO_nicam_ber_window_inst_addr                                        "0x00C8"
#define  set_AUDIO_nicam_ber_window_reg(data)                                    (*((volatile unsigned int*)AUDIO_nicam_ber_window_reg)=data)
#define  get_AUDIO_nicam_ber_window_reg                                          (*((volatile unsigned int*)AUDIO_nicam_ber_window_reg))
#define  AUDIO_nicam_ber_window_window_en_shift                                  (24)
#define  AUDIO_nicam_ber_window_l_start_shift                                    (18)
#define  AUDIO_nicam_ber_window_l_end_shift                                      (12)
#define  AUDIO_nicam_ber_window_r_start_shift                                    (6)
#define  AUDIO_nicam_ber_window_r_end_shift                                      (0)
#define  AUDIO_nicam_ber_window_window_en_mask                                   (0x01000000)
#define  AUDIO_nicam_ber_window_l_start_mask                                     (0x00FC0000)
#define  AUDIO_nicam_ber_window_l_end_mask                                       (0x0003F000)
#define  AUDIO_nicam_ber_window_r_start_mask                                     (0x00000FC0)
#define  AUDIO_nicam_ber_window_r_end_mask                                       (0x0000003F)
#define  AUDIO_nicam_ber_window_window_en(data)                                  (0x01000000&((data)<<24))
#define  AUDIO_nicam_ber_window_l_start(data)                                    (0x00FC0000&((data)<<18))
#define  AUDIO_nicam_ber_window_l_end(data)                                      (0x0003F000&((data)<<12))
#define  AUDIO_nicam_ber_window_r_start(data)                                    (0x00000FC0&((data)<<6))
#define  AUDIO_nicam_ber_window_r_end(data)                                      (0x0000003F&(data))
#define  AUDIO_nicam_ber_window_get_window_en(data)                              ((0x01000000&(data))>>24)
#define  AUDIO_nicam_ber_window_get_l_start(data)                                ((0x00FC0000&(data))>>18)
#define  AUDIO_nicam_ber_window_get_l_end(data)                                  ((0x0003F000&(data))>>12)
#define  AUDIO_nicam_ber_window_get_r_start(data)                                ((0x00000FC0&(data))>>6)
#define  AUDIO_nicam_ber_window_get_r_end(data)                                  (0x0000003F&(data))

#define  AUDIO_down_sample_control_for_playback                                 0x18006550
#define  AUDIO_down_sample_control_for_playback_reg_addr                         "0xB8006550"
#define  AUDIO_down_sample_control_for_playback_reg                              0xB8006550
#define  AUDIO_down_sample_control_for_playback_inst_addr                        "0x00C9"
#define  set_AUDIO_down_sample_control_for_playback_reg(data)                    (*((volatile unsigned int*)AUDIO_down_sample_control_for_playback_reg)=data)
#define  get_AUDIO_down_sample_control_for_playback_reg                          (*((volatile unsigned int*)AUDIO_down_sample_control_for_playback_reg))
#define  AUDIO_down_sample_control_for_playback_fifo_ch7_source_shift            (30)
#define  AUDIO_down_sample_control_for_playback_fifo_ch6_source_shift            (28)
#define  AUDIO_down_sample_control_for_playback_fifo_ch5_source_shift            (26)
#define  AUDIO_down_sample_control_for_playback_fifo_ch4_source_shift            (24)
#define  AUDIO_down_sample_control_for_playback_fifo_ch3_source_shift            (22)
#define  AUDIO_down_sample_control_for_playback_fifo_ch2_source_shift            (20)
#define  AUDIO_down_sample_control_for_playback_fifo_ch1_source_shift            (18)
#define  AUDIO_down_sample_control_for_playback_fifo_ch0_source_shift            (16)
#define  AUDIO_down_sample_control_for_playback_output_hold_zero_shift           (3)
#define  AUDIO_down_sample_control_for_playback_backend_play_en_shift            (2)
#define  AUDIO_down_sample_control_for_playback_downsample_en_shift              (1)
#define  AUDIO_down_sample_control_for_playback_down_rate_shift                  (0)
#define  AUDIO_down_sample_control_for_playback_fifo_ch7_source_mask             (0xC0000000)
#define  AUDIO_down_sample_control_for_playback_fifo_ch6_source_mask             (0x30000000)
#define  AUDIO_down_sample_control_for_playback_fifo_ch5_source_mask             (0x0C000000)
#define  AUDIO_down_sample_control_for_playback_fifo_ch4_source_mask             (0x03000000)
#define  AUDIO_down_sample_control_for_playback_fifo_ch3_source_mask             (0x00C00000)
#define  AUDIO_down_sample_control_for_playback_fifo_ch2_source_mask             (0x00300000)
#define  AUDIO_down_sample_control_for_playback_fifo_ch1_source_mask             (0x000C0000)
#define  AUDIO_down_sample_control_for_playback_fifo_ch0_source_mask             (0x00030000)
#define  AUDIO_down_sample_control_for_playback_output_hold_zero_mask            (0x00000008)
#define  AUDIO_down_sample_control_for_playback_backend_play_en_mask             (0x00000004)
#define  AUDIO_down_sample_control_for_playback_downsample_en_mask               (0x00000002)
#define  AUDIO_down_sample_control_for_playback_down_rate_mask                   (0x00000001)
#define  AUDIO_down_sample_control_for_playback_fifo_ch7_source(data)            (0xC0000000&((data)<<30))
#define  AUDIO_down_sample_control_for_playback_fifo_ch6_source(data)            (0x30000000&((data)<<28))
#define  AUDIO_down_sample_control_for_playback_fifo_ch5_source(data)            (0x0C000000&((data)<<26))
#define  AUDIO_down_sample_control_for_playback_fifo_ch4_source(data)            (0x03000000&((data)<<24))
#define  AUDIO_down_sample_control_for_playback_fifo_ch3_source(data)            (0x00C00000&((data)<<22))
#define  AUDIO_down_sample_control_for_playback_fifo_ch2_source(data)            (0x00300000&((data)<<20))
#define  AUDIO_down_sample_control_for_playback_fifo_ch1_source(data)            (0x000C0000&((data)<<18))
#define  AUDIO_down_sample_control_for_playback_fifo_ch0_source(data)            (0x00030000&((data)<<16))
#define  AUDIO_down_sample_control_for_playback_output_hold_zero(data)           (0x00000008&((data)<<3))
#define  AUDIO_down_sample_control_for_playback_backend_play_en(data)            (0x00000004&((data)<<2))
#define  AUDIO_down_sample_control_for_playback_downsample_en(data)              (0x00000002&((data)<<1))
#define  AUDIO_down_sample_control_for_playback_down_rate(data)                  (0x00000001&(data))
#define  AUDIO_down_sample_control_for_playback_get_fifo_ch7_source(data)        ((0xC0000000&(data))>>30)
#define  AUDIO_down_sample_control_for_playback_get_fifo_ch6_source(data)        ((0x30000000&(data))>>28)
#define  AUDIO_down_sample_control_for_playback_get_fifo_ch5_source(data)        ((0x0C000000&(data))>>26)
#define  AUDIO_down_sample_control_for_playback_get_fifo_ch4_source(data)        ((0x03000000&(data))>>24)
#define  AUDIO_down_sample_control_for_playback_get_fifo_ch3_source(data)        ((0x00C00000&(data))>>22)
#define  AUDIO_down_sample_control_for_playback_get_fifo_ch2_source(data)        ((0x00300000&(data))>>20)
#define  AUDIO_down_sample_control_for_playback_get_fifo_ch1_source(data)        ((0x000C0000&(data))>>18)
#define  AUDIO_down_sample_control_for_playback_get_fifo_ch0_source(data)        ((0x00030000&(data))>>16)
#define  AUDIO_down_sample_control_for_playback_get_output_hold_zero(data)       ((0x00000008&(data))>>3)
#define  AUDIO_down_sample_control_for_playback_get_backend_play_en(data)        ((0x00000004&(data))>>2)
#define  AUDIO_down_sample_control_for_playback_get_downsample_en(data)          ((0x00000002&(data))>>1)
#define  AUDIO_down_sample_control_for_playback_get_down_rate(data)              (0x00000001&(data))

#define  AUDIO_down_sample_fifo_source_sel                                      0x18006554
#define  AUDIO_down_sample_fifo_source_sel_reg_addr                              "0xB8006554"
#define  AUDIO_down_sample_fifo_source_sel_reg                                   0xB8006554
#define  AUDIO_down_sample_fifo_source_sel_inst_addr                             "0x00CA"
#define  set_AUDIO_down_sample_fifo_source_sel_reg(data)                         (*((volatile unsigned int*)AUDIO_down_sample_fifo_source_sel_reg)=data)
#define  get_AUDIO_down_sample_fifo_source_sel_reg                               (*((volatile unsigned int*)AUDIO_down_sample_fifo_source_sel_reg))
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch67_sel_shift                   (12)
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch45_sel_shift                   (8)
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch23_sel_shift                   (4)
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch01_sel_shift                   (0)
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch67_sel_mask                    (0x0000F000)
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch45_sel_mask                    (0x00000F00)
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch23_sel_mask                    (0x000000F0)
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch01_sel_mask                    (0x0000000F)
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch67_sel(data)                   (0x0000F000&((data)<<12))
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch45_sel(data)                   (0x00000F00&((data)<<8))
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch23_sel(data)                   (0x000000F0&((data)<<4))
#define  AUDIO_down_sample_fifo_source_sel_fifo_ch01_sel(data)                   (0x0000000F&(data))
#define  AUDIO_down_sample_fifo_source_sel_get_fifo_ch67_sel(data)               ((0x0000F000&(data))>>12)
#define  AUDIO_down_sample_fifo_source_sel_get_fifo_ch45_sel(data)               ((0x00000F00&(data))>>8)
#define  AUDIO_down_sample_fifo_source_sel_get_fifo_ch23_sel(data)               ((0x000000F0&(data))>>4)
#define  AUDIO_down_sample_fifo_source_sel_get_fifo_ch01_sel(data)               (0x0000000F&(data))

#define  AUDIO_down_sample_mbist_recoding                                       0x18006558
#define  AUDIO_down_sample_mbist_recoding_reg_addr                               "0xB8006558"
#define  AUDIO_down_sample_mbist_recoding_reg                                    0xB8006558
#define  AUDIO_down_sample_mbist_recoding_inst_addr                              "0x00CB"
#define  set_AUDIO_down_sample_mbist_recoding_reg(data)                          (*((volatile unsigned int*)AUDIO_down_sample_mbist_recoding_reg)=data)
#define  get_AUDIO_down_sample_mbist_recoding_reg                                (*((volatile unsigned int*)AUDIO_down_sample_mbist_recoding_reg))
#define  AUDIO_down_sample_mbist_recoding_dummy_31_14_shift                      (14)
#define  AUDIO_down_sample_mbist_recoding_dummy_31_14_mask                       (0xFFFFC000)
#define  AUDIO_down_sample_mbist_recoding_dummy_31_14(data)                      (0xFFFFC000&((data)<<14))
#define  AUDIO_down_sample_mbist_recoding_get_dummy_31_14(data)                  ((0xFFFFC000&(data))>>14)

#define  AUDIO_down_sample_mbist_rm                                             0x18006560
#define  AUDIO_down_sample_mbist_rm_reg_addr                                     "0xB8006560"
#define  AUDIO_down_sample_mbist_rm_reg                                          0xB8006560
#define  AUDIO_down_sample_mbist_rm_inst_addr                                    "0x00CC"
#define  set_AUDIO_down_sample_mbist_rm_reg(data)                                (*((volatile unsigned int*)AUDIO_down_sample_mbist_rm_reg)=data)
#define  get_AUDIO_down_sample_mbist_rm_reg                                      (*((volatile unsigned int*)AUDIO_down_sample_mbist_rm_reg))
#define  AUDIO_down_sample_mbist_rm_rm_7_shift                                   (28)
#define  AUDIO_down_sample_mbist_rm_rm_6_shift                                   (24)
#define  AUDIO_down_sample_mbist_rm_rm_5_shift                                   (20)
#define  AUDIO_down_sample_mbist_rm_rm_4_shift                                   (16)
#define  AUDIO_down_sample_mbist_rm_rm_3_shift                                   (12)
#define  AUDIO_down_sample_mbist_rm_rm_2_shift                                   (8)
#define  AUDIO_down_sample_mbist_rm_rm_1_shift                                   (4)
#define  AUDIO_down_sample_mbist_rm_rm_0_shift                                   (0)
#define  AUDIO_down_sample_mbist_rm_rm_7_mask                                    (0xF0000000)
#define  AUDIO_down_sample_mbist_rm_rm_6_mask                                    (0x0F000000)
#define  AUDIO_down_sample_mbist_rm_rm_5_mask                                    (0x00F00000)
#define  AUDIO_down_sample_mbist_rm_rm_4_mask                                    (0x000F0000)
#define  AUDIO_down_sample_mbist_rm_rm_3_mask                                    (0x0000F000)
#define  AUDIO_down_sample_mbist_rm_rm_2_mask                                    (0x00000F00)
#define  AUDIO_down_sample_mbist_rm_rm_1_mask                                    (0x000000F0)
#define  AUDIO_down_sample_mbist_rm_rm_0_mask                                    (0x0000000F)
#define  AUDIO_down_sample_mbist_rm_rm_7(data)                                   (0xF0000000&((data)<<28))
#define  AUDIO_down_sample_mbist_rm_rm_6(data)                                   (0x0F000000&((data)<<24))
#define  AUDIO_down_sample_mbist_rm_rm_5(data)                                   (0x00F00000&((data)<<20))
#define  AUDIO_down_sample_mbist_rm_rm_4(data)                                   (0x000F0000&((data)<<16))
#define  AUDIO_down_sample_mbist_rm_rm_3(data)                                   (0x0000F000&((data)<<12))
#define  AUDIO_down_sample_mbist_rm_rm_2(data)                                   (0x00000F00&((data)<<8))
#define  AUDIO_down_sample_mbist_rm_rm_1(data)                                   (0x000000F0&((data)<<4))
#define  AUDIO_down_sample_mbist_rm_rm_0(data)                                   (0x0000000F&(data))
#define  AUDIO_down_sample_mbist_rm_get_rm_7(data)                               ((0xF0000000&(data))>>28)
#define  AUDIO_down_sample_mbist_rm_get_rm_6(data)                               ((0x0F000000&(data))>>24)
#define  AUDIO_down_sample_mbist_rm_get_rm_5(data)                               ((0x00F00000&(data))>>20)
#define  AUDIO_down_sample_mbist_rm_get_rm_4(data)                               ((0x000F0000&(data))>>16)
#define  AUDIO_down_sample_mbist_rm_get_rm_3(data)                               ((0x0000F000&(data))>>12)
#define  AUDIO_down_sample_mbist_rm_get_rm_2(data)                               ((0x00000F00&(data))>>8)
#define  AUDIO_down_sample_mbist_rm_get_rm_1(data)                               ((0x000000F0&(data))>>4)
#define  AUDIO_down_sample_mbist_rm_get_rm_0(data)                               (0x0000000F&(data))

#define  AUDIO_down_sample_mbist_rm_1                                           0x18006564
#define  AUDIO_down_sample_mbist_rm_1_reg_addr                                   "0xB8006564"
#define  AUDIO_down_sample_mbist_rm_1_reg                                        0xB8006564
#define  AUDIO_down_sample_mbist_rm_1_inst_addr                                  "0x00CD"
#define  set_AUDIO_down_sample_mbist_rm_1_reg(data)                              (*((volatile unsigned int*)AUDIO_down_sample_mbist_rm_1_reg)=data)
#define  get_AUDIO_down_sample_mbist_rm_1_reg                                    (*((volatile unsigned int*)AUDIO_down_sample_mbist_rm_1_reg))
#define  AUDIO_down_sample_mbist_rm_1_rm_15_shift                                (28)
#define  AUDIO_down_sample_mbist_rm_1_rm_14_shift                                (24)
#define  AUDIO_down_sample_mbist_rm_1_rm_13_shift                                (20)
#define  AUDIO_down_sample_mbist_rm_1_rm_12_shift                                (16)
#define  AUDIO_down_sample_mbist_rm_1_rm_11_shift                                (12)
#define  AUDIO_down_sample_mbist_rm_1_rm_10_shift                                (8)
#define  AUDIO_down_sample_mbist_rm_1_rm_9_shift                                 (4)
#define  AUDIO_down_sample_mbist_rm_1_rm_8_shift                                 (0)
#define  AUDIO_down_sample_mbist_rm_1_rm_15_mask                                 (0xF0000000)
#define  AUDIO_down_sample_mbist_rm_1_rm_14_mask                                 (0x0F000000)
#define  AUDIO_down_sample_mbist_rm_1_rm_13_mask                                 (0x00F00000)
#define  AUDIO_down_sample_mbist_rm_1_rm_12_mask                                 (0x000F0000)
#define  AUDIO_down_sample_mbist_rm_1_rm_11_mask                                 (0x0000F000)
#define  AUDIO_down_sample_mbist_rm_1_rm_10_mask                                 (0x00000F00)
#define  AUDIO_down_sample_mbist_rm_1_rm_9_mask                                  (0x000000F0)
#define  AUDIO_down_sample_mbist_rm_1_rm_8_mask                                  (0x0000000F)
#define  AUDIO_down_sample_mbist_rm_1_rm_15(data)                                (0xF0000000&((data)<<28))
#define  AUDIO_down_sample_mbist_rm_1_rm_14(data)                                (0x0F000000&((data)<<24))
#define  AUDIO_down_sample_mbist_rm_1_rm_13(data)                                (0x00F00000&((data)<<20))
#define  AUDIO_down_sample_mbist_rm_1_rm_12(data)                                (0x000F0000&((data)<<16))
#define  AUDIO_down_sample_mbist_rm_1_rm_11(data)                                (0x0000F000&((data)<<12))
#define  AUDIO_down_sample_mbist_rm_1_rm_10(data)                                (0x00000F00&((data)<<8))
#define  AUDIO_down_sample_mbist_rm_1_rm_9(data)                                 (0x000000F0&((data)<<4))
#define  AUDIO_down_sample_mbist_rm_1_rm_8(data)                                 (0x0000000F&(data))
#define  AUDIO_down_sample_mbist_rm_1_get_rm_15(data)                            ((0xF0000000&(data))>>28)
#define  AUDIO_down_sample_mbist_rm_1_get_rm_14(data)                            ((0x0F000000&(data))>>24)
#define  AUDIO_down_sample_mbist_rm_1_get_rm_13(data)                            ((0x00F00000&(data))>>20)
#define  AUDIO_down_sample_mbist_rm_1_get_rm_12(data)                            ((0x000F0000&(data))>>16)
#define  AUDIO_down_sample_mbist_rm_1_get_rm_11(data)                            ((0x0000F000&(data))>>12)
#define  AUDIO_down_sample_mbist_rm_1_get_rm_10(data)                            ((0x00000F00&(data))>>8)
#define  AUDIO_down_sample_mbist_rm_1_get_rm_9(data)                             ((0x000000F0&(data))>>4)
#define  AUDIO_down_sample_mbist_rm_1_get_rm_8(data)                             (0x0000000F&(data))

#define  AUDIO_down_sample_mbist_rme                                            0x18006568
#define  AUDIO_down_sample_mbist_rme_reg_addr                                    "0xB8006568"
#define  AUDIO_down_sample_mbist_rme_reg                                         0xB8006568
#define  AUDIO_down_sample_mbist_rme_inst_addr                                   "0x00CE"
#define  set_AUDIO_down_sample_mbist_rme_reg(data)                               (*((volatile unsigned int*)AUDIO_down_sample_mbist_rme_reg)=data)
#define  get_AUDIO_down_sample_mbist_rme_reg                                     (*((volatile unsigned int*)AUDIO_down_sample_mbist_rme_reg))
#define  AUDIO_down_sample_mbist_rme_rme_15_shift                                (15)
#define  AUDIO_down_sample_mbist_rme_rme_14_shift                                (14)
#define  AUDIO_down_sample_mbist_rme_rme_13_shift                                (13)
#define  AUDIO_down_sample_mbist_rme_rme_12_shift                                (12)
#define  AUDIO_down_sample_mbist_rme_rme_11_shift                                (11)
#define  AUDIO_down_sample_mbist_rme_rme_10_shift                                (10)
#define  AUDIO_down_sample_mbist_rme_rme_9_shift                                 (9)
#define  AUDIO_down_sample_mbist_rme_rme_8_shift                                 (8)
#define  AUDIO_down_sample_mbist_rme_rme_7_shift                                 (7)
#define  AUDIO_down_sample_mbist_rme_rme_6_shift                                 (6)
#define  AUDIO_down_sample_mbist_rme_rme_5_shift                                 (5)
#define  AUDIO_down_sample_mbist_rme_rme_4_shift                                 (4)
#define  AUDIO_down_sample_mbist_rme_rme_3_shift                                 (3)
#define  AUDIO_down_sample_mbist_rme_rme_2_shift                                 (2)
#define  AUDIO_down_sample_mbist_rme_rme_1_shift                                 (1)
#define  AUDIO_down_sample_mbist_rme_rme_0_shift                                 (0)
#define  AUDIO_down_sample_mbist_rme_rme_15_mask                                 (0x00008000)
#define  AUDIO_down_sample_mbist_rme_rme_14_mask                                 (0x00004000)
#define  AUDIO_down_sample_mbist_rme_rme_13_mask                                 (0x00002000)
#define  AUDIO_down_sample_mbist_rme_rme_12_mask                                 (0x00001000)
#define  AUDIO_down_sample_mbist_rme_rme_11_mask                                 (0x00000800)
#define  AUDIO_down_sample_mbist_rme_rme_10_mask                                 (0x00000400)
#define  AUDIO_down_sample_mbist_rme_rme_9_mask                                  (0x00000200)
#define  AUDIO_down_sample_mbist_rme_rme_8_mask                                  (0x00000100)
#define  AUDIO_down_sample_mbist_rme_rme_7_mask                                  (0x00000080)
#define  AUDIO_down_sample_mbist_rme_rme_6_mask                                  (0x00000040)
#define  AUDIO_down_sample_mbist_rme_rme_5_mask                                  (0x00000020)
#define  AUDIO_down_sample_mbist_rme_rme_4_mask                                  (0x00000010)
#define  AUDIO_down_sample_mbist_rme_rme_3_mask                                  (0x00000008)
#define  AUDIO_down_sample_mbist_rme_rme_2_mask                                  (0x00000004)
#define  AUDIO_down_sample_mbist_rme_rme_1_mask                                  (0x00000002)
#define  AUDIO_down_sample_mbist_rme_rme_0_mask                                  (0x00000001)
#define  AUDIO_down_sample_mbist_rme_rme_15(data)                                (0x00008000&((data)<<15))
#define  AUDIO_down_sample_mbist_rme_rme_14(data)                                (0x00004000&((data)<<14))
#define  AUDIO_down_sample_mbist_rme_rme_13(data)                                (0x00002000&((data)<<13))
#define  AUDIO_down_sample_mbist_rme_rme_12(data)                                (0x00001000&((data)<<12))
#define  AUDIO_down_sample_mbist_rme_rme_11(data)                                (0x00000800&((data)<<11))
#define  AUDIO_down_sample_mbist_rme_rme_10(data)                                (0x00000400&((data)<<10))
#define  AUDIO_down_sample_mbist_rme_rme_9(data)                                 (0x00000200&((data)<<9))
#define  AUDIO_down_sample_mbist_rme_rme_8(data)                                 (0x00000100&((data)<<8))
#define  AUDIO_down_sample_mbist_rme_rme_7(data)                                 (0x00000080&((data)<<7))
#define  AUDIO_down_sample_mbist_rme_rme_6(data)                                 (0x00000040&((data)<<6))
#define  AUDIO_down_sample_mbist_rme_rme_5(data)                                 (0x00000020&((data)<<5))
#define  AUDIO_down_sample_mbist_rme_rme_4(data)                                 (0x00000010&((data)<<4))
#define  AUDIO_down_sample_mbist_rme_rme_3(data)                                 (0x00000008&((data)<<3))
#define  AUDIO_down_sample_mbist_rme_rme_2(data)                                 (0x00000004&((data)<<2))
#define  AUDIO_down_sample_mbist_rme_rme_1(data)                                 (0x00000002&((data)<<1))
#define  AUDIO_down_sample_mbist_rme_rme_0(data)                                 (0x00000001&(data))
#define  AUDIO_down_sample_mbist_rme_get_rme_15(data)                            ((0x00008000&(data))>>15)
#define  AUDIO_down_sample_mbist_rme_get_rme_14(data)                            ((0x00004000&(data))>>14)
#define  AUDIO_down_sample_mbist_rme_get_rme_13(data)                            ((0x00002000&(data))>>13)
#define  AUDIO_down_sample_mbist_rme_get_rme_12(data)                            ((0x00001000&(data))>>12)
#define  AUDIO_down_sample_mbist_rme_get_rme_11(data)                            ((0x00000800&(data))>>11)
#define  AUDIO_down_sample_mbist_rme_get_rme_10(data)                            ((0x00000400&(data))>>10)
#define  AUDIO_down_sample_mbist_rme_get_rme_9(data)                             ((0x00000200&(data))>>9)
#define  AUDIO_down_sample_mbist_rme_get_rme_8(data)                             ((0x00000100&(data))>>8)
#define  AUDIO_down_sample_mbist_rme_get_rme_7(data)                             ((0x00000080&(data))>>7)
#define  AUDIO_down_sample_mbist_rme_get_rme_6(data)                             ((0x00000040&(data))>>6)
#define  AUDIO_down_sample_mbist_rme_get_rme_5(data)                             ((0x00000020&(data))>>5)
#define  AUDIO_down_sample_mbist_rme_get_rme_4(data)                             ((0x00000010&(data))>>4)
#define  AUDIO_down_sample_mbist_rme_get_rme_3(data)                             ((0x00000008&(data))>>3)
#define  AUDIO_down_sample_mbist_rme_get_rme_2(data)                             ((0x00000004&(data))>>2)
#define  AUDIO_down_sample_mbist_rme_get_rme_1(data)                             ((0x00000002&(data))>>1)
#define  AUDIO_down_sample_mbist_rme_get_rme_0(data)                             (0x00000001&(data))

#define  AUDIO_down_sample_control_for_ts                                       0x180065A0
#define  AUDIO_down_sample_control_for_ts_reg_addr                               "0xB80065A0"
#define  AUDIO_down_sample_control_for_ts_reg                                    0xB80065A0
#define  AUDIO_down_sample_control_for_ts_inst_addr                              "0x00CF"
#define  set_AUDIO_down_sample_control_for_ts_reg(data)                          (*((volatile unsigned int*)AUDIO_down_sample_control_for_ts_reg)=data)
#define  get_AUDIO_down_sample_control_for_ts_reg                                (*((volatile unsigned int*)AUDIO_down_sample_control_for_ts_reg))
#define  AUDIO_down_sample_control_for_ts_catch_data_mode_shift                  (28)
#define  AUDIO_down_sample_control_for_ts_fifo_ch2_source_shift                  (26)
#define  AUDIO_down_sample_control_for_ts_fifo_ch3_source_shift                  (24)
#define  AUDIO_down_sample_control_for_ts_fifo_ch23_sel_shift                    (20)
#define  AUDIO_down_sample_control_for_ts_fifo_ch0_source_shift                  (18)
#define  AUDIO_down_sample_control_for_ts_fifo_ch1_source_shift                  (16)
#define  AUDIO_down_sample_control_for_ts_fifo_ch01_sel_shift                    (12)
#define  AUDIO_down_sample_control_for_ts_fifo_ch4_source_shift                  (10)
#define  AUDIO_down_sample_control_for_ts_fifo_ch5_source_shift                  (8)
#define  AUDIO_down_sample_control_for_ts_fifo_ch45_sel_shift                    (4)
#define  AUDIO_down_sample_control_for_ts_output_hold_zero_shift                 (3)
#define  AUDIO_down_sample_control_for_ts_backend_play_en_shift                  (2)
#define  AUDIO_down_sample_control_for_ts_downsample_en_shift                    (1)
#define  AUDIO_down_sample_control_for_ts_down_rate_shift                        (0)
#define  AUDIO_down_sample_control_for_ts_catch_data_mode_mask                   (0x10000000)
#define  AUDIO_down_sample_control_for_ts_fifo_ch2_source_mask                   (0x0C000000)
#define  AUDIO_down_sample_control_for_ts_fifo_ch3_source_mask                   (0x03000000)
#define  AUDIO_down_sample_control_for_ts_fifo_ch23_sel_mask                     (0x00F00000)
#define  AUDIO_down_sample_control_for_ts_fifo_ch0_source_mask                   (0x000C0000)
#define  AUDIO_down_sample_control_for_ts_fifo_ch1_source_mask                   (0x00030000)
#define  AUDIO_down_sample_control_for_ts_fifo_ch01_sel_mask                     (0x0000F000)
#define  AUDIO_down_sample_control_for_ts_fifo_ch4_source_mask                   (0x00000C00)
#define  AUDIO_down_sample_control_for_ts_fifo_ch5_source_mask                   (0x00000300)
#define  AUDIO_down_sample_control_for_ts_fifo_ch45_sel_mask                     (0x000000F0)
#define  AUDIO_down_sample_control_for_ts_output_hold_zero_mask                  (0x00000008)
#define  AUDIO_down_sample_control_for_ts_backend_play_en_mask                   (0x00000004)
#define  AUDIO_down_sample_control_for_ts_downsample_en_mask                     (0x00000002)
#define  AUDIO_down_sample_control_for_ts_down_rate_mask                         (0x00000001)
#define  AUDIO_down_sample_control_for_ts_catch_data_mode(data)                  (0x10000000&((data)<<28))
#define  AUDIO_down_sample_control_for_ts_fifo_ch2_source(data)                  (0x0C000000&((data)<<26))
#define  AUDIO_down_sample_control_for_ts_fifo_ch3_source(data)                  (0x03000000&((data)<<24))
#define  AUDIO_down_sample_control_for_ts_fifo_ch23_sel(data)                    (0x00F00000&((data)<<20))
#define  AUDIO_down_sample_control_for_ts_fifo_ch0_source(data)                  (0x000C0000&((data)<<18))
#define  AUDIO_down_sample_control_for_ts_fifo_ch1_source(data)                  (0x00030000&((data)<<16))
#define  AUDIO_down_sample_control_for_ts_fifo_ch01_sel(data)                    (0x0000F000&((data)<<12))
#define  AUDIO_down_sample_control_for_ts_fifo_ch4_source(data)                  (0x00000C00&((data)<<10))
#define  AUDIO_down_sample_control_for_ts_fifo_ch5_source(data)                  (0x00000300&((data)<<8))
#define  AUDIO_down_sample_control_for_ts_fifo_ch45_sel(data)                    (0x000000F0&((data)<<4))
#define  AUDIO_down_sample_control_for_ts_output_hold_zero(data)                 (0x00000008&((data)<<3))
#define  AUDIO_down_sample_control_for_ts_backend_play_en(data)                  (0x00000004&((data)<<2))
#define  AUDIO_down_sample_control_for_ts_downsample_en(data)                    (0x00000002&((data)<<1))
#define  AUDIO_down_sample_control_for_ts_down_rate(data)                        (0x00000001&(data))
#define  AUDIO_down_sample_control_for_ts_get_catch_data_mode(data)              ((0x10000000&(data))>>28)
#define  AUDIO_down_sample_control_for_ts_get_fifo_ch2_source(data)              ((0x0C000000&(data))>>26)
#define  AUDIO_down_sample_control_for_ts_get_fifo_ch3_source(data)              ((0x03000000&(data))>>24)
#define  AUDIO_down_sample_control_for_ts_get_fifo_ch23_sel(data)                ((0x00F00000&(data))>>20)
#define  AUDIO_down_sample_control_for_ts_get_fifo_ch0_source(data)              ((0x000C0000&(data))>>18)
#define  AUDIO_down_sample_control_for_ts_get_fifo_ch1_source(data)              ((0x00030000&(data))>>16)
#define  AUDIO_down_sample_control_for_ts_get_fifo_ch01_sel(data)                ((0x0000F000&(data))>>12)
#define  AUDIO_down_sample_control_for_ts_get_fifo_ch4_source(data)              ((0x00000C00&(data))>>10)
#define  AUDIO_down_sample_control_for_ts_get_fifo_ch5_source(data)              ((0x00000300&(data))>>8)
#define  AUDIO_down_sample_control_for_ts_get_fifo_ch45_sel(data)                ((0x000000F0&(data))>>4)
#define  AUDIO_down_sample_control_for_ts_get_output_hold_zero(data)             ((0x00000008&(data))>>3)
#define  AUDIO_down_sample_control_for_ts_get_backend_play_en(data)              ((0x00000004&(data))>>2)
#define  AUDIO_down_sample_control_for_ts_get_downsample_en(data)                ((0x00000002&(data))>>1)
#define  AUDIO_down_sample_control_for_ts_get_down_rate(data)                    (0x00000001&(data))

#define  AUDIO_ts_ds_fifo_mbist_rm                                              0x180065A4
#define  AUDIO_ts_ds_fifo_mbist_rm_reg_addr                                      "0xB80065A4"
#define  AUDIO_ts_ds_fifo_mbist_rm_reg                                           0xB80065A4
#define  AUDIO_ts_ds_fifo_mbist_rm_inst_addr                                     "0x00D0"
#define  set_AUDIO_ts_ds_fifo_mbist_rm_reg(data)                                 (*((volatile unsigned int*)AUDIO_ts_ds_fifo_mbist_rm_reg)=data)
#define  get_AUDIO_ts_ds_fifo_mbist_rm_reg                                       (*((volatile unsigned int*)AUDIO_ts_ds_fifo_mbist_rm_reg))
#define  AUDIO_ts_ds_fifo_mbist_rm_dummy_31_16_shift                             (16)
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_3_shift                                    (12)
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_2_shift                                    (8)
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_1_shift                                    (4)
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_0_shift                                    (0)
#define  AUDIO_ts_ds_fifo_mbist_rm_dummy_31_16_mask                              (0xFFFF0000)
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_3_mask                                     (0x0000F000)
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_2_mask                                     (0x00000F00)
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_1_mask                                     (0x000000F0)
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_0_mask                                     (0x0000000F)
#define  AUDIO_ts_ds_fifo_mbist_rm_dummy_31_16(data)                             (0xFFFF0000&((data)<<16))
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_3(data)                                    (0x0000F000&((data)<<12))
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_2(data)                                    (0x00000F00&((data)<<8))
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_1(data)                                    (0x000000F0&((data)<<4))
#define  AUDIO_ts_ds_fifo_mbist_rm_rm_0(data)                                    (0x0000000F&(data))
#define  AUDIO_ts_ds_fifo_mbist_rm_get_dummy_31_16(data)                         ((0xFFFF0000&(data))>>16)
#define  AUDIO_ts_ds_fifo_mbist_rm_get_rm_3(data)                                ((0x0000F000&(data))>>12)
#define  AUDIO_ts_ds_fifo_mbist_rm_get_rm_2(data)                                ((0x00000F00&(data))>>8)
#define  AUDIO_ts_ds_fifo_mbist_rm_get_rm_1(data)                                ((0x000000F0&(data))>>4)
#define  AUDIO_ts_ds_fifo_mbist_rm_get_rm_0(data)                                (0x0000000F&(data))

#define  AUDIO_ts_ds_fifo_mbist_rme                                             0x180065A8
#define  AUDIO_ts_ds_fifo_mbist_rme_reg_addr                                     "0xB80065A8"
#define  AUDIO_ts_ds_fifo_mbist_rme_reg                                          0xB80065A8
#define  AUDIO_ts_ds_fifo_mbist_rme_inst_addr                                    "0x00D1"
#define  set_AUDIO_ts_ds_fifo_mbist_rme_reg(data)                                (*((volatile unsigned int*)AUDIO_ts_ds_fifo_mbist_rme_reg)=data)
#define  get_AUDIO_ts_ds_fifo_mbist_rme_reg                                      (*((volatile unsigned int*)AUDIO_ts_ds_fifo_mbist_rme_reg))
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_3_shift                                  (3)
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_2_shift                                  (2)
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_1_shift                                  (1)
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_0_shift                                  (0)
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_3_mask                                   (0x00000008)
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_2_mask                                   (0x00000004)
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_1_mask                                   (0x00000002)
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_0_mask                                   (0x00000001)
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_3(data)                                  (0x00000008&((data)<<3))
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_2(data)                                  (0x00000004&((data)<<2))
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_1(data)                                  (0x00000002&((data)<<1))
#define  AUDIO_ts_ds_fifo_mbist_rme_rme_0(data)                                  (0x00000001&(data))
#define  AUDIO_ts_ds_fifo_mbist_rme_get_rme_3(data)                              ((0x00000008&(data))>>3)
#define  AUDIO_ts_ds_fifo_mbist_rme_get_rme_2(data)                              ((0x00000004&(data))>>2)
#define  AUDIO_ts_ds_fifo_mbist_rme_get_rme_1(data)                              ((0x00000002&(data))>>1)
#define  AUDIO_ts_ds_fifo_mbist_rme_get_rme_0(data)                              (0x00000001&(data))

#define  AUDIO_fifo_control_for_arc                                             0x180065AC
#define  AUDIO_fifo_control_for_arc_reg_addr                                     "0xB80065AC"
#define  AUDIO_fifo_control_for_arc_reg                                          0xB80065AC
#define  AUDIO_fifo_control_for_arc_inst_addr                                    "0x00D2"
#define  set_AUDIO_fifo_control_for_arc_reg(data)                                (*((volatile unsigned int*)AUDIO_fifo_control_for_arc_reg)=data)
#define  get_AUDIO_fifo_control_for_arc_reg                                      (*((volatile unsigned int*)AUDIO_fifo_control_for_arc_reg))
#define  AUDIO_fifo_control_for_arc_fifo_ch0_source_shift                        (18)
#define  AUDIO_fifo_control_for_arc_fifo_ch1_source_shift                        (16)
#define  AUDIO_fifo_control_for_arc_fifo_ch01_sel_shift                          (12)
#define  AUDIO_fifo_control_for_arc_output_hold_zero_shift                       (3)
#define  AUDIO_fifo_control_for_arc_backend_play_en_shift                        (2)
#define  AUDIO_fifo_control_for_arc_fifo_ch0_source_mask                         (0x000C0000)
#define  AUDIO_fifo_control_for_arc_fifo_ch1_source_mask                         (0x00030000)
#define  AUDIO_fifo_control_for_arc_fifo_ch01_sel_mask                           (0x0000F000)
#define  AUDIO_fifo_control_for_arc_output_hold_zero_mask                        (0x00000008)
#define  AUDIO_fifo_control_for_arc_backend_play_en_mask                         (0x00000004)
#define  AUDIO_fifo_control_for_arc_fifo_ch0_source(data)                        (0x000C0000&((data)<<18))
#define  AUDIO_fifo_control_for_arc_fifo_ch1_source(data)                        (0x00030000&((data)<<16))
#define  AUDIO_fifo_control_for_arc_fifo_ch01_sel(data)                          (0x0000F000&((data)<<12))
#define  AUDIO_fifo_control_for_arc_output_hold_zero(data)                       (0x00000008&((data)<<3))
#define  AUDIO_fifo_control_for_arc_backend_play_en(data)                        (0x00000004&((data)<<2))
#define  AUDIO_fifo_control_for_arc_get_fifo_ch0_source(data)                    ((0x000C0000&(data))>>18)
#define  AUDIO_fifo_control_for_arc_get_fifo_ch1_source(data)                    ((0x00030000&(data))>>16)
#define  AUDIO_fifo_control_for_arc_get_fifo_ch01_sel(data)                      ((0x0000F000&(data))>>12)
#define  AUDIO_fifo_control_for_arc_get_output_hold_zero(data)                   ((0x00000008&(data))>>3)
#define  AUDIO_fifo_control_for_arc_get_backend_play_en(data)                    ((0x00000004&(data))>>2)

#define  AUDIO_ADMA_CSR_pbw                                                     0x18006600
#define  AUDIO_ADMA_CSR_pbw_reg_addr                                             "0xB8006600"
#define  AUDIO_ADMA_CSR_pbw_reg                                                  0xB8006600
#define  AUDIO_ADMA_CSR_pbw_inst_addr                                            "0x00D3"
#define  set_AUDIO_ADMA_CSR_pbw_reg(data)                                        (*((volatile unsigned int*)AUDIO_ADMA_CSR_pbw_reg)=data)
#define  get_AUDIO_ADMA_CSR_pbw_reg                                              (*((volatile unsigned int*)AUDIO_ADMA_CSR_pbw_reg))
#define  AUDIO_ADMA_CSR_pbw_dma_wr_src_sel_shift                                 (30)
#define  AUDIO_ADMA_CSR_pbw_dma_w_format_shift                                   (28)
#define  AUDIO_ADMA_CSR_pbw_req_force0_shift                                     (27)
#define  AUDIO_ADMA_CSR_pbw_arb_req_1_shift                                      (26)
#define  AUDIO_ADMA_CSR_pbw_burst_to_en_shift                                    (15)
#define  AUDIO_ADMA_CSR_pbw_hbr_nonpcm_shift                                     (14)
#define  AUDIO_ADMA_CSR_pbw_pre_fifo_en_shift                                    (13)
#define  AUDIO_ADMA_CSR_pbw_pcm_random_shift                                     (12)
#define  AUDIO_ADMA_CSR_pbw_wr_channel_no_shift                                  (9)
#define  AUDIO_ADMA_CSR_pbw_aidmatype_shift                                      (8)
#define  AUDIO_ADMA_CSR_pbw_int_wr_en_shift                                      (7)
#define  AUDIO_ADMA_CSR_pbw_dma_int_en_shift                                     (6)
#define  AUDIO_ADMA_CSR_pbw_dma_soft_wr_rst_shift                                (5)
#define  AUDIO_ADMA_CSR_pbw_dma_write_enable_shift                               (4)
#define  AUDIO_ADMA_CSR_pbw_overflow_dma_status_shift                            (3)
#define  AUDIO_ADMA_CSR_pbw_wr_intr_dma_status_shift                             (2)
#define  AUDIO_ADMA_CSR_pbw_start_to_status_shift                                (1)
#define  AUDIO_ADMA_CSR_pbw_dma_wr_src_sel_mask                                  (0xC0000000)
#define  AUDIO_ADMA_CSR_pbw_dma_w_format_mask                                    (0x30000000)
#define  AUDIO_ADMA_CSR_pbw_req_force0_mask                                      (0x08000000)
#define  AUDIO_ADMA_CSR_pbw_arb_req_1_mask                                       (0x04000000)
#define  AUDIO_ADMA_CSR_pbw_burst_to_en_mask                                     (0x00008000)
#define  AUDIO_ADMA_CSR_pbw_hbr_nonpcm_mask                                      (0x00004000)
#define  AUDIO_ADMA_CSR_pbw_pre_fifo_en_mask                                     (0x00002000)
#define  AUDIO_ADMA_CSR_pbw_pcm_random_mask                                      (0x00001000)
#define  AUDIO_ADMA_CSR_pbw_wr_channel_no_mask                                   (0x00000E00)
#define  AUDIO_ADMA_CSR_pbw_aidmatype_mask                                       (0x00000100)
#define  AUDIO_ADMA_CSR_pbw_int_wr_en_mask                                       (0x00000080)
#define  AUDIO_ADMA_CSR_pbw_dma_int_en_mask                                      (0x00000040)
#define  AUDIO_ADMA_CSR_pbw_dma_soft_wr_rst_mask                                 (0x00000020)
#define  AUDIO_ADMA_CSR_pbw_dma_write_enable_mask                                (0x00000010)
#define  AUDIO_ADMA_CSR_pbw_overflow_dma_status_mask                             (0x00000008)
#define  AUDIO_ADMA_CSR_pbw_wr_intr_dma_status_mask                              (0x00000004)
#define  AUDIO_ADMA_CSR_pbw_start_to_status_mask                                 (0x00000002)
#define  AUDIO_ADMA_CSR_pbw_dma_wr_src_sel(data)                                 (0xC0000000&((data)<<30))
#define  AUDIO_ADMA_CSR_pbw_dma_w_format(data)                                   (0x30000000&((data)<<28))
#define  AUDIO_ADMA_CSR_pbw_req_force0(data)                                     (0x08000000&((data)<<27))
#define  AUDIO_ADMA_CSR_pbw_arb_req_1(data)                                      (0x04000000&((data)<<26))
#define  AUDIO_ADMA_CSR_pbw_burst_to_en(data)                                    (0x00008000&((data)<<15))
#define  AUDIO_ADMA_CSR_pbw_hbr_nonpcm(data)                                     (0x00004000&((data)<<14))
#define  AUDIO_ADMA_CSR_pbw_pre_fifo_en(data)                                    (0x00002000&((data)<<13))
#define  AUDIO_ADMA_CSR_pbw_pcm_random(data)                                     (0x00001000&((data)<<12))
#define  AUDIO_ADMA_CSR_pbw_wr_channel_no(data)                                  (0x00000E00&((data)<<9))
#define  AUDIO_ADMA_CSR_pbw_aidmatype(data)                                      (0x00000100&((data)<<8))
#define  AUDIO_ADMA_CSR_pbw_int_wr_en(data)                                      (0x00000080&((data)<<7))
#define  AUDIO_ADMA_CSR_pbw_dma_int_en(data)                                     (0x00000040&((data)<<6))
#define  AUDIO_ADMA_CSR_pbw_dma_soft_wr_rst(data)                                (0x00000020&((data)<<5))
#define  AUDIO_ADMA_CSR_pbw_dma_write_enable(data)                               (0x00000010&((data)<<4))
#define  AUDIO_ADMA_CSR_pbw_overflow_dma_status(data)                            (0x00000008&((data)<<3))
#define  AUDIO_ADMA_CSR_pbw_wr_intr_dma_status(data)                             (0x00000004&((data)<<2))
#define  AUDIO_ADMA_CSR_pbw_start_to_status(data)                                (0x00000002&((data)<<1))
#define  AUDIO_ADMA_CSR_pbw_get_dma_wr_src_sel(data)                             ((0xC0000000&(data))>>30)
#define  AUDIO_ADMA_CSR_pbw_get_dma_w_format(data)                               ((0x30000000&(data))>>28)
#define  AUDIO_ADMA_CSR_pbw_get_req_force0(data)                                 ((0x08000000&(data))>>27)
#define  AUDIO_ADMA_CSR_pbw_get_arb_req_1(data)                                  ((0x04000000&(data))>>26)
#define  AUDIO_ADMA_CSR_pbw_get_burst_to_en(data)                                ((0x00008000&(data))>>15)
#define  AUDIO_ADMA_CSR_pbw_get_hbr_nonpcm(data)                                 ((0x00004000&(data))>>14)
#define  AUDIO_ADMA_CSR_pbw_get_pre_fifo_en(data)                                ((0x00002000&(data))>>13)
#define  AUDIO_ADMA_CSR_pbw_get_pcm_random(data)                                 ((0x00001000&(data))>>12)
#define  AUDIO_ADMA_CSR_pbw_get_wr_channel_no(data)                              ((0x00000E00&(data))>>9)
#define  AUDIO_ADMA_CSR_pbw_get_aidmatype(data)                                  ((0x00000100&(data))>>8)
#define  AUDIO_ADMA_CSR_pbw_get_int_wr_en(data)                                  ((0x00000080&(data))>>7)
#define  AUDIO_ADMA_CSR_pbw_get_dma_int_en(data)                                 ((0x00000040&(data))>>6)
#define  AUDIO_ADMA_CSR_pbw_get_dma_soft_wr_rst(data)                            ((0x00000020&(data))>>5)
#define  AUDIO_ADMA_CSR_pbw_get_dma_write_enable(data)                           ((0x00000010&(data))>>4)
#define  AUDIO_ADMA_CSR_pbw_get_overflow_dma_status(data)                        ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_CSR_pbw_get_wr_intr_dma_status(data)                         ((0x00000004&(data))>>2)
#define  AUDIO_ADMA_CSR_pbw_get_start_to_status(data)                            ((0x00000002&(data))>>1)

#define  AUDIO_ADMA_WCONF_pbw                                                   0x18006604
#define  AUDIO_ADMA_WCONF_pbw_reg_addr                                           "0xB8006604"
#define  AUDIO_ADMA_WCONF_pbw_reg                                                0xB8006604
#define  AUDIO_ADMA_WCONF_pbw_inst_addr                                          "0x00D4"
#define  set_AUDIO_ADMA_WCONF_pbw_reg(data)                                      (*((volatile unsigned int*)AUDIO_ADMA_WCONF_pbw_reg)=data)
#define  get_AUDIO_ADMA_WCONF_pbw_reg                                            (*((volatile unsigned int*)AUDIO_ADMA_WCONF_pbw_reg))
#define  AUDIO_ADMA_WCONF_pbw_write_len_shift                                    (16)
#define  AUDIO_ADMA_WCONF_pbw_wr_intr_point_shift                                (0)
#define  AUDIO_ADMA_WCONF_pbw_write_len_mask                                     (0x7FFF0000)
#define  AUDIO_ADMA_WCONF_pbw_wr_intr_point_mask                                 (0x00007FFF)
#define  AUDIO_ADMA_WCONF_pbw_write_len(data)                                    (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_WCONF_pbw_wr_intr_point(data)                                (0x00007FFF&(data))
#define  AUDIO_ADMA_WCONF_pbw_get_write_len(data)                                ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_WCONF_pbw_get_wr_intr_point(data)                            (0x00007FFF&(data))

#define  AUDIO_ADMA_WRCONF_pbw                                                  0x18006608
#define  AUDIO_ADMA_WRCONF_pbw_reg_addr                                          "0xB8006608"
#define  AUDIO_ADMA_WRCONF_pbw_reg                                               0xB8006608
#define  AUDIO_ADMA_WRCONF_pbw_inst_addr                                         "0x00D5"
#define  set_AUDIO_ADMA_WRCONF_pbw_reg(data)                                     (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_pbw_reg)=data)
#define  get_AUDIO_ADMA_WRCONF_pbw_reg                                           (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_pbw_reg))
#define  AUDIO_ADMA_WRCONF_pbw_wr_buffer_length_shift                            (16)
#define  AUDIO_ADMA_WRCONF_pbw_load_wr_shift                                     (15)
#define  AUDIO_ADMA_WRCONF_pbw_avail_length_shift                                (0)
#define  AUDIO_ADMA_WRCONF_pbw_wr_buffer_length_mask                             (0x7FFF0000)
#define  AUDIO_ADMA_WRCONF_pbw_load_wr_mask                                      (0x00008000)
#define  AUDIO_ADMA_WRCONF_pbw_avail_length_mask                                 (0x00007FFF)
#define  AUDIO_ADMA_WRCONF_pbw_wr_buffer_length(data)                            (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_WRCONF_pbw_load_wr(data)                                     (0x00008000&((data)<<15))
#define  AUDIO_ADMA_WRCONF_pbw_avail_length(data)                                (0x00007FFF&(data))
#define  AUDIO_ADMA_WRCONF_pbw_get_wr_buffer_length(data)                        ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_WRCONF_pbw_get_load_wr(data)                                 ((0x00008000&(data))>>15)
#define  AUDIO_ADMA_WRCONF_pbw_get_avail_length(data)                            (0x00007FFF&(data))

#define  AUDIO_ADMA_WSADR_pbw                                                   0x1800660C
#define  AUDIO_ADMA_WSADR_pbw_reg_addr                                           "0xB800660C"
#define  AUDIO_ADMA_WSADR_pbw_reg                                                0xB800660C
#define  AUDIO_ADMA_WSADR_pbw_inst_addr                                          "0x00D6"
#define  set_AUDIO_ADMA_WSADR_pbw_reg(data)                                      (*((volatile unsigned int*)AUDIO_ADMA_WSADR_pbw_reg)=data)
#define  get_AUDIO_ADMA_WSADR_pbw_reg                                            (*((volatile unsigned int*)AUDIO_ADMA_WSADR_pbw_reg))
#define  AUDIO_ADMA_WSADR_pbw_wr_start_addr_shift                                (6)
#define  AUDIO_ADMA_WSADR_pbw_get_adr_shift                                      (3)
#define  AUDIO_ADMA_WSADR_pbw_ch_sel_shift                                       (0)
#define  AUDIO_ADMA_WSADR_pbw_wr_start_addr_mask                                 (0xFFFFFFC0)
#define  AUDIO_ADMA_WSADR_pbw_get_adr_mask                                       (0x00000008)
#define  AUDIO_ADMA_WSADR_pbw_ch_sel_mask                                        (0x00000007)
#define  AUDIO_ADMA_WSADR_pbw_wr_start_addr(data)                                (0xFFFFFFC0&((data)<<6))
#define  AUDIO_ADMA_WSADR_pbw_get_adr(data)                                      (0x00000008&((data)<<3))
#define  AUDIO_ADMA_WSADR_pbw_ch_sel(data)                                       (0x00000007&(data))
#define  AUDIO_ADMA_WSADR_pbw_get_wr_start_addr(data)                            ((0xFFFFFFC0&(data))>>6)
#define  AUDIO_ADMA_WSADR_pbw_get_get_adr(data)                                  ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_WSADR_pbw_get_ch_sel(data)                                   (0x00000007&(data))

#define  AUDIO_ADMA_CSR_tsw                                                     0x18006610
#define  AUDIO_ADMA_CSR_tsw_reg_addr                                             "0xB8006610"
#define  AUDIO_ADMA_CSR_tsw_reg                                                  0xB8006610
#define  AUDIO_ADMA_CSR_tsw_inst_addr                                            "0x00D7"
#define  set_AUDIO_ADMA_CSR_tsw_reg(data)                                        (*((volatile unsigned int*)AUDIO_ADMA_CSR_tsw_reg)=data)
#define  get_AUDIO_ADMA_CSR_tsw_reg                                              (*((volatile unsigned int*)AUDIO_ADMA_CSR_tsw_reg))
#define  AUDIO_ADMA_CSR_tsw_dma_wr_src_sel_shift                                 (30)
#define  AUDIO_ADMA_CSR_tsw_dma_w_format_shift                                   (28)
#define  AUDIO_ADMA_CSR_tsw_req_force0_shift                                     (27)
#define  AUDIO_ADMA_CSR_tsw_arb_req_3_shift                                      (26)
#define  AUDIO_ADMA_CSR_tsw_burst_to_en_shift                                    (15)
#define  AUDIO_ADMA_CSR_tsw_hbr_nonpcm_shift                                     (14)
#define  AUDIO_ADMA_CSR_tsw_pre_fifo_en_shift                                    (13)
#define  AUDIO_ADMA_CSR_tsw_pcm_random_shift                                     (12)
#define  AUDIO_ADMA_CSR_tsw_wr_channel_no_shift                                  (9)
#define  AUDIO_ADMA_CSR_tsw_aidmatype_shift                                      (8)
#define  AUDIO_ADMA_CSR_tsw_int_wr_en_shift                                      (7)
#define  AUDIO_ADMA_CSR_tsw_dma_int_en_shift                                     (6)
#define  AUDIO_ADMA_CSR_tsw_dma_soft_wr_rst_shift                                (5)
#define  AUDIO_ADMA_CSR_tsw_dma_write_enable_shift                               (4)
#define  AUDIO_ADMA_CSR_tsw_overflow_dma_status_shift                            (3)
#define  AUDIO_ADMA_CSR_tsw_wr_intr_dma_status_shift                             (2)
#define  AUDIO_ADMA_CSR_tsw_start_to_status_shift                                (1)
#define  AUDIO_ADMA_CSR_tsw_dma_wr_src_sel_mask                                  (0xC0000000)
#define  AUDIO_ADMA_CSR_tsw_dma_w_format_mask                                    (0x30000000)
#define  AUDIO_ADMA_CSR_tsw_req_force0_mask                                      (0x08000000)
#define  AUDIO_ADMA_CSR_tsw_arb_req_3_mask                                       (0x04000000)
#define  AUDIO_ADMA_CSR_tsw_burst_to_en_mask                                     (0x00008000)
#define  AUDIO_ADMA_CSR_tsw_hbr_nonpcm_mask                                      (0x00004000)
#define  AUDIO_ADMA_CSR_tsw_pre_fifo_en_mask                                     (0x00002000)
#define  AUDIO_ADMA_CSR_tsw_pcm_random_mask                                      (0x00001000)
#define  AUDIO_ADMA_CSR_tsw_wr_channel_no_mask                                   (0x00000E00)
#define  AUDIO_ADMA_CSR_tsw_aidmatype_mask                                       (0x00000100)
#define  AUDIO_ADMA_CSR_tsw_int_wr_en_mask                                       (0x00000080)
#define  AUDIO_ADMA_CSR_tsw_dma_int_en_mask                                      (0x00000040)
#define  AUDIO_ADMA_CSR_tsw_dma_soft_wr_rst_mask                                 (0x00000020)
#define  AUDIO_ADMA_CSR_tsw_dma_write_enable_mask                                (0x00000010)
#define  AUDIO_ADMA_CSR_tsw_overflow_dma_status_mask                             (0x00000008)
#define  AUDIO_ADMA_CSR_tsw_wr_intr_dma_status_mask                              (0x00000004)
#define  AUDIO_ADMA_CSR_tsw_start_to_status_mask                                 (0x00000002)
#define  AUDIO_ADMA_CSR_tsw_dma_wr_src_sel(data)                                 (0xC0000000&((data)<<30))
#define  AUDIO_ADMA_CSR_tsw_dma_w_format(data)                                   (0x30000000&((data)<<28))
#define  AUDIO_ADMA_CSR_tsw_req_force0(data)                                     (0x08000000&((data)<<27))
#define  AUDIO_ADMA_CSR_tsw_arb_req_3(data)                                      (0x04000000&((data)<<26))
#define  AUDIO_ADMA_CSR_tsw_burst_to_en(data)                                    (0x00008000&((data)<<15))
#define  AUDIO_ADMA_CSR_tsw_hbr_nonpcm(data)                                     (0x00004000&((data)<<14))
#define  AUDIO_ADMA_CSR_tsw_pre_fifo_en(data)                                    (0x00002000&((data)<<13))
#define  AUDIO_ADMA_CSR_tsw_pcm_random(data)                                     (0x00001000&((data)<<12))
#define  AUDIO_ADMA_CSR_tsw_wr_channel_no(data)                                  (0x00000E00&((data)<<9))
#define  AUDIO_ADMA_CSR_tsw_aidmatype(data)                                      (0x00000100&((data)<<8))
#define  AUDIO_ADMA_CSR_tsw_int_wr_en(data)                                      (0x00000080&((data)<<7))
#define  AUDIO_ADMA_CSR_tsw_dma_int_en(data)                                     (0x00000040&((data)<<6))
#define  AUDIO_ADMA_CSR_tsw_dma_soft_wr_rst(data)                                (0x00000020&((data)<<5))
#define  AUDIO_ADMA_CSR_tsw_dma_write_enable(data)                               (0x00000010&((data)<<4))
#define  AUDIO_ADMA_CSR_tsw_overflow_dma_status(data)                            (0x00000008&((data)<<3))
#define  AUDIO_ADMA_CSR_tsw_wr_intr_dma_status(data)                             (0x00000004&((data)<<2))
#define  AUDIO_ADMA_CSR_tsw_start_to_status(data)                                (0x00000002&((data)<<1))
#define  AUDIO_ADMA_CSR_tsw_get_dma_wr_src_sel(data)                             ((0xC0000000&(data))>>30)
#define  AUDIO_ADMA_CSR_tsw_get_dma_w_format(data)                               ((0x30000000&(data))>>28)
#define  AUDIO_ADMA_CSR_tsw_get_req_force0(data)                                 ((0x08000000&(data))>>27)
#define  AUDIO_ADMA_CSR_tsw_get_arb_req_3(data)                                  ((0x04000000&(data))>>26)
#define  AUDIO_ADMA_CSR_tsw_get_burst_to_en(data)                                ((0x00008000&(data))>>15)
#define  AUDIO_ADMA_CSR_tsw_get_hbr_nonpcm(data)                                 ((0x00004000&(data))>>14)
#define  AUDIO_ADMA_CSR_tsw_get_pre_fifo_en(data)                                ((0x00002000&(data))>>13)
#define  AUDIO_ADMA_CSR_tsw_get_pcm_random(data)                                 ((0x00001000&(data))>>12)
#define  AUDIO_ADMA_CSR_tsw_get_wr_channel_no(data)                              ((0x00000E00&(data))>>9)
#define  AUDIO_ADMA_CSR_tsw_get_aidmatype(data)                                  ((0x00000100&(data))>>8)
#define  AUDIO_ADMA_CSR_tsw_get_int_wr_en(data)                                  ((0x00000080&(data))>>7)
#define  AUDIO_ADMA_CSR_tsw_get_dma_int_en(data)                                 ((0x00000040&(data))>>6)
#define  AUDIO_ADMA_CSR_tsw_get_dma_soft_wr_rst(data)                            ((0x00000020&(data))>>5)
#define  AUDIO_ADMA_CSR_tsw_get_dma_write_enable(data)                           ((0x00000010&(data))>>4)
#define  AUDIO_ADMA_CSR_tsw_get_overflow_dma_status(data)                        ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_CSR_tsw_get_wr_intr_dma_status(data)                         ((0x00000004&(data))>>2)
#define  AUDIO_ADMA_CSR_tsw_get_start_to_status(data)                            ((0x00000002&(data))>>1)

#define  AUDIO_ADMA_WCONF_tsw                                                   0x18006614
#define  AUDIO_ADMA_WCONF_tsw_reg_addr                                           "0xB8006614"
#define  AUDIO_ADMA_WCONF_tsw_reg                                                0xB8006614
#define  AUDIO_ADMA_WCONF_tsw_inst_addr                                          "0x00D8"
#define  set_AUDIO_ADMA_WCONF_tsw_reg(data)                                      (*((volatile unsigned int*)AUDIO_ADMA_WCONF_tsw_reg)=data)
#define  get_AUDIO_ADMA_WCONF_tsw_reg                                            (*((volatile unsigned int*)AUDIO_ADMA_WCONF_tsw_reg))
#define  AUDIO_ADMA_WCONF_tsw_write_len_shift                                    (16)
#define  AUDIO_ADMA_WCONF_tsw_wr_intr_point_shift                                (0)
#define  AUDIO_ADMA_WCONF_tsw_write_len_mask                                     (0x7FFF0000)
#define  AUDIO_ADMA_WCONF_tsw_wr_intr_point_mask                                 (0x00007FFF)
#define  AUDIO_ADMA_WCONF_tsw_write_len(data)                                    (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_WCONF_tsw_wr_intr_point(data)                                (0x00007FFF&(data))
#define  AUDIO_ADMA_WCONF_tsw_get_write_len(data)                                ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_WCONF_tsw_get_wr_intr_point(data)                            (0x00007FFF&(data))

#define  AUDIO_ADMA_WRCONF_tsw                                                  0x18006618
#define  AUDIO_ADMA_WRCONF_tsw_reg_addr                                          "0xB8006618"
#define  AUDIO_ADMA_WRCONF_tsw_reg                                               0xB8006618
#define  AUDIO_ADMA_WRCONF_tsw_inst_addr                                         "0x00D9"
#define  set_AUDIO_ADMA_WRCONF_tsw_reg(data)                                     (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_tsw_reg)=data)
#define  get_AUDIO_ADMA_WRCONF_tsw_reg                                           (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_tsw_reg))
#define  AUDIO_ADMA_WRCONF_tsw_wr_buffer_length_shift                            (16)
#define  AUDIO_ADMA_WRCONF_tsw_load_wr_shift                                     (15)
#define  AUDIO_ADMA_WRCONF_tsw_avail_length_shift                                (0)
#define  AUDIO_ADMA_WRCONF_tsw_wr_buffer_length_mask                             (0x7FFF0000)
#define  AUDIO_ADMA_WRCONF_tsw_load_wr_mask                                      (0x00008000)
#define  AUDIO_ADMA_WRCONF_tsw_avail_length_mask                                 (0x00007FFF)
#define  AUDIO_ADMA_WRCONF_tsw_wr_buffer_length(data)                            (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_WRCONF_tsw_load_wr(data)                                     (0x00008000&((data)<<15))
#define  AUDIO_ADMA_WRCONF_tsw_avail_length(data)                                (0x00007FFF&(data))
#define  AUDIO_ADMA_WRCONF_tsw_get_wr_buffer_length(data)                        ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_WRCONF_tsw_get_load_wr(data)                                 ((0x00008000&(data))>>15)
#define  AUDIO_ADMA_WRCONF_tsw_get_avail_length(data)                            (0x00007FFF&(data))

#define  AUDIO_ADMA_WSADR_tsw                                                   0x1800661C
#define  AUDIO_ADMA_WSADR_tsw_reg_addr                                           "0xB800661C"
#define  AUDIO_ADMA_WSADR_tsw_reg                                                0xB800661C
#define  AUDIO_ADMA_WSADR_tsw_inst_addr                                          "0x00DA"
#define  set_AUDIO_ADMA_WSADR_tsw_reg(data)                                      (*((volatile unsigned int*)AUDIO_ADMA_WSADR_tsw_reg)=data)
#define  get_AUDIO_ADMA_WSADR_tsw_reg                                            (*((volatile unsigned int*)AUDIO_ADMA_WSADR_tsw_reg))
#define  AUDIO_ADMA_WSADR_tsw_wr_start_addr_shift                                (6)
#define  AUDIO_ADMA_WSADR_tsw_get_adr_shift                                      (3)
#define  AUDIO_ADMA_WSADR_tsw_ch_sel_shift                                       (0)
#define  AUDIO_ADMA_WSADR_tsw_wr_start_addr_mask                                 (0xFFFFFFC0)
#define  AUDIO_ADMA_WSADR_tsw_get_adr_mask                                       (0x00000008)
#define  AUDIO_ADMA_WSADR_tsw_ch_sel_mask                                        (0x00000007)
#define  AUDIO_ADMA_WSADR_tsw_wr_start_addr(data)                                (0xFFFFFFC0&((data)<<6))
#define  AUDIO_ADMA_WSADR_tsw_get_adr(data)                                      (0x00000008&((data)<<3))
#define  AUDIO_ADMA_WSADR_tsw_ch_sel(data)                                       (0x00000007&(data))
#define  AUDIO_ADMA_WSADR_tsw_get_wr_start_addr(data)                            ((0xFFFFFFC0&(data))>>6)
#define  AUDIO_ADMA_WSADR_tsw_get_get_adr(data)                                  ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_WSADR_tsw_get_ch_sel(data)                                   (0x00000007&(data))

#define  AUDIO_ADMA_CSR_arcw                                                    0x18006620
#define  AUDIO_ADMA_CSR_arcw_reg_addr                                            "0xB8006620"
#define  AUDIO_ADMA_CSR_arcw_reg                                                 0xB8006620
#define  AUDIO_ADMA_CSR_arcw_inst_addr                                           "0x00DB"
#define  set_AUDIO_ADMA_CSR_arcw_reg(data)                                       (*((volatile unsigned int*)AUDIO_ADMA_CSR_arcw_reg)=data)
#define  get_AUDIO_ADMA_CSR_arcw_reg                                             (*((volatile unsigned int*)AUDIO_ADMA_CSR_arcw_reg))
#define  AUDIO_ADMA_CSR_arcw_dma_wr_src_sel_shift                                (30)
#define  AUDIO_ADMA_CSR_arcw_dma_w_format_shift                                  (28)
#define  AUDIO_ADMA_CSR_arcw_req_force0_shift                                    (27)
#define  AUDIO_ADMA_CSR_arcw_arb_req_5_shift                                     (26)
#define  AUDIO_ADMA_CSR_arcw_burst_to_en_shift                                   (15)
#define  AUDIO_ADMA_CSR_arcw_hbr_nonpcm_shift                                    (14)
#define  AUDIO_ADMA_CSR_arcw_pre_fifo_en_shift                                   (13)
#define  AUDIO_ADMA_CSR_arcw_pcm_random_shift                                    (12)
#define  AUDIO_ADMA_CSR_arcw_wr_channel_no_shift                                 (9)
#define  AUDIO_ADMA_CSR_arcw_aidmatype_shift                                     (8)
#define  AUDIO_ADMA_CSR_arcw_int_wr_en_shift                                     (7)
#define  AUDIO_ADMA_CSR_arcw_dma_int_en_shift                                    (6)
#define  AUDIO_ADMA_CSR_arcw_dma_soft_wr_rst_shift                               (5)
#define  AUDIO_ADMA_CSR_arcw_dma_write_enable_shift                              (4)
#define  AUDIO_ADMA_CSR_arcw_overflow_dma_status_shift                           (3)
#define  AUDIO_ADMA_CSR_arcw_wr_intr_dma_status_shift                            (2)
#define  AUDIO_ADMA_CSR_arcw_start_to_status_shift                               (1)
#define  AUDIO_ADMA_CSR_arcw_dma_wr_src_sel_mask                                 (0xC0000000)
#define  AUDIO_ADMA_CSR_arcw_dma_w_format_mask                                   (0x30000000)
#define  AUDIO_ADMA_CSR_arcw_req_force0_mask                                     (0x08000000)
#define  AUDIO_ADMA_CSR_arcw_arb_req_5_mask                                      (0x04000000)
#define  AUDIO_ADMA_CSR_arcw_burst_to_en_mask                                    (0x00008000)
#define  AUDIO_ADMA_CSR_arcw_hbr_nonpcm_mask                                     (0x00004000)
#define  AUDIO_ADMA_CSR_arcw_pre_fifo_en_mask                                    (0x00002000)
#define  AUDIO_ADMA_CSR_arcw_pcm_random_mask                                     (0x00001000)
#define  AUDIO_ADMA_CSR_arcw_wr_channel_no_mask                                  (0x00000E00)
#define  AUDIO_ADMA_CSR_arcw_aidmatype_mask                                      (0x00000100)
#define  AUDIO_ADMA_CSR_arcw_int_wr_en_mask                                      (0x00000080)
#define  AUDIO_ADMA_CSR_arcw_dma_int_en_mask                                     (0x00000040)
#define  AUDIO_ADMA_CSR_arcw_dma_soft_wr_rst_mask                                (0x00000020)
#define  AUDIO_ADMA_CSR_arcw_dma_write_enable_mask                               (0x00000010)
#define  AUDIO_ADMA_CSR_arcw_overflow_dma_status_mask                            (0x00000008)
#define  AUDIO_ADMA_CSR_arcw_wr_intr_dma_status_mask                             (0x00000004)
#define  AUDIO_ADMA_CSR_arcw_start_to_status_mask                                (0x00000002)
#define  AUDIO_ADMA_CSR_arcw_dma_wr_src_sel(data)                                (0xC0000000&((data)<<30))
#define  AUDIO_ADMA_CSR_arcw_dma_w_format(data)                                  (0x30000000&((data)<<28))
#define  AUDIO_ADMA_CSR_arcw_req_force0(data)                                    (0x08000000&((data)<<27))
#define  AUDIO_ADMA_CSR_arcw_arb_req_5(data)                                     (0x04000000&((data)<<26))
#define  AUDIO_ADMA_CSR_arcw_burst_to_en(data)                                   (0x00008000&((data)<<15))
#define  AUDIO_ADMA_CSR_arcw_hbr_nonpcm(data)                                    (0x00004000&((data)<<14))
#define  AUDIO_ADMA_CSR_arcw_pre_fifo_en(data)                                   (0x00002000&((data)<<13))
#define  AUDIO_ADMA_CSR_arcw_pcm_random(data)                                    (0x00001000&((data)<<12))
#define  AUDIO_ADMA_CSR_arcw_wr_channel_no(data)                                 (0x00000E00&((data)<<9))
#define  AUDIO_ADMA_CSR_arcw_aidmatype(data)                                     (0x00000100&((data)<<8))
#define  AUDIO_ADMA_CSR_arcw_int_wr_en(data)                                     (0x00000080&((data)<<7))
#define  AUDIO_ADMA_CSR_arcw_dma_int_en(data)                                    (0x00000040&((data)<<6))
#define  AUDIO_ADMA_CSR_arcw_dma_soft_wr_rst(data)                               (0x00000020&((data)<<5))
#define  AUDIO_ADMA_CSR_arcw_dma_write_enable(data)                              (0x00000010&((data)<<4))
#define  AUDIO_ADMA_CSR_arcw_overflow_dma_status(data)                           (0x00000008&((data)<<3))
#define  AUDIO_ADMA_CSR_arcw_wr_intr_dma_status(data)                            (0x00000004&((data)<<2))
#define  AUDIO_ADMA_CSR_arcw_start_to_status(data)                               (0x00000002&((data)<<1))
#define  AUDIO_ADMA_CSR_arcw_get_dma_wr_src_sel(data)                            ((0xC0000000&(data))>>30)
#define  AUDIO_ADMA_CSR_arcw_get_dma_w_format(data)                              ((0x30000000&(data))>>28)
#define  AUDIO_ADMA_CSR_arcw_get_req_force0(data)                                ((0x08000000&(data))>>27)
#define  AUDIO_ADMA_CSR_arcw_get_arb_req_5(data)                                 ((0x04000000&(data))>>26)
#define  AUDIO_ADMA_CSR_arcw_get_burst_to_en(data)                               ((0x00008000&(data))>>15)
#define  AUDIO_ADMA_CSR_arcw_get_hbr_nonpcm(data)                                ((0x00004000&(data))>>14)
#define  AUDIO_ADMA_CSR_arcw_get_pre_fifo_en(data)                               ((0x00002000&(data))>>13)
#define  AUDIO_ADMA_CSR_arcw_get_pcm_random(data)                                ((0x00001000&(data))>>12)
#define  AUDIO_ADMA_CSR_arcw_get_wr_channel_no(data)                             ((0x00000E00&(data))>>9)
#define  AUDIO_ADMA_CSR_arcw_get_aidmatype(data)                                 ((0x00000100&(data))>>8)
#define  AUDIO_ADMA_CSR_arcw_get_int_wr_en(data)                                 ((0x00000080&(data))>>7)
#define  AUDIO_ADMA_CSR_arcw_get_dma_int_en(data)                                ((0x00000040&(data))>>6)
#define  AUDIO_ADMA_CSR_arcw_get_dma_soft_wr_rst(data)                           ((0x00000020&(data))>>5)
#define  AUDIO_ADMA_CSR_arcw_get_dma_write_enable(data)                          ((0x00000010&(data))>>4)
#define  AUDIO_ADMA_CSR_arcw_get_overflow_dma_status(data)                       ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_CSR_arcw_get_wr_intr_dma_status(data)                        ((0x00000004&(data))>>2)
#define  AUDIO_ADMA_CSR_arcw_get_start_to_status(data)                           ((0x00000002&(data))>>1)

#define  AUDIO_ADMA_WCONF_arcw                                                  0x18006624
#define  AUDIO_ADMA_WCONF_arcw_reg_addr                                          "0xB8006624"
#define  AUDIO_ADMA_WCONF_arcw_reg                                               0xB8006624
#define  AUDIO_ADMA_WCONF_arcw_inst_addr                                         "0x00DC"
#define  set_AUDIO_ADMA_WCONF_arcw_reg(data)                                     (*((volatile unsigned int*)AUDIO_ADMA_WCONF_arcw_reg)=data)
#define  get_AUDIO_ADMA_WCONF_arcw_reg                                           (*((volatile unsigned int*)AUDIO_ADMA_WCONF_arcw_reg))
#define  AUDIO_ADMA_WCONF_arcw_write_len_shift                                   (16)
#define  AUDIO_ADMA_WCONF_arcw_wr_intr_point_shift                               (0)
#define  AUDIO_ADMA_WCONF_arcw_write_len_mask                                    (0x7FFF0000)
#define  AUDIO_ADMA_WCONF_arcw_wr_intr_point_mask                                (0x00007FFF)
#define  AUDIO_ADMA_WCONF_arcw_write_len(data)                                   (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_WCONF_arcw_wr_intr_point(data)                               (0x00007FFF&(data))
#define  AUDIO_ADMA_WCONF_arcw_get_write_len(data)                               ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_WCONF_arcw_get_wr_intr_point(data)                           (0x00007FFF&(data))

#define  AUDIO_ADMA_WRCONF_arcw                                                 0x18006628
#define  AUDIO_ADMA_WRCONF_arcw_reg_addr                                         "0xB8006628"
#define  AUDIO_ADMA_WRCONF_arcw_reg                                              0xB8006628
#define  AUDIO_ADMA_WRCONF_arcw_inst_addr                                        "0x00DD"
#define  set_AUDIO_ADMA_WRCONF_arcw_reg(data)                                    (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_arcw_reg)=data)
#define  get_AUDIO_ADMA_WRCONF_arcw_reg                                          (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_arcw_reg))
#define  AUDIO_ADMA_WRCONF_arcw_wr_buffer_length_shift                           (16)
#define  AUDIO_ADMA_WRCONF_arcw_load_wr_shift                                    (15)
#define  AUDIO_ADMA_WRCONF_arcw_avail_length_shift                               (0)
#define  AUDIO_ADMA_WRCONF_arcw_wr_buffer_length_mask                            (0x7FFF0000)
#define  AUDIO_ADMA_WRCONF_arcw_load_wr_mask                                     (0x00008000)
#define  AUDIO_ADMA_WRCONF_arcw_avail_length_mask                                (0x00007FFF)
#define  AUDIO_ADMA_WRCONF_arcw_wr_buffer_length(data)                           (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_WRCONF_arcw_load_wr(data)                                    (0x00008000&((data)<<15))
#define  AUDIO_ADMA_WRCONF_arcw_avail_length(data)                               (0x00007FFF&(data))
#define  AUDIO_ADMA_WRCONF_arcw_get_wr_buffer_length(data)                       ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_WRCONF_arcw_get_load_wr(data)                                ((0x00008000&(data))>>15)
#define  AUDIO_ADMA_WRCONF_arcw_get_avail_length(data)                           (0x00007FFF&(data))

#define  AUDIO_ADMA_WSADR_arcw                                                  0x1800662C
#define  AUDIO_ADMA_WSADR_arcw_reg_addr                                          "0xB800662C"
#define  AUDIO_ADMA_WSADR_arcw_reg                                               0xB800662C
#define  AUDIO_ADMA_WSADR_arcw_inst_addr                                         "0x00DE"
#define  set_AUDIO_ADMA_WSADR_arcw_reg(data)                                     (*((volatile unsigned int*)AUDIO_ADMA_WSADR_arcw_reg)=data)
#define  get_AUDIO_ADMA_WSADR_arcw_reg                                           (*((volatile unsigned int*)AUDIO_ADMA_WSADR_arcw_reg))
#define  AUDIO_ADMA_WSADR_arcw_wr_start_addr_shift                               (6)
#define  AUDIO_ADMA_WSADR_arcw_get_adr_shift                                     (3)
#define  AUDIO_ADMA_WSADR_arcw_ch_sel_shift                                      (0)
#define  AUDIO_ADMA_WSADR_arcw_wr_start_addr_mask                                (0xFFFFFFC0)
#define  AUDIO_ADMA_WSADR_arcw_get_adr_mask                                      (0x00000008)
#define  AUDIO_ADMA_WSADR_arcw_ch_sel_mask                                       (0x00000007)
#define  AUDIO_ADMA_WSADR_arcw_wr_start_addr(data)                               (0xFFFFFFC0&((data)<<6))
#define  AUDIO_ADMA_WSADR_arcw_get_adr(data)                                     (0x00000008&((data)<<3))
#define  AUDIO_ADMA_WSADR_arcw_ch_sel(data)                                      (0x00000007&(data))
#define  AUDIO_ADMA_WSADR_arcw_get_wr_start_addr(data)                           ((0xFFFFFFC0&(data))>>6)
#define  AUDIO_ADMA_WSADR_arcw_get_get_adr(data)                                 ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_WSADR_arcw_get_ch_sel(data)                                  (0x00000007&(data))

#define  AUDIO_ADMA_CSR_pbr                                                     0x18006630
#define  AUDIO_ADMA_CSR_pbr_reg_addr                                             "0xB8006630"
#define  AUDIO_ADMA_CSR_pbr_reg                                                  0xB8006630
#define  AUDIO_ADMA_CSR_pbr_inst_addr                                            "0x00DF"
#define  set_AUDIO_ADMA_CSR_pbr_reg(data)                                        (*((volatile unsigned int*)AUDIO_ADMA_CSR_pbr_reg)=data)
#define  get_AUDIO_ADMA_CSR_pbr_reg                                              (*((volatile unsigned int*)AUDIO_ADMA_CSR_pbr_reg))
#define  AUDIO_ADMA_CSR_pbr_dma_output_src_sel_shift                             (30)
#define  AUDIO_ADMA_CSR_pbr_dma_r_format_shift                                   (29)
#define  AUDIO_ADMA_CSR_pbr_output_hold_en_shift                                 (28)
#define  AUDIO_ADMA_CSR_pbr_cur_st_shift                                         (26)
#define  AUDIO_ADMA_CSR_pbr_empty_gnt_shift                                      (25)
#define  AUDIO_ADMA_CSR_pbr_req_force0_shift                                     (24)
#define  AUDIO_ADMA_CSR_pbr_arb_req_1_shift                                      (23)
#define  AUDIO_ADMA_CSR_pbr_burst_to_en_shift                                    (14)
#define  AUDIO_ADMA_CSR_pbr_rdma_to_en_shift                                     (13)
#define  AUDIO_ADMA_CSR_pbr_nonpcm_1_buf_en_shift                                (12)
#define  AUDIO_ADMA_CSR_pbr_rd_channel_no_shift                                  (9)
#define  AUDIO_ADMA_CSR_pbr_aodmatype_shift                                      (8)
#define  AUDIO_ADMA_CSR_pbr_int_rd_en_shift                                      (7)
#define  AUDIO_ADMA_CSR_pbr_dma_int_en_shift                                     (6)
#define  AUDIO_ADMA_CSR_pbr_dma_soft_rd_rst_shift                                (5)
#define  AUDIO_ADMA_CSR_pbr_dma_read_enable_shift                                (4)
#define  AUDIO_ADMA_CSR_pbr_unflow_dma_status_shift                              (3)
#define  AUDIO_ADMA_CSR_pbr_rd_intr_dma_status_shift                             (2)
#define  AUDIO_ADMA_CSR_pbr_start_to_status_shift                                (1)
#define  AUDIO_ADMA_CSR_pbr_dma_output_src_sel_mask                              (0xC0000000)
#define  AUDIO_ADMA_CSR_pbr_dma_r_format_mask                                    (0x20000000)
#define  AUDIO_ADMA_CSR_pbr_output_hold_en_mask                                  (0x10000000)
#define  AUDIO_ADMA_CSR_pbr_cur_st_mask                                          (0x0C000000)
#define  AUDIO_ADMA_CSR_pbr_empty_gnt_mask                                       (0x02000000)
#define  AUDIO_ADMA_CSR_pbr_req_force0_mask                                      (0x01000000)
#define  AUDIO_ADMA_CSR_pbr_arb_req_1_mask                                       (0x00800000)
#define  AUDIO_ADMA_CSR_pbr_burst_to_en_mask                                     (0x00004000)
#define  AUDIO_ADMA_CSR_pbr_rdma_to_en_mask                                      (0x00002000)
#define  AUDIO_ADMA_CSR_pbr_nonpcm_1_buf_en_mask                                 (0x00001000)
#define  AUDIO_ADMA_CSR_pbr_rd_channel_no_mask                                   (0x00000E00)
#define  AUDIO_ADMA_CSR_pbr_aodmatype_mask                                       (0x00000100)
#define  AUDIO_ADMA_CSR_pbr_int_rd_en_mask                                       (0x00000080)
#define  AUDIO_ADMA_CSR_pbr_dma_int_en_mask                                      (0x00000040)
#define  AUDIO_ADMA_CSR_pbr_dma_soft_rd_rst_mask                                 (0x00000020)
#define  AUDIO_ADMA_CSR_pbr_dma_read_enable_mask                                 (0x00000010)
#define  AUDIO_ADMA_CSR_pbr_unflow_dma_status_mask                               (0x00000008)
#define  AUDIO_ADMA_CSR_pbr_rd_intr_dma_status_mask                              (0x00000004)
#define  AUDIO_ADMA_CSR_pbr_start_to_status_mask                                 (0x00000002)
#define  AUDIO_ADMA_CSR_pbr_dma_output_src_sel(data)                             (0xC0000000&((data)<<30))
#define  AUDIO_ADMA_CSR_pbr_dma_r_format(data)                                   (0x20000000&((data)<<29))
#define  AUDIO_ADMA_CSR_pbr_output_hold_en(data)                                 (0x10000000&((data)<<28))
#define  AUDIO_ADMA_CSR_pbr_cur_st(data)                                         (0x0C000000&((data)<<26))
#define  AUDIO_ADMA_CSR_pbr_empty_gnt(data)                                      (0x02000000&((data)<<25))
#define  AUDIO_ADMA_CSR_pbr_req_force0(data)                                     (0x01000000&((data)<<24))
#define  AUDIO_ADMA_CSR_pbr_arb_req_1(data)                                      (0x00800000&((data)<<23))
#define  AUDIO_ADMA_CSR_pbr_burst_to_en(data)                                    (0x00004000&((data)<<14))
#define  AUDIO_ADMA_CSR_pbr_rdma_to_en(data)                                     (0x00002000&((data)<<13))
#define  AUDIO_ADMA_CSR_pbr_nonpcm_1_buf_en(data)                                (0x00001000&((data)<<12))
#define  AUDIO_ADMA_CSR_pbr_rd_channel_no(data)                                  (0x00000E00&((data)<<9))
#define  AUDIO_ADMA_CSR_pbr_aodmatype(data)                                      (0x00000100&((data)<<8))
#define  AUDIO_ADMA_CSR_pbr_int_rd_en(data)                                      (0x00000080&((data)<<7))
#define  AUDIO_ADMA_CSR_pbr_dma_int_en(data)                                     (0x00000040&((data)<<6))
#define  AUDIO_ADMA_CSR_pbr_dma_soft_rd_rst(data)                                (0x00000020&((data)<<5))
#define  AUDIO_ADMA_CSR_pbr_dma_read_enable(data)                                (0x00000010&((data)<<4))
#define  AUDIO_ADMA_CSR_pbr_unflow_dma_status(data)                              (0x00000008&((data)<<3))
#define  AUDIO_ADMA_CSR_pbr_rd_intr_dma_status(data)                             (0x00000004&((data)<<2))
#define  AUDIO_ADMA_CSR_pbr_start_to_status(data)                                (0x00000002&((data)<<1))
#define  AUDIO_ADMA_CSR_pbr_get_dma_output_src_sel(data)                         ((0xC0000000&(data))>>30)
#define  AUDIO_ADMA_CSR_pbr_get_dma_r_format(data)                               ((0x20000000&(data))>>29)
#define  AUDIO_ADMA_CSR_pbr_get_output_hold_en(data)                             ((0x10000000&(data))>>28)
#define  AUDIO_ADMA_CSR_pbr_get_cur_st(data)                                     ((0x0C000000&(data))>>26)
#define  AUDIO_ADMA_CSR_pbr_get_empty_gnt(data)                                  ((0x02000000&(data))>>25)
#define  AUDIO_ADMA_CSR_pbr_get_req_force0(data)                                 ((0x01000000&(data))>>24)
#define  AUDIO_ADMA_CSR_pbr_get_arb_req_1(data)                                  ((0x00800000&(data))>>23)
#define  AUDIO_ADMA_CSR_pbr_get_burst_to_en(data)                                ((0x00004000&(data))>>14)
#define  AUDIO_ADMA_CSR_pbr_get_rdma_to_en(data)                                 ((0x00002000&(data))>>13)
#define  AUDIO_ADMA_CSR_pbr_get_nonpcm_1_buf_en(data)                            ((0x00001000&(data))>>12)
#define  AUDIO_ADMA_CSR_pbr_get_rd_channel_no(data)                              ((0x00000E00&(data))>>9)
#define  AUDIO_ADMA_CSR_pbr_get_aodmatype(data)                                  ((0x00000100&(data))>>8)
#define  AUDIO_ADMA_CSR_pbr_get_int_rd_en(data)                                  ((0x00000080&(data))>>7)
#define  AUDIO_ADMA_CSR_pbr_get_dma_int_en(data)                                 ((0x00000040&(data))>>6)
#define  AUDIO_ADMA_CSR_pbr_get_dma_soft_rd_rst(data)                            ((0x00000020&(data))>>5)
#define  AUDIO_ADMA_CSR_pbr_get_dma_read_enable(data)                            ((0x00000010&(data))>>4)
#define  AUDIO_ADMA_CSR_pbr_get_unflow_dma_status(data)                          ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_CSR_pbr_get_rd_intr_dma_status(data)                         ((0x00000004&(data))>>2)
#define  AUDIO_ADMA_CSR_pbr_get_start_to_status(data)                            ((0x00000002&(data))>>1)

#define  AUDIO_ADMA_RCONF_pbr                                                   0x18006634
#define  AUDIO_ADMA_RCONF_pbr_reg_addr                                           "0xB8006634"
#define  AUDIO_ADMA_RCONF_pbr_reg                                                0xB8006634
#define  AUDIO_ADMA_RCONF_pbr_inst_addr                                          "0x00E0"
#define  set_AUDIO_ADMA_RCONF_pbr_reg(data)                                      (*((volatile unsigned int*)AUDIO_ADMA_RCONF_pbr_reg)=data)
#define  get_AUDIO_ADMA_RCONF_pbr_reg                                            (*((volatile unsigned int*)AUDIO_ADMA_RCONF_pbr_reg))
#define  AUDIO_ADMA_RCONF_pbr_read_len_shift                                     (16)
#define  AUDIO_ADMA_RCONF_pbr_read_intr_point_shift                              (0)
#define  AUDIO_ADMA_RCONF_pbr_read_len_mask                                      (0x7FFF0000)
#define  AUDIO_ADMA_RCONF_pbr_read_intr_point_mask                               (0x00007FFF)
#define  AUDIO_ADMA_RCONF_pbr_read_len(data)                                     (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_RCONF_pbr_read_intr_point(data)                              (0x00007FFF&(data))
#define  AUDIO_ADMA_RCONF_pbr_get_read_len(data)                                 ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_RCONF_pbr_get_read_intr_point(data)                          (0x00007FFF&(data))

#define  AUDIO_ADMA_WRCONF_pbr                                                  0x18006638
#define  AUDIO_ADMA_WRCONF_pbr_reg_addr                                          "0xB8006638"
#define  AUDIO_ADMA_WRCONF_pbr_reg                                               0xB8006638
#define  AUDIO_ADMA_WRCONF_pbr_inst_addr                                         "0x00E1"
#define  set_AUDIO_ADMA_WRCONF_pbr_reg(data)                                     (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_pbr_reg)=data)
#define  get_AUDIO_ADMA_WRCONF_pbr_reg                                           (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_pbr_reg))
#define  AUDIO_ADMA_WRCONF_pbr_rd_buffer_length_shift                            (16)
#define  AUDIO_ADMA_WRCONF_pbr_load_rd_shift                                     (15)
#define  AUDIO_ADMA_WRCONF_pbr_read_length_shift                                 (0)
#define  AUDIO_ADMA_WRCONF_pbr_rd_buffer_length_mask                             (0x7FFF0000)
#define  AUDIO_ADMA_WRCONF_pbr_load_rd_mask                                      (0x00008000)
#define  AUDIO_ADMA_WRCONF_pbr_read_length_mask                                  (0x00007FFF)
#define  AUDIO_ADMA_WRCONF_pbr_rd_buffer_length(data)                            (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_WRCONF_pbr_load_rd(data)                                     (0x00008000&((data)<<15))
#define  AUDIO_ADMA_WRCONF_pbr_read_length(data)                                 (0x00007FFF&(data))
#define  AUDIO_ADMA_WRCONF_pbr_get_rd_buffer_length(data)                        ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_WRCONF_pbr_get_load_rd(data)                                 ((0x00008000&(data))>>15)
#define  AUDIO_ADMA_WRCONF_pbr_get_read_length(data)                             (0x00007FFF&(data))

#define  AUDIO_ADMA_RSADR_pbr                                                   0x1800663C
#define  AUDIO_ADMA_RSADR_pbr_reg_addr                                           "0xB800663C"
#define  AUDIO_ADMA_RSADR_pbr_reg                                                0xB800663C
#define  AUDIO_ADMA_RSADR_pbr_inst_addr                                          "0x00E2"
#define  set_AUDIO_ADMA_RSADR_pbr_reg(data)                                      (*((volatile unsigned int*)AUDIO_ADMA_RSADR_pbr_reg)=data)
#define  get_AUDIO_ADMA_RSADR_pbr_reg                                            (*((volatile unsigned int*)AUDIO_ADMA_RSADR_pbr_reg))
#define  AUDIO_ADMA_RSADR_pbr_rd_start_addr_shift                                (6)
#define  AUDIO_ADMA_RSADR_pbr_get_adr_shift                                      (3)
#define  AUDIO_ADMA_RSADR_pbr_ch_sel_shift                                       (0)
#define  AUDIO_ADMA_RSADR_pbr_rd_start_addr_mask                                 (0xFFFFFFC0)
#define  AUDIO_ADMA_RSADR_pbr_get_adr_mask                                       (0x00000008)
#define  AUDIO_ADMA_RSADR_pbr_ch_sel_mask                                        (0x00000007)
#define  AUDIO_ADMA_RSADR_pbr_rd_start_addr(data)                                (0xFFFFFFC0&((data)<<6))
#define  AUDIO_ADMA_RSADR_pbr_get_adr(data)                                      (0x00000008&((data)<<3))
#define  AUDIO_ADMA_RSADR_pbr_ch_sel(data)                                       (0x00000007&(data))
#define  AUDIO_ADMA_RSADR_pbr_get_rd_start_addr(data)                            ((0xFFFFFFC0&(data))>>6)
#define  AUDIO_ADMA_RSADR_pbr_get_get_adr(data)                                  ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_RSADR_pbr_get_ch_sel(data)                                   (0x00000007&(data))

#define  AUDIO_ADMA_CSR_tsr                                                     0x18006640
#define  AUDIO_ADMA_CSR_tsr_reg_addr                                             "0xB8006640"
#define  AUDIO_ADMA_CSR_tsr_reg                                                  0xB8006640
#define  AUDIO_ADMA_CSR_tsr_inst_addr                                            "0x00E3"
#define  set_AUDIO_ADMA_CSR_tsr_reg(data)                                        (*((volatile unsigned int*)AUDIO_ADMA_CSR_tsr_reg)=data)
#define  get_AUDIO_ADMA_CSR_tsr_reg                                              (*((volatile unsigned int*)AUDIO_ADMA_CSR_tsr_reg))
#define  AUDIO_ADMA_CSR_tsr_dma_output_src_sel_shift                             (30)
#define  AUDIO_ADMA_CSR_tsr_dma_r_format_shift                                   (29)
#define  AUDIO_ADMA_CSR_tsr_output_hold_en_shift                                 (28)
#define  AUDIO_ADMA_CSR_tsr_cur_st_shift                                         (26)
#define  AUDIO_ADMA_CSR_tsr_empty_gnt_shift                                      (25)
#define  AUDIO_ADMA_CSR_tsr_req_force0_shift                                     (24)
#define  AUDIO_ADMA_CSR_tsr_arb_req_3_shift                                      (23)
#define  AUDIO_ADMA_CSR_tsr_burst_to_en_shift                                    (14)
#define  AUDIO_ADMA_CSR_tsr_rdma_to_en_shift                                     (13)
#define  AUDIO_ADMA_CSR_tsr_nonpcm_1_buf_en_shift                                (12)
#define  AUDIO_ADMA_CSR_tsr_rd_channel_no_shift                                  (9)
#define  AUDIO_ADMA_CSR_tsr_aodmatype_shift                                      (8)
#define  AUDIO_ADMA_CSR_tsr_int_rd_en_shift                                      (7)
#define  AUDIO_ADMA_CSR_tsr_dma_int_en_shift                                     (6)
#define  AUDIO_ADMA_CSR_tsr_dma_soft_rd_rst_shift                                (5)
#define  AUDIO_ADMA_CSR_tsr_dma_read_enable_shift                                (4)
#define  AUDIO_ADMA_CSR_tsr_unflow_dma_status_shift                              (3)
#define  AUDIO_ADMA_CSR_tsr_rd_intr_dma_status_shift                             (2)
#define  AUDIO_ADMA_CSR_tsr_start_to_status_shift                                (1)
#define  AUDIO_ADMA_CSR_tsr_dma_output_src_sel_mask                              (0xC0000000)
#define  AUDIO_ADMA_CSR_tsr_dma_r_format_mask                                    (0x20000000)
#define  AUDIO_ADMA_CSR_tsr_output_hold_en_mask                                  (0x10000000)
#define  AUDIO_ADMA_CSR_tsr_cur_st_mask                                          (0x0C000000)
#define  AUDIO_ADMA_CSR_tsr_empty_gnt_mask                                       (0x02000000)
#define  AUDIO_ADMA_CSR_tsr_req_force0_mask                                      (0x01000000)
#define  AUDIO_ADMA_CSR_tsr_arb_req_3_mask                                       (0x00800000)
#define  AUDIO_ADMA_CSR_tsr_burst_to_en_mask                                     (0x00004000)
#define  AUDIO_ADMA_CSR_tsr_rdma_to_en_mask                                      (0x00002000)
#define  AUDIO_ADMA_CSR_tsr_nonpcm_1_buf_en_mask                                 (0x00001000)
#define  AUDIO_ADMA_CSR_tsr_rd_channel_no_mask                                   (0x00000E00)
#define  AUDIO_ADMA_CSR_tsr_aodmatype_mask                                       (0x00000100)
#define  AUDIO_ADMA_CSR_tsr_int_rd_en_mask                                       (0x00000080)
#define  AUDIO_ADMA_CSR_tsr_dma_int_en_mask                                      (0x00000040)
#define  AUDIO_ADMA_CSR_tsr_dma_soft_rd_rst_mask                                 (0x00000020)
#define  AUDIO_ADMA_CSR_tsr_dma_read_enable_mask                                 (0x00000010)
#define  AUDIO_ADMA_CSR_tsr_unflow_dma_status_mask                               (0x00000008)
#define  AUDIO_ADMA_CSR_tsr_rd_intr_dma_status_mask                              (0x00000004)
#define  AUDIO_ADMA_CSR_tsr_start_to_status_mask                                 (0x00000002)
#define  AUDIO_ADMA_CSR_tsr_dma_output_src_sel(data)                             (0xC0000000&((data)<<30))
#define  AUDIO_ADMA_CSR_tsr_dma_r_format(data)                                   (0x20000000&((data)<<29))
#define  AUDIO_ADMA_CSR_tsr_output_hold_en(data)                                 (0x10000000&((data)<<28))
#define  AUDIO_ADMA_CSR_tsr_cur_st(data)                                         (0x0C000000&((data)<<26))
#define  AUDIO_ADMA_CSR_tsr_empty_gnt(data)                                      (0x02000000&((data)<<25))
#define  AUDIO_ADMA_CSR_tsr_req_force0(data)                                     (0x01000000&((data)<<24))
#define  AUDIO_ADMA_CSR_tsr_arb_req_3(data)                                      (0x00800000&((data)<<23))
#define  AUDIO_ADMA_CSR_tsr_burst_to_en(data)                                    (0x00004000&((data)<<14))
#define  AUDIO_ADMA_CSR_tsr_rdma_to_en(data)                                     (0x00002000&((data)<<13))
#define  AUDIO_ADMA_CSR_tsr_nonpcm_1_buf_en(data)                                (0x00001000&((data)<<12))
#define  AUDIO_ADMA_CSR_tsr_rd_channel_no(data)                                  (0x00000E00&((data)<<9))
#define  AUDIO_ADMA_CSR_tsr_aodmatype(data)                                      (0x00000100&((data)<<8))
#define  AUDIO_ADMA_CSR_tsr_int_rd_en(data)                                      (0x00000080&((data)<<7))
#define  AUDIO_ADMA_CSR_tsr_dma_int_en(data)                                     (0x00000040&((data)<<6))
#define  AUDIO_ADMA_CSR_tsr_dma_soft_rd_rst(data)                                (0x00000020&((data)<<5))
#define  AUDIO_ADMA_CSR_tsr_dma_read_enable(data)                                (0x00000010&((data)<<4))
#define  AUDIO_ADMA_CSR_tsr_unflow_dma_status(data)                              (0x00000008&((data)<<3))
#define  AUDIO_ADMA_CSR_tsr_rd_intr_dma_status(data)                             (0x00000004&((data)<<2))
#define  AUDIO_ADMA_CSR_tsr_start_to_status(data)                                (0x00000002&((data)<<1))
#define  AUDIO_ADMA_CSR_tsr_get_dma_output_src_sel(data)                         ((0xC0000000&(data))>>30)
#define  AUDIO_ADMA_CSR_tsr_get_dma_r_format(data)                               ((0x20000000&(data))>>29)
#define  AUDIO_ADMA_CSR_tsr_get_output_hold_en(data)                             ((0x10000000&(data))>>28)
#define  AUDIO_ADMA_CSR_tsr_get_cur_st(data)                                     ((0x0C000000&(data))>>26)
#define  AUDIO_ADMA_CSR_tsr_get_empty_gnt(data)                                  ((0x02000000&(data))>>25)
#define  AUDIO_ADMA_CSR_tsr_get_req_force0(data)                                 ((0x01000000&(data))>>24)
#define  AUDIO_ADMA_CSR_tsr_get_arb_req_3(data)                                  ((0x00800000&(data))>>23)
#define  AUDIO_ADMA_CSR_tsr_get_burst_to_en(data)                                ((0x00004000&(data))>>14)
#define  AUDIO_ADMA_CSR_tsr_get_rdma_to_en(data)                                 ((0x00002000&(data))>>13)
#define  AUDIO_ADMA_CSR_tsr_get_nonpcm_1_buf_en(data)                            ((0x00001000&(data))>>12)
#define  AUDIO_ADMA_CSR_tsr_get_rd_channel_no(data)                              ((0x00000E00&(data))>>9)
#define  AUDIO_ADMA_CSR_tsr_get_aodmatype(data)                                  ((0x00000100&(data))>>8)
#define  AUDIO_ADMA_CSR_tsr_get_int_rd_en(data)                                  ((0x00000080&(data))>>7)
#define  AUDIO_ADMA_CSR_tsr_get_dma_int_en(data)                                 ((0x00000040&(data))>>6)
#define  AUDIO_ADMA_CSR_tsr_get_dma_soft_rd_rst(data)                            ((0x00000020&(data))>>5)
#define  AUDIO_ADMA_CSR_tsr_get_dma_read_enable(data)                            ((0x00000010&(data))>>4)
#define  AUDIO_ADMA_CSR_tsr_get_unflow_dma_status(data)                          ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_CSR_tsr_get_rd_intr_dma_status(data)                         ((0x00000004&(data))>>2)
#define  AUDIO_ADMA_CSR_tsr_get_start_to_status(data)                            ((0x00000002&(data))>>1)

#define  AUDIO_ADMA_RCONF_tsr                                                   0x18006644
#define  AUDIO_ADMA_RCONF_tsr_reg_addr                                           "0xB8006644"
#define  AUDIO_ADMA_RCONF_tsr_reg                                                0xB8006644
#define  AUDIO_ADMA_RCONF_tsr_inst_addr                                          "0x00E4"
#define  set_AUDIO_ADMA_RCONF_tsr_reg(data)                                      (*((volatile unsigned int*)AUDIO_ADMA_RCONF_tsr_reg)=data)
#define  get_AUDIO_ADMA_RCONF_tsr_reg                                            (*((volatile unsigned int*)AUDIO_ADMA_RCONF_tsr_reg))
#define  AUDIO_ADMA_RCONF_tsr_read_len_shift                                     (16)
#define  AUDIO_ADMA_RCONF_tsr_read_intr_point_shift                              (0)
#define  AUDIO_ADMA_RCONF_tsr_read_len_mask                                      (0x7FFF0000)
#define  AUDIO_ADMA_RCONF_tsr_read_intr_point_mask                               (0x00007FFF)
#define  AUDIO_ADMA_RCONF_tsr_read_len(data)                                     (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_RCONF_tsr_read_intr_point(data)                              (0x00007FFF&(data))
#define  AUDIO_ADMA_RCONF_tsr_get_read_len(data)                                 ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_RCONF_tsr_get_read_intr_point(data)                          (0x00007FFF&(data))

#define  AUDIO_ADMA_WRCONF_tsr                                                  0x18006648
#define  AUDIO_ADMA_WRCONF_tsr_reg_addr                                          "0xB8006648"
#define  AUDIO_ADMA_WRCONF_tsr_reg                                               0xB8006648
#define  AUDIO_ADMA_WRCONF_tsr_inst_addr                                         "0x00E5"
#define  set_AUDIO_ADMA_WRCONF_tsr_reg(data)                                     (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_tsr_reg)=data)
#define  get_AUDIO_ADMA_WRCONF_tsr_reg                                           (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_tsr_reg))
#define  AUDIO_ADMA_WRCONF_tsr_rd_buffer_length_shift                            (16)
#define  AUDIO_ADMA_WRCONF_tsr_load_rd_shift                                     (15)
#define  AUDIO_ADMA_WRCONF_tsr_read_length_shift                                 (0)
#define  AUDIO_ADMA_WRCONF_tsr_rd_buffer_length_mask                             (0x7FFF0000)
#define  AUDIO_ADMA_WRCONF_tsr_load_rd_mask                                      (0x00008000)
#define  AUDIO_ADMA_WRCONF_tsr_read_length_mask                                  (0x00007FFF)
#define  AUDIO_ADMA_WRCONF_tsr_rd_buffer_length(data)                            (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_WRCONF_tsr_load_rd(data)                                     (0x00008000&((data)<<15))
#define  AUDIO_ADMA_WRCONF_tsr_read_length(data)                                 (0x00007FFF&(data))
#define  AUDIO_ADMA_WRCONF_tsr_get_rd_buffer_length(data)                        ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_WRCONF_tsr_get_load_rd(data)                                 ((0x00008000&(data))>>15)
#define  AUDIO_ADMA_WRCONF_tsr_get_read_length(data)                             (0x00007FFF&(data))

#define  AUDIO_ADMA_RSADR_tsr                                                   0x1800664C
#define  AUDIO_ADMA_RSADR_tsr_reg_addr                                           "0xB800664C"
#define  AUDIO_ADMA_RSADR_tsr_reg                                                0xB800664C
#define  AUDIO_ADMA_RSADR_tsr_inst_addr                                          "0x00E6"
#define  set_AUDIO_ADMA_RSADR_tsr_reg(data)                                      (*((volatile unsigned int*)AUDIO_ADMA_RSADR_tsr_reg)=data)
#define  get_AUDIO_ADMA_RSADR_tsr_reg                                            (*((volatile unsigned int*)AUDIO_ADMA_RSADR_tsr_reg))
#define  AUDIO_ADMA_RSADR_tsr_rd_start_addr_shift                                (6)
#define  AUDIO_ADMA_RSADR_tsr_get_adr_shift                                      (3)
#define  AUDIO_ADMA_RSADR_tsr_ch_sel_shift                                       (0)
#define  AUDIO_ADMA_RSADR_tsr_rd_start_addr_mask                                 (0xFFFFFFC0)
#define  AUDIO_ADMA_RSADR_tsr_get_adr_mask                                       (0x00000008)
#define  AUDIO_ADMA_RSADR_tsr_ch_sel_mask                                        (0x00000007)
#define  AUDIO_ADMA_RSADR_tsr_rd_start_addr(data)                                (0xFFFFFFC0&((data)<<6))
#define  AUDIO_ADMA_RSADR_tsr_get_adr(data)                                      (0x00000008&((data)<<3))
#define  AUDIO_ADMA_RSADR_tsr_ch_sel(data)                                       (0x00000007&(data))
#define  AUDIO_ADMA_RSADR_tsr_get_rd_start_addr(data)                            ((0xFFFFFFC0&(data))>>6)
#define  AUDIO_ADMA_RSADR_tsr_get_get_adr(data)                                  ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_RSADR_tsr_get_ch_sel(data)                                   (0x00000007&(data))

#define  AUDIO_ADMA_CSR_arcr                                                    0x18006650
#define  AUDIO_ADMA_CSR_arcr_reg_addr                                            "0xB8006650"
#define  AUDIO_ADMA_CSR_arcr_reg                                                 0xB8006650
#define  AUDIO_ADMA_CSR_arcr_inst_addr                                           "0x00E7"
#define  set_AUDIO_ADMA_CSR_arcr_reg(data)                                       (*((volatile unsigned int*)AUDIO_ADMA_CSR_arcr_reg)=data)
#define  get_AUDIO_ADMA_CSR_arcr_reg                                             (*((volatile unsigned int*)AUDIO_ADMA_CSR_arcr_reg))
#define  AUDIO_ADMA_CSR_arcr_dma_output_src_sel_shift                            (30)
#define  AUDIO_ADMA_CSR_arcr_dma_r_format_shift                                  (29)
#define  AUDIO_ADMA_CSR_arcr_output_hold_en_shift                                (28)
#define  AUDIO_ADMA_CSR_arcr_cur_st_shift                                        (26)
#define  AUDIO_ADMA_CSR_arcr_empty_gnt_shift                                     (25)
#define  AUDIO_ADMA_CSR_arcr_req_force0_shift                                    (24)
#define  AUDIO_ADMA_CSR_arcr_arb_req_5_shift                                     (23)
#define  AUDIO_ADMA_CSR_arcr_burst_to_en_shift                                   (14)
#define  AUDIO_ADMA_CSR_arcr_rdma_to_en_shift                                    (13)
#define  AUDIO_ADMA_CSR_arcr_nonpcm_1_buf_en_shift                               (12)
#define  AUDIO_ADMA_CSR_arcr_rd_channel_no_shift                                 (9)
#define  AUDIO_ADMA_CSR_arcr_aodmatype_shift                                     (8)
#define  AUDIO_ADMA_CSR_arcr_int_rd_en_shift                                     (7)
#define  AUDIO_ADMA_CSR_arcr_dma_int_en_shift                                    (6)
#define  AUDIO_ADMA_CSR_arcr_dma_soft_rd_rst_shift                               (5)
#define  AUDIO_ADMA_CSR_arcr_dma_read_enable_shift                               (4)
#define  AUDIO_ADMA_CSR_arcr_unflow_dma_status_shift                             (3)
#define  AUDIO_ADMA_CSR_arcr_rd_intr_dma_status_shift                            (2)
#define  AUDIO_ADMA_CSR_arcr_start_to_status_shift                               (1)
#define  AUDIO_ADMA_CSR_arcr_dma_output_src_sel_mask                             (0xC0000000)
#define  AUDIO_ADMA_CSR_arcr_dma_r_format_mask                                   (0x20000000)
#define  AUDIO_ADMA_CSR_arcr_output_hold_en_mask                                 (0x10000000)
#define  AUDIO_ADMA_CSR_arcr_cur_st_mask                                         (0x0C000000)
#define  AUDIO_ADMA_CSR_arcr_empty_gnt_mask                                      (0x02000000)
#define  AUDIO_ADMA_CSR_arcr_req_force0_mask                                     (0x01000000)
#define  AUDIO_ADMA_CSR_arcr_arb_req_5_mask                                      (0x00800000)
#define  AUDIO_ADMA_CSR_arcr_burst_to_en_mask                                    (0x00004000)
#define  AUDIO_ADMA_CSR_arcr_rdma_to_en_mask                                     (0x00002000)
#define  AUDIO_ADMA_CSR_arcr_nonpcm_1_buf_en_mask                                (0x00001000)
#define  AUDIO_ADMA_CSR_arcr_rd_channel_no_mask                                  (0x00000E00)
#define  AUDIO_ADMA_CSR_arcr_aodmatype_mask                                      (0x00000100)
#define  AUDIO_ADMA_CSR_arcr_int_rd_en_mask                                      (0x00000080)
#define  AUDIO_ADMA_CSR_arcr_dma_int_en_mask                                     (0x00000040)
#define  AUDIO_ADMA_CSR_arcr_dma_soft_rd_rst_mask                                (0x00000020)
#define  AUDIO_ADMA_CSR_arcr_dma_read_enable_mask                                (0x00000010)
#define  AUDIO_ADMA_CSR_arcr_unflow_dma_status_mask                              (0x00000008)
#define  AUDIO_ADMA_CSR_arcr_rd_intr_dma_status_mask                             (0x00000004)
#define  AUDIO_ADMA_CSR_arcr_start_to_status_mask                                (0x00000002)
#define  AUDIO_ADMA_CSR_arcr_dma_output_src_sel(data)                            (0xC0000000&((data)<<30))
#define  AUDIO_ADMA_CSR_arcr_dma_r_format(data)                                  (0x20000000&((data)<<29))
#define  AUDIO_ADMA_CSR_arcr_output_hold_en(data)                                (0x10000000&((data)<<28))
#define  AUDIO_ADMA_CSR_arcr_cur_st(data)                                        (0x0C000000&((data)<<26))
#define  AUDIO_ADMA_CSR_arcr_empty_gnt(data)                                     (0x02000000&((data)<<25))
#define  AUDIO_ADMA_CSR_arcr_req_force0(data)                                    (0x01000000&((data)<<24))
#define  AUDIO_ADMA_CSR_arcr_arb_req_5(data)                                     (0x00800000&((data)<<23))
#define  AUDIO_ADMA_CSR_arcr_burst_to_en(data)                                   (0x00004000&((data)<<14))
#define  AUDIO_ADMA_CSR_arcr_rdma_to_en(data)                                    (0x00002000&((data)<<13))
#define  AUDIO_ADMA_CSR_arcr_nonpcm_1_buf_en(data)                               (0x00001000&((data)<<12))
#define  AUDIO_ADMA_CSR_arcr_rd_channel_no(data)                                 (0x00000E00&((data)<<9))
#define  AUDIO_ADMA_CSR_arcr_aodmatype(data)                                     (0x00000100&((data)<<8))
#define  AUDIO_ADMA_CSR_arcr_int_rd_en(data)                                     (0x00000080&((data)<<7))
#define  AUDIO_ADMA_CSR_arcr_dma_int_en(data)                                    (0x00000040&((data)<<6))
#define  AUDIO_ADMA_CSR_arcr_dma_soft_rd_rst(data)                               (0x00000020&((data)<<5))
#define  AUDIO_ADMA_CSR_arcr_dma_read_enable(data)                               (0x00000010&((data)<<4))
#define  AUDIO_ADMA_CSR_arcr_unflow_dma_status(data)                             (0x00000008&((data)<<3))
#define  AUDIO_ADMA_CSR_arcr_rd_intr_dma_status(data)                            (0x00000004&((data)<<2))
#define  AUDIO_ADMA_CSR_arcr_start_to_status(data)                               (0x00000002&((data)<<1))
#define  AUDIO_ADMA_CSR_arcr_get_dma_output_src_sel(data)                        ((0xC0000000&(data))>>30)
#define  AUDIO_ADMA_CSR_arcr_get_dma_r_format(data)                              ((0x20000000&(data))>>29)
#define  AUDIO_ADMA_CSR_arcr_get_output_hold_en(data)                            ((0x10000000&(data))>>28)
#define  AUDIO_ADMA_CSR_arcr_get_cur_st(data)                                    ((0x0C000000&(data))>>26)
#define  AUDIO_ADMA_CSR_arcr_get_empty_gnt(data)                                 ((0x02000000&(data))>>25)
#define  AUDIO_ADMA_CSR_arcr_get_req_force0(data)                                ((0x01000000&(data))>>24)
#define  AUDIO_ADMA_CSR_arcr_get_arb_req_5(data)                                 ((0x00800000&(data))>>23)
#define  AUDIO_ADMA_CSR_arcr_get_burst_to_en(data)                               ((0x00004000&(data))>>14)
#define  AUDIO_ADMA_CSR_arcr_get_rdma_to_en(data)                                ((0x00002000&(data))>>13)
#define  AUDIO_ADMA_CSR_arcr_get_nonpcm_1_buf_en(data)                           ((0x00001000&(data))>>12)
#define  AUDIO_ADMA_CSR_arcr_get_rd_channel_no(data)                             ((0x00000E00&(data))>>9)
#define  AUDIO_ADMA_CSR_arcr_get_aodmatype(data)                                 ((0x00000100&(data))>>8)
#define  AUDIO_ADMA_CSR_arcr_get_int_rd_en(data)                                 ((0x00000080&(data))>>7)
#define  AUDIO_ADMA_CSR_arcr_get_dma_int_en(data)                                ((0x00000040&(data))>>6)
#define  AUDIO_ADMA_CSR_arcr_get_dma_soft_rd_rst(data)                           ((0x00000020&(data))>>5)
#define  AUDIO_ADMA_CSR_arcr_get_dma_read_enable(data)                           ((0x00000010&(data))>>4)
#define  AUDIO_ADMA_CSR_arcr_get_unflow_dma_status(data)                         ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_CSR_arcr_get_rd_intr_dma_status(data)                        ((0x00000004&(data))>>2)
#define  AUDIO_ADMA_CSR_arcr_get_start_to_status(data)                           ((0x00000002&(data))>>1)

#define  AUDIO_ADMA_RCONF_arcr                                                  0x18006654
#define  AUDIO_ADMA_RCONF_arcr_reg_addr                                          "0xB8006654"
#define  AUDIO_ADMA_RCONF_arcr_reg                                               0xB8006654
#define  AUDIO_ADMA_RCONF_arcr_inst_addr                                         "0x00E8"
#define  set_AUDIO_ADMA_RCONF_arcr_reg(data)                                     (*((volatile unsigned int*)AUDIO_ADMA_RCONF_arcr_reg)=data)
#define  get_AUDIO_ADMA_RCONF_arcr_reg                                           (*((volatile unsigned int*)AUDIO_ADMA_RCONF_arcr_reg))
#define  AUDIO_ADMA_RCONF_arcr_read_len_shift                                    (16)
#define  AUDIO_ADMA_RCONF_arcr_read_intr_point_shift                             (0)
#define  AUDIO_ADMA_RCONF_arcr_read_len_mask                                     (0x7FFF0000)
#define  AUDIO_ADMA_RCONF_arcr_read_intr_point_mask                              (0x00007FFF)
#define  AUDIO_ADMA_RCONF_arcr_read_len(data)                                    (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_RCONF_arcr_read_intr_point(data)                             (0x00007FFF&(data))
#define  AUDIO_ADMA_RCONF_arcr_get_read_len(data)                                ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_RCONF_arcr_get_read_intr_point(data)                         (0x00007FFF&(data))

#define  AUDIO_ADMA_WRCONF_arcr                                                 0x18006658
#define  AUDIO_ADMA_WRCONF_arcr_reg_addr                                         "0xB8006658"
#define  AUDIO_ADMA_WRCONF_arcr_reg                                              0xB8006658
#define  AUDIO_ADMA_WRCONF_arcr_inst_addr                                        "0x00E9"
#define  set_AUDIO_ADMA_WRCONF_arcr_reg(data)                                    (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_arcr_reg)=data)
#define  get_AUDIO_ADMA_WRCONF_arcr_reg                                          (*((volatile unsigned int*)AUDIO_ADMA_WRCONF_arcr_reg))
#define  AUDIO_ADMA_WRCONF_arcr_rd_buffer_length_shift                           (16)
#define  AUDIO_ADMA_WRCONF_arcr_load_rd_shift                                    (15)
#define  AUDIO_ADMA_WRCONF_arcr_read_length_shift                                (0)
#define  AUDIO_ADMA_WRCONF_arcr_rd_buffer_length_mask                            (0x7FFF0000)
#define  AUDIO_ADMA_WRCONF_arcr_load_rd_mask                                     (0x00008000)
#define  AUDIO_ADMA_WRCONF_arcr_read_length_mask                                 (0x00007FFF)
#define  AUDIO_ADMA_WRCONF_arcr_rd_buffer_length(data)                           (0x7FFF0000&((data)<<16))
#define  AUDIO_ADMA_WRCONF_arcr_load_rd(data)                                    (0x00008000&((data)<<15))
#define  AUDIO_ADMA_WRCONF_arcr_read_length(data)                                (0x00007FFF&(data))
#define  AUDIO_ADMA_WRCONF_arcr_get_rd_buffer_length(data)                       ((0x7FFF0000&(data))>>16)
#define  AUDIO_ADMA_WRCONF_arcr_get_load_rd(data)                                ((0x00008000&(data))>>15)
#define  AUDIO_ADMA_WRCONF_arcr_get_read_length(data)                            (0x00007FFF&(data))

#define  AUDIO_ADMA_RSADR_arcr                                                  0x1800665C
#define  AUDIO_ADMA_RSADR_arcr_reg_addr                                          "0xB800665C"
#define  AUDIO_ADMA_RSADR_arcr_reg                                               0xB800665C
#define  AUDIO_ADMA_RSADR_arcr_inst_addr                                         "0x00EA"
#define  set_AUDIO_ADMA_RSADR_arcr_reg(data)                                     (*((volatile unsigned int*)AUDIO_ADMA_RSADR_arcr_reg)=data)
#define  get_AUDIO_ADMA_RSADR_arcr_reg                                           (*((volatile unsigned int*)AUDIO_ADMA_RSADR_arcr_reg))
#define  AUDIO_ADMA_RSADR_arcr_rd_start_addr_shift                               (6)
#define  AUDIO_ADMA_RSADR_arcr_get_adr_shift                                     (3)
#define  AUDIO_ADMA_RSADR_arcr_ch_sel_shift                                      (0)
#define  AUDIO_ADMA_RSADR_arcr_rd_start_addr_mask                                (0xFFFFFFC0)
#define  AUDIO_ADMA_RSADR_arcr_get_adr_mask                                      (0x00000008)
#define  AUDIO_ADMA_RSADR_arcr_ch_sel_mask                                       (0x00000007)
#define  AUDIO_ADMA_RSADR_arcr_rd_start_addr(data)                               (0xFFFFFFC0&((data)<<6))
#define  AUDIO_ADMA_RSADR_arcr_get_adr(data)                                     (0x00000008&((data)<<3))
#define  AUDIO_ADMA_RSADR_arcr_ch_sel(data)                                      (0x00000007&(data))
#define  AUDIO_ADMA_RSADR_arcr_get_rd_start_addr(data)                           ((0xFFFFFFC0&(data))>>6)
#define  AUDIO_ADMA_RSADR_arcr_get_get_adr(data)                                 ((0x00000008&(data))>>3)
#define  AUDIO_ADMA_RSADR_arcr_get_ch_sel(data)                                  (0x00000007&(data))

#define  AUDIO_AWDMA_rule_0                                                     0x18006660
#define  AUDIO_AWDMA_rule_0_reg_addr                                             "0xB8006660"
#define  AUDIO_AWDMA_rule_0_reg                                                  0xB8006660
#define  AUDIO_AWDMA_rule_0_inst_addr                                            "0x00EB"
#define  set_AUDIO_AWDMA_rule_0_reg(data)                                        (*((volatile unsigned int*)AUDIO_AWDMA_rule_0_reg)=data)
#define  get_AUDIO_AWDMA_rule_0_reg                                              (*((volatile unsigned int*)AUDIO_AWDMA_rule_0_reg))
#define  AUDIO_AWDMA_rule_0_dma_up_limit_shift                                   (3)
#define  AUDIO_AWDMA_rule_0_dma_up_limit_mask                                    (0xFFFFFFF8)
#define  AUDIO_AWDMA_rule_0_dma_up_limit(data)                                   (0xFFFFFFF8&((data)<<3))
#define  AUDIO_AWDMA_rule_0_get_dma_up_limit(data)                               ((0xFFFFFFF8&(data))>>3)

#define  AUDIO_AWDMA_rule1                                                      0x18006664
#define  AUDIO_AWDMA_rule1_reg_addr                                              "0xB8006664"
#define  AUDIO_AWDMA_rule1_reg                                                   0xB8006664
#define  AUDIO_AWDMA_rule1_inst_addr                                             "0x00EC"
#define  set_AUDIO_AWDMA_rule1_reg(data)                                         (*((volatile unsigned int*)AUDIO_AWDMA_rule1_reg)=data)
#define  get_AUDIO_AWDMA_rule1_reg                                               (*((volatile unsigned int*)AUDIO_AWDMA_rule1_reg))
#define  AUDIO_AWDMA_rule1_dma_low_limit_shift                                   (3)
#define  AUDIO_AWDMA_rule1_dma_low_limit_mask                                    (0xFFFFFFF8)
#define  AUDIO_AWDMA_rule1_dma_low_limit(data)                                   (0xFFFFFFF8&((data)<<3))
#define  AUDIO_AWDMA_rule1_get_dma_low_limit(data)                               ((0xFFFFFFF8&(data))>>3)

#define  AUDIO_AWDMA_ctrl                                                       0x18006668
#define  AUDIO_AWDMA_ctrl_reg_addr                                               "0xB8006668"
#define  AUDIO_AWDMA_ctrl_reg                                                    0xB8006668
#define  AUDIO_AWDMA_ctrl_inst_addr                                              "0x00ED"
#define  set_AUDIO_AWDMA_ctrl_reg(data)                                          (*((volatile unsigned int*)AUDIO_AWDMA_ctrl_reg)=data)
#define  get_AUDIO_AWDMA_ctrl_reg                                                (*((volatile unsigned int*)AUDIO_AWDMA_ctrl_reg))
#define  AUDIO_AWDMA_ctrl_dummy_31_10_shift                                      (10)
#define  AUDIO_AWDMA_ctrl_max_outstanding_shift                                  (8)
#define  AUDIO_AWDMA_ctrl_dummy_7_3_shift                                        (3)
#define  AUDIO_AWDMA_ctrl_rtk_wr_soft_rst_shift                                  (2)
#define  AUDIO_AWDMA_ctrl_force_all_rst_shift                                    (1)
#define  AUDIO_AWDMA_ctrl_dma_enable_shift                                       (0)
#define  AUDIO_AWDMA_ctrl_dummy_31_10_mask                                       (0xFFFFFC00)
#define  AUDIO_AWDMA_ctrl_max_outstanding_mask                                   (0x00000300)
#define  AUDIO_AWDMA_ctrl_dummy_7_3_mask                                         (0x000000F8)
#define  AUDIO_AWDMA_ctrl_rtk_wr_soft_rst_mask                                   (0x00000004)
#define  AUDIO_AWDMA_ctrl_force_all_rst_mask                                     (0x00000002)
#define  AUDIO_AWDMA_ctrl_dma_enable_mask                                        (0x00000001)
#define  AUDIO_AWDMA_ctrl_dummy_31_10(data)                                      (0xFFFFFC00&((data)<<10))
#define  AUDIO_AWDMA_ctrl_max_outstanding(data)                                  (0x00000300&((data)<<8))
#define  AUDIO_AWDMA_ctrl_dummy_7_3(data)                                        (0x000000F8&((data)<<3))
#define  AUDIO_AWDMA_ctrl_rtk_wr_soft_rst(data)                                  (0x00000004&((data)<<2))
#define  AUDIO_AWDMA_ctrl_force_all_rst(data)                                    (0x00000002&((data)<<1))
#define  AUDIO_AWDMA_ctrl_dma_enable(data)                                       (0x00000001&(data))
#define  AUDIO_AWDMA_ctrl_get_dummy_31_10(data)                                  ((0xFFFFFC00&(data))>>10)
#define  AUDIO_AWDMA_ctrl_get_max_outstanding(data)                              ((0x00000300&(data))>>8)
#define  AUDIO_AWDMA_ctrl_get_dummy_7_3(data)                                    ((0x000000F8&(data))>>3)
#define  AUDIO_AWDMA_ctrl_get_rtk_wr_soft_rst(data)                              ((0x00000004&(data))>>2)
#define  AUDIO_AWDMA_ctrl_get_force_all_rst(data)                                ((0x00000002&(data))>>1)
#define  AUDIO_AWDMA_ctrl_get_dma_enable(data)                                   (0x00000001&(data))

#define  AUDIO_AWDMA_status0                                                    0x1800666C
#define  AUDIO_AWDMA_status0_reg_addr                                            "0xB800666C"
#define  AUDIO_AWDMA_status0_reg                                                 0xB800666C
#define  AUDIO_AWDMA_status0_inst_addr                                           "0x00EE"
#define  set_AUDIO_AWDMA_status0_reg(data)                                       (*((volatile unsigned int*)AUDIO_AWDMA_status0_reg)=data)
#define  get_AUDIO_AWDMA_status0_reg                                             (*((volatile unsigned int*)AUDIO_AWDMA_status0_reg))
#define  AUDIO_AWDMA_status0_dma_cmd_water_shift                                 (28)
#define  AUDIO_AWDMA_status0_dma_data_water_shift                                (16)
#define  AUDIO_AWDMA_status0_cur_outstanding_shift                               (8)
#define  AUDIO_AWDMA_status0_soft_rst_before_cmd_finish_shift                    (4)
#define  AUDIO_AWDMA_status0_soft_rst_with_data_left_shift                       (3)
#define  AUDIO_AWDMA_status0_data_fifo_underflow_err_shift                       (2)
#define  AUDIO_AWDMA_status0_exceed_range_err_shift                              (1)
#define  AUDIO_AWDMA_status0_zero_length_err_shift                               (0)
#define  AUDIO_AWDMA_status0_dma_cmd_water_mask                                  (0x70000000)
#define  AUDIO_AWDMA_status0_dma_data_water_mask                                 (0x000F0000)
#define  AUDIO_AWDMA_status0_cur_outstanding_mask                                (0x00000700)
#define  AUDIO_AWDMA_status0_soft_rst_before_cmd_finish_mask                     (0x00000010)
#define  AUDIO_AWDMA_status0_soft_rst_with_data_left_mask                        (0x00000008)
#define  AUDIO_AWDMA_status0_data_fifo_underflow_err_mask                        (0x00000004)
#define  AUDIO_AWDMA_status0_exceed_range_err_mask                               (0x00000002)
#define  AUDIO_AWDMA_status0_zero_length_err_mask                                (0x00000001)
#define  AUDIO_AWDMA_status0_dma_cmd_water(data)                                 (0x70000000&((data)<<28))
#define  AUDIO_AWDMA_status0_dma_data_water(data)                                (0x000F0000&((data)<<16))
#define  AUDIO_AWDMA_status0_cur_outstanding(data)                               (0x00000700&((data)<<8))
#define  AUDIO_AWDMA_status0_soft_rst_before_cmd_finish(data)                    (0x00000010&((data)<<4))
#define  AUDIO_AWDMA_status0_soft_rst_with_data_left(data)                       (0x00000008&((data)<<3))
#define  AUDIO_AWDMA_status0_data_fifo_underflow_err(data)                       (0x00000004&((data)<<2))
#define  AUDIO_AWDMA_status0_exceed_range_err(data)                              (0x00000002&((data)<<1))
#define  AUDIO_AWDMA_status0_zero_length_err(data)                               (0x00000001&(data))
#define  AUDIO_AWDMA_status0_get_dma_cmd_water(data)                             ((0x70000000&(data))>>28)
#define  AUDIO_AWDMA_status0_get_dma_data_water(data)                            ((0x000F0000&(data))>>16)
#define  AUDIO_AWDMA_status0_get_cur_outstanding(data)                           ((0x00000700&(data))>>8)
#define  AUDIO_AWDMA_status0_get_soft_rst_before_cmd_finish(data)                ((0x00000010&(data))>>4)
#define  AUDIO_AWDMA_status0_get_soft_rst_with_data_left(data)                   ((0x00000008&(data))>>3)
#define  AUDIO_AWDMA_status0_get_data_fifo_underflow_err(data)                   ((0x00000004&(data))>>2)
#define  AUDIO_AWDMA_status0_get_exceed_range_err(data)                          ((0x00000002&(data))>>1)
#define  AUDIO_AWDMA_status0_get_zero_length_err(data)                           (0x00000001&(data))

#define  AUDIO_AWDMA_status1                                                    0x18006670
#define  AUDIO_AWDMA_status1_reg_addr                                            "0xB8006670"
#define  AUDIO_AWDMA_status1_reg                                                 0xB8006670
#define  AUDIO_AWDMA_status1_inst_addr                                           "0x00EF"
#define  set_AUDIO_AWDMA_status1_reg(data)                                       (*((volatile unsigned int*)AUDIO_AWDMA_status1_reg)=data)
#define  get_AUDIO_AWDMA_status1_reg                                             (*((volatile unsigned int*)AUDIO_AWDMA_status1_reg))
#define  AUDIO_AWDMA_status1_ack_num_error_shift                                 (31)
#define  AUDIO_AWDMA_status1_last_no_ack_error_shift                             (30)
#define  AUDIO_AWDMA_status1_target_ack_num_shift                                (16)
#define  AUDIO_AWDMA_status1_last_ack_num_shift                                  (8)
#define  AUDIO_AWDMA_status1_selected_bl_shift                                   (0)
#define  AUDIO_AWDMA_status1_ack_num_error_mask                                  (0x80000000)
#define  AUDIO_AWDMA_status1_last_no_ack_error_mask                              (0x40000000)
#define  AUDIO_AWDMA_status1_target_ack_num_mask                                 (0x00FF0000)
#define  AUDIO_AWDMA_status1_last_ack_num_mask                                   (0x0000FF00)
#define  AUDIO_AWDMA_status1_selected_bl_mask                                    (0x000000FF)
#define  AUDIO_AWDMA_status1_ack_num_error(data)                                 (0x80000000&((data)<<31))
#define  AUDIO_AWDMA_status1_last_no_ack_error(data)                             (0x40000000&((data)<<30))
#define  AUDIO_AWDMA_status1_target_ack_num(data)                                (0x00FF0000&((data)<<16))
#define  AUDIO_AWDMA_status1_last_ack_num(data)                                  (0x0000FF00&((data)<<8))
#define  AUDIO_AWDMA_status1_selected_bl(data)                                   (0x000000FF&(data))
#define  AUDIO_AWDMA_status1_get_ack_num_error(data)                             ((0x80000000&(data))>>31)
#define  AUDIO_AWDMA_status1_get_last_no_ack_error(data)                         ((0x40000000&(data))>>30)
#define  AUDIO_AWDMA_status1_get_target_ack_num(data)                            ((0x00FF0000&(data))>>16)
#define  AUDIO_AWDMA_status1_get_last_ack_num(data)                              ((0x0000FF00&(data))>>8)
#define  AUDIO_AWDMA_status1_get_selected_bl(data)                               (0x000000FF&(data))

#define  AUDIO_AWDMA_status2                                                    0x18006674
#define  AUDIO_AWDMA_status2_reg_addr                                            "0xB8006674"
#define  AUDIO_AWDMA_status2_reg                                                 0xB8006674
#define  AUDIO_AWDMA_status2_inst_addr                                           "0x00F0"
#define  set_AUDIO_AWDMA_status2_reg(data)                                       (*((volatile unsigned int*)AUDIO_AWDMA_status2_reg)=data)
#define  get_AUDIO_AWDMA_status2_reg                                             (*((volatile unsigned int*)AUDIO_AWDMA_status2_reg))
#define  AUDIO_AWDMA_status2_selected_addr_shift                                 (3)
#define  AUDIO_AWDMA_status2_addr_bl_sel_shift                                   (0)
#define  AUDIO_AWDMA_status2_selected_addr_mask                                  (0xFFFFFFF8)
#define  AUDIO_AWDMA_status2_addr_bl_sel_mask                                    (0x00000003)
#define  AUDIO_AWDMA_status2_selected_addr(data)                                 (0xFFFFFFF8&((data)<<3))
#define  AUDIO_AWDMA_status2_addr_bl_sel(data)                                   (0x00000003&(data))
#define  AUDIO_AWDMA_status2_get_selected_addr(data)                             ((0xFFFFFFF8&(data))>>3)
#define  AUDIO_AWDMA_status2_get_addr_bl_sel(data)                               (0x00000003&(data))

#define  AUDIO_AWDMA_monitor                                                    0x18006678
#define  AUDIO_AWDMA_monitor_reg_addr                                            "0xB8006678"
#define  AUDIO_AWDMA_monitor_reg                                                 0xB8006678
#define  AUDIO_AWDMA_monitor_inst_addr                                           "0x00F1"
#define  set_AUDIO_AWDMA_monitor_reg(data)                                       (*((volatile unsigned int*)AUDIO_AWDMA_monitor_reg)=data)
#define  get_AUDIO_AWDMA_monitor_reg                                             (*((volatile unsigned int*)AUDIO_AWDMA_monitor_reg))
#define  AUDIO_AWDMA_monitor_monitor_en_shift                                    (31)
#define  AUDIO_AWDMA_monitor_monitor_conti_shift                                 (30)
#define  AUDIO_AWDMA_monitor_reach_thd_shift                                     (24)
#define  AUDIO_AWDMA_monitor_monitor_thd_shift                                   (16)
#define  AUDIO_AWDMA_monitor_highest_water_level_shift                           (0)
#define  AUDIO_AWDMA_monitor_monitor_en_mask                                     (0x80000000)
#define  AUDIO_AWDMA_monitor_monitor_conti_mask                                  (0x40000000)
#define  AUDIO_AWDMA_monitor_reach_thd_mask                                      (0x01000000)
#define  AUDIO_AWDMA_monitor_monitor_thd_mask                                    (0x000F0000)
#define  AUDIO_AWDMA_monitor_highest_water_level_mask                            (0x0000000F)
#define  AUDIO_AWDMA_monitor_monitor_en(data)                                    (0x80000000&((data)<<31))
#define  AUDIO_AWDMA_monitor_monitor_conti(data)                                 (0x40000000&((data)<<30))
#define  AUDIO_AWDMA_monitor_reach_thd(data)                                     (0x01000000&((data)<<24))
#define  AUDIO_AWDMA_monitor_monitor_thd(data)                                   (0x000F0000&((data)<<16))
#define  AUDIO_AWDMA_monitor_highest_water_level(data)                           (0x0000000F&(data))
#define  AUDIO_AWDMA_monitor_get_monitor_en(data)                                ((0x80000000&(data))>>31)
#define  AUDIO_AWDMA_monitor_get_monitor_conti(data)                             ((0x40000000&(data))>>30)
#define  AUDIO_AWDMA_monitor_get_reach_thd(data)                                 ((0x01000000&(data))>>24)
#define  AUDIO_AWDMA_monitor_get_monitor_thd(data)                               ((0x000F0000&(data))>>16)
#define  AUDIO_AWDMA_monitor_get_highest_water_level(data)                       (0x0000000F&(data))

#define  AUDIO_ARDMA_rule0                                                      0x1800667C
#define  AUDIO_ARDMA_rule0_reg_addr                                              "0xB800667C"
#define  AUDIO_ARDMA_rule0_reg                                                   0xB800667C
#define  AUDIO_ARDMA_rule0_inst_addr                                             "0x00F2"
#define  set_AUDIO_ARDMA_rule0_reg(data)                                         (*((volatile unsigned int*)AUDIO_ARDMA_rule0_reg)=data)
#define  get_AUDIO_ARDMA_rule0_reg                                               (*((volatile unsigned int*)AUDIO_ARDMA_rule0_reg))
#define  AUDIO_ARDMA_rule0_dma_up_limit_shift                                    (3)
#define  AUDIO_ARDMA_rule0_dma_up_limit_mask                                     (0xFFFFFFF8)
#define  AUDIO_ARDMA_rule0_dma_up_limit(data)                                    (0xFFFFFFF8&((data)<<3))
#define  AUDIO_ARDMA_rule0_get_dma_up_limit(data)                                ((0xFFFFFFF8&(data))>>3)

#define  AUDIO_ARDMA_rule1                                                      0x18006680
#define  AUDIO_ARDMA_rule1_reg_addr                                              "0xB8006680"
#define  AUDIO_ARDMA_rule1_reg                                                   0xB8006680
#define  AUDIO_ARDMA_rule1_inst_addr                                             "0x00F3"
#define  set_AUDIO_ARDMA_rule1_reg(data)                                         (*((volatile unsigned int*)AUDIO_ARDMA_rule1_reg)=data)
#define  get_AUDIO_ARDMA_rule1_reg                                               (*((volatile unsigned int*)AUDIO_ARDMA_rule1_reg))
#define  AUDIO_ARDMA_rule1_dma_low_limit_shift                                   (3)
#define  AUDIO_ARDMA_rule1_dma_low_limit_mask                                    (0xFFFFFFF8)
#define  AUDIO_ARDMA_rule1_dma_low_limit(data)                                   (0xFFFFFFF8&((data)<<3))
#define  AUDIO_ARDMA_rule1_get_dma_low_limit(data)                               ((0xFFFFFFF8&(data))>>3)

#define  AUDIO_ARDMA_ctrl                                                       0x18006684
#define  AUDIO_ARDMA_ctrl_reg_addr                                               "0xB8006684"
#define  AUDIO_ARDMA_ctrl_reg                                                    0xB8006684
#define  AUDIO_ARDMA_ctrl_inst_addr                                              "0x00F4"
#define  set_AUDIO_ARDMA_ctrl_reg(data)                                          (*((volatile unsigned int*)AUDIO_ARDMA_ctrl_reg)=data)
#define  get_AUDIO_ARDMA_ctrl_reg                                                (*((volatile unsigned int*)AUDIO_ARDMA_ctrl_reg))
#define  AUDIO_ARDMA_ctrl_dummy_31_14_shift                                      (14)
#define  AUDIO_ARDMA_ctrl_rdma_to_dly_shift                                      (10)
#define  AUDIO_ARDMA_ctrl_max_outstanding_shift                                  (8)
#define  AUDIO_ARDMA_ctrl_arb_rst_dly_shift                                      (3)
#define  AUDIO_ARDMA_ctrl_rtk_rd_soft_rst_shift                                  (2)
#define  AUDIO_ARDMA_ctrl_force_all_rst_shift                                    (1)
#define  AUDIO_ARDMA_ctrl_dma_enable_shift                                       (0)
#define  AUDIO_ARDMA_ctrl_dummy_31_14_mask                                       (0xFFFFC000)
#define  AUDIO_ARDMA_ctrl_rdma_to_dly_mask                                       (0x00003C00)
#define  AUDIO_ARDMA_ctrl_max_outstanding_mask                                   (0x00000300)
#define  AUDIO_ARDMA_ctrl_arb_rst_dly_mask                                       (0x000000F8)
#define  AUDIO_ARDMA_ctrl_rtk_rd_soft_rst_mask                                   (0x00000004)
#define  AUDIO_ARDMA_ctrl_force_all_rst_mask                                     (0x00000002)
#define  AUDIO_ARDMA_ctrl_dma_enable_mask                                        (0x00000001)
#define  AUDIO_ARDMA_ctrl_dummy_31_14(data)                                      (0xFFFFC000&((data)<<14))
#define  AUDIO_ARDMA_ctrl_rdma_to_dly(data)                                      (0x00003C00&((data)<<10))
#define  AUDIO_ARDMA_ctrl_max_outstanding(data)                                  (0x00000300&((data)<<8))
#define  AUDIO_ARDMA_ctrl_arb_rst_dly(data)                                      (0x000000F8&((data)<<3))
#define  AUDIO_ARDMA_ctrl_rtk_rd_soft_rst(data)                                  (0x00000004&((data)<<2))
#define  AUDIO_ARDMA_ctrl_force_all_rst(data)                                    (0x00000002&((data)<<1))
#define  AUDIO_ARDMA_ctrl_dma_enable(data)                                       (0x00000001&(data))
#define  AUDIO_ARDMA_ctrl_get_dummy_31_14(data)                                  ((0xFFFFC000&(data))>>14)
#define  AUDIO_ARDMA_ctrl_get_rdma_to_dly(data)                                  ((0x00003C00&(data))>>10)
#define  AUDIO_ARDMA_ctrl_get_max_outstanding(data)                              ((0x00000300&(data))>>8)
#define  AUDIO_ARDMA_ctrl_get_arb_rst_dly(data)                                  ((0x000000F8&(data))>>3)
#define  AUDIO_ARDMA_ctrl_get_rtk_rd_soft_rst(data)                              ((0x00000004&(data))>>2)
#define  AUDIO_ARDMA_ctrl_get_force_all_rst(data)                                ((0x00000002&(data))>>1)
#define  AUDIO_ARDMA_ctrl_get_dma_enable(data)                                   (0x00000001&(data))

#define  AUDIO_ARDMA_status0                                                    0x18006688
#define  AUDIO_ARDMA_status0_reg_addr                                            "0xB8006688"
#define  AUDIO_ARDMA_status0_reg                                                 0xB8006688
#define  AUDIO_ARDMA_status0_inst_addr                                           "0x00F5"
#define  set_AUDIO_ARDMA_status0_reg(data)                                       (*((volatile unsigned int*)AUDIO_ARDMA_status0_reg)=data)
#define  get_AUDIO_ARDMA_status0_reg                                             (*((volatile unsigned int*)AUDIO_ARDMA_status0_reg))
#define  AUDIO_ARDMA_status0_dma_cmd_water_shift                                 (28)
#define  AUDIO_ARDMA_status0_dma_data_water_shift                                (16)
#define  AUDIO_ARDMA_status0_cur_outstanding_shift                               (8)
#define  AUDIO_ARDMA_status0_soft_rst_before_cmd_finish_shift                    (4)
#define  AUDIO_ARDMA_status0_soft_rst_with_data_left_shift                       (3)
#define  AUDIO_ARDMA_status0_data_fifo_overflow_err_shift                        (2)
#define  AUDIO_ARDMA_status0_exceed_range_err_shift                              (1)
#define  AUDIO_ARDMA_status0_zero_length_err_shift                               (0)
#define  AUDIO_ARDMA_status0_dma_cmd_water_mask                                  (0x70000000)
#define  AUDIO_ARDMA_status0_dma_data_water_mask                                 (0x000F0000)
#define  AUDIO_ARDMA_status0_cur_outstanding_mask                                (0x00000700)
#define  AUDIO_ARDMA_status0_soft_rst_before_cmd_finish_mask                     (0x00000010)
#define  AUDIO_ARDMA_status0_soft_rst_with_data_left_mask                        (0x00000008)
#define  AUDIO_ARDMA_status0_data_fifo_overflow_err_mask                         (0x00000004)
#define  AUDIO_ARDMA_status0_exceed_range_err_mask                               (0x00000002)
#define  AUDIO_ARDMA_status0_zero_length_err_mask                                (0x00000001)
#define  AUDIO_ARDMA_status0_dma_cmd_water(data)                                 (0x70000000&((data)<<28))
#define  AUDIO_ARDMA_status0_dma_data_water(data)                                (0x000F0000&((data)<<16))
#define  AUDIO_ARDMA_status0_cur_outstanding(data)                               (0x00000700&((data)<<8))
#define  AUDIO_ARDMA_status0_soft_rst_before_cmd_finish(data)                    (0x00000010&((data)<<4))
#define  AUDIO_ARDMA_status0_soft_rst_with_data_left(data)                       (0x00000008&((data)<<3))
#define  AUDIO_ARDMA_status0_data_fifo_overflow_err(data)                        (0x00000004&((data)<<2))
#define  AUDIO_ARDMA_status0_exceed_range_err(data)                              (0x00000002&((data)<<1))
#define  AUDIO_ARDMA_status0_zero_length_err(data)                               (0x00000001&(data))
#define  AUDIO_ARDMA_status0_get_dma_cmd_water(data)                             ((0x70000000&(data))>>28)
#define  AUDIO_ARDMA_status0_get_dma_data_water(data)                            ((0x000F0000&(data))>>16)
#define  AUDIO_ARDMA_status0_get_cur_outstanding(data)                           ((0x00000700&(data))>>8)
#define  AUDIO_ARDMA_status0_get_soft_rst_before_cmd_finish(data)                ((0x00000010&(data))>>4)
#define  AUDIO_ARDMA_status0_get_soft_rst_with_data_left(data)                   ((0x00000008&(data))>>3)
#define  AUDIO_ARDMA_status0_get_data_fifo_overflow_err(data)                    ((0x00000004&(data))>>2)
#define  AUDIO_ARDMA_status0_get_exceed_range_err(data)                          ((0x00000002&(data))>>1)
#define  AUDIO_ARDMA_status0_get_zero_length_err(data)                           (0x00000001&(data))

#define  AUDIO_ARDMA_status1                                                    0x1800668C
#define  AUDIO_ARDMA_status1_reg_addr                                            "0xB800668C"
#define  AUDIO_ARDMA_status1_reg                                                 0xB800668C
#define  AUDIO_ARDMA_status1_inst_addr                                           "0x00F6"
#define  set_AUDIO_ARDMA_status1_reg(data)                                       (*((volatile unsigned int*)AUDIO_ARDMA_status1_reg)=data)
#define  get_AUDIO_ARDMA_status1_reg                                             (*((volatile unsigned int*)AUDIO_ARDMA_status1_reg))
#define  AUDIO_ARDMA_status1_ack_num_error_shift                                 (31)
#define  AUDIO_ARDMA_status1_last_no_ack_error_shift                             (30)
#define  AUDIO_ARDMA_status1_target_ack_num_shift                                (16)
#define  AUDIO_ARDMA_status1_last_ack_num_shift                                  (8)
#define  AUDIO_ARDMA_status1_selected_bl_shift                                   (0)
#define  AUDIO_ARDMA_status1_ack_num_error_mask                                  (0x80000000)
#define  AUDIO_ARDMA_status1_last_no_ack_error_mask                              (0x40000000)
#define  AUDIO_ARDMA_status1_target_ack_num_mask                                 (0x00FF0000)
#define  AUDIO_ARDMA_status1_last_ack_num_mask                                   (0x0000FF00)
#define  AUDIO_ARDMA_status1_selected_bl_mask                                    (0x000000FF)
#define  AUDIO_ARDMA_status1_ack_num_error(data)                                 (0x80000000&((data)<<31))
#define  AUDIO_ARDMA_status1_last_no_ack_error(data)                             (0x40000000&((data)<<30))
#define  AUDIO_ARDMA_status1_target_ack_num(data)                                (0x00FF0000&((data)<<16))
#define  AUDIO_ARDMA_status1_last_ack_num(data)                                  (0x0000FF00&((data)<<8))
#define  AUDIO_ARDMA_status1_selected_bl(data)                                   (0x000000FF&(data))
#define  AUDIO_ARDMA_status1_get_ack_num_error(data)                             ((0x80000000&(data))>>31)
#define  AUDIO_ARDMA_status1_get_last_no_ack_error(data)                         ((0x40000000&(data))>>30)
#define  AUDIO_ARDMA_status1_get_target_ack_num(data)                            ((0x00FF0000&(data))>>16)
#define  AUDIO_ARDMA_status1_get_last_ack_num(data)                              ((0x0000FF00&(data))>>8)
#define  AUDIO_ARDMA_status1_get_selected_bl(data)                               (0x000000FF&(data))

#define  AUDIO_ARDMA_status2                                                    0x18006690
#define  AUDIO_ARDMA_status2_reg_addr                                            "0xB8006690"
#define  AUDIO_ARDMA_status2_reg                                                 0xB8006690
#define  AUDIO_ARDMA_status2_inst_addr                                           "0x00F7"
#define  set_AUDIO_ARDMA_status2_reg(data)                                       (*((volatile unsigned int*)AUDIO_ARDMA_status2_reg)=data)
#define  get_AUDIO_ARDMA_status2_reg                                             (*((volatile unsigned int*)AUDIO_ARDMA_status2_reg))
#define  AUDIO_ARDMA_status2_selected_addr_shift                                 (3)
#define  AUDIO_ARDMA_status2_addr_bl_sel_shift                                   (0)
#define  AUDIO_ARDMA_status2_selected_addr_mask                                  (0xFFFFFFF8)
#define  AUDIO_ARDMA_status2_addr_bl_sel_mask                                    (0x00000003)
#define  AUDIO_ARDMA_status2_selected_addr(data)                                 (0xFFFFFFF8&((data)<<3))
#define  AUDIO_ARDMA_status2_addr_bl_sel(data)                                   (0x00000003&(data))
#define  AUDIO_ARDMA_status2_get_selected_addr(data)                             ((0xFFFFFFF8&(data))>>3)
#define  AUDIO_ARDMA_status2_get_addr_bl_sel(data)                               (0x00000003&(data))

#define  AUDIO_ARDMA_monitor                                                    0x18006694
#define  AUDIO_ARDMA_monitor_reg_addr                                            "0xB8006694"
#define  AUDIO_ARDMA_monitor_reg                                                 0xB8006694
#define  AUDIO_ARDMA_monitor_inst_addr                                           "0x00F8"
#define  set_AUDIO_ARDMA_monitor_reg(data)                                       (*((volatile unsigned int*)AUDIO_ARDMA_monitor_reg)=data)
#define  get_AUDIO_ARDMA_monitor_reg                                             (*((volatile unsigned int*)AUDIO_ARDMA_monitor_reg))
#define  AUDIO_ARDMA_monitor_monitor_en_shift                                    (31)
#define  AUDIO_ARDMA_monitor_monitor_conti_shift                                 (30)
#define  AUDIO_ARDMA_monitor_reach_thd_shift                                     (24)
#define  AUDIO_ARDMA_monitor_monitor_thd_shift                                   (16)
#define  AUDIO_ARDMA_monitor_lowest_water_level_shift                            (0)
#define  AUDIO_ARDMA_monitor_monitor_en_mask                                     (0x80000000)
#define  AUDIO_ARDMA_monitor_monitor_conti_mask                                  (0x40000000)
#define  AUDIO_ARDMA_monitor_reach_thd_mask                                      (0x01000000)
#define  AUDIO_ARDMA_monitor_monitor_thd_mask                                    (0x000F0000)
#define  AUDIO_ARDMA_monitor_lowest_water_level_mask                             (0x0000000F)
#define  AUDIO_ARDMA_monitor_monitor_en(data)                                    (0x80000000&((data)<<31))
#define  AUDIO_ARDMA_monitor_monitor_conti(data)                                 (0x40000000&((data)<<30))
#define  AUDIO_ARDMA_monitor_reach_thd(data)                                     (0x01000000&((data)<<24))
#define  AUDIO_ARDMA_monitor_monitor_thd(data)                                   (0x000F0000&((data)<<16))
#define  AUDIO_ARDMA_monitor_lowest_water_level(data)                            (0x0000000F&(data))
#define  AUDIO_ARDMA_monitor_get_monitor_en(data)                                ((0x80000000&(data))>>31)
#define  AUDIO_ARDMA_monitor_get_monitor_conti(data)                             ((0x40000000&(data))>>30)
#define  AUDIO_ARDMA_monitor_get_reach_thd(data)                                 ((0x01000000&(data))>>24)
#define  AUDIO_ARDMA_monitor_get_monitor_thd(data)                               ((0x000F0000&(data))>>16)
#define  AUDIO_ARDMA_monitor_get_lowest_water_level(data)                        (0x0000000F&(data))

#define  AUDIO_Audio_dma_Bist_Control_indicate                                  0x18006698
#define  AUDIO_Audio_dma_Bist_Control_indicate_reg_addr                          "0xB8006698"
#define  AUDIO_Audio_dma_Bist_Control_indicate_reg                               0xB8006698
#define  AUDIO_Audio_dma_Bist_Control_indicate_inst_addr                         "0x00F9"
#define  set_AUDIO_Audio_dma_Bist_Control_indicate_reg(data)                     (*((volatile unsigned int*)AUDIO_Audio_dma_Bist_Control_indicate_reg)=data)
#define  get_AUDIO_Audio_dma_Bist_Control_indicate_reg                           (*((volatile unsigned int*)AUDIO_Audio_dma_Bist_Control_indicate_reg))
#define  AUDIO_Audio_dma_Bist_Control_indicate_ls_on_shift                       (31)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test0_shift                       (30)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test1_shift                       (29)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test2_shift                       (28)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test3_shift                       (27)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test4_shift                       (26)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test5_shift                       (25)
#define  AUDIO_Audio_dma_Bist_Control_indicate_pb_wr_ena_sel_shift               (24)
#define  AUDIO_Audio_dma_Bist_Control_indicate_ts_wr_ena_sel_shift               (23)
#define  AUDIO_Audio_dma_Bist_Control_indicate_arc_wr_ena_sel_shift              (22)
#define  AUDIO_Audio_dma_Bist_Control_indicate_ls_on_mask                        (0x80000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test0_mask                        (0x40000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test1_mask                        (0x20000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test2_mask                        (0x10000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test3_mask                        (0x08000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test4_mask                        (0x04000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_test5_mask                        (0x02000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_pb_wr_ena_sel_mask                (0x01000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_ts_wr_ena_sel_mask                (0x00800000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_arc_wr_ena_sel_mask               (0x00400000)
#define  AUDIO_Audio_dma_Bist_Control_indicate_ls_on(data)                       (0x80000000&((data)<<31))
#define  AUDIO_Audio_dma_Bist_Control_indicate_test0(data)                       (0x40000000&((data)<<30))
#define  AUDIO_Audio_dma_Bist_Control_indicate_test1(data)                       (0x20000000&((data)<<29))
#define  AUDIO_Audio_dma_Bist_Control_indicate_test2(data)                       (0x10000000&((data)<<28))
#define  AUDIO_Audio_dma_Bist_Control_indicate_test3(data)                       (0x08000000&((data)<<27))
#define  AUDIO_Audio_dma_Bist_Control_indicate_test4(data)                       (0x04000000&((data)<<26))
#define  AUDIO_Audio_dma_Bist_Control_indicate_test5(data)                       (0x02000000&((data)<<25))
#define  AUDIO_Audio_dma_Bist_Control_indicate_pb_wr_ena_sel(data)               (0x01000000&((data)<<24))
#define  AUDIO_Audio_dma_Bist_Control_indicate_ts_wr_ena_sel(data)               (0x00800000&((data)<<23))
#define  AUDIO_Audio_dma_Bist_Control_indicate_arc_wr_ena_sel(data)              (0x00400000&((data)<<22))
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_ls_on(data)                   ((0x80000000&(data))>>31)
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_test0(data)                   ((0x40000000&(data))>>30)
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_test1(data)                   ((0x20000000&(data))>>29)
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_test2(data)                   ((0x10000000&(data))>>28)
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_test3(data)                   ((0x08000000&(data))>>27)
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_test4(data)                   ((0x04000000&(data))>>26)
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_test5(data)                   ((0x02000000&(data))>>25)
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_pb_wr_ena_sel(data)           ((0x01000000&(data))>>24)
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_ts_wr_ena_sel(data)           ((0x00800000&(data))>>23)
#define  AUDIO_Audio_dma_Bist_Control_indicate_get_arc_wr_ena_sel(data)          ((0x00400000&(data))>>22)

#define  AUDIO_Audio_dma_Bist_Control_indicate2                                 0x1800669C
#define  AUDIO_Audio_dma_Bist_Control_indicate2_reg_addr                         "0xB800669C"
#define  AUDIO_Audio_dma_Bist_Control_indicate2_reg                              0xB800669C
#define  AUDIO_Audio_dma_Bist_Control_indicate2_inst_addr                        "0x00FA"
#define  set_AUDIO_Audio_dma_Bist_Control_indicate2_reg(data)                    (*((volatile unsigned int*)AUDIO_Audio_dma_Bist_Control_indicate2_reg)=data)
#define  get_AUDIO_Audio_dma_Bist_Control_indicate2_reg                          (*((volatile unsigned int*)AUDIO_Audio_dma_Bist_Control_indicate2_reg))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_5_shift                      (29)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_5_shift                       (25)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_4_shift                      (24)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_4_shift                       (20)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_3_shift                      (19)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_3_shift                       (15)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_2_shift                      (14)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_2_shift                       (10)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_1_shift                      (9)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_1_shift                       (5)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_0_shift                      (4)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_0_shift                       (0)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_5_mask                       (0x20000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_5_mask                        (0x1E000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_4_mask                       (0x01000000)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_4_mask                        (0x00F00000)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_3_mask                       (0x00080000)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_3_mask                        (0x00078000)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_2_mask                       (0x00004000)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_2_mask                        (0x00003C00)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_1_mask                       (0x00000200)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_1_mask                        (0x000001E0)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_0_mask                       (0x00000010)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_0_mask                        (0x0000000F)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_5(data)                      (0x20000000&((data)<<29))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_5(data)                       (0x1E000000&((data)<<25))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_4(data)                      (0x01000000&((data)<<24))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_4(data)                       (0x00F00000&((data)<<20))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_3(data)                      (0x00080000&((data)<<19))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_3(data)                       (0x00078000&((data)<<15))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_2(data)                      (0x00004000&((data)<<14))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_2(data)                       (0x00003C00&((data)<<10))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_1(data)                      (0x00000200&((data)<<9))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_1(data)                       (0x000001E0&((data)<<5))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rme_0(data)                      (0x00000010&((data)<<4))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_rm_0(data)                       (0x0000000F&(data))
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rme_5(data)                  ((0x20000000&(data))>>29)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rm_5(data)                   ((0x1E000000&(data))>>25)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rme_4(data)                  ((0x01000000&(data))>>24)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rm_4(data)                   ((0x00F00000&(data))>>20)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rme_3(data)                  ((0x00080000&(data))>>19)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rm_3(data)                   ((0x00078000&(data))>>15)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rme_2(data)                  ((0x00004000&(data))>>14)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rm_2(data)                   ((0x00003C00&(data))>>10)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rme_1(data)                  ((0x00000200&(data))>>9)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rm_1(data)                   ((0x000001E0&(data))>>5)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rme_0(data)                  ((0x00000010&(data))>>4)
#define  AUDIO_Audio_dma_Bist_Control_indicate2_get_rm_0(data)                   (0x0000000F&(data))

#define  AUDIO_Test_DMA_Control_Register                                        0x180066E0
#define  AUDIO_Test_DMA_Control_Register_reg_addr                                "0xB80066E0"
#define  AUDIO_Test_DMA_Control_Register_reg                                     0xB80066E0
#define  AUDIO_Test_DMA_Control_Register_inst_addr                               "0x00FB"
#define  set_AUDIO_Test_DMA_Control_Register_reg(data)                           (*((volatile unsigned int*)AUDIO_Test_DMA_Control_Register_reg)=data)
#define  get_AUDIO_Test_DMA_Control_Register_reg                                 (*((volatile unsigned int*)AUDIO_Test_DMA_Control_Register_reg))
#define  AUDIO_Test_DMA_Control_Register_test_dma_en_shift                       (31)
#define  AUDIO_Test_DMA_Control_Register_test_dma_in_sel_shift                   (4)
#define  AUDIO_Test_DMA_Control_Register_eco_ifd_inv_shift                       (0)
#define  AUDIO_Test_DMA_Control_Register_test_dma_en_mask                        (0x80000000)
#define  AUDIO_Test_DMA_Control_Register_test_dma_in_sel_mask                    (0x00000070)
#define  AUDIO_Test_DMA_Control_Register_eco_ifd_inv_mask                        (0x00000001)
#define  AUDIO_Test_DMA_Control_Register_test_dma_en(data)                       (0x80000000&((data)<<31))
#define  AUDIO_Test_DMA_Control_Register_test_dma_in_sel(data)                   (0x00000070&((data)<<4))
#define  AUDIO_Test_DMA_Control_Register_eco_ifd_inv(data)                       (0x00000001&(data))
#define  AUDIO_Test_DMA_Control_Register_get_test_dma_en(data)                   ((0x80000000&(data))>>31)
#define  AUDIO_Test_DMA_Control_Register_get_test_dma_in_sel(data)               ((0x00000070&(data))>>4)
#define  AUDIO_Test_DMA_Control_Register_get_eco_ifd_inv(data)                   (0x00000001&(data))

#define  AUDIO_HW_Process_Control                                               0x18006700
#define  AUDIO_HW_Process_Control_reg_addr                                       "0xB8006700"
#define  AUDIO_HW_Process_Control_reg                                            0xB8006700
#define  AUDIO_HW_Process_Control_inst_addr                                      "0x00FC"
#define  set_AUDIO_HW_Process_Control_reg(data)                                  (*((volatile unsigned int*)AUDIO_HW_Process_Control_reg)=data)
#define  get_AUDIO_HW_Process_Control_reg                                        (*((volatile unsigned int*)AUDIO_HW_Process_Control_reg))
#define  AUDIO_HW_Process_Control_reg_pb_protect_shift                           (8)
#define  AUDIO_HW_Process_Control_distortion_enable_shift                        (7)
#define  AUDIO_HW_Process_Control_avc2_enable_shift                              (6)
#define  AUDIO_HW_Process_Control_basic_premium_sel_shift                        (5)
#define  AUDIO_HW_Process_Control_dvol_enable_shift                              (4)
#define  AUDIO_HW_Process_Control_loud_enable_shift                              (3)
#define  AUDIO_HW_Process_Control_deq_enable_shift                               (2)
#define  AUDIO_HW_Process_Control_spatial_ctrlenable_shift                       (1)
#define  AUDIO_HW_Process_Control_auto_volenable_shift                           (0)
#define  AUDIO_HW_Process_Control_reg_pb_protect_mask                            (0x00000100)
#define  AUDIO_HW_Process_Control_distortion_enable_mask                         (0x00000080)
#define  AUDIO_HW_Process_Control_avc2_enable_mask                               (0x00000040)
#define  AUDIO_HW_Process_Control_basic_premium_sel_mask                         (0x00000020)
#define  AUDIO_HW_Process_Control_dvol_enable_mask                               (0x00000010)
#define  AUDIO_HW_Process_Control_loud_enable_mask                               (0x00000008)
#define  AUDIO_HW_Process_Control_deq_enable_mask                                (0x00000004)
#define  AUDIO_HW_Process_Control_spatial_ctrlenable_mask                        (0x00000002)
#define  AUDIO_HW_Process_Control_auto_volenable_mask                            (0x00000001)
#define  AUDIO_HW_Process_Control_reg_pb_protect(data)                           (0x00000100&((data)<<8))
#define  AUDIO_HW_Process_Control_distortion_enable(data)                        (0x00000080&((data)<<7))
#define  AUDIO_HW_Process_Control_avc2_enable(data)                              (0x00000040&((data)<<6))
#define  AUDIO_HW_Process_Control_basic_premium_sel(data)                        (0x00000020&((data)<<5))
#define  AUDIO_HW_Process_Control_dvol_enable(data)                              (0x00000010&((data)<<4))
#define  AUDIO_HW_Process_Control_loud_enable(data)                              (0x00000008&((data)<<3))
#define  AUDIO_HW_Process_Control_deq_enable(data)                               (0x00000004&((data)<<2))
#define  AUDIO_HW_Process_Control_spatial_ctrlenable(data)                       (0x00000002&((data)<<1))
#define  AUDIO_HW_Process_Control_auto_volenable(data)                           (0x00000001&(data))
#define  AUDIO_HW_Process_Control_get_reg_pb_protect(data)                       ((0x00000100&(data))>>8)
#define  AUDIO_HW_Process_Control_get_distortion_enable(data)                    ((0x00000080&(data))>>7)
#define  AUDIO_HW_Process_Control_get_avc2_enable(data)                          ((0x00000040&(data))>>6)
#define  AUDIO_HW_Process_Control_get_basic_premium_sel(data)                    ((0x00000020&(data))>>5)
#define  AUDIO_HW_Process_Control_get_dvol_enable(data)                          ((0x00000010&(data))>>4)
#define  AUDIO_HW_Process_Control_get_loud_enable(data)                          ((0x00000008&(data))>>3)
#define  AUDIO_HW_Process_Control_get_deq_enable(data)                           ((0x00000004&(data))>>2)
#define  AUDIO_HW_Process_Control_get_spatial_ctrlenable(data)                   ((0x00000002&(data))>>1)
#define  AUDIO_HW_Process_Control_get_auto_volenable(data)                       (0x00000001&(data))

#define  AUDIO_Auto_Volume_Control_0                                            0x18006704
#define  AUDIO_Auto_Volume_Control_0_reg_addr                                    "0xB8006704"
#define  AUDIO_Auto_Volume_Control_0_reg                                         0xB8006704
#define  AUDIO_Auto_Volume_Control_0_inst_addr                                   "0x00FD"
#define  set_AUDIO_Auto_Volume_Control_0_reg(data)                               (*((volatile unsigned int*)AUDIO_Auto_Volume_Control_0_reg)=data)
#define  get_AUDIO_Auto_Volume_Control_0_reg                                     (*((volatile unsigned int*)AUDIO_Auto_Volume_Control_0_reg))
#define  AUDIO_Auto_Volume_Control_0_avc_vol_detect_shift                        (30)
#define  AUDIO_Auto_Volume_Control_0_avc_noise_gain_shift                        (28)
#define  AUDIO_Auto_Volume_Control_0_avc_noise_thre_shift                        (20)
#define  AUDIO_Auto_Volume_Control_0_avc_level_max_shift                         (12)
#define  AUDIO_Auto_Volume_Control_0_avc_level_min_shift                         (4)
#define  AUDIO_Auto_Volume_Control_0_avc_down_db_shift                           (2)
#define  AUDIO_Auto_Volume_Control_0_avc_up_db_shift                             (0)
#define  AUDIO_Auto_Volume_Control_0_avc_vol_detect_mask                         (0xC0000000)
#define  AUDIO_Auto_Volume_Control_0_avc_noise_gain_mask                         (0x30000000)
#define  AUDIO_Auto_Volume_Control_0_avc_noise_thre_mask                         (0x0FF00000)
#define  AUDIO_Auto_Volume_Control_0_avc_level_max_mask                          (0x000FF000)
#define  AUDIO_Auto_Volume_Control_0_avc_level_min_mask                          (0x00000FF0)
#define  AUDIO_Auto_Volume_Control_0_avc_down_db_mask                            (0x0000000C)
#define  AUDIO_Auto_Volume_Control_0_avc_up_db_mask                              (0x00000003)
#define  AUDIO_Auto_Volume_Control_0_avc_vol_detect(data)                        (0xC0000000&((data)<<30))
#define  AUDIO_Auto_Volume_Control_0_avc_noise_gain(data)                        (0x30000000&((data)<<28))
#define  AUDIO_Auto_Volume_Control_0_avc_noise_thre(data)                        (0x0FF00000&((data)<<20))
#define  AUDIO_Auto_Volume_Control_0_avc_level_max(data)                         (0x000FF000&((data)<<12))
#define  AUDIO_Auto_Volume_Control_0_avc_level_min(data)                         (0x00000FF0&((data)<<4))
#define  AUDIO_Auto_Volume_Control_0_avc_down_db(data)                           (0x0000000C&((data)<<2))
#define  AUDIO_Auto_Volume_Control_0_avc_up_db(data)                             (0x00000003&(data))
#define  AUDIO_Auto_Volume_Control_0_get_avc_vol_detect(data)                    ((0xC0000000&(data))>>30)
#define  AUDIO_Auto_Volume_Control_0_get_avc_noise_gain(data)                    ((0x30000000&(data))>>28)
#define  AUDIO_Auto_Volume_Control_0_get_avc_noise_thre(data)                    ((0x0FF00000&(data))>>20)
#define  AUDIO_Auto_Volume_Control_0_get_avc_level_max(data)                     ((0x000FF000&(data))>>12)
#define  AUDIO_Auto_Volume_Control_0_get_avc_level_min(data)                     ((0x00000FF0&(data))>>4)
#define  AUDIO_Auto_Volume_Control_0_get_avc_down_db(data)                       ((0x0000000C&(data))>>2)
#define  AUDIO_Auto_Volume_Control_0_get_avc_up_db(data)                         (0x00000003&(data))

#define  AUDIO_AVC_Volume_Control_1                                             0x18006708
#define  AUDIO_AVC_Volume_Control_1_reg_addr                                     "0xB8006708"
#define  AUDIO_AVC_Volume_Control_1_reg                                          0xB8006708
#define  AUDIO_AVC_Volume_Control_1_inst_addr                                    "0x00FE"
#define  set_AUDIO_AVC_Volume_Control_1_reg(data)                                (*((volatile unsigned int*)AUDIO_AVC_Volume_Control_1_reg)=data)
#define  get_AUDIO_AVC_Volume_Control_1_reg                                      (*((volatile unsigned int*)AUDIO_AVC_Volume_Control_1_reg))
#define  AUDIO_AVC_Volume_Control_1_avc_cnt_thre_shift                           (20)
#define  AUDIO_AVC_Volume_Control_1_avc_zc_win_shift                             (10)
#define  AUDIO_AVC_Volume_Control_1_avc_mon_win_shift                            (0)
#define  AUDIO_AVC_Volume_Control_1_avc_cnt_thre_mask                            (0x3FF00000)
#define  AUDIO_AVC_Volume_Control_1_avc_zc_win_mask                              (0x000FFC00)
#define  AUDIO_AVC_Volume_Control_1_avc_mon_win_mask                             (0x000003FF)
#define  AUDIO_AVC_Volume_Control_1_avc_cnt_thre(data)                           (0x3FF00000&((data)<<20))
#define  AUDIO_AVC_Volume_Control_1_avc_zc_win(data)                             (0x000FFC00&((data)<<10))
#define  AUDIO_AVC_Volume_Control_1_avc_mon_win(data)                            (0x000003FF&(data))
#define  AUDIO_AVC_Volume_Control_1_get_avc_cnt_thre(data)                       ((0x3FF00000&(data))>>20)
#define  AUDIO_AVC_Volume_Control_1_get_avc_zc_win(data)                         ((0x000FFC00&(data))>>10)
#define  AUDIO_AVC_Volume_Control_1_get_avc_mon_win(data)                        (0x000003FF&(data))

#define  AUDIO_AVC_Volume_Control_2                                             0x1800670C
#define  AUDIO_AVC_Volume_Control_2_reg_addr                                     "0xB800670C"
#define  AUDIO_AVC_Volume_Control_2_reg                                          0xB800670C
#define  AUDIO_AVC_Volume_Control_2_inst_addr                                    "0x00FF"
#define  set_AUDIO_AVC_Volume_Control_2_reg(data)                                (*((volatile unsigned int*)AUDIO_AVC_Volume_Control_2_reg)=data)
#define  get_AUDIO_AVC_Volume_Control_2_reg                                      (*((volatile unsigned int*)AUDIO_AVC_Volume_Control_2_reg))
#define  AUDIO_AVC_Volume_Control_2_avc_vol_amplif_enable_shift                  (31)
#define  AUDIO_AVC_Volume_Control_2_avc1_coef_shift                              (28)
#define  AUDIO_AVC_Volume_Control_2_avc_small_level_max_shift                    (20)
#define  AUDIO_AVC_Volume_Control_2_avc_small_level_min_shift                    (12)
#define  AUDIO_AVC_Volume_Control_2_avc_small_down_db_shift                      (10)
#define  AUDIO_AVC_Volume_Control_2_avc_small_up_db_shift                        (8)
#define  AUDIO_AVC_Volume_Control_2_avc_small_cnt_thre_shift                     (0)
#define  AUDIO_AVC_Volume_Control_2_avc_vol_amplif_enable_mask                   (0x80000000)
#define  AUDIO_AVC_Volume_Control_2_avc1_coef_mask                               (0x70000000)
#define  AUDIO_AVC_Volume_Control_2_avc_small_level_max_mask                     (0x0FF00000)
#define  AUDIO_AVC_Volume_Control_2_avc_small_level_min_mask                     (0x000FF000)
#define  AUDIO_AVC_Volume_Control_2_avc_small_down_db_mask                       (0x00000C00)
#define  AUDIO_AVC_Volume_Control_2_avc_small_up_db_mask                         (0x00000300)
#define  AUDIO_AVC_Volume_Control_2_avc_small_cnt_thre_mask                      (0x000000FF)
#define  AUDIO_AVC_Volume_Control_2_avc_vol_amplif_enable(data)                  (0x80000000&((data)<<31))
#define  AUDIO_AVC_Volume_Control_2_avc1_coef(data)                              (0x70000000&((data)<<28))
#define  AUDIO_AVC_Volume_Control_2_avc_small_level_max(data)                    (0x0FF00000&((data)<<20))
#define  AUDIO_AVC_Volume_Control_2_avc_small_level_min(data)                    (0x000FF000&((data)<<12))
#define  AUDIO_AVC_Volume_Control_2_avc_small_down_db(data)                      (0x00000C00&((data)<<10))
#define  AUDIO_AVC_Volume_Control_2_avc_small_up_db(data)                        (0x00000300&((data)<<8))
#define  AUDIO_AVC_Volume_Control_2_avc_small_cnt_thre(data)                     (0x000000FF&(data))
#define  AUDIO_AVC_Volume_Control_2_get_avc_vol_amplif_enable(data)              ((0x80000000&(data))>>31)
#define  AUDIO_AVC_Volume_Control_2_get_avc1_coef(data)                          ((0x70000000&(data))>>28)
#define  AUDIO_AVC_Volume_Control_2_get_avc_small_level_max(data)                ((0x0FF00000&(data))>>20)
#define  AUDIO_AVC_Volume_Control_2_get_avc_small_level_min(data)                ((0x000FF000&(data))>>12)
#define  AUDIO_AVC_Volume_Control_2_get_avc_small_down_db(data)                  ((0x00000C00&(data))>>10)
#define  AUDIO_AVC_Volume_Control_2_get_avc_small_up_db(data)                    ((0x00000300&(data))>>8)
#define  AUDIO_AVC_Volume_Control_2_get_avc_small_cnt_thre(data)                 (0x000000FF&(data))

#define  AUDIO_AVC_Volume_Control_3                                             0x18006820
#define  AUDIO_AVC_Volume_Control_3_reg_addr                                     "0xB8006820"
#define  AUDIO_AVC_Volume_Control_3_reg                                          0xB8006820
#define  AUDIO_AVC_Volume_Control_3_inst_addr                                    "0x0100"
#define  set_AUDIO_AVC_Volume_Control_3_reg(data)                                (*((volatile unsigned int*)AUDIO_AVC_Volume_Control_3_reg)=data)
#define  get_AUDIO_AVC_Volume_Control_3_reg                                      (*((volatile unsigned int*)AUDIO_AVC_Volume_Control_3_reg))
#define  AUDIO_AVC_Volume_Control_3_avc_small_level_shift                        (0)
#define  AUDIO_AVC_Volume_Control_3_avc_small_level_mask                         (0x0000FFFF)
#define  AUDIO_AVC_Volume_Control_3_avc_small_level(data)                        (0x0000FFFF&(data))
#define  AUDIO_AVC_Volume_Control_3_get_avc_small_level(data)                    (0x0000FFFF&(data))

#define  AUDIO_Spatial_Effect_control_0                                         0x18006710
#define  AUDIO_Spatial_Effect_control_0_reg_addr                                 "0xB8006710"
#define  AUDIO_Spatial_Effect_control_0_reg                                      0xB8006710
#define  AUDIO_Spatial_Effect_control_0_inst_addr                                "0x0101"
#define  set_AUDIO_Spatial_Effect_control_0_reg(data)                            (*((volatile unsigned int*)AUDIO_Spatial_Effect_control_0_reg)=data)
#define  get_AUDIO_Spatial_Effect_control_0_reg                                  (*((volatile unsigned int*)AUDIO_Spatial_Effect_control_0_reg))
#define  AUDIO_Spatial_Effect_control_0_spatial_zc_win_shift                     (16)
#define  AUDIO_Spatial_Effect_control_0_spatial_zc_apply_shift                   (15)
#define  AUDIO_Spatial_Effect_control_0_apf_en_shift                             (14)
#define  AUDIO_Spatial_Effect_control_0_psb_en_shift                             (13)
#define  AUDIO_Spatial_Effect_control_0_seb_en_shift                             (12)
#define  AUDIO_Spatial_Effect_control_0_spatial_in_l_sel_shift                   (11)
#define  AUDIO_Spatial_Effect_control_0_spatial_in_r_sel_shift                   (10)
#define  AUDIO_Spatial_Effect_control_0_f_coef_shift                             (0)
#define  AUDIO_Spatial_Effect_control_0_spatial_zc_win_mask                      (0x0FFF0000)
#define  AUDIO_Spatial_Effect_control_0_spatial_zc_apply_mask                    (0x00008000)
#define  AUDIO_Spatial_Effect_control_0_apf_en_mask                              (0x00004000)
#define  AUDIO_Spatial_Effect_control_0_psb_en_mask                              (0x00002000)
#define  AUDIO_Spatial_Effect_control_0_seb_en_mask                              (0x00001000)
#define  AUDIO_Spatial_Effect_control_0_spatial_in_l_sel_mask                    (0x00000800)
#define  AUDIO_Spatial_Effect_control_0_spatial_in_r_sel_mask                    (0x00000400)
#define  AUDIO_Spatial_Effect_control_0_f_coef_mask                              (0x000001FF)
#define  AUDIO_Spatial_Effect_control_0_spatial_zc_win(data)                     (0x0FFF0000&((data)<<16))
#define  AUDIO_Spatial_Effect_control_0_spatial_zc_apply(data)                   (0x00008000&((data)<<15))
#define  AUDIO_Spatial_Effect_control_0_apf_en(data)                             (0x00004000&((data)<<14))
#define  AUDIO_Spatial_Effect_control_0_psb_en(data)                             (0x00002000&((data)<<13))
#define  AUDIO_Spatial_Effect_control_0_seb_en(data)                             (0x00001000&((data)<<12))
#define  AUDIO_Spatial_Effect_control_0_spatial_in_l_sel(data)                   (0x00000800&((data)<<11))
#define  AUDIO_Spatial_Effect_control_0_spatial_in_r_sel(data)                   (0x00000400&((data)<<10))
#define  AUDIO_Spatial_Effect_control_0_f_coef(data)                             (0x000001FF&(data))
#define  AUDIO_Spatial_Effect_control_0_get_spatial_zc_win(data)                 ((0x0FFF0000&(data))>>16)
#define  AUDIO_Spatial_Effect_control_0_get_spatial_zc_apply(data)               ((0x00008000&(data))>>15)
#define  AUDIO_Spatial_Effect_control_0_get_apf_en(data)                         ((0x00004000&(data))>>14)
#define  AUDIO_Spatial_Effect_control_0_get_psb_en(data)                         ((0x00002000&(data))>>13)
#define  AUDIO_Spatial_Effect_control_0_get_seb_en(data)                         ((0x00001000&(data))>>12)
#define  AUDIO_Spatial_Effect_control_0_get_spatial_in_l_sel(data)               ((0x00000800&(data))>>11)
#define  AUDIO_Spatial_Effect_control_0_get_spatial_in_r_sel(data)               ((0x00000400&(data))>>10)
#define  AUDIO_Spatial_Effect_control_0_get_f_coef(data)                         (0x000001FF&(data))

#define  AUDIO_Spatial_Effect_control_1                                         0x18006714
#define  AUDIO_Spatial_Effect_control_1_reg_addr                                 "0xB8006714"
#define  AUDIO_Spatial_Effect_control_1_reg                                      0xB8006714
#define  AUDIO_Spatial_Effect_control_1_inst_addr                                "0x0102"
#define  set_AUDIO_Spatial_Effect_control_1_reg(data)                            (*((volatile unsigned int*)AUDIO_Spatial_Effect_control_1_reg)=data)
#define  get_AUDIO_Spatial_Effect_control_1_reg                                  (*((volatile unsigned int*)AUDIO_Spatial_Effect_control_1_reg))
#define  AUDIO_Spatial_Effect_control_1_depth1_shift                             (16)
#define  AUDIO_Spatial_Effect_control_1_depth2_shift                             (0)
#define  AUDIO_Spatial_Effect_control_1_depth1_mask                              (0x01FF0000)
#define  AUDIO_Spatial_Effect_control_1_depth2_mask                              (0x000001FF)
#define  AUDIO_Spatial_Effect_control_1_depth1(data)                             (0x01FF0000&((data)<<16))
#define  AUDIO_Spatial_Effect_control_1_depth2(data)                             (0x000001FF&(data))
#define  AUDIO_Spatial_Effect_control_1_get_depth1(data)                         ((0x01FF0000&(data))>>16)
#define  AUDIO_Spatial_Effect_control_1_get_depth2(data)                         (0x000001FF&(data))

#define  AUDIO_EQ_hp                                                            0x18006718
#define  AUDIO_EQ_hp_reg_addr                                                    "0xB8006718"
#define  AUDIO_EQ_hp_reg                                                         0xB8006718
#define  AUDIO_EQ_hp_inst_addr                                                   "0x0103"
#define  set_AUDIO_EQ_hp_reg(data)                                               (*((volatile unsigned int*)AUDIO_EQ_hp_reg)=data)
#define  get_AUDIO_EQ_hp_reg                                                     (*((volatile unsigned int*)AUDIO_EQ_hp_reg))
#define  AUDIO_EQ_hp_eq_hp_slope_shift                                           (16)
#define  AUDIO_EQ_hp_eq_hp_a1_shift                                              (0)
#define  AUDIO_EQ_hp_eq_hp_slope_mask                                            (0x00010000)
#define  AUDIO_EQ_hp_eq_hp_a1_mask                                               (0x0000FFFF)
#define  AUDIO_EQ_hp_eq_hp_slope(data)                                           (0x00010000&((data)<<16))
#define  AUDIO_EQ_hp_eq_hp_a1(data)                                              (0x0000FFFF&(data))
#define  AUDIO_EQ_hp_get_eq_hp_slope(data)                                       ((0x00010000&(data))>>16)
#define  AUDIO_EQ_hp_get_eq_hp_a1(data)                                          (0x0000FFFF&(data))

#define  AUDIO_EQ_lp                                                            0x1800671C
#define  AUDIO_EQ_lp_reg_addr                                                    "0xB800671C"
#define  AUDIO_EQ_lp_reg                                                         0xB800671C
#define  AUDIO_EQ_lp_inst_addr                                                   "0x0104"
#define  set_AUDIO_EQ_lp_reg(data)                                               (*((volatile unsigned int*)AUDIO_EQ_lp_reg)=data)
#define  get_AUDIO_EQ_lp_reg                                                     (*((volatile unsigned int*)AUDIO_EQ_lp_reg))
#define  AUDIO_EQ_lp_eq_lp_a1_shift                                              (16)
#define  AUDIO_EQ_lp_eq_lp_h0_shift                                              (0)
#define  AUDIO_EQ_lp_eq_lp_a1_mask                                               (0xFFFF0000)
#define  AUDIO_EQ_lp_eq_lp_h0_mask                                               (0x0000FFFF)
#define  AUDIO_EQ_lp_eq_lp_a1(data)                                              (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_lp_eq_lp_h0(data)                                              (0x0000FFFF&(data))
#define  AUDIO_EQ_lp_get_eq_lp_a1(data)                                          ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_lp_get_eq_lp_h0(data)                                          (0x0000FFFF&(data))

#define  AUDIO_EQ_bp1_1                                                         0x18006720
#define  AUDIO_EQ_bp1_1_reg_addr                                                 "0xB8006720"
#define  AUDIO_EQ_bp1_1_reg                                                      0xB8006720
#define  AUDIO_EQ_bp1_1_inst_addr                                                "0x0105"
#define  set_AUDIO_EQ_bp1_1_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp1_1_reg)=data)
#define  get_AUDIO_EQ_bp1_1_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp1_1_reg))
#define  AUDIO_EQ_bp1_1_eq_bp1_a1_shift                                          (16)
#define  AUDIO_EQ_bp1_1_eq_bp1_a2_shift                                          (0)
#define  AUDIO_EQ_bp1_1_eq_bp1_a1_mask                                           (0xFFFF0000)
#define  AUDIO_EQ_bp1_1_eq_bp1_a2_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp1_1_eq_bp1_a1(data)                                          (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_bp1_1_eq_bp1_a2(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp1_1_get_eq_bp1_a1(data)                                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_bp1_1_get_eq_bp1_a2(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp1_2                                                         0x18006724
#define  AUDIO_EQ_bp1_2_reg_addr                                                 "0xB8006724"
#define  AUDIO_EQ_bp1_2_reg                                                      0xB8006724
#define  AUDIO_EQ_bp1_2_inst_addr                                                "0x0106"
#define  set_AUDIO_EQ_bp1_2_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp1_2_reg)=data)
#define  get_AUDIO_EQ_bp1_2_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp1_2_reg))
#define  AUDIO_EQ_bp1_2_eq_bp1_h0_shift                                          (0)
#define  AUDIO_EQ_bp1_2_eq_bp1_h0_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp1_2_eq_bp1_h0(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp1_2_get_eq_bp1_h0(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp2_1                                                         0x18006728
#define  AUDIO_EQ_bp2_1_reg_addr                                                 "0xB8006728"
#define  AUDIO_EQ_bp2_1_reg                                                      0xB8006728
#define  AUDIO_EQ_bp2_1_inst_addr                                                "0x0107"
#define  set_AUDIO_EQ_bp2_1_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp2_1_reg)=data)
#define  get_AUDIO_EQ_bp2_1_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp2_1_reg))
#define  AUDIO_EQ_bp2_1_eq_bp2_a1_shift                                          (16)
#define  AUDIO_EQ_bp2_1_eq_bp2_a2_shift                                          (0)
#define  AUDIO_EQ_bp2_1_eq_bp2_a1_mask                                           (0xFFFF0000)
#define  AUDIO_EQ_bp2_1_eq_bp2_a2_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp2_1_eq_bp2_a1(data)                                          (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_bp2_1_eq_bp2_a2(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp2_1_get_eq_bp2_a1(data)                                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_bp2_1_get_eq_bp2_a2(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp2_2                                                         0x1800672C
#define  AUDIO_EQ_bp2_2_reg_addr                                                 "0xB800672C"
#define  AUDIO_EQ_bp2_2_reg                                                      0xB800672C
#define  AUDIO_EQ_bp2_2_inst_addr                                                "0x0108"
#define  set_AUDIO_EQ_bp2_2_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp2_2_reg)=data)
#define  get_AUDIO_EQ_bp2_2_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp2_2_reg))
#define  AUDIO_EQ_bp2_2_eq_bp2_h0_shift                                          (0)
#define  AUDIO_EQ_bp2_2_eq_bp2_h0_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp2_2_eq_bp2_h0(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp2_2_get_eq_bp2_h0(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp3_1                                                         0x18006730
#define  AUDIO_EQ_bp3_1_reg_addr                                                 "0xB8006730"
#define  AUDIO_EQ_bp3_1_reg                                                      0xB8006730
#define  AUDIO_EQ_bp3_1_inst_addr                                                "0x0109"
#define  set_AUDIO_EQ_bp3_1_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp3_1_reg)=data)
#define  get_AUDIO_EQ_bp3_1_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp3_1_reg))
#define  AUDIO_EQ_bp3_1_eq_bp3_a1_shift                                          (16)
#define  AUDIO_EQ_bp3_1_eq_bp3_a2_shift                                          (0)
#define  AUDIO_EQ_bp3_1_eq_bp3_a1_mask                                           (0xFFFF0000)
#define  AUDIO_EQ_bp3_1_eq_bp3_a2_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp3_1_eq_bp3_a1(data)                                          (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_bp3_1_eq_bp3_a2(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp3_1_get_eq_bp3_a1(data)                                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_bp3_1_get_eq_bp3_a2(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp3_2                                                         0x18006734
#define  AUDIO_EQ_bp3_2_reg_addr                                                 "0xB8006734"
#define  AUDIO_EQ_bp3_2_reg                                                      0xB8006734
#define  AUDIO_EQ_bp3_2_inst_addr                                                "0x010A"
#define  set_AUDIO_EQ_bp3_2_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp3_2_reg)=data)
#define  get_AUDIO_EQ_bp3_2_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp3_2_reg))
#define  AUDIO_EQ_bp3_2_eq_bp3_h0_shift                                          (0)
#define  AUDIO_EQ_bp3_2_eq_bp3_h0_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp3_2_eq_bp3_h0(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp3_2_get_eq_bp3_h0(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp4_1                                                         0x18006738
#define  AUDIO_EQ_bp4_1_reg_addr                                                 "0xB8006738"
#define  AUDIO_EQ_bp4_1_reg                                                      0xB8006738
#define  AUDIO_EQ_bp4_1_inst_addr                                                "0x010B"
#define  set_AUDIO_EQ_bp4_1_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp4_1_reg)=data)
#define  get_AUDIO_EQ_bp4_1_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp4_1_reg))
#define  AUDIO_EQ_bp4_1_eq_bp4_a1_shift                                          (16)
#define  AUDIO_EQ_bp4_1_eq_bp4_a2_shift                                          (0)
#define  AUDIO_EQ_bp4_1_eq_bp4_a1_mask                                           (0xFFFF0000)
#define  AUDIO_EQ_bp4_1_eq_bp4_a2_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp4_1_eq_bp4_a1(data)                                          (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_bp4_1_eq_bp4_a2(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp4_1_get_eq_bp4_a1(data)                                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_bp4_1_get_eq_bp4_a2(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp4_2                                                         0x1800673C
#define  AUDIO_EQ_bp4_2_reg_addr                                                 "0xB800673C"
#define  AUDIO_EQ_bp4_2_reg                                                      0xB800673C
#define  AUDIO_EQ_bp4_2_inst_addr                                                "0x010C"
#define  set_AUDIO_EQ_bp4_2_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp4_2_reg)=data)
#define  get_AUDIO_EQ_bp4_2_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp4_2_reg))
#define  AUDIO_EQ_bp4_2_eq_bp4_h0_shift                                          (0)
#define  AUDIO_EQ_bp4_2_eq_bp4_h0_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp4_2_eq_bp4_h0(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp4_2_get_eq_bp4_h0(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp5_1                                                         0x18006740
#define  AUDIO_EQ_bp5_1_reg_addr                                                 "0xB8006740"
#define  AUDIO_EQ_bp5_1_reg                                                      0xB8006740
#define  AUDIO_EQ_bp5_1_inst_addr                                                "0x010D"
#define  set_AUDIO_EQ_bp5_1_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp5_1_reg)=data)
#define  get_AUDIO_EQ_bp5_1_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp5_1_reg))
#define  AUDIO_EQ_bp5_1_eq_bp5_a1_shift                                          (16)
#define  AUDIO_EQ_bp5_1_eq_bp5_a2_shift                                          (0)
#define  AUDIO_EQ_bp5_1_eq_bp5_a1_mask                                           (0xFFFF0000)
#define  AUDIO_EQ_bp5_1_eq_bp5_a2_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp5_1_eq_bp5_a1(data)                                          (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_bp5_1_eq_bp5_a2(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp5_1_get_eq_bp5_a1(data)                                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_bp5_1_get_eq_bp5_a2(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp5_2                                                         0x18006744
#define  AUDIO_EQ_bp5_2_reg_addr                                                 "0xB8006744"
#define  AUDIO_EQ_bp5_2_reg                                                      0xB8006744
#define  AUDIO_EQ_bp5_2_inst_addr                                                "0x010E"
#define  set_AUDIO_EQ_bp5_2_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp5_2_reg)=data)
#define  get_AUDIO_EQ_bp5_2_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp5_2_reg))
#define  AUDIO_EQ_bp5_2_eq_bp5_h0_shift                                          (0)
#define  AUDIO_EQ_bp5_2_eq_bp5_h0_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp5_2_eq_bp5_h0(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp5_2_get_eq_bp5_h0(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp6_1                                                         0x18006748
#define  AUDIO_EQ_bp6_1_reg_addr                                                 "0xB8006748"
#define  AUDIO_EQ_bp6_1_reg                                                      0xB8006748
#define  AUDIO_EQ_bp6_1_inst_addr                                                "0x010F"
#define  set_AUDIO_EQ_bp6_1_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp6_1_reg)=data)
#define  get_AUDIO_EQ_bp6_1_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp6_1_reg))
#define  AUDIO_EQ_bp6_1_eq_bp6_a1_shift                                          (16)
#define  AUDIO_EQ_bp6_1_eq_bp6_a2_shift                                          (0)
#define  AUDIO_EQ_bp6_1_eq_bp6_a1_mask                                           (0xFFFF0000)
#define  AUDIO_EQ_bp6_1_eq_bp6_a2_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp6_1_eq_bp6_a1(data)                                          (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_bp6_1_eq_bp6_a2(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp6_1_get_eq_bp6_a1(data)                                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_bp6_1_get_eq_bp6_a2(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp6_2                                                         0x1800674C
#define  AUDIO_EQ_bp6_2_reg_addr                                                 "0xB800674C"
#define  AUDIO_EQ_bp6_2_reg                                                      0xB800674C
#define  AUDIO_EQ_bp6_2_inst_addr                                                "0x0110"
#define  set_AUDIO_EQ_bp6_2_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp6_2_reg)=data)
#define  get_AUDIO_EQ_bp6_2_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp6_2_reg))
#define  AUDIO_EQ_bp6_2_eq_bp6_h0_shift                                          (0)
#define  AUDIO_EQ_bp6_2_eq_bp6_h0_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp6_2_eq_bp6_h0(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp6_2_get_eq_bp6_h0(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp7_1                                                         0x18006750
#define  AUDIO_EQ_bp7_1_reg_addr                                                 "0xB8006750"
#define  AUDIO_EQ_bp7_1_reg                                                      0xB8006750
#define  AUDIO_EQ_bp7_1_inst_addr                                                "0x0111"
#define  set_AUDIO_EQ_bp7_1_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp7_1_reg)=data)
#define  get_AUDIO_EQ_bp7_1_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp7_1_reg))
#define  AUDIO_EQ_bp7_1_eq_bp7_a1_shift                                          (16)
#define  AUDIO_EQ_bp7_1_eq_bp7_a2_shift                                          (0)
#define  AUDIO_EQ_bp7_1_eq_bp7_a1_mask                                           (0xFFFF0000)
#define  AUDIO_EQ_bp7_1_eq_bp7_a2_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp7_1_eq_bp7_a1(data)                                          (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_bp7_1_eq_bp7_a2(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp7_1_get_eq_bp7_a1(data)                                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_bp7_1_get_eq_bp7_a2(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp7_2                                                         0x18006754
#define  AUDIO_EQ_bp7_2_reg_addr                                                 "0xB8006754"
#define  AUDIO_EQ_bp7_2_reg                                                      0xB8006754
#define  AUDIO_EQ_bp7_2_inst_addr                                                "0x0112"
#define  set_AUDIO_EQ_bp7_2_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp7_2_reg)=data)
#define  get_AUDIO_EQ_bp7_2_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp7_2_reg))
#define  AUDIO_EQ_bp7_2_eq_bp7_h0_shift                                          (0)
#define  AUDIO_EQ_bp7_2_eq_bp7_h0_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp7_2_eq_bp7_h0(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp7_2_get_eq_bp7_h0(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp8_1                                                         0x18006758
#define  AUDIO_EQ_bp8_1_reg_addr                                                 "0xB8006758"
#define  AUDIO_EQ_bp8_1_reg                                                      0xB8006758
#define  AUDIO_EQ_bp8_1_inst_addr                                                "0x0113"
#define  set_AUDIO_EQ_bp8_1_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp8_1_reg)=data)
#define  get_AUDIO_EQ_bp8_1_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp8_1_reg))
#define  AUDIO_EQ_bp8_1_eq_bp8_a1_shift                                          (16)
#define  AUDIO_EQ_bp8_1_eq_bp8_a2_shift                                          (0)
#define  AUDIO_EQ_bp8_1_eq_bp8_a1_mask                                           (0xFFFF0000)
#define  AUDIO_EQ_bp8_1_eq_bp8_a2_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp8_1_eq_bp8_a1(data)                                          (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_bp8_1_eq_bp8_a2(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp8_1_get_eq_bp8_a1(data)                                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_bp8_1_get_eq_bp8_a2(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp8_2                                                         0x1800675C
#define  AUDIO_EQ_bp8_2_reg_addr                                                 "0xB800675C"
#define  AUDIO_EQ_bp8_2_reg                                                      0xB800675C
#define  AUDIO_EQ_bp8_2_inst_addr                                                "0x0114"
#define  set_AUDIO_EQ_bp8_2_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp8_2_reg)=data)
#define  get_AUDIO_EQ_bp8_2_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp8_2_reg))
#define  AUDIO_EQ_bp8_2_eq_bp8_h0_shift                                          (0)
#define  AUDIO_EQ_bp8_2_eq_bp8_h0_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp8_2_eq_bp8_h0(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp8_2_get_eq_bp8_h0(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp9_1                                                         0x18006760
#define  AUDIO_EQ_bp9_1_reg_addr                                                 "0xB8006760"
#define  AUDIO_EQ_bp9_1_reg                                                      0xB8006760
#define  AUDIO_EQ_bp9_1_inst_addr                                                "0x0115"
#define  set_AUDIO_EQ_bp9_1_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp9_1_reg)=data)
#define  get_AUDIO_EQ_bp9_1_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp9_1_reg))
#define  AUDIO_EQ_bp9_1_eq_bp9_a1_shift                                          (16)
#define  AUDIO_EQ_bp9_1_eq_bp9_a2_shift                                          (0)
#define  AUDIO_EQ_bp9_1_eq_bp9_a1_mask                                           (0xFFFF0000)
#define  AUDIO_EQ_bp9_1_eq_bp9_a2_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp9_1_eq_bp9_a1(data)                                          (0xFFFF0000&((data)<<16))
#define  AUDIO_EQ_bp9_1_eq_bp9_a2(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp9_1_get_eq_bp9_a1(data)                                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_EQ_bp9_1_get_eq_bp9_a2(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_bp9_2                                                         0x18006764
#define  AUDIO_EQ_bp9_2_reg_addr                                                 "0xB8006764"
#define  AUDIO_EQ_bp9_2_reg                                                      0xB8006764
#define  AUDIO_EQ_bp9_2_inst_addr                                                "0x0116"
#define  set_AUDIO_EQ_bp9_2_reg(data)                                            (*((volatile unsigned int*)AUDIO_EQ_bp9_2_reg)=data)
#define  get_AUDIO_EQ_bp9_2_reg                                                  (*((volatile unsigned int*)AUDIO_EQ_bp9_2_reg))
#define  AUDIO_EQ_bp9_2_eq_bp9_h0_shift                                          (0)
#define  AUDIO_EQ_bp9_2_eq_bp9_h0_mask                                           (0x0000FFFF)
#define  AUDIO_EQ_bp9_2_eq_bp9_h0(data)                                          (0x0000FFFF&(data))
#define  AUDIO_EQ_bp9_2_get_eq_bp9_h0(data)                                      (0x0000FFFF&(data))

#define  AUDIO_EQ_Control_Register                                              0x18006768
#define  AUDIO_EQ_Control_Register_reg_addr                                      "0xB8006768"
#define  AUDIO_EQ_Control_Register_reg                                           0xB8006768
#define  AUDIO_EQ_Control_Register_inst_addr                                     "0x0117"
#define  set_AUDIO_EQ_Control_Register_reg(data)                                 (*((volatile unsigned int*)AUDIO_EQ_Control_Register_reg)=data)
#define  get_AUDIO_EQ_Control_Register_reg                                       (*((volatile unsigned int*)AUDIO_EQ_Control_Register_reg))
#define  AUDIO_EQ_Control_Register_eq_band9_enable_shift                         (10)
#define  AUDIO_EQ_Control_Register_eq_band8_enable_shift                         (9)
#define  AUDIO_EQ_Control_Register_eq_band7_enable_shift                         (8)
#define  AUDIO_EQ_Control_Register_eq_band6_enable_shift                         (7)
#define  AUDIO_EQ_Control_Register_eq_band5_enable_shift                         (6)
#define  AUDIO_EQ_Control_Register_eq_band4_enable_shift                         (5)
#define  AUDIO_EQ_Control_Register_eq_band3_enable_shift                         (4)
#define  AUDIO_EQ_Control_Register_eq_band2_enable_shift                         (3)
#define  AUDIO_EQ_Control_Register_eq_band1_enable_shift                         (2)
#define  AUDIO_EQ_Control_Register_eq_lp_enable_shift                            (1)
#define  AUDIO_EQ_Control_Register_eq_hp_enable_shift                            (0)
#define  AUDIO_EQ_Control_Register_eq_band9_enable_mask                          (0x00000400)
#define  AUDIO_EQ_Control_Register_eq_band8_enable_mask                          (0x00000200)
#define  AUDIO_EQ_Control_Register_eq_band7_enable_mask                          (0x00000100)
#define  AUDIO_EQ_Control_Register_eq_band6_enable_mask                          (0x00000080)
#define  AUDIO_EQ_Control_Register_eq_band5_enable_mask                          (0x00000040)
#define  AUDIO_EQ_Control_Register_eq_band4_enable_mask                          (0x00000020)
#define  AUDIO_EQ_Control_Register_eq_band3_enable_mask                          (0x00000010)
#define  AUDIO_EQ_Control_Register_eq_band2_enable_mask                          (0x00000008)
#define  AUDIO_EQ_Control_Register_eq_band1_enable_mask                          (0x00000004)
#define  AUDIO_EQ_Control_Register_eq_lp_enable_mask                             (0x00000002)
#define  AUDIO_EQ_Control_Register_eq_hp_enable_mask                             (0x00000001)
#define  AUDIO_EQ_Control_Register_eq_band9_enable(data)                         (0x00000400&((data)<<10))
#define  AUDIO_EQ_Control_Register_eq_band8_enable(data)                         (0x00000200&((data)<<9))
#define  AUDIO_EQ_Control_Register_eq_band7_enable(data)                         (0x00000100&((data)<<8))
#define  AUDIO_EQ_Control_Register_eq_band6_enable(data)                         (0x00000080&((data)<<7))
#define  AUDIO_EQ_Control_Register_eq_band5_enable(data)                         (0x00000040&((data)<<6))
#define  AUDIO_EQ_Control_Register_eq_band4_enable(data)                         (0x00000020&((data)<<5))
#define  AUDIO_EQ_Control_Register_eq_band3_enable(data)                         (0x00000010&((data)<<4))
#define  AUDIO_EQ_Control_Register_eq_band2_enable(data)                         (0x00000008&((data)<<3))
#define  AUDIO_EQ_Control_Register_eq_band1_enable(data)                         (0x00000004&((data)<<2))
#define  AUDIO_EQ_Control_Register_eq_lp_enable(data)                            (0x00000002&((data)<<1))
#define  AUDIO_EQ_Control_Register_eq_hp_enable(data)                            (0x00000001&(data))
#define  AUDIO_EQ_Control_Register_get_eq_band9_enable(data)                     ((0x00000400&(data))>>10)
#define  AUDIO_EQ_Control_Register_get_eq_band8_enable(data)                     ((0x00000200&(data))>>9)
#define  AUDIO_EQ_Control_Register_get_eq_band7_enable(data)                     ((0x00000100&(data))>>8)
#define  AUDIO_EQ_Control_Register_get_eq_band6_enable(data)                     ((0x00000080&(data))>>7)
#define  AUDIO_EQ_Control_Register_get_eq_band5_enable(data)                     ((0x00000040&(data))>>6)
#define  AUDIO_EQ_Control_Register_get_eq_band4_enable(data)                     ((0x00000020&(data))>>5)
#define  AUDIO_EQ_Control_Register_get_eq_band3_enable(data)                     ((0x00000010&(data))>>4)
#define  AUDIO_EQ_Control_Register_get_eq_band2_enable(data)                     ((0x00000008&(data))>>3)
#define  AUDIO_EQ_Control_Register_get_eq_band1_enable(data)                     ((0x00000004&(data))>>2)
#define  AUDIO_EQ_Control_Register_get_eq_lp_enable(data)                        ((0x00000002&(data))>>1)
#define  AUDIO_EQ_Control_Register_get_eq_hp_enable(data)                        (0x00000001&(data))

#define  AUDIO_EQ_bypass_Control_Register_1                                     0x1800684C
#define  AUDIO_EQ_bypass_Control_Register_1_reg_addr                             "0xB800684C"
#define  AUDIO_EQ_bypass_Control_Register_1_reg                                  0xB800684C
#define  AUDIO_EQ_bypass_Control_Register_1_inst_addr                            "0x0118"
#define  set_AUDIO_EQ_bypass_Control_Register_1_reg(data)                        (*((volatile unsigned int*)AUDIO_EQ_bypass_Control_Register_1_reg)=data)
#define  get_AUDIO_EQ_bypass_Control_Register_1_reg                              (*((volatile unsigned int*)AUDIO_EQ_bypass_Control_Register_1_reg))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_change_flag_shift                (25)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_time_out_flag_r_shift            (24)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_time_out_flag_l_shift            (23)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_detect_win_shift                 (13)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_wait_ctrl_shift                  (9)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_cross_compare_ctrl_shift         (4)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_zc_cross_mux_shift               (3)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_eq_force_zero_shift              (2)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_bypass_protect_en_shift          (1)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_eq_bypass_en_shift               (0)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_change_flag_mask                 (0x02000000)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_time_out_flag_r_mask             (0x01000000)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_time_out_flag_l_mask             (0x00800000)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_detect_win_mask                  (0x007FE000)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_wait_ctrl_mask                   (0x00001E00)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_cross_compare_ctrl_mask          (0x00000030)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_zc_cross_mux_mask                (0x00000008)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_eq_force_zero_mask               (0x00000004)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_bypass_protect_en_mask           (0x00000002)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_eq_bypass_en_mask                (0x00000001)
#define  AUDIO_EQ_bypass_Control_Register_1_reg_change_flag(data)                (0x02000000&((data)<<25))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_time_out_flag_r(data)            (0x01000000&((data)<<24))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_time_out_flag_l(data)            (0x00800000&((data)<<23))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_detect_win(data)                 (0x007FE000&((data)<<13))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_wait_ctrl(data)                  (0x00001E00&((data)<<9))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_cross_compare_ctrl(data)         (0x00000030&((data)<<4))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_zc_cross_mux(data)               (0x00000008&((data)<<3))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_eq_force_zero(data)              (0x00000004&((data)<<2))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_bypass_protect_en(data)          (0x00000002&((data)<<1))
#define  AUDIO_EQ_bypass_Control_Register_1_reg_eq_bypass_en(data)               (0x00000001&(data))
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_change_flag(data)            ((0x02000000&(data))>>25)
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_time_out_flag_r(data)        ((0x01000000&(data))>>24)
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_time_out_flag_l(data)        ((0x00800000&(data))>>23)
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_detect_win(data)             ((0x007FE000&(data))>>13)
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_wait_ctrl(data)              ((0x00001E00&(data))>>9)
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_cross_compare_ctrl(data)     ((0x00000030&(data))>>4)
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_zc_cross_mux(data)           ((0x00000008&(data))>>3)
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_eq_force_zero(data)          ((0x00000004&(data))>>2)
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_bypass_protect_en(data)      ((0x00000002&(data))>>1)
#define  AUDIO_EQ_bypass_Control_Register_1_get_reg_eq_bypass_en(data)           (0x00000001&(data))

#define  AUDIO_EQ_bypass_Control_Register_2                                     0x18006850
#define  AUDIO_EQ_bypass_Control_Register_2_reg_addr                             "0xB8006850"
#define  AUDIO_EQ_bypass_Control_Register_2_reg                                  0xB8006850
#define  AUDIO_EQ_bypass_Control_Register_2_inst_addr                            "0x0119"
#define  set_AUDIO_EQ_bypass_Control_Register_2_reg(data)                        (*((volatile unsigned int*)AUDIO_EQ_bypass_Control_Register_2_reg)=data)
#define  get_AUDIO_EQ_bypass_Control_Register_2_reg                              (*((volatile unsigned int*)AUDIO_EQ_bypass_Control_Register_2_reg))
#define  AUDIO_EQ_bypass_Control_Register_2_reg_eq_path_threshold_shift          (0)
#define  AUDIO_EQ_bypass_Control_Register_2_reg_eq_path_threshold_mask           (0x00007FFF)
#define  AUDIO_EQ_bypass_Control_Register_2_reg_eq_path_threshold(data)          (0x00007FFF&(data))
#define  AUDIO_EQ_bypass_Control_Register_2_get_reg_eq_path_threshold(data)      (0x00007FFF&(data))

#define  AUDIO_EQ_Status_Register                                               0x1800676C
#define  AUDIO_EQ_Status_Register_reg_addr                                       "0xB800676C"
#define  AUDIO_EQ_Status_Register_reg                                            0xB800676C
#define  AUDIO_EQ_Status_Register_inst_addr                                      "0x011A"
#define  set_AUDIO_EQ_Status_Register_reg(data)                                  (*((volatile unsigned int*)AUDIO_EQ_Status_Register_reg)=data)
#define  get_AUDIO_EQ_Status_Register_reg                                        (*((volatile unsigned int*)AUDIO_EQ_Status_Register_reg))
#define  AUDIO_EQ_Status_Register_eq_band9_of_shift                              (10)
#define  AUDIO_EQ_Status_Register_eq_band8_of_shift                              (9)
#define  AUDIO_EQ_Status_Register_eq_band7_of_shift                              (8)
#define  AUDIO_EQ_Status_Register_eq_band6_of_shift                              (7)
#define  AUDIO_EQ_Status_Register_eq_band5_of_shift                              (6)
#define  AUDIO_EQ_Status_Register_eq_band4_of_shift                              (5)
#define  AUDIO_EQ_Status_Register_eq_band3_of_shift                              (4)
#define  AUDIO_EQ_Status_Register_eq_band2_of_shift                              (3)
#define  AUDIO_EQ_Status_Register_eq_band1_of_shift                              (2)
#define  AUDIO_EQ_Status_Register_eq_lp_of_shift                                 (1)
#define  AUDIO_EQ_Status_Register_eq_hp_of_shift                                 (0)
#define  AUDIO_EQ_Status_Register_eq_band9_of_mask                               (0x00000400)
#define  AUDIO_EQ_Status_Register_eq_band8_of_mask                               (0x00000200)
#define  AUDIO_EQ_Status_Register_eq_band7_of_mask                               (0x00000100)
#define  AUDIO_EQ_Status_Register_eq_band6_of_mask                               (0x00000080)
#define  AUDIO_EQ_Status_Register_eq_band5_of_mask                               (0x00000040)
#define  AUDIO_EQ_Status_Register_eq_band4_of_mask                               (0x00000020)
#define  AUDIO_EQ_Status_Register_eq_band3_of_mask                               (0x00000010)
#define  AUDIO_EQ_Status_Register_eq_band2_of_mask                               (0x00000008)
#define  AUDIO_EQ_Status_Register_eq_band1_of_mask                               (0x00000004)
#define  AUDIO_EQ_Status_Register_eq_lp_of_mask                                  (0x00000002)
#define  AUDIO_EQ_Status_Register_eq_hp_of_mask                                  (0x00000001)
#define  AUDIO_EQ_Status_Register_eq_band9_of(data)                              (0x00000400&((data)<<10))
#define  AUDIO_EQ_Status_Register_eq_band8_of(data)                              (0x00000200&((data)<<9))
#define  AUDIO_EQ_Status_Register_eq_band7_of(data)                              (0x00000100&((data)<<8))
#define  AUDIO_EQ_Status_Register_eq_band6_of(data)                              (0x00000080&((data)<<7))
#define  AUDIO_EQ_Status_Register_eq_band5_of(data)                              (0x00000040&((data)<<6))
#define  AUDIO_EQ_Status_Register_eq_band4_of(data)                              (0x00000020&((data)<<5))
#define  AUDIO_EQ_Status_Register_eq_band3_of(data)                              (0x00000010&((data)<<4))
#define  AUDIO_EQ_Status_Register_eq_band2_of(data)                              (0x00000008&((data)<<3))
#define  AUDIO_EQ_Status_Register_eq_band1_of(data)                              (0x00000004&((data)<<2))
#define  AUDIO_EQ_Status_Register_eq_lp_of(data)                                 (0x00000002&((data)<<1))
#define  AUDIO_EQ_Status_Register_eq_hp_of(data)                                 (0x00000001&(data))
#define  AUDIO_EQ_Status_Register_get_eq_band9_of(data)                          ((0x00000400&(data))>>10)
#define  AUDIO_EQ_Status_Register_get_eq_band8_of(data)                          ((0x00000200&(data))>>9)
#define  AUDIO_EQ_Status_Register_get_eq_band7_of(data)                          ((0x00000100&(data))>>8)
#define  AUDIO_EQ_Status_Register_get_eq_band6_of(data)                          ((0x00000080&(data))>>7)
#define  AUDIO_EQ_Status_Register_get_eq_band5_of(data)                          ((0x00000040&(data))>>6)
#define  AUDIO_EQ_Status_Register_get_eq_band4_of(data)                          ((0x00000020&(data))>>5)
#define  AUDIO_EQ_Status_Register_get_eq_band3_of(data)                          ((0x00000010&(data))>>4)
#define  AUDIO_EQ_Status_Register_get_eq_band2_of(data)                          ((0x00000008&(data))>>3)
#define  AUDIO_EQ_Status_Register_get_eq_band1_of(data)                          ((0x00000004&(data))>>2)
#define  AUDIO_EQ_Status_Register_get_eq_lp_of(data)                             ((0x00000002&(data))>>1)
#define  AUDIO_EQ_Status_Register_get_eq_hp_of(data)                             (0x00000001&(data))

#define  AUDIO_LR_Loud_lp                                                       0x18006770
#define  AUDIO_LR_Loud_lp_reg_addr                                               "0xB8006770"
#define  AUDIO_LR_Loud_lp_reg                                                    0xB8006770
#define  AUDIO_LR_Loud_lp_inst_addr                                              "0x011B"
#define  set_AUDIO_LR_Loud_lp_reg(data)                                          (*((volatile unsigned int*)AUDIO_LR_Loud_lp_reg)=data)
#define  get_AUDIO_LR_Loud_lp_reg                                                (*((volatile unsigned int*)AUDIO_LR_Loud_lp_reg))
#define  AUDIO_LR_Loud_lp_lr_loud_lp0_a1_shift                                   (16)
#define  AUDIO_LR_Loud_lp_lr_loud_lp0_h0_shift                                   (0)
#define  AUDIO_LR_Loud_lp_lr_loud_lp0_a1_mask                                    (0xFFFF0000)
#define  AUDIO_LR_Loud_lp_lr_loud_lp0_h0_mask                                    (0x0000FFFF)
#define  AUDIO_LR_Loud_lp_lr_loud_lp0_a1(data)                                   (0xFFFF0000&((data)<<16))
#define  AUDIO_LR_Loud_lp_lr_loud_lp0_h0(data)                                   (0x0000FFFF&(data))
#define  AUDIO_LR_Loud_lp_get_lr_loud_lp0_a1(data)                               ((0xFFFF0000&(data))>>16)
#define  AUDIO_LR_Loud_lp_get_lr_loud_lp0_h0(data)                               (0x0000FFFF&(data))

#define  AUDIO_LR_Loud_bp1_1                                                    0x18006774
#define  AUDIO_LR_Loud_bp1_1_reg_addr                                            "0xB8006774"
#define  AUDIO_LR_Loud_bp1_1_reg                                                 0xB8006774
#define  AUDIO_LR_Loud_bp1_1_inst_addr                                           "0x011C"
#define  set_AUDIO_LR_Loud_bp1_1_reg(data)                                       (*((volatile unsigned int*)AUDIO_LR_Loud_bp1_1_reg)=data)
#define  get_AUDIO_LR_Loud_bp1_1_reg                                             (*((volatile unsigned int*)AUDIO_LR_Loud_bp1_1_reg))
#define  AUDIO_LR_Loud_bp1_1_lr_loud_bp1_a1_shift                                (16)
#define  AUDIO_LR_Loud_bp1_1_lr_loud_bp1_a2_shift                                (0)
#define  AUDIO_LR_Loud_bp1_1_lr_loud_bp1_a1_mask                                 (0xFFFF0000)
#define  AUDIO_LR_Loud_bp1_1_lr_loud_bp1_a2_mask                                 (0x0000FFFF)
#define  AUDIO_LR_Loud_bp1_1_lr_loud_bp1_a1(data)                                (0xFFFF0000&((data)<<16))
#define  AUDIO_LR_Loud_bp1_1_lr_loud_bp1_a2(data)                                (0x0000FFFF&(data))
#define  AUDIO_LR_Loud_bp1_1_get_lr_loud_bp1_a1(data)                            ((0xFFFF0000&(data))>>16)
#define  AUDIO_LR_Loud_bp1_1_get_lr_loud_bp1_a2(data)                            (0x0000FFFF&(data))

#define  AUDIO_LR_Loud_bp1_2                                                    0x18006778
#define  AUDIO_LR_Loud_bp1_2_reg_addr                                            "0xB8006778"
#define  AUDIO_LR_Loud_bp1_2_reg                                                 0xB8006778
#define  AUDIO_LR_Loud_bp1_2_inst_addr                                           "0x011D"
#define  set_AUDIO_LR_Loud_bp1_2_reg(data)                                       (*((volatile unsigned int*)AUDIO_LR_Loud_bp1_2_reg)=data)
#define  get_AUDIO_LR_Loud_bp1_2_reg                                             (*((volatile unsigned int*)AUDIO_LR_Loud_bp1_2_reg))
#define  AUDIO_LR_Loud_bp1_2_lr_loud_bp1_h0_shift                                (0)
#define  AUDIO_LR_Loud_bp1_2_lr_loud_bp1_h0_mask                                 (0x0000FFFF)
#define  AUDIO_LR_Loud_bp1_2_lr_loud_bp1_h0(data)                                (0x0000FFFF&(data))
#define  AUDIO_LR_Loud_bp1_2_get_lr_loud_bp1_h0(data)                            (0x0000FFFF&(data))

#define  AUDIO_LR_Loud_bp2_1                                                    0x1800677C
#define  AUDIO_LR_Loud_bp2_1_reg_addr                                            "0xB800677C"
#define  AUDIO_LR_Loud_bp2_1_reg                                                 0xB800677C
#define  AUDIO_LR_Loud_bp2_1_inst_addr                                           "0x011E"
#define  set_AUDIO_LR_Loud_bp2_1_reg(data)                                       (*((volatile unsigned int*)AUDIO_LR_Loud_bp2_1_reg)=data)
#define  get_AUDIO_LR_Loud_bp2_1_reg                                             (*((volatile unsigned int*)AUDIO_LR_Loud_bp2_1_reg))
#define  AUDIO_LR_Loud_bp2_1_lr_loud_bp2_a1_shift                                (16)
#define  AUDIO_LR_Loud_bp2_1_lr_loud_bp2_a2_shift                                (0)
#define  AUDIO_LR_Loud_bp2_1_lr_loud_bp2_a1_mask                                 (0xFFFF0000)
#define  AUDIO_LR_Loud_bp2_1_lr_loud_bp2_a2_mask                                 (0x0000FFFF)
#define  AUDIO_LR_Loud_bp2_1_lr_loud_bp2_a1(data)                                (0xFFFF0000&((data)<<16))
#define  AUDIO_LR_Loud_bp2_1_lr_loud_bp2_a2(data)                                (0x0000FFFF&(data))
#define  AUDIO_LR_Loud_bp2_1_get_lr_loud_bp2_a1(data)                            ((0xFFFF0000&(data))>>16)
#define  AUDIO_LR_Loud_bp2_1_get_lr_loud_bp2_a2(data)                            (0x0000FFFF&(data))

#define  AUDIO_LR_Loud_bp2_2                                                    0x18006780
#define  AUDIO_LR_Loud_bp2_2_reg_addr                                            "0xB8006780"
#define  AUDIO_LR_Loud_bp2_2_reg                                                 0xB8006780
#define  AUDIO_LR_Loud_bp2_2_inst_addr                                           "0x011F"
#define  set_AUDIO_LR_Loud_bp2_2_reg(data)                                       (*((volatile unsigned int*)AUDIO_LR_Loud_bp2_2_reg)=data)
#define  get_AUDIO_LR_Loud_bp2_2_reg                                             (*((volatile unsigned int*)AUDIO_LR_Loud_bp2_2_reg))
#define  AUDIO_LR_Loud_bp2_2_lr_loud_bp2_h0_shift                                (0)
#define  AUDIO_LR_Loud_bp2_2_lr_loud_bp2_h0_mask                                 (0x0000FFFF)
#define  AUDIO_LR_Loud_bp2_2_lr_loud_bp2_h0(data)                                (0x0000FFFF&(data))
#define  AUDIO_LR_Loud_bp2_2_get_lr_loud_bp2_h0(data)                            (0x0000FFFF&(data))

#define  AUDIO_CSW_Loud_lp                                                      0x18006784
#define  AUDIO_CSW_Loud_lp_reg_addr                                              "0xB8006784"
#define  AUDIO_CSW_Loud_lp_reg                                                   0xB8006784
#define  AUDIO_CSW_Loud_lp_inst_addr                                             "0x0120"
#define  set_AUDIO_CSW_Loud_lp_reg(data)                                         (*((volatile unsigned int*)AUDIO_CSW_Loud_lp_reg)=data)
#define  get_AUDIO_CSW_Loud_lp_reg                                               (*((volatile unsigned int*)AUDIO_CSW_Loud_lp_reg))
#define  AUDIO_CSW_Loud_lp_csw_loud_lp0_a1_shift                                 (16)
#define  AUDIO_CSW_Loud_lp_csw_loud_lp0_h0_shift                                 (0)
#define  AUDIO_CSW_Loud_lp_csw_loud_lp0_a1_mask                                  (0xFFFF0000)
#define  AUDIO_CSW_Loud_lp_csw_loud_lp0_h0_mask                                  (0x0000FFFF)
#define  AUDIO_CSW_Loud_lp_csw_loud_lp0_a1(data)                                 (0xFFFF0000&((data)<<16))
#define  AUDIO_CSW_Loud_lp_csw_loud_lp0_h0(data)                                 (0x0000FFFF&(data))
#define  AUDIO_CSW_Loud_lp_get_csw_loud_lp0_a1(data)                             ((0xFFFF0000&(data))>>16)
#define  AUDIO_CSW_Loud_lp_get_csw_loud_lp0_h0(data)                             (0x0000FFFF&(data))

#define  AUDIO_CSW_Loud_bp1_1                                                   0x18006788
#define  AUDIO_CSW_Loud_bp1_1_reg_addr                                           "0xB8006788"
#define  AUDIO_CSW_Loud_bp1_1_reg                                                0xB8006788
#define  AUDIO_CSW_Loud_bp1_1_inst_addr                                          "0x0121"
#define  set_AUDIO_CSW_Loud_bp1_1_reg(data)                                      (*((volatile unsigned int*)AUDIO_CSW_Loud_bp1_1_reg)=data)
#define  get_AUDIO_CSW_Loud_bp1_1_reg                                            (*((volatile unsigned int*)AUDIO_CSW_Loud_bp1_1_reg))
#define  AUDIO_CSW_Loud_bp1_1_csw_loud_bp1_a1_shift                              (16)
#define  AUDIO_CSW_Loud_bp1_1_csw_loud_bp1_a2_shift                              (0)
#define  AUDIO_CSW_Loud_bp1_1_csw_loud_bp1_a1_mask                               (0xFFFF0000)
#define  AUDIO_CSW_Loud_bp1_1_csw_loud_bp1_a2_mask                               (0x0000FFFF)
#define  AUDIO_CSW_Loud_bp1_1_csw_loud_bp1_a1(data)                              (0xFFFF0000&((data)<<16))
#define  AUDIO_CSW_Loud_bp1_1_csw_loud_bp1_a2(data)                              (0x0000FFFF&(data))
#define  AUDIO_CSW_Loud_bp1_1_get_csw_loud_bp1_a1(data)                          ((0xFFFF0000&(data))>>16)
#define  AUDIO_CSW_Loud_bp1_1_get_csw_loud_bp1_a2(data)                          (0x0000FFFF&(data))

#define  AUDIO_CSW_Loud_bp1_2                                                   0x1800678C
#define  AUDIO_CSW_Loud_bp1_2_reg_addr                                           "0xB800678C"
#define  AUDIO_CSW_Loud_bp1_2_reg                                                0xB800678C
#define  AUDIO_CSW_Loud_bp1_2_inst_addr                                          "0x0122"
#define  set_AUDIO_CSW_Loud_bp1_2_reg(data)                                      (*((volatile unsigned int*)AUDIO_CSW_Loud_bp1_2_reg)=data)
#define  get_AUDIO_CSW_Loud_bp1_2_reg                                            (*((volatile unsigned int*)AUDIO_CSW_Loud_bp1_2_reg))
#define  AUDIO_CSW_Loud_bp1_2_csw_loud_bp1_h0_shift                              (0)
#define  AUDIO_CSW_Loud_bp1_2_csw_loud_bp1_h0_mask                               (0x0000FFFF)
#define  AUDIO_CSW_Loud_bp1_2_csw_loud_bp1_h0(data)                              (0x0000FFFF&(data))
#define  AUDIO_CSW_Loud_bp1_2_get_csw_loud_bp1_h0(data)                          (0x0000FFFF&(data))

#define  AUDIO_CSW_Loud_bp2_1                                                   0x18006790
#define  AUDIO_CSW_Loud_bp2_1_reg_addr                                           "0xB8006790"
#define  AUDIO_CSW_Loud_bp2_1_reg                                                0xB8006790
#define  AUDIO_CSW_Loud_bp2_1_inst_addr                                          "0x0123"
#define  set_AUDIO_CSW_Loud_bp2_1_reg(data)                                      (*((volatile unsigned int*)AUDIO_CSW_Loud_bp2_1_reg)=data)
#define  get_AUDIO_CSW_Loud_bp2_1_reg                                            (*((volatile unsigned int*)AUDIO_CSW_Loud_bp2_1_reg))
#define  AUDIO_CSW_Loud_bp2_1_csw_loud_bp2_a1_shift                              (16)
#define  AUDIO_CSW_Loud_bp2_1_csw_loud_bp2_a2_shift                              (0)
#define  AUDIO_CSW_Loud_bp2_1_csw_loud_bp2_a1_mask                               (0xFFFF0000)
#define  AUDIO_CSW_Loud_bp2_1_csw_loud_bp2_a2_mask                               (0x0000FFFF)
#define  AUDIO_CSW_Loud_bp2_1_csw_loud_bp2_a1(data)                              (0xFFFF0000&((data)<<16))
#define  AUDIO_CSW_Loud_bp2_1_csw_loud_bp2_a2(data)                              (0x0000FFFF&(data))
#define  AUDIO_CSW_Loud_bp2_1_get_csw_loud_bp2_a1(data)                          ((0xFFFF0000&(data))>>16)
#define  AUDIO_CSW_Loud_bp2_1_get_csw_loud_bp2_a2(data)                          (0x0000FFFF&(data))

#define  AUDIO_CSW_Loud_bp2_2                                                   0x18006794
#define  AUDIO_CSW_Loud_bp2_2_reg_addr                                           "0xB8006794"
#define  AUDIO_CSW_Loud_bp2_2_reg                                                0xB8006794
#define  AUDIO_CSW_Loud_bp2_2_inst_addr                                          "0x0124"
#define  set_AUDIO_CSW_Loud_bp2_2_reg(data)                                      (*((volatile unsigned int*)AUDIO_CSW_Loud_bp2_2_reg)=data)
#define  get_AUDIO_CSW_Loud_bp2_2_reg                                            (*((volatile unsigned int*)AUDIO_CSW_Loud_bp2_2_reg))
#define  AUDIO_CSW_Loud_bp2_2_csw_loud_bp2_h0_shift                              (0)
#define  AUDIO_CSW_Loud_bp2_2_csw_loud_bp2_h0_mask                               (0x0000FFFF)
#define  AUDIO_CSW_Loud_bp2_2_csw_loud_bp2_h0(data)                              (0x0000FFFF&(data))
#define  AUDIO_CSW_Loud_bp2_2_get_csw_loud_bp2_h0(data)                          (0x0000FFFF&(data))

#define  AUDIO_LSRS_Loud_lp                                                     0x18006798
#define  AUDIO_LSRS_Loud_lp_reg_addr                                             "0xB8006798"
#define  AUDIO_LSRS_Loud_lp_reg                                                  0xB8006798
#define  AUDIO_LSRS_Loud_lp_inst_addr                                            "0x0125"
#define  set_AUDIO_LSRS_Loud_lp_reg(data)                                        (*((volatile unsigned int*)AUDIO_LSRS_Loud_lp_reg)=data)
#define  get_AUDIO_LSRS_Loud_lp_reg                                              (*((volatile unsigned int*)AUDIO_LSRS_Loud_lp_reg))
#define  AUDIO_LSRS_Loud_lp_lsrs_loud_lp0_a1_shift                               (16)
#define  AUDIO_LSRS_Loud_lp_lsrs_loud_lp0_h0_shift                               (0)
#define  AUDIO_LSRS_Loud_lp_lsrs_loud_lp0_a1_mask                                (0xFFFF0000)
#define  AUDIO_LSRS_Loud_lp_lsrs_loud_lp0_h0_mask                                (0x0000FFFF)
#define  AUDIO_LSRS_Loud_lp_lsrs_loud_lp0_a1(data)                               (0xFFFF0000&((data)<<16))
#define  AUDIO_LSRS_Loud_lp_lsrs_loud_lp0_h0(data)                               (0x0000FFFF&(data))
#define  AUDIO_LSRS_Loud_lp_get_lsrs_loud_lp0_a1(data)                           ((0xFFFF0000&(data))>>16)
#define  AUDIO_LSRS_Loud_lp_get_lsrs_loud_lp0_h0(data)                           (0x0000FFFF&(data))

#define  AUDIO_LSRS_Loud_bp1_1                                                  0x1800679C
#define  AUDIO_LSRS_Loud_bp1_1_reg_addr                                          "0xB800679C"
#define  AUDIO_LSRS_Loud_bp1_1_reg                                               0xB800679C
#define  AUDIO_LSRS_Loud_bp1_1_inst_addr                                         "0x0126"
#define  set_AUDIO_LSRS_Loud_bp1_1_reg(data)                                     (*((volatile unsigned int*)AUDIO_LSRS_Loud_bp1_1_reg)=data)
#define  get_AUDIO_LSRS_Loud_bp1_1_reg                                           (*((volatile unsigned int*)AUDIO_LSRS_Loud_bp1_1_reg))
#define  AUDIO_LSRS_Loud_bp1_1_lsrs_loud_bp1_a1_shift                            (16)
#define  AUDIO_LSRS_Loud_bp1_1_lsrs_loud_bp1_a2_shift                            (0)
#define  AUDIO_LSRS_Loud_bp1_1_lsrs_loud_bp1_a1_mask                             (0xFFFF0000)
#define  AUDIO_LSRS_Loud_bp1_1_lsrs_loud_bp1_a2_mask                             (0x0000FFFF)
#define  AUDIO_LSRS_Loud_bp1_1_lsrs_loud_bp1_a1(data)                            (0xFFFF0000&((data)<<16))
#define  AUDIO_LSRS_Loud_bp1_1_lsrs_loud_bp1_a2(data)                            (0x0000FFFF&(data))
#define  AUDIO_LSRS_Loud_bp1_1_get_lsrs_loud_bp1_a1(data)                        ((0xFFFF0000&(data))>>16)
#define  AUDIO_LSRS_Loud_bp1_1_get_lsrs_loud_bp1_a2(data)                        (0x0000FFFF&(data))

#define  AUDIO_LSRS_Loud_bp1_2                                                  0x180067A0
#define  AUDIO_LSRS_Loud_bp1_2_reg_addr                                          "0xB80067A0"
#define  AUDIO_LSRS_Loud_bp1_2_reg                                               0xB80067A0
#define  AUDIO_LSRS_Loud_bp1_2_inst_addr                                         "0x0127"
#define  set_AUDIO_LSRS_Loud_bp1_2_reg(data)                                     (*((volatile unsigned int*)AUDIO_LSRS_Loud_bp1_2_reg)=data)
#define  get_AUDIO_LSRS_Loud_bp1_2_reg                                           (*((volatile unsigned int*)AUDIO_LSRS_Loud_bp1_2_reg))
#define  AUDIO_LSRS_Loud_bp1_2_lsrs_loud_bp1_h0_shift                            (0)
#define  AUDIO_LSRS_Loud_bp1_2_lsrs_loud_bp1_h0_mask                             (0x0000FFFF)
#define  AUDIO_LSRS_Loud_bp1_2_lsrs_loud_bp1_h0(data)                            (0x0000FFFF&(data))
#define  AUDIO_LSRS_Loud_bp1_2_get_lsrs_loud_bp1_h0(data)                        (0x0000FFFF&(data))

#define  AUDIO_LSRS_Loud_bp2_1                                                  0x180067A4
#define  AUDIO_LSRS_Loud_bp2_1_reg_addr                                          "0xB80067A4"
#define  AUDIO_LSRS_Loud_bp2_1_reg                                               0xB80067A4
#define  AUDIO_LSRS_Loud_bp2_1_inst_addr                                         "0x0128"
#define  set_AUDIO_LSRS_Loud_bp2_1_reg(data)                                     (*((volatile unsigned int*)AUDIO_LSRS_Loud_bp2_1_reg)=data)
#define  get_AUDIO_LSRS_Loud_bp2_1_reg                                           (*((volatile unsigned int*)AUDIO_LSRS_Loud_bp2_1_reg))
#define  AUDIO_LSRS_Loud_bp2_1_lsrs_loud_bp2_a1_shift                            (16)
#define  AUDIO_LSRS_Loud_bp2_1_lsrs_loud_bp2_a2_shift                            (0)
#define  AUDIO_LSRS_Loud_bp2_1_lsrs_loud_bp2_a1_mask                             (0xFFFF0000)
#define  AUDIO_LSRS_Loud_bp2_1_lsrs_loud_bp2_a2_mask                             (0x0000FFFF)
#define  AUDIO_LSRS_Loud_bp2_1_lsrs_loud_bp2_a1(data)                            (0xFFFF0000&((data)<<16))
#define  AUDIO_LSRS_Loud_bp2_1_lsrs_loud_bp2_a2(data)                            (0x0000FFFF&(data))
#define  AUDIO_LSRS_Loud_bp2_1_get_lsrs_loud_bp2_a1(data)                        ((0xFFFF0000&(data))>>16)
#define  AUDIO_LSRS_Loud_bp2_1_get_lsrs_loud_bp2_a2(data)                        (0x0000FFFF&(data))

#define  AUDIO_LSRS_Loud_bp2_2                                                  0x180067A8
#define  AUDIO_LSRS_Loud_bp2_2_reg_addr                                          "0xB80067A8"
#define  AUDIO_LSRS_Loud_bp2_2_reg                                               0xB80067A8
#define  AUDIO_LSRS_Loud_bp2_2_inst_addr                                         "0x0129"
#define  set_AUDIO_LSRS_Loud_bp2_2_reg(data)                                     (*((volatile unsigned int*)AUDIO_LSRS_Loud_bp2_2_reg)=data)
#define  get_AUDIO_LSRS_Loud_bp2_2_reg                                           (*((volatile unsigned int*)AUDIO_LSRS_Loud_bp2_2_reg))
#define  AUDIO_LSRS_Loud_bp2_2_lsrs_loud_bp2_h0_shift                            (0)
#define  AUDIO_LSRS_Loud_bp2_2_lsrs_loud_bp2_h0_mask                             (0x0000FFFF)
#define  AUDIO_LSRS_Loud_bp2_2_lsrs_loud_bp2_h0(data)                            (0x0000FFFF&(data))
#define  AUDIO_LSRS_Loud_bp2_2_get_lsrs_loud_bp2_h0(data)                        (0x0000FFFF&(data))

#define  AUDIO_Loudness_Control_Register                                        0x180067AC
#define  AUDIO_Loudness_Control_Register_reg_addr                                "0xB80067AC"
#define  AUDIO_Loudness_Control_Register_reg                                     0xB80067AC
#define  AUDIO_Loudness_Control_Register_inst_addr                               "0x012A"
#define  set_AUDIO_Loudness_Control_Register_reg(data)                           (*((volatile unsigned int*)AUDIO_Loudness_Control_Register_reg)=data)
#define  get_AUDIO_Loudness_Control_Register_reg                                 (*((volatile unsigned int*)AUDIO_Loudness_Control_Register_reg))
#define  AUDIO_Loudness_Control_Register_ld_lpf_en_lsrs_shift                    (8)
#define  AUDIO_Loudness_Control_Register_ld_bpf1_en_lsrs_shift                   (7)
#define  AUDIO_Loudness_Control_Register_ld_bpf2_en_lsrs_shift                   (6)
#define  AUDIO_Loudness_Control_Register_ld_lpf_en_csw_shift                     (5)
#define  AUDIO_Loudness_Control_Register_ld_bpf1_en_csw_shift                    (4)
#define  AUDIO_Loudness_Control_Register_ld_bpf2_en_csw_shift                    (3)
#define  AUDIO_Loudness_Control_Register_ld_lpf_en_lr_shift                      (2)
#define  AUDIO_Loudness_Control_Register_ld_bpf1_en_lr_shift                     (1)
#define  AUDIO_Loudness_Control_Register_ld_bpf2_en_lr_shift                     (0)
#define  AUDIO_Loudness_Control_Register_ld_lpf_en_lsrs_mask                     (0x00000100)
#define  AUDIO_Loudness_Control_Register_ld_bpf1_en_lsrs_mask                    (0x00000080)
#define  AUDIO_Loudness_Control_Register_ld_bpf2_en_lsrs_mask                    (0x00000040)
#define  AUDIO_Loudness_Control_Register_ld_lpf_en_csw_mask                      (0x00000020)
#define  AUDIO_Loudness_Control_Register_ld_bpf1_en_csw_mask                     (0x00000010)
#define  AUDIO_Loudness_Control_Register_ld_bpf2_en_csw_mask                     (0x00000008)
#define  AUDIO_Loudness_Control_Register_ld_lpf_en_lr_mask                       (0x00000004)
#define  AUDIO_Loudness_Control_Register_ld_bpf1_en_lr_mask                      (0x00000002)
#define  AUDIO_Loudness_Control_Register_ld_bpf2_en_lr_mask                      (0x00000001)
#define  AUDIO_Loudness_Control_Register_ld_lpf_en_lsrs(data)                    (0x00000100&((data)<<8))
#define  AUDIO_Loudness_Control_Register_ld_bpf1_en_lsrs(data)                   (0x00000080&((data)<<7))
#define  AUDIO_Loudness_Control_Register_ld_bpf2_en_lsrs(data)                   (0x00000040&((data)<<6))
#define  AUDIO_Loudness_Control_Register_ld_lpf_en_csw(data)                     (0x00000020&((data)<<5))
#define  AUDIO_Loudness_Control_Register_ld_bpf1_en_csw(data)                    (0x00000010&((data)<<4))
#define  AUDIO_Loudness_Control_Register_ld_bpf2_en_csw(data)                    (0x00000008&((data)<<3))
#define  AUDIO_Loudness_Control_Register_ld_lpf_en_lr(data)                      (0x00000004&((data)<<2))
#define  AUDIO_Loudness_Control_Register_ld_bpf1_en_lr(data)                     (0x00000002&((data)<<1))
#define  AUDIO_Loudness_Control_Register_ld_bpf2_en_lr(data)                     (0x00000001&(data))
#define  AUDIO_Loudness_Control_Register_get_ld_lpf_en_lsrs(data)                ((0x00000100&(data))>>8)
#define  AUDIO_Loudness_Control_Register_get_ld_bpf1_en_lsrs(data)               ((0x00000080&(data))>>7)
#define  AUDIO_Loudness_Control_Register_get_ld_bpf2_en_lsrs(data)               ((0x00000040&(data))>>6)
#define  AUDIO_Loudness_Control_Register_get_ld_lpf_en_csw(data)                 ((0x00000020&(data))>>5)
#define  AUDIO_Loudness_Control_Register_get_ld_bpf1_en_csw(data)                ((0x00000010&(data))>>4)
#define  AUDIO_Loudness_Control_Register_get_ld_bpf2_en_csw(data)                ((0x00000008&(data))>>3)
#define  AUDIO_Loudness_Control_Register_get_ld_lpf_en_lr(data)                  ((0x00000004&(data))>>2)
#define  AUDIO_Loudness_Control_Register_get_ld_bpf1_en_lr(data)                 ((0x00000002&(data))>>1)
#define  AUDIO_Loudness_Control_Register_get_ld_bpf2_en_lr(data)                 (0x00000001&(data))

#define  AUDIO_Loudness_Status_Register                                         0x180067B0
#define  AUDIO_Loudness_Status_Register_reg_addr                                 "0xB80067B0"
#define  AUDIO_Loudness_Status_Register_reg                                      0xB80067B0
#define  AUDIO_Loudness_Status_Register_inst_addr                                "0x012B"
#define  set_AUDIO_Loudness_Status_Register_reg(data)                            (*((volatile unsigned int*)AUDIO_Loudness_Status_Register_reg)=data)
#define  get_AUDIO_Loudness_Status_Register_reg                                  (*((volatile unsigned int*)AUDIO_Loudness_Status_Register_reg))
#define  AUDIO_Loudness_Status_Register_ld_lpf_of_lsrs_shift                     (8)
#define  AUDIO_Loudness_Status_Register_ld_bpf1_of_lsrs_shift                    (7)
#define  AUDIO_Loudness_Status_Register_ld_bpf2_of_lsrs_shift                    (6)
#define  AUDIO_Loudness_Status_Register_ld_lpf_of_csw_shift                      (5)
#define  AUDIO_Loudness_Status_Register_ld_bpf1_of_csw_shift                     (4)
#define  AUDIO_Loudness_Status_Register_ld_bpf2_of_csw_shift                     (3)
#define  AUDIO_Loudness_Status_Register_ld_lpf_of_lr_shift                       (2)
#define  AUDIO_Loudness_Status_Register_ld_bpf1_of_lr_shift                      (1)
#define  AUDIO_Loudness_Status_Register_ld_bpf2_of_lr_shift                      (0)
#define  AUDIO_Loudness_Status_Register_ld_lpf_of_lsrs_mask                      (0x00000100)
#define  AUDIO_Loudness_Status_Register_ld_bpf1_of_lsrs_mask                     (0x00000080)
#define  AUDIO_Loudness_Status_Register_ld_bpf2_of_lsrs_mask                     (0x00000040)
#define  AUDIO_Loudness_Status_Register_ld_lpf_of_csw_mask                       (0x00000020)
#define  AUDIO_Loudness_Status_Register_ld_bpf1_of_csw_mask                      (0x00000010)
#define  AUDIO_Loudness_Status_Register_ld_bpf2_of_csw_mask                      (0x00000008)
#define  AUDIO_Loudness_Status_Register_ld_lpf_of_lr_mask                        (0x00000004)
#define  AUDIO_Loudness_Status_Register_ld_bpf1_of_lr_mask                       (0x00000002)
#define  AUDIO_Loudness_Status_Register_ld_bpf2_of_lr_mask                       (0x00000001)
#define  AUDIO_Loudness_Status_Register_ld_lpf_of_lsrs(data)                     (0x00000100&((data)<<8))
#define  AUDIO_Loudness_Status_Register_ld_bpf1_of_lsrs(data)                    (0x00000080&((data)<<7))
#define  AUDIO_Loudness_Status_Register_ld_bpf2_of_lsrs(data)                    (0x00000040&((data)<<6))
#define  AUDIO_Loudness_Status_Register_ld_lpf_of_csw(data)                      (0x00000020&((data)<<5))
#define  AUDIO_Loudness_Status_Register_ld_bpf1_of_csw(data)                     (0x00000010&((data)<<4))
#define  AUDIO_Loudness_Status_Register_ld_bpf2_of_csw(data)                     (0x00000008&((data)<<3))
#define  AUDIO_Loudness_Status_Register_ld_lpf_of_lr(data)                       (0x00000004&((data)<<2))
#define  AUDIO_Loudness_Status_Register_ld_bpf1_of_lr(data)                      (0x00000002&((data)<<1))
#define  AUDIO_Loudness_Status_Register_ld_bpf2_of_lr(data)                      (0x00000001&(data))
#define  AUDIO_Loudness_Status_Register_get_ld_lpf_of_lsrs(data)                 ((0x00000100&(data))>>8)
#define  AUDIO_Loudness_Status_Register_get_ld_bpf1_of_lsrs(data)                ((0x00000080&(data))>>7)
#define  AUDIO_Loudness_Status_Register_get_ld_bpf2_of_lsrs(data)                ((0x00000040&(data))>>6)
#define  AUDIO_Loudness_Status_Register_get_ld_lpf_of_csw(data)                  ((0x00000020&(data))>>5)
#define  AUDIO_Loudness_Status_Register_get_ld_bpf1_of_csw(data)                 ((0x00000010&(data))>>4)
#define  AUDIO_Loudness_Status_Register_get_ld_bpf2_of_csw(data)                 ((0x00000008&(data))>>3)
#define  AUDIO_Loudness_Status_Register_get_ld_lpf_of_lr(data)                   ((0x00000004&(data))>>2)
#define  AUDIO_Loudness_Status_Register_get_ld_bpf1_of_lr(data)                  ((0x00000002&(data))>>1)
#define  AUDIO_Loudness_Status_Register_get_ld_bpf2_of_lr(data)                  (0x00000001&(data))

#define  AUDIO_Digital_Volume_Control_0                                         0x180067B4
#define  AUDIO_Digital_Volume_Control_0_reg_addr                                 "0xB80067B4"
#define  AUDIO_Digital_Volume_Control_0_reg                                      0xB80067B4
#define  AUDIO_Digital_Volume_Control_0_inst_addr                                "0x012C"
#define  set_AUDIO_Digital_Volume_Control_0_reg(data)                            (*((volatile unsigned int*)AUDIO_Digital_Volume_Control_0_reg)=data)
#define  get_AUDIO_Digital_Volume_Control_0_reg                                  (*((volatile unsigned int*)AUDIO_Digital_Volume_Control_0_reg))
#define  AUDIO_Digital_Volume_Control_0_reg_in_thre_shift                        (13)
#define  AUDIO_Digital_Volume_Control_0_reg_zero_in_en_shift                     (12)
#define  AUDIO_Digital_Volume_Control_0_zcth_shift                               (4)
#define  AUDIO_Digital_Volume_Control_0_dvcm_shift                               (0)
#define  AUDIO_Digital_Volume_Control_0_reg_in_thre_mask                         (0x0003E000)
#define  AUDIO_Digital_Volume_Control_0_reg_zero_in_en_mask                      (0x00001000)
#define  AUDIO_Digital_Volume_Control_0_zcth_mask                                (0x000001F0)
#define  AUDIO_Digital_Volume_Control_0_dvcm_mask                                (0x00000003)
#define  AUDIO_Digital_Volume_Control_0_reg_in_thre(data)                        (0x0003E000&((data)<<13))
#define  AUDIO_Digital_Volume_Control_0_reg_zero_in_en(data)                     (0x00001000&((data)<<12))
#define  AUDIO_Digital_Volume_Control_0_zcth(data)                               (0x000001F0&((data)<<4))
#define  AUDIO_Digital_Volume_Control_0_dvcm(data)                               (0x00000003&(data))
#define  AUDIO_Digital_Volume_Control_0_get_reg_in_thre(data)                    ((0x0003E000&(data))>>13)
#define  AUDIO_Digital_Volume_Control_0_get_reg_zero_in_en(data)                 ((0x00001000&(data))>>12)
#define  AUDIO_Digital_Volume_Control_0_get_zcth(data)                           ((0x000001F0&(data))>>4)
#define  AUDIO_Digital_Volume_Control_0_get_dvcm(data)                           (0x00000003&(data))

#define  AUDIO_Digital_Volume_Control_1                                         0x180067B8
#define  AUDIO_Digital_Volume_Control_1_reg_addr                                 "0xB80067B8"
#define  AUDIO_Digital_Volume_Control_1_reg                                      0xB80067B8
#define  AUDIO_Digital_Volume_Control_1_inst_addr                                "0x012D"
#define  set_AUDIO_Digital_Volume_Control_1_reg(data)                            (*((volatile unsigned int*)AUDIO_Digital_Volume_Control_1_reg)=data)
#define  get_AUDIO_Digital_Volume_Control_1_reg                                  (*((volatile unsigned int*)AUDIO_Digital_Volume_Control_1_reg))
#define  AUDIO_Digital_Volume_Control_1_dvol_apply_shift                         (31)
#define  AUDIO_Digital_Volume_Control_1_zcto_shift                               (28)
#define  AUDIO_Digital_Volume_Control_1_ramp_step_shift                          (26)
#define  AUDIO_Digital_Volume_Control_1_delay_ctrl_shift                         (16)
#define  AUDIO_Digital_Volume_Control_1_mute_apply_shift                         (15)
#define  AUDIO_Digital_Volume_Control_1_zcto_mute_shift                          (12)
#define  AUDIO_Digital_Volume_Control_1_ramp_step_mute_shift                     (10)
#define  AUDIO_Digital_Volume_Control_1_delay_ctrl_mute_shift                    (0)
#define  AUDIO_Digital_Volume_Control_1_dvol_apply_mask                          (0x80000000)
#define  AUDIO_Digital_Volume_Control_1_zcto_mask                                (0x70000000)
#define  AUDIO_Digital_Volume_Control_1_ramp_step_mask                           (0x0C000000)
#define  AUDIO_Digital_Volume_Control_1_delay_ctrl_mask                          (0x03FF0000)
#define  AUDIO_Digital_Volume_Control_1_mute_apply_mask                          (0x00008000)
#define  AUDIO_Digital_Volume_Control_1_zcto_mute_mask                           (0x00007000)
#define  AUDIO_Digital_Volume_Control_1_ramp_step_mute_mask                      (0x00000C00)
#define  AUDIO_Digital_Volume_Control_1_delay_ctrl_mute_mask                     (0x000003FF)
#define  AUDIO_Digital_Volume_Control_1_dvol_apply(data)                         (0x80000000&((data)<<31))
#define  AUDIO_Digital_Volume_Control_1_zcto(data)                               (0x70000000&((data)<<28))
#define  AUDIO_Digital_Volume_Control_1_ramp_step(data)                          (0x0C000000&((data)<<26))
#define  AUDIO_Digital_Volume_Control_1_delay_ctrl(data)                         (0x03FF0000&((data)<<16))
#define  AUDIO_Digital_Volume_Control_1_mute_apply(data)                         (0x00008000&((data)<<15))
#define  AUDIO_Digital_Volume_Control_1_zcto_mute(data)                          (0x00007000&((data)<<12))
#define  AUDIO_Digital_Volume_Control_1_ramp_step_mute(data)                     (0x00000C00&((data)<<10))
#define  AUDIO_Digital_Volume_Control_1_delay_ctrl_mute(data)                    (0x000003FF&(data))
#define  AUDIO_Digital_Volume_Control_1_get_dvol_apply(data)                     ((0x80000000&(data))>>31)
#define  AUDIO_Digital_Volume_Control_1_get_zcto(data)                           ((0x70000000&(data))>>28)
#define  AUDIO_Digital_Volume_Control_1_get_ramp_step(data)                      ((0x0C000000&(data))>>26)
#define  AUDIO_Digital_Volume_Control_1_get_delay_ctrl(data)                     ((0x03FF0000&(data))>>16)
#define  AUDIO_Digital_Volume_Control_1_get_mute_apply(data)                     ((0x00008000&(data))>>15)
#define  AUDIO_Digital_Volume_Control_1_get_zcto_mute(data)                      ((0x00007000&(data))>>12)
#define  AUDIO_Digital_Volume_Control_1_get_ramp_step_mute(data)                 ((0x00000C00&(data))>>10)
#define  AUDIO_Digital_Volume_Control_1_get_delay_ctrl_mute(data)                (0x000003FF&(data))

#define  AUDIO_LR_Digital_Volume_Control                                        0x180067BC
#define  AUDIO_LR_Digital_Volume_Control_reg_addr                                "0xB80067BC"
#define  AUDIO_LR_Digital_Volume_Control_reg                                     0xB80067BC
#define  AUDIO_LR_Digital_Volume_Control_inst_addr                               "0x012E"
#define  set_AUDIO_LR_Digital_Volume_Control_reg(data)                           (*((volatile unsigned int*)AUDIO_LR_Digital_Volume_Control_reg)=data)
#define  get_AUDIO_LR_Digital_Volume_Control_reg                                 (*((volatile unsigned int*)AUDIO_LR_Digital_Volume_Control_reg))
#define  AUDIO_LR_Digital_Volume_Control_mute_l_shift                            (31)
#define  AUDIO_LR_Digital_Volume_Control_rep_l_status_shift                      (30)
#define  AUDIO_LR_Digital_Volume_Control_hpf_l_enable_shift                      (28)
#define  AUDIO_LR_Digital_Volume_Control_vol_l_ready_shift                       (27)
#define  AUDIO_LR_Digital_Volume_Control_vol_l_a_shift                           (22)
#define  AUDIO_LR_Digital_Volume_Control_vol_l_b_shift                           (16)
#define  AUDIO_LR_Digital_Volume_Control_mute_r_shift                            (15)
#define  AUDIO_LR_Digital_Volume_Control_rep_r_status_shift                      (14)
#define  AUDIO_LR_Digital_Volume_Control_hpf_r_enable_shift                      (12)
#define  AUDIO_LR_Digital_Volume_Control_vol_r_ready_shift                       (11)
#define  AUDIO_LR_Digital_Volume_Control_vol_r_a_shift                           (6)
#define  AUDIO_LR_Digital_Volume_Control_vol_r_b_shift                           (0)
#define  AUDIO_LR_Digital_Volume_Control_mute_l_mask                             (0x80000000)
#define  AUDIO_LR_Digital_Volume_Control_rep_l_status_mask                       (0x40000000)
#define  AUDIO_LR_Digital_Volume_Control_hpf_l_enable_mask                       (0x10000000)
#define  AUDIO_LR_Digital_Volume_Control_vol_l_ready_mask                        (0x08000000)
#define  AUDIO_LR_Digital_Volume_Control_vol_l_a_mask                            (0x07C00000)
#define  AUDIO_LR_Digital_Volume_Control_vol_l_b_mask                            (0x003F0000)
#define  AUDIO_LR_Digital_Volume_Control_mute_r_mask                             (0x00008000)
#define  AUDIO_LR_Digital_Volume_Control_rep_r_status_mask                       (0x00004000)
#define  AUDIO_LR_Digital_Volume_Control_hpf_r_enable_mask                       (0x00001000)
#define  AUDIO_LR_Digital_Volume_Control_vol_r_ready_mask                        (0x00000800)
#define  AUDIO_LR_Digital_Volume_Control_vol_r_a_mask                            (0x000007C0)
#define  AUDIO_LR_Digital_Volume_Control_vol_r_b_mask                            (0x0000003F)
#define  AUDIO_LR_Digital_Volume_Control_mute_l(data)                            (0x80000000&((data)<<31))
#define  AUDIO_LR_Digital_Volume_Control_rep_l_status(data)                      (0x40000000&((data)<<30))
#define  AUDIO_LR_Digital_Volume_Control_hpf_l_enable(data)                      (0x10000000&((data)<<28))
#define  AUDIO_LR_Digital_Volume_Control_vol_l_ready(data)                       (0x08000000&((data)<<27))
#define  AUDIO_LR_Digital_Volume_Control_vol_l_a(data)                           (0x07C00000&((data)<<22))
#define  AUDIO_LR_Digital_Volume_Control_vol_l_b(data)                           (0x003F0000&((data)<<16))
#define  AUDIO_LR_Digital_Volume_Control_mute_r(data)                            (0x00008000&((data)<<15))
#define  AUDIO_LR_Digital_Volume_Control_rep_r_status(data)                      (0x00004000&((data)<<14))
#define  AUDIO_LR_Digital_Volume_Control_hpf_r_enable(data)                      (0x00001000&((data)<<12))
#define  AUDIO_LR_Digital_Volume_Control_vol_r_ready(data)                       (0x00000800&((data)<<11))
#define  AUDIO_LR_Digital_Volume_Control_vol_r_a(data)                           (0x000007C0&((data)<<6))
#define  AUDIO_LR_Digital_Volume_Control_vol_r_b(data)                           (0x0000003F&(data))
#define  AUDIO_LR_Digital_Volume_Control_get_mute_l(data)                        ((0x80000000&(data))>>31)
#define  AUDIO_LR_Digital_Volume_Control_get_rep_l_status(data)                  ((0x40000000&(data))>>30)
#define  AUDIO_LR_Digital_Volume_Control_get_hpf_l_enable(data)                  ((0x10000000&(data))>>28)
#define  AUDIO_LR_Digital_Volume_Control_get_vol_l_ready(data)                   ((0x08000000&(data))>>27)
#define  AUDIO_LR_Digital_Volume_Control_get_vol_l_a(data)                       ((0x07C00000&(data))>>22)
#define  AUDIO_LR_Digital_Volume_Control_get_vol_l_b(data)                       ((0x003F0000&(data))>>16)
#define  AUDIO_LR_Digital_Volume_Control_get_mute_r(data)                        ((0x00008000&(data))>>15)
#define  AUDIO_LR_Digital_Volume_Control_get_rep_r_status(data)                  ((0x00004000&(data))>>14)
#define  AUDIO_LR_Digital_Volume_Control_get_hpf_r_enable(data)                  ((0x00001000&(data))>>12)
#define  AUDIO_LR_Digital_Volume_Control_get_vol_r_ready(data)                   ((0x00000800&(data))>>11)
#define  AUDIO_LR_Digital_Volume_Control_get_vol_r_a(data)                       ((0x000007C0&(data))>>6)
#define  AUDIO_LR_Digital_Volume_Control_get_vol_r_b(data)                       (0x0000003F&(data))

#define  AUDIO_LsRs_Digital_Volume_Control                                      0x180067C0
#define  AUDIO_LsRs_Digital_Volume_Control_reg_addr                              "0xB80067C0"
#define  AUDIO_LsRs_Digital_Volume_Control_reg                                   0xB80067C0
#define  AUDIO_LsRs_Digital_Volume_Control_inst_addr                             "0x012F"
#define  set_AUDIO_LsRs_Digital_Volume_Control_reg(data)                         (*((volatile unsigned int*)AUDIO_LsRs_Digital_Volume_Control_reg)=data)
#define  get_AUDIO_LsRs_Digital_Volume_Control_reg                               (*((volatile unsigned int*)AUDIO_LsRs_Digital_Volume_Control_reg))
#define  AUDIO_LsRs_Digital_Volume_Control_mute_ls_shift                         (31)
#define  AUDIO_LsRs_Digital_Volume_Control_rep_ls_status_shift                   (30)
#define  AUDIO_LsRs_Digital_Volume_Control_hpf_ls_enable_shift                   (28)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_ls_ready_shift                    (27)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_ls_a_shift                        (22)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_ls_b_shift                        (16)
#define  AUDIO_LsRs_Digital_Volume_Control_mute_rs_shift                         (15)
#define  AUDIO_LsRs_Digital_Volume_Control_rep_rs_status_shift                   (14)
#define  AUDIO_LsRs_Digital_Volume_Control_hpf_rs_enable_shift                   (12)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_rs_ready_shift                    (11)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_rs_a_shift                        (6)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_rs_b_shift                        (0)
#define  AUDIO_LsRs_Digital_Volume_Control_mute_ls_mask                          (0x80000000)
#define  AUDIO_LsRs_Digital_Volume_Control_rep_ls_status_mask                    (0x40000000)
#define  AUDIO_LsRs_Digital_Volume_Control_hpf_ls_enable_mask                    (0x10000000)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_ls_ready_mask                     (0x08000000)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_ls_a_mask                         (0x07C00000)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_ls_b_mask                         (0x003F0000)
#define  AUDIO_LsRs_Digital_Volume_Control_mute_rs_mask                          (0x00008000)
#define  AUDIO_LsRs_Digital_Volume_Control_rep_rs_status_mask                    (0x00004000)
#define  AUDIO_LsRs_Digital_Volume_Control_hpf_rs_enable_mask                    (0x00001000)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_rs_ready_mask                     (0x00000800)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_rs_a_mask                         (0x000007C0)
#define  AUDIO_LsRs_Digital_Volume_Control_vol_rs_b_mask                         (0x0000003F)
#define  AUDIO_LsRs_Digital_Volume_Control_mute_ls(data)                         (0x80000000&((data)<<31))
#define  AUDIO_LsRs_Digital_Volume_Control_rep_ls_status(data)                   (0x40000000&((data)<<30))
#define  AUDIO_LsRs_Digital_Volume_Control_hpf_ls_enable(data)                   (0x10000000&((data)<<28))
#define  AUDIO_LsRs_Digital_Volume_Control_vol_ls_ready(data)                    (0x08000000&((data)<<27))
#define  AUDIO_LsRs_Digital_Volume_Control_vol_ls_a(data)                        (0x07C00000&((data)<<22))
#define  AUDIO_LsRs_Digital_Volume_Control_vol_ls_b(data)                        (0x003F0000&((data)<<16))
#define  AUDIO_LsRs_Digital_Volume_Control_mute_rs(data)                         (0x00008000&((data)<<15))
#define  AUDIO_LsRs_Digital_Volume_Control_rep_rs_status(data)                   (0x00004000&((data)<<14))
#define  AUDIO_LsRs_Digital_Volume_Control_hpf_rs_enable(data)                   (0x00001000&((data)<<12))
#define  AUDIO_LsRs_Digital_Volume_Control_vol_rs_ready(data)                    (0x00000800&((data)<<11))
#define  AUDIO_LsRs_Digital_Volume_Control_vol_rs_a(data)                        (0x000007C0&((data)<<6))
#define  AUDIO_LsRs_Digital_Volume_Control_vol_rs_b(data)                        (0x0000003F&(data))
#define  AUDIO_LsRs_Digital_Volume_Control_get_mute_ls(data)                     ((0x80000000&(data))>>31)
#define  AUDIO_LsRs_Digital_Volume_Control_get_rep_ls_status(data)               ((0x40000000&(data))>>30)
#define  AUDIO_LsRs_Digital_Volume_Control_get_hpf_ls_enable(data)               ((0x10000000&(data))>>28)
#define  AUDIO_LsRs_Digital_Volume_Control_get_vol_ls_ready(data)                ((0x08000000&(data))>>27)
#define  AUDIO_LsRs_Digital_Volume_Control_get_vol_ls_a(data)                    ((0x07C00000&(data))>>22)
#define  AUDIO_LsRs_Digital_Volume_Control_get_vol_ls_b(data)                    ((0x003F0000&(data))>>16)
#define  AUDIO_LsRs_Digital_Volume_Control_get_mute_rs(data)                     ((0x00008000&(data))>>15)
#define  AUDIO_LsRs_Digital_Volume_Control_get_rep_rs_status(data)               ((0x00004000&(data))>>14)
#define  AUDIO_LsRs_Digital_Volume_Control_get_hpf_rs_enable(data)               ((0x00001000&(data))>>12)
#define  AUDIO_LsRs_Digital_Volume_Control_get_vol_rs_ready(data)                ((0x00000800&(data))>>11)
#define  AUDIO_LsRs_Digital_Volume_Control_get_vol_rs_a(data)                    ((0x000007C0&(data))>>6)
#define  AUDIO_LsRs_Digital_Volume_Control_get_vol_rs_b(data)                    (0x0000003F&(data))

#define  AUDIO_CSW_Digital_Volume_Control                                       0x180067C4
#define  AUDIO_CSW_Digital_Volume_Control_reg_addr                               "0xB80067C4"
#define  AUDIO_CSW_Digital_Volume_Control_reg                                    0xB80067C4
#define  AUDIO_CSW_Digital_Volume_Control_inst_addr                              "0x0130"
#define  set_AUDIO_CSW_Digital_Volume_Control_reg(data)                          (*((volatile unsigned int*)AUDIO_CSW_Digital_Volume_Control_reg)=data)
#define  get_AUDIO_CSW_Digital_Volume_Control_reg                                (*((volatile unsigned int*)AUDIO_CSW_Digital_Volume_Control_reg))
#define  AUDIO_CSW_Digital_Volume_Control_mute_c_shift                           (31)
#define  AUDIO_CSW_Digital_Volume_Control_rep_c_status_shift                     (30)
#define  AUDIO_CSW_Digital_Volume_Control_hpf_c_enable_shift                     (28)
#define  AUDIO_CSW_Digital_Volume_Control_vol_c_ready_shift                      (27)
#define  AUDIO_CSW_Digital_Volume_Control_vol_c_a_shift                          (22)
#define  AUDIO_CSW_Digital_Volume_Control_vol_c_b_shift                          (16)
#define  AUDIO_CSW_Digital_Volume_Control_mute_sw_shift                          (15)
#define  AUDIO_CSW_Digital_Volume_Control_rep_sw_status_shift                    (14)
#define  AUDIO_CSW_Digital_Volume_Control_hpf_sw_enable_shift                    (12)
#define  AUDIO_CSW_Digital_Volume_Control_vol_sw_ready_shift                     (11)
#define  AUDIO_CSW_Digital_Volume_Control_vol_sw_a_shift                         (6)
#define  AUDIO_CSW_Digital_Volume_Control_vol_sw_b_shift                         (0)
#define  AUDIO_CSW_Digital_Volume_Control_mute_c_mask                            (0x80000000)
#define  AUDIO_CSW_Digital_Volume_Control_rep_c_status_mask                      (0x40000000)
#define  AUDIO_CSW_Digital_Volume_Control_hpf_c_enable_mask                      (0x10000000)
#define  AUDIO_CSW_Digital_Volume_Control_vol_c_ready_mask                       (0x08000000)
#define  AUDIO_CSW_Digital_Volume_Control_vol_c_a_mask                           (0x07C00000)
#define  AUDIO_CSW_Digital_Volume_Control_vol_c_b_mask                           (0x003F0000)
#define  AUDIO_CSW_Digital_Volume_Control_mute_sw_mask                           (0x00008000)
#define  AUDIO_CSW_Digital_Volume_Control_rep_sw_status_mask                     (0x00004000)
#define  AUDIO_CSW_Digital_Volume_Control_hpf_sw_enable_mask                     (0x00001000)
#define  AUDIO_CSW_Digital_Volume_Control_vol_sw_ready_mask                      (0x00000800)
#define  AUDIO_CSW_Digital_Volume_Control_vol_sw_a_mask                          (0x000007C0)
#define  AUDIO_CSW_Digital_Volume_Control_vol_sw_b_mask                          (0x0000003F)
#define  AUDIO_CSW_Digital_Volume_Control_mute_c(data)                           (0x80000000&((data)<<31))
#define  AUDIO_CSW_Digital_Volume_Control_rep_c_status(data)                     (0x40000000&((data)<<30))
#define  AUDIO_CSW_Digital_Volume_Control_hpf_c_enable(data)                     (0x10000000&((data)<<28))
#define  AUDIO_CSW_Digital_Volume_Control_vol_c_ready(data)                      (0x08000000&((data)<<27))
#define  AUDIO_CSW_Digital_Volume_Control_vol_c_a(data)                          (0x07C00000&((data)<<22))
#define  AUDIO_CSW_Digital_Volume_Control_vol_c_b(data)                          (0x003F0000&((data)<<16))
#define  AUDIO_CSW_Digital_Volume_Control_mute_sw(data)                          (0x00008000&((data)<<15))
#define  AUDIO_CSW_Digital_Volume_Control_rep_sw_status(data)                    (0x00004000&((data)<<14))
#define  AUDIO_CSW_Digital_Volume_Control_hpf_sw_enable(data)                    (0x00001000&((data)<<12))
#define  AUDIO_CSW_Digital_Volume_Control_vol_sw_ready(data)                     (0x00000800&((data)<<11))
#define  AUDIO_CSW_Digital_Volume_Control_vol_sw_a(data)                         (0x000007C0&((data)<<6))
#define  AUDIO_CSW_Digital_Volume_Control_vol_sw_b(data)                         (0x0000003F&(data))
#define  AUDIO_CSW_Digital_Volume_Control_get_mute_c(data)                       ((0x80000000&(data))>>31)
#define  AUDIO_CSW_Digital_Volume_Control_get_rep_c_status(data)                 ((0x40000000&(data))>>30)
#define  AUDIO_CSW_Digital_Volume_Control_get_hpf_c_enable(data)                 ((0x10000000&(data))>>28)
#define  AUDIO_CSW_Digital_Volume_Control_get_vol_c_ready(data)                  ((0x08000000&(data))>>27)
#define  AUDIO_CSW_Digital_Volume_Control_get_vol_c_a(data)                      ((0x07C00000&(data))>>22)
#define  AUDIO_CSW_Digital_Volume_Control_get_vol_c_b(data)                      ((0x003F0000&(data))>>16)
#define  AUDIO_CSW_Digital_Volume_Control_get_mute_sw(data)                      ((0x00008000&(data))>>15)
#define  AUDIO_CSW_Digital_Volume_Control_get_rep_sw_status(data)                ((0x00004000&(data))>>14)
#define  AUDIO_CSW_Digital_Volume_Control_get_hpf_sw_enable(data)                ((0x00001000&(data))>>12)
#define  AUDIO_CSW_Digital_Volume_Control_get_vol_sw_ready(data)                 ((0x00000800&(data))>>11)
#define  AUDIO_CSW_Digital_Volume_Control_get_vol_sw_a(data)                     ((0x000007C0&(data))>>6)
#define  AUDIO_CSW_Digital_Volume_Control_get_vol_sw_b(data)                     (0x0000003F&(data))

#define  AUDIO_Double_buffer_ack                                                0x180067C8
#define  AUDIO_Double_buffer_ack_reg_addr                                        "0xB80067C8"
#define  AUDIO_Double_buffer_ack_reg                                             0xB80067C8
#define  AUDIO_Double_buffer_ack_inst_addr                                       "0x0131"
#define  set_AUDIO_Double_buffer_ack_reg(data)                                   (*((volatile unsigned int*)AUDIO_Double_buffer_ack_reg)=data)
#define  get_AUDIO_Double_buffer_ack_reg                                         (*((volatile unsigned int*)AUDIO_Double_buffer_ack_reg))
#define  AUDIO_Double_buffer_ack_zcto_status_shift                               (1)
#define  AUDIO_Double_buffer_ack_double_buffer_ack_shift                         (0)
#define  AUDIO_Double_buffer_ack_zcto_status_mask                                (0x00000002)
#define  AUDIO_Double_buffer_ack_double_buffer_ack_mask                          (0x00000001)
#define  AUDIO_Double_buffer_ack_zcto_status(data)                               (0x00000002&((data)<<1))
#define  AUDIO_Double_buffer_ack_double_buffer_ack(data)                         (0x00000001&(data))
#define  AUDIO_Double_buffer_ack_get_zcto_status(data)                           ((0x00000002&(data))>>1)
#define  AUDIO_Double_buffer_ack_get_double_buffer_ack(data)                     (0x00000001&(data))

#define  AUDIO_AVC2_Control_1_ch01                                              0x180067CC
#define  AUDIO_AVC2_Control_1_ch01_reg_addr                                      "0xB80067CC"
#define  AUDIO_AVC2_Control_1_ch01_reg                                           0xB80067CC
#define  AUDIO_AVC2_Control_1_ch01_inst_addr                                     "0x0132"
#define  set_AUDIO_AVC2_Control_1_ch01_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_1_ch01_reg)=data)
#define  get_AUDIO_AVC2_Control_1_ch01_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_1_ch01_reg))
#define  AUDIO_AVC2_Control_1_ch01_avc2_nr_det_only_shift                        (31)
#define  AUDIO_AVC2_Control_1_ch01_avc2_vol_amplif_enable_shift                  (30)
#define  AUDIO_AVC2_Control_1_ch01_avc2_lpf_coef_shift                           (27)
#define  AUDIO_AVC2_Control_1_ch01_avc2_vol_detect_shift                         (25)
#define  AUDIO_AVC2_Control_1_ch01_fast_recov_ctrl_shift                         (24)
#define  AUDIO_AVC2_Control_1_ch01_slow_up_db_shift                              (22)
#define  AUDIO_AVC2_Control_1_ch01_fast_up_db_shift                              (20)
#define  AUDIO_AVC2_Control_1_ch01_down_db_shift                                 (18)
#define  AUDIO_AVC2_Control_1_ch01_avc2_noise_gain_shift                         (16)
#define  AUDIO_AVC2_Control_1_ch01_avc2_noise_thre_shift                         (0)
#define  AUDIO_AVC2_Control_1_ch01_avc2_nr_det_only_mask                         (0x80000000)
#define  AUDIO_AVC2_Control_1_ch01_avc2_vol_amplif_enable_mask                   (0x40000000)
#define  AUDIO_AVC2_Control_1_ch01_avc2_lpf_coef_mask                            (0x38000000)
#define  AUDIO_AVC2_Control_1_ch01_avc2_vol_detect_mask                          (0x06000000)
#define  AUDIO_AVC2_Control_1_ch01_fast_recov_ctrl_mask                          (0x01000000)
#define  AUDIO_AVC2_Control_1_ch01_slow_up_db_mask                               (0x00C00000)
#define  AUDIO_AVC2_Control_1_ch01_fast_up_db_mask                               (0x00300000)
#define  AUDIO_AVC2_Control_1_ch01_down_db_mask                                  (0x000C0000)
#define  AUDIO_AVC2_Control_1_ch01_avc2_noise_gain_mask                          (0x00030000)
#define  AUDIO_AVC2_Control_1_ch01_avc2_noise_thre_mask                          (0x0000FFFF)
#define  AUDIO_AVC2_Control_1_ch01_avc2_nr_det_only(data)                        (0x80000000&((data)<<31))
#define  AUDIO_AVC2_Control_1_ch01_avc2_vol_amplif_enable(data)                  (0x40000000&((data)<<30))
#define  AUDIO_AVC2_Control_1_ch01_avc2_lpf_coef(data)                           (0x38000000&((data)<<27))
#define  AUDIO_AVC2_Control_1_ch01_avc2_vol_detect(data)                         (0x06000000&((data)<<25))
#define  AUDIO_AVC2_Control_1_ch01_fast_recov_ctrl(data)                         (0x01000000&((data)<<24))
#define  AUDIO_AVC2_Control_1_ch01_slow_up_db(data)                              (0x00C00000&((data)<<22))
#define  AUDIO_AVC2_Control_1_ch01_fast_up_db(data)                              (0x00300000&((data)<<20))
#define  AUDIO_AVC2_Control_1_ch01_down_db(data)                                 (0x000C0000&((data)<<18))
#define  AUDIO_AVC2_Control_1_ch01_avc2_noise_gain(data)                         (0x00030000&((data)<<16))
#define  AUDIO_AVC2_Control_1_ch01_avc2_noise_thre(data)                         (0x0000FFFF&(data))
#define  AUDIO_AVC2_Control_1_ch01_get_avc2_nr_det_only(data)                    ((0x80000000&(data))>>31)
#define  AUDIO_AVC2_Control_1_ch01_get_avc2_vol_amplif_enable(data)              ((0x40000000&(data))>>30)
#define  AUDIO_AVC2_Control_1_ch01_get_avc2_lpf_coef(data)                       ((0x38000000&(data))>>27)
#define  AUDIO_AVC2_Control_1_ch01_get_avc2_vol_detect(data)                     ((0x06000000&(data))>>25)
#define  AUDIO_AVC2_Control_1_ch01_get_fast_recov_ctrl(data)                     ((0x01000000&(data))>>24)
#define  AUDIO_AVC2_Control_1_ch01_get_slow_up_db(data)                          ((0x00C00000&(data))>>22)
#define  AUDIO_AVC2_Control_1_ch01_get_fast_up_db(data)                          ((0x00300000&(data))>>20)
#define  AUDIO_AVC2_Control_1_ch01_get_down_db(data)                             ((0x000C0000&(data))>>18)
#define  AUDIO_AVC2_Control_1_ch01_get_avc2_noise_gain(data)                     ((0x00030000&(data))>>16)
#define  AUDIO_AVC2_Control_1_ch01_get_avc2_noise_thre(data)                     (0x0000FFFF&(data))

#define  AUDIO_AVC2_Control_2_ch01                                              0x180067D0
#define  AUDIO_AVC2_Control_2_ch01_reg_addr                                      "0xB80067D0"
#define  AUDIO_AVC2_Control_2_ch01_reg                                           0xB80067D0
#define  AUDIO_AVC2_Control_2_ch01_inst_addr                                     "0x0133"
#define  set_AUDIO_AVC2_Control_2_ch01_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_2_ch01_reg)=data)
#define  get_AUDIO_AVC2_Control_2_ch01_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_2_ch01_reg))
#define  AUDIO_AVC2_Control_2_ch01_avc2_nr_mute_shift                            (31)
#define  AUDIO_AVC2_Control_2_ch01_avc2_nr_flag_shift                            (30)
#define  AUDIO_AVC2_Control_2_ch01_avc2_cnt_thre_shift                           (20)
#define  AUDIO_AVC2_Control_2_ch01_avc2_zc_win_shift                             (10)
#define  AUDIO_AVC2_Control_2_ch01_avc2_mon_win_shift                            (0)
#define  AUDIO_AVC2_Control_2_ch01_avc2_nr_mute_mask                             (0x80000000)
#define  AUDIO_AVC2_Control_2_ch01_avc2_nr_flag_mask                             (0x40000000)
#define  AUDIO_AVC2_Control_2_ch01_avc2_cnt_thre_mask                            (0x3FF00000)
#define  AUDIO_AVC2_Control_2_ch01_avc2_zc_win_mask                              (0x000FFC00)
#define  AUDIO_AVC2_Control_2_ch01_avc2_mon_win_mask                             (0x000003FF)
#define  AUDIO_AVC2_Control_2_ch01_avc2_nr_mute(data)                            (0x80000000&((data)<<31))
#define  AUDIO_AVC2_Control_2_ch01_avc2_nr_flag(data)                            (0x40000000&((data)<<30))
#define  AUDIO_AVC2_Control_2_ch01_avc2_cnt_thre(data)                           (0x3FF00000&((data)<<20))
#define  AUDIO_AVC2_Control_2_ch01_avc2_zc_win(data)                             (0x000FFC00&((data)<<10))
#define  AUDIO_AVC2_Control_2_ch01_avc2_mon_win(data)                            (0x000003FF&(data))
#define  AUDIO_AVC2_Control_2_ch01_get_avc2_nr_mute(data)                        ((0x80000000&(data))>>31)
#define  AUDIO_AVC2_Control_2_ch01_get_avc2_nr_flag(data)                        ((0x40000000&(data))>>30)
#define  AUDIO_AVC2_Control_2_ch01_get_avc2_cnt_thre(data)                       ((0x3FF00000&(data))>>20)
#define  AUDIO_AVC2_Control_2_ch01_get_avc2_zc_win(data)                         ((0x000FFC00&(data))>>10)
#define  AUDIO_AVC2_Control_2_ch01_get_avc2_mon_win(data)                        (0x000003FF&(data))

#define  AUDIO_AVC2_Control_3_ch01                                              0x180067D4
#define  AUDIO_AVC2_Control_3_ch01_reg_addr                                      "0xB80067D4"
#define  AUDIO_AVC2_Control_3_ch01_reg                                           0xB80067D4
#define  AUDIO_AVC2_Control_3_ch01_inst_addr                                     "0x0134"
#define  set_AUDIO_AVC2_Control_3_ch01_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_3_ch01_reg)=data)
#define  get_AUDIO_AVC2_Control_3_ch01_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_3_ch01_reg))
#define  AUDIO_AVC2_Control_3_ch01_avc2_noise_thre_hi_shift                      (16)
#define  AUDIO_AVC2_Control_3_ch01_recov_win_max_shift                           (8)
#define  AUDIO_AVC2_Control_3_ch01_recov_win_min_shift                           (0)
#define  AUDIO_AVC2_Control_3_ch01_avc2_noise_thre_hi_mask                       (0xFFFF0000)
#define  AUDIO_AVC2_Control_3_ch01_recov_win_max_mask                            (0x0000FF00)
#define  AUDIO_AVC2_Control_3_ch01_recov_win_min_mask                            (0x000000FF)
#define  AUDIO_AVC2_Control_3_ch01_avc2_noise_thre_hi(data)                      (0xFFFF0000&((data)<<16))
#define  AUDIO_AVC2_Control_3_ch01_recov_win_max(data)                           (0x0000FF00&((data)<<8))
#define  AUDIO_AVC2_Control_3_ch01_recov_win_min(data)                           (0x000000FF&(data))
#define  AUDIO_AVC2_Control_3_ch01_get_avc2_noise_thre_hi(data)                  ((0xFFFF0000&(data))>>16)
#define  AUDIO_AVC2_Control_3_ch01_get_recov_win_max(data)                       ((0x0000FF00&(data))>>8)
#define  AUDIO_AVC2_Control_3_ch01_get_recov_win_min(data)                       (0x000000FF&(data))

#define  AUDIO_AVC2_Control_4_ch01                                              0x180067D8
#define  AUDIO_AVC2_Control_4_ch01_reg_addr                                      "0xB80067D8"
#define  AUDIO_AVC2_Control_4_ch01_reg                                           0xB80067D8
#define  AUDIO_AVC2_Control_4_ch01_inst_addr                                     "0x0135"
#define  set_AUDIO_AVC2_Control_4_ch01_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_4_ch01_reg)=data)
#define  get_AUDIO_AVC2_Control_4_ch01_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_4_ch01_reg))
#define  AUDIO_AVC2_Control_4_ch01_avc2_level_max_shift                          (16)
#define  AUDIO_AVC2_Control_4_ch01_avc2_level_min_shift                          (0)
#define  AUDIO_AVC2_Control_4_ch01_avc2_level_max_mask                           (0xFFFF0000)
#define  AUDIO_AVC2_Control_4_ch01_avc2_level_min_mask                           (0x0000FFFF)
#define  AUDIO_AVC2_Control_4_ch01_avc2_level_max(data)                          (0xFFFF0000&((data)<<16))
#define  AUDIO_AVC2_Control_4_ch01_avc2_level_min(data)                          (0x0000FFFF&(data))
#define  AUDIO_AVC2_Control_4_ch01_get_avc2_level_max(data)                      ((0xFFFF0000&(data))>>16)
#define  AUDIO_AVC2_Control_4_ch01_get_avc2_level_min(data)                      (0x0000FFFF&(data))

#define  AUDIO_AVC2_Control_5_ch01                                              0x18006824
#define  AUDIO_AVC2_Control_5_ch01_reg_addr                                      "0xB8006824"
#define  AUDIO_AVC2_Control_5_ch01_reg                                           0xB8006824
#define  AUDIO_AVC2_Control_5_ch01_inst_addr                                     "0x0136"
#define  set_AUDIO_AVC2_Control_5_ch01_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_5_ch01_reg)=data)
#define  get_AUDIO_AVC2_Control_5_ch01_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_5_ch01_reg))
#define  AUDIO_AVC2_Control_5_ch01_avc2_small_up_db_shift                        (10)
#define  AUDIO_AVC2_Control_5_ch01_avc2_small_down_db_shift                      (8)
#define  AUDIO_AVC2_Control_5_ch01_avc2_small_cnt_thre_shift                     (0)
#define  AUDIO_AVC2_Control_5_ch01_avc2_small_up_db_mask                         (0x00000C00)
#define  AUDIO_AVC2_Control_5_ch01_avc2_small_down_db_mask                       (0x00000300)
#define  AUDIO_AVC2_Control_5_ch01_avc2_small_cnt_thre_mask                      (0x000000FF)
#define  AUDIO_AVC2_Control_5_ch01_avc2_small_up_db(data)                        (0x00000C00&((data)<<10))
#define  AUDIO_AVC2_Control_5_ch01_avc2_small_down_db(data)                      (0x00000300&((data)<<8))
#define  AUDIO_AVC2_Control_5_ch01_avc2_small_cnt_thre(data)                     (0x000000FF&(data))
#define  AUDIO_AVC2_Control_5_ch01_get_avc2_small_up_db(data)                    ((0x00000C00&(data))>>10)
#define  AUDIO_AVC2_Control_5_ch01_get_avc2_small_down_db(data)                  ((0x00000300&(data))>>8)
#define  AUDIO_AVC2_Control_5_ch01_get_avc2_small_cnt_thre(data)                 (0x000000FF&(data))

#define  AUDIO_AVC2_Control_6_ch01                                              0x18006828
#define  AUDIO_AVC2_Control_6_ch01_reg_addr                                      "0xB8006828"
#define  AUDIO_AVC2_Control_6_ch01_reg                                           0xB8006828
#define  AUDIO_AVC2_Control_6_ch01_inst_addr                                     "0x0137"
#define  set_AUDIO_AVC2_Control_6_ch01_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_6_ch01_reg)=data)
#define  get_AUDIO_AVC2_Control_6_ch01_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_6_ch01_reg))
#define  AUDIO_AVC2_Control_6_ch01_avc2_small_level_max_shift                    (16)
#define  AUDIO_AVC2_Control_6_ch01_avc2_small_level_min_shift                    (0)
#define  AUDIO_AVC2_Control_6_ch01_avc2_small_level_max_mask                     (0xFFFF0000)
#define  AUDIO_AVC2_Control_6_ch01_avc2_small_level_min_mask                     (0x0000FFFF)
#define  AUDIO_AVC2_Control_6_ch01_avc2_small_level_max(data)                    (0xFFFF0000&((data)<<16))
#define  AUDIO_AVC2_Control_6_ch01_avc2_small_level_min(data)                    (0x0000FFFF&(data))
#define  AUDIO_AVC2_Control_6_ch01_get_avc2_small_level_max(data)                ((0xFFFF0000&(data))>>16)
#define  AUDIO_AVC2_Control_6_ch01_get_avc2_small_level_min(data)                (0x0000FFFF&(data))

#define  AUDIO_AVC2_Control_7_ch01                                              0x1800682C
#define  AUDIO_AVC2_Control_7_ch01_reg_addr                                      "0xB800682C"
#define  AUDIO_AVC2_Control_7_ch01_reg                                           0xB800682C
#define  AUDIO_AVC2_Control_7_ch01_inst_addr                                     "0x0138"
#define  set_AUDIO_AVC2_Control_7_ch01_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_7_ch01_reg)=data)
#define  get_AUDIO_AVC2_Control_7_ch01_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_7_ch01_reg))
#define  AUDIO_AVC2_Control_7_ch01_avc2_small_level_shift                        (0)
#define  AUDIO_AVC2_Control_7_ch01_avc2_small_level_mask                         (0x7FFFFFFF)
#define  AUDIO_AVC2_Control_7_ch01_avc2_small_level(data)                        (0x7FFFFFFF&(data))
#define  AUDIO_AVC2_Control_7_ch01_get_avc2_small_level(data)                    (0x7FFFFFFF&(data))

#define  AUDIO_AVC2_Control_1_ch23                                              0x180067DC
#define  AUDIO_AVC2_Control_1_ch23_reg_addr                                      "0xB80067DC"
#define  AUDIO_AVC2_Control_1_ch23_reg                                           0xB80067DC
#define  AUDIO_AVC2_Control_1_ch23_inst_addr                                     "0x0139"
#define  set_AUDIO_AVC2_Control_1_ch23_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_1_ch23_reg)=data)
#define  get_AUDIO_AVC2_Control_1_ch23_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_1_ch23_reg))
#define  AUDIO_AVC2_Control_1_ch23_avc2_nr_det_only_lsrs_shift                   (31)
#define  AUDIO_AVC2_Control_1_ch23_avc2_lpf_coef_lsrs_shift                      (27)
#define  AUDIO_AVC2_Control_1_ch23_avc2_vol_detect_lsrs_shift                    (25)
#define  AUDIO_AVC2_Control_1_ch23_fast_recov_ctrl_lsrs_shift                    (24)
#define  AUDIO_AVC2_Control_1_ch23_slow_up_db_lsrs_shift                         (22)
#define  AUDIO_AVC2_Control_1_ch23_fast_up_db_lsrs_shift                         (20)
#define  AUDIO_AVC2_Control_1_ch23_down_db_lsrs_shift                            (18)
#define  AUDIO_AVC2_Control_1_ch23_avc2_noise_gain_lsrs_shift                    (16)
#define  AUDIO_AVC2_Control_1_ch23_avc2_noise_thre_lsrs_shift                    (0)
#define  AUDIO_AVC2_Control_1_ch23_avc2_nr_det_only_lsrs_mask                    (0x80000000)
#define  AUDIO_AVC2_Control_1_ch23_avc2_lpf_coef_lsrs_mask                       (0x38000000)
#define  AUDIO_AVC2_Control_1_ch23_avc2_vol_detect_lsrs_mask                     (0x06000000)
#define  AUDIO_AVC2_Control_1_ch23_fast_recov_ctrl_lsrs_mask                     (0x01000000)
#define  AUDIO_AVC2_Control_1_ch23_slow_up_db_lsrs_mask                          (0x00C00000)
#define  AUDIO_AVC2_Control_1_ch23_fast_up_db_lsrs_mask                          (0x00300000)
#define  AUDIO_AVC2_Control_1_ch23_down_db_lsrs_mask                             (0x000C0000)
#define  AUDIO_AVC2_Control_1_ch23_avc2_noise_gain_lsrs_mask                     (0x00030000)
#define  AUDIO_AVC2_Control_1_ch23_avc2_noise_thre_lsrs_mask                     (0x0000FFFF)
#define  AUDIO_AVC2_Control_1_ch23_avc2_nr_det_only_lsrs(data)                   (0x80000000&((data)<<31))
#define  AUDIO_AVC2_Control_1_ch23_avc2_lpf_coef_lsrs(data)                      (0x38000000&((data)<<27))
#define  AUDIO_AVC2_Control_1_ch23_avc2_vol_detect_lsrs(data)                    (0x06000000&((data)<<25))
#define  AUDIO_AVC2_Control_1_ch23_fast_recov_ctrl_lsrs(data)                    (0x01000000&((data)<<24))
#define  AUDIO_AVC2_Control_1_ch23_slow_up_db_lsrs(data)                         (0x00C00000&((data)<<22))
#define  AUDIO_AVC2_Control_1_ch23_fast_up_db_lsrs(data)                         (0x00300000&((data)<<20))
#define  AUDIO_AVC2_Control_1_ch23_down_db_lsrs(data)                            (0x000C0000&((data)<<18))
#define  AUDIO_AVC2_Control_1_ch23_avc2_noise_gain_lsrs(data)                    (0x00030000&((data)<<16))
#define  AUDIO_AVC2_Control_1_ch23_avc2_noise_thre_lsrs(data)                    (0x0000FFFF&(data))
#define  AUDIO_AVC2_Control_1_ch23_get_avc2_nr_det_only_lsrs(data)               ((0x80000000&(data))>>31)
#define  AUDIO_AVC2_Control_1_ch23_get_avc2_lpf_coef_lsrs(data)                  ((0x38000000&(data))>>27)
#define  AUDIO_AVC2_Control_1_ch23_get_avc2_vol_detect_lsrs(data)                ((0x06000000&(data))>>25)
#define  AUDIO_AVC2_Control_1_ch23_get_fast_recov_ctrl_lsrs(data)                ((0x01000000&(data))>>24)
#define  AUDIO_AVC2_Control_1_ch23_get_slow_up_db_lsrs(data)                     ((0x00C00000&(data))>>22)
#define  AUDIO_AVC2_Control_1_ch23_get_fast_up_db_lsrs(data)                     ((0x00300000&(data))>>20)
#define  AUDIO_AVC2_Control_1_ch23_get_down_db_lsrs(data)                        ((0x000C0000&(data))>>18)
#define  AUDIO_AVC2_Control_1_ch23_get_avc2_noise_gain_lsrs(data)                ((0x00030000&(data))>>16)
#define  AUDIO_AVC2_Control_1_ch23_get_avc2_noise_thre_lsrs(data)                (0x0000FFFF&(data))

#define  AUDIO_AVC2_Control_2_ch23                                              0x180067E0
#define  AUDIO_AVC2_Control_2_ch23_reg_addr                                      "0xB80067E0"
#define  AUDIO_AVC2_Control_2_ch23_reg                                           0xB80067E0
#define  AUDIO_AVC2_Control_2_ch23_inst_addr                                     "0x013A"
#define  set_AUDIO_AVC2_Control_2_ch23_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_2_ch23_reg)=data)
#define  get_AUDIO_AVC2_Control_2_ch23_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_2_ch23_reg))
#define  AUDIO_AVC2_Control_2_ch23_avc2_nr_mute_lsrs_shift                       (31)
#define  AUDIO_AVC2_Control_2_ch23_avc2_nr_flag_lsrs_shift                       (30)
#define  AUDIO_AVC2_Control_2_ch23_avc2_cnt_thre_lsrs_shift                      (20)
#define  AUDIO_AVC2_Control_2_ch23_avc2_zc_win_lsrs_shift                        (10)
#define  AUDIO_AVC2_Control_2_ch23_avc2_mon_win_lsrs_shift                       (0)
#define  AUDIO_AVC2_Control_2_ch23_avc2_nr_mute_lsrs_mask                        (0x80000000)
#define  AUDIO_AVC2_Control_2_ch23_avc2_nr_flag_lsrs_mask                        (0x40000000)
#define  AUDIO_AVC2_Control_2_ch23_avc2_cnt_thre_lsrs_mask                       (0x3FF00000)
#define  AUDIO_AVC2_Control_2_ch23_avc2_zc_win_lsrs_mask                         (0x000FFC00)
#define  AUDIO_AVC2_Control_2_ch23_avc2_mon_win_lsrs_mask                        (0x000003FF)
#define  AUDIO_AVC2_Control_2_ch23_avc2_nr_mute_lsrs(data)                       (0x80000000&((data)<<31))
#define  AUDIO_AVC2_Control_2_ch23_avc2_nr_flag_lsrs(data)                       (0x40000000&((data)<<30))
#define  AUDIO_AVC2_Control_2_ch23_avc2_cnt_thre_lsrs(data)                      (0x3FF00000&((data)<<20))
#define  AUDIO_AVC2_Control_2_ch23_avc2_zc_win_lsrs(data)                        (0x000FFC00&((data)<<10))
#define  AUDIO_AVC2_Control_2_ch23_avc2_mon_win_lsrs(data)                       (0x000003FF&(data))
#define  AUDIO_AVC2_Control_2_ch23_get_avc2_nr_mute_lsrs(data)                   ((0x80000000&(data))>>31)
#define  AUDIO_AVC2_Control_2_ch23_get_avc2_nr_flag_lsrs(data)                   ((0x40000000&(data))>>30)
#define  AUDIO_AVC2_Control_2_ch23_get_avc2_cnt_thre_lsrs(data)                  ((0x3FF00000&(data))>>20)
#define  AUDIO_AVC2_Control_2_ch23_get_avc2_zc_win_lsrs(data)                    ((0x000FFC00&(data))>>10)
#define  AUDIO_AVC2_Control_2_ch23_get_avc2_mon_win_lsrs(data)                   (0x000003FF&(data))

#define  AUDIO_AVC2_Control_3_ch23                                              0x180067E4
#define  AUDIO_AVC2_Control_3_ch23_reg_addr                                      "0xB80067E4"
#define  AUDIO_AVC2_Control_3_ch23_reg                                           0xB80067E4
#define  AUDIO_AVC2_Control_3_ch23_inst_addr                                     "0x013B"
#define  set_AUDIO_AVC2_Control_3_ch23_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_3_ch23_reg)=data)
#define  get_AUDIO_AVC2_Control_3_ch23_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_3_ch23_reg))
#define  AUDIO_AVC2_Control_3_ch23_avc2_noise_thre_hi_lsrs_shift                 (16)
#define  AUDIO_AVC2_Control_3_ch23_recov_win_max_lsrs_shift                      (8)
#define  AUDIO_AVC2_Control_3_ch23_recov_win_min_lsrs_shift                      (0)
#define  AUDIO_AVC2_Control_3_ch23_avc2_noise_thre_hi_lsrs_mask                  (0xFFFF0000)
#define  AUDIO_AVC2_Control_3_ch23_recov_win_max_lsrs_mask                       (0x0000FF00)
#define  AUDIO_AVC2_Control_3_ch23_recov_win_min_lsrs_mask                       (0x000000FF)
#define  AUDIO_AVC2_Control_3_ch23_avc2_noise_thre_hi_lsrs(data)                 (0xFFFF0000&((data)<<16))
#define  AUDIO_AVC2_Control_3_ch23_recov_win_max_lsrs(data)                      (0x0000FF00&((data)<<8))
#define  AUDIO_AVC2_Control_3_ch23_recov_win_min_lsrs(data)                      (0x000000FF&(data))
#define  AUDIO_AVC2_Control_3_ch23_get_avc2_noise_thre_hi_lsrs(data)             ((0xFFFF0000&(data))>>16)
#define  AUDIO_AVC2_Control_3_ch23_get_recov_win_max_lsrs(data)                  ((0x0000FF00&(data))>>8)
#define  AUDIO_AVC2_Control_3_ch23_get_recov_win_min_lsrs(data)                  (0x000000FF&(data))

#define  AUDIO_AVC2_Control_4_ch23                                              0x180067E8
#define  AUDIO_AVC2_Control_4_ch23_reg_addr                                      "0xB80067E8"
#define  AUDIO_AVC2_Control_4_ch23_reg                                           0xB80067E8
#define  AUDIO_AVC2_Control_4_ch23_inst_addr                                     "0x013C"
#define  set_AUDIO_AVC2_Control_4_ch23_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_4_ch23_reg)=data)
#define  get_AUDIO_AVC2_Control_4_ch23_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_4_ch23_reg))
#define  AUDIO_AVC2_Control_4_ch23_avc2_level_max_lsrs_shift                     (16)
#define  AUDIO_AVC2_Control_4_ch23_avc2_level_min_lsrs_shift                     (0)
#define  AUDIO_AVC2_Control_4_ch23_avc2_level_max_lsrs_mask                      (0xFFFF0000)
#define  AUDIO_AVC2_Control_4_ch23_avc2_level_min_lsrs_mask                      (0x0000FFFF)
#define  AUDIO_AVC2_Control_4_ch23_avc2_level_max_lsrs(data)                     (0xFFFF0000&((data)<<16))
#define  AUDIO_AVC2_Control_4_ch23_avc2_level_min_lsrs(data)                     (0x0000FFFF&(data))
#define  AUDIO_AVC2_Control_4_ch23_get_avc2_level_max_lsrs(data)                 ((0xFFFF0000&(data))>>16)
#define  AUDIO_AVC2_Control_4_ch23_get_avc2_level_min_lsrs(data)                 (0x0000FFFF&(data))

#define  AUDIO_AVC2_Control_1_ch45                                              0x180067EC
#define  AUDIO_AVC2_Control_1_ch45_reg_addr                                      "0xB80067EC"
#define  AUDIO_AVC2_Control_1_ch45_reg                                           0xB80067EC
#define  AUDIO_AVC2_Control_1_ch45_inst_addr                                     "0x013D"
#define  set_AUDIO_AVC2_Control_1_ch45_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_1_ch45_reg)=data)
#define  get_AUDIO_AVC2_Control_1_ch45_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_1_ch45_reg))
#define  AUDIO_AVC2_Control_1_ch45_avc2_nr_det_only_csw_shift                    (31)
#define  AUDIO_AVC2_Control_1_ch45_avc2_lpf_coef_csw_shift                       (27)
#define  AUDIO_AVC2_Control_1_ch45_avc2_vol_detect_csw_shift                     (25)
#define  AUDIO_AVC2_Control_1_ch45_fast_recov_ctrl_csw_shift                     (24)
#define  AUDIO_AVC2_Control_1_ch45_slow_up_db_csw_shift                          (22)
#define  AUDIO_AVC2_Control_1_ch45_fast_up_db_csw_shift                          (20)
#define  AUDIO_AVC2_Control_1_ch45_down_db_csw_shift                             (18)
#define  AUDIO_AVC2_Control_1_ch45_avc2_noise_gain_csw_shift                     (16)
#define  AUDIO_AVC2_Control_1_ch45_avc2_noise_thre_csw_shift                     (0)
#define  AUDIO_AVC2_Control_1_ch45_avc2_nr_det_only_csw_mask                     (0x80000000)
#define  AUDIO_AVC2_Control_1_ch45_avc2_lpf_coef_csw_mask                        (0x38000000)
#define  AUDIO_AVC2_Control_1_ch45_avc2_vol_detect_csw_mask                      (0x06000000)
#define  AUDIO_AVC2_Control_1_ch45_fast_recov_ctrl_csw_mask                      (0x01000000)
#define  AUDIO_AVC2_Control_1_ch45_slow_up_db_csw_mask                           (0x00C00000)
#define  AUDIO_AVC2_Control_1_ch45_fast_up_db_csw_mask                           (0x00300000)
#define  AUDIO_AVC2_Control_1_ch45_down_db_csw_mask                              (0x000C0000)
#define  AUDIO_AVC2_Control_1_ch45_avc2_noise_gain_csw_mask                      (0x00030000)
#define  AUDIO_AVC2_Control_1_ch45_avc2_noise_thre_csw_mask                      (0x0000FFFF)
#define  AUDIO_AVC2_Control_1_ch45_avc2_nr_det_only_csw(data)                    (0x80000000&((data)<<31))
#define  AUDIO_AVC2_Control_1_ch45_avc2_lpf_coef_csw(data)                       (0x38000000&((data)<<27))
#define  AUDIO_AVC2_Control_1_ch45_avc2_vol_detect_csw(data)                     (0x06000000&((data)<<25))
#define  AUDIO_AVC2_Control_1_ch45_fast_recov_ctrl_csw(data)                     (0x01000000&((data)<<24))
#define  AUDIO_AVC2_Control_1_ch45_slow_up_db_csw(data)                          (0x00C00000&((data)<<22))
#define  AUDIO_AVC2_Control_1_ch45_fast_up_db_csw(data)                          (0x00300000&((data)<<20))
#define  AUDIO_AVC2_Control_1_ch45_down_db_csw(data)                             (0x000C0000&((data)<<18))
#define  AUDIO_AVC2_Control_1_ch45_avc2_noise_gain_csw(data)                     (0x00030000&((data)<<16))
#define  AUDIO_AVC2_Control_1_ch45_avc2_noise_thre_csw(data)                     (0x0000FFFF&(data))
#define  AUDIO_AVC2_Control_1_ch45_get_avc2_nr_det_only_csw(data)                ((0x80000000&(data))>>31)
#define  AUDIO_AVC2_Control_1_ch45_get_avc2_lpf_coef_csw(data)                   ((0x38000000&(data))>>27)
#define  AUDIO_AVC2_Control_1_ch45_get_avc2_vol_detect_csw(data)                 ((0x06000000&(data))>>25)
#define  AUDIO_AVC2_Control_1_ch45_get_fast_recov_ctrl_csw(data)                 ((0x01000000&(data))>>24)
#define  AUDIO_AVC2_Control_1_ch45_get_slow_up_db_csw(data)                      ((0x00C00000&(data))>>22)
#define  AUDIO_AVC2_Control_1_ch45_get_fast_up_db_csw(data)                      ((0x00300000&(data))>>20)
#define  AUDIO_AVC2_Control_1_ch45_get_down_db_csw(data)                         ((0x000C0000&(data))>>18)
#define  AUDIO_AVC2_Control_1_ch45_get_avc2_noise_gain_csw(data)                 ((0x00030000&(data))>>16)
#define  AUDIO_AVC2_Control_1_ch45_get_avc2_noise_thre_csw(data)                 (0x0000FFFF&(data))

#define  AUDIO_AVC2_Control_2_ch45                                              0x180067F0
#define  AUDIO_AVC2_Control_2_ch45_reg_addr                                      "0xB80067F0"
#define  AUDIO_AVC2_Control_2_ch45_reg                                           0xB80067F0
#define  AUDIO_AVC2_Control_2_ch45_inst_addr                                     "0x013E"
#define  set_AUDIO_AVC2_Control_2_ch45_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_2_ch45_reg)=data)
#define  get_AUDIO_AVC2_Control_2_ch45_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_2_ch45_reg))
#define  AUDIO_AVC2_Control_2_ch45_avc2_nr_mute_csw_shift                        (31)
#define  AUDIO_AVC2_Control_2_ch45_avc2_nr_flag_csw_shift                        (30)
#define  AUDIO_AVC2_Control_2_ch45_avc2_cnt_thre_csw_shift                       (20)
#define  AUDIO_AVC2_Control_2_ch45_avc2_zc_win_csw_shift                         (10)
#define  AUDIO_AVC2_Control_2_ch45_avc2_mon_win_csw_shift                        (0)
#define  AUDIO_AVC2_Control_2_ch45_avc2_nr_mute_csw_mask                         (0x80000000)
#define  AUDIO_AVC2_Control_2_ch45_avc2_nr_flag_csw_mask                         (0x40000000)
#define  AUDIO_AVC2_Control_2_ch45_avc2_cnt_thre_csw_mask                        (0x3FF00000)
#define  AUDIO_AVC2_Control_2_ch45_avc2_zc_win_csw_mask                          (0x000FFC00)
#define  AUDIO_AVC2_Control_2_ch45_avc2_mon_win_csw_mask                         (0x000003FF)
#define  AUDIO_AVC2_Control_2_ch45_avc2_nr_mute_csw(data)                        (0x80000000&((data)<<31))
#define  AUDIO_AVC2_Control_2_ch45_avc2_nr_flag_csw(data)                        (0x40000000&((data)<<30))
#define  AUDIO_AVC2_Control_2_ch45_avc2_cnt_thre_csw(data)                       (0x3FF00000&((data)<<20))
#define  AUDIO_AVC2_Control_2_ch45_avc2_zc_win_csw(data)                         (0x000FFC00&((data)<<10))
#define  AUDIO_AVC2_Control_2_ch45_avc2_mon_win_csw(data)                        (0x000003FF&(data))
#define  AUDIO_AVC2_Control_2_ch45_get_avc2_nr_mute_csw(data)                    ((0x80000000&(data))>>31)
#define  AUDIO_AVC2_Control_2_ch45_get_avc2_nr_flag_csw(data)                    ((0x40000000&(data))>>30)
#define  AUDIO_AVC2_Control_2_ch45_get_avc2_cnt_thre_csw(data)                   ((0x3FF00000&(data))>>20)
#define  AUDIO_AVC2_Control_2_ch45_get_avc2_zc_win_csw(data)                     ((0x000FFC00&(data))>>10)
#define  AUDIO_AVC2_Control_2_ch45_get_avc2_mon_win_csw(data)                    (0x000003FF&(data))

#define  AUDIO_AVC2_Control_3_ch45                                              0x180067F4
#define  AUDIO_AVC2_Control_3_ch45_reg_addr                                      "0xB80067F4"
#define  AUDIO_AVC2_Control_3_ch45_reg                                           0xB80067F4
#define  AUDIO_AVC2_Control_3_ch45_inst_addr                                     "0x013F"
#define  set_AUDIO_AVC2_Control_3_ch45_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_3_ch45_reg)=data)
#define  get_AUDIO_AVC2_Control_3_ch45_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_3_ch45_reg))
#define  AUDIO_AVC2_Control_3_ch45_avc2_noise_thre_hi_csw_shift                  (16)
#define  AUDIO_AVC2_Control_3_ch45_recov_win_max_csw_shift                       (8)
#define  AUDIO_AVC2_Control_3_ch45_recov_win_min_csw_shift                       (0)
#define  AUDIO_AVC2_Control_3_ch45_avc2_noise_thre_hi_csw_mask                   (0xFFFF0000)
#define  AUDIO_AVC2_Control_3_ch45_recov_win_max_csw_mask                        (0x0000FF00)
#define  AUDIO_AVC2_Control_3_ch45_recov_win_min_csw_mask                        (0x000000FF)
#define  AUDIO_AVC2_Control_3_ch45_avc2_noise_thre_hi_csw(data)                  (0xFFFF0000&((data)<<16))
#define  AUDIO_AVC2_Control_3_ch45_recov_win_max_csw(data)                       (0x0000FF00&((data)<<8))
#define  AUDIO_AVC2_Control_3_ch45_recov_win_min_csw(data)                       (0x000000FF&(data))
#define  AUDIO_AVC2_Control_3_ch45_get_avc2_noise_thre_hi_csw(data)              ((0xFFFF0000&(data))>>16)
#define  AUDIO_AVC2_Control_3_ch45_get_recov_win_max_csw(data)                   ((0x0000FF00&(data))>>8)
#define  AUDIO_AVC2_Control_3_ch45_get_recov_win_min_csw(data)                   (0x000000FF&(data))

#define  AUDIO_AVC2_Control_4_ch45                                              0x180067F8
#define  AUDIO_AVC2_Control_4_ch45_reg_addr                                      "0xB80067F8"
#define  AUDIO_AVC2_Control_4_ch45_reg                                           0xB80067F8
#define  AUDIO_AVC2_Control_4_ch45_inst_addr                                     "0x0140"
#define  set_AUDIO_AVC2_Control_4_ch45_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_4_ch45_reg)=data)
#define  get_AUDIO_AVC2_Control_4_ch45_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_4_ch45_reg))
#define  AUDIO_AVC2_Control_4_ch45_avc2_level_max_csw_shift                      (16)
#define  AUDIO_AVC2_Control_4_ch45_avc2_level_min_csw_shift                      (0)
#define  AUDIO_AVC2_Control_4_ch45_avc2_level_max_csw_mask                       (0xFFFF0000)
#define  AUDIO_AVC2_Control_4_ch45_avc2_level_min_csw_mask                       (0x0000FFFF)
#define  AUDIO_AVC2_Control_4_ch45_avc2_level_max_csw(data)                      (0xFFFF0000&((data)<<16))
#define  AUDIO_AVC2_Control_4_ch45_avc2_level_min_csw(data)                      (0x0000FFFF&(data))
#define  AUDIO_AVC2_Control_4_ch45_get_avc2_level_max_csw(data)                  ((0xFFFF0000&(data))>>16)
#define  AUDIO_AVC2_Control_4_ch45_get_avc2_level_min_csw(data)                  (0x0000FFFF&(data))

#define  AUDIO_AVC2_Control_1_ch67                                              0x180067FC
#define  AUDIO_AVC2_Control_1_ch67_reg_addr                                      "0xB80067FC"
#define  AUDIO_AVC2_Control_1_ch67_reg                                           0xB80067FC
#define  AUDIO_AVC2_Control_1_ch67_inst_addr                                     "0x0141"
#define  set_AUDIO_AVC2_Control_1_ch67_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_1_ch67_reg)=data)
#define  get_AUDIO_AVC2_Control_1_ch67_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_1_ch67_reg))
#define  AUDIO_AVC2_Control_1_ch67_avc2_nr_det_only_ch67_shift                   (31)
#define  AUDIO_AVC2_Control_1_ch67_avc2_lpf_coef_ch67_shift                      (27)
#define  AUDIO_AVC2_Control_1_ch67_avc2_vol_detect_ch67_shift                    (25)
#define  AUDIO_AVC2_Control_1_ch67_fast_recov_ctrl_ch67_shift                    (24)
#define  AUDIO_AVC2_Control_1_ch67_slow_up_db_ch67_shift                         (22)
#define  AUDIO_AVC2_Control_1_ch67_fast_up_db_ch67_shift                         (20)
#define  AUDIO_AVC2_Control_1_ch67_down_db_ch67_shift                            (18)
#define  AUDIO_AVC2_Control_1_ch67_avc2_noise_gain_ch67_shift                    (16)
#define  AUDIO_AVC2_Control_1_ch67_avc2_noise_thre_ch67_shift                    (0)
#define  AUDIO_AVC2_Control_1_ch67_avc2_nr_det_only_ch67_mask                    (0x80000000)
#define  AUDIO_AVC2_Control_1_ch67_avc2_lpf_coef_ch67_mask                       (0x38000000)
#define  AUDIO_AVC2_Control_1_ch67_avc2_vol_detect_ch67_mask                     (0x06000000)
#define  AUDIO_AVC2_Control_1_ch67_fast_recov_ctrl_ch67_mask                     (0x01000000)
#define  AUDIO_AVC2_Control_1_ch67_slow_up_db_ch67_mask                          (0x00C00000)
#define  AUDIO_AVC2_Control_1_ch67_fast_up_db_ch67_mask                          (0x00300000)
#define  AUDIO_AVC2_Control_1_ch67_down_db_ch67_mask                             (0x000C0000)
#define  AUDIO_AVC2_Control_1_ch67_avc2_noise_gain_ch67_mask                     (0x00030000)
#define  AUDIO_AVC2_Control_1_ch67_avc2_noise_thre_ch67_mask                     (0x0000FFFF)
#define  AUDIO_AVC2_Control_1_ch67_avc2_nr_det_only_ch67(data)                   (0x80000000&((data)<<31))
#define  AUDIO_AVC2_Control_1_ch67_avc2_lpf_coef_ch67(data)                      (0x38000000&((data)<<27))
#define  AUDIO_AVC2_Control_1_ch67_avc2_vol_detect_ch67(data)                    (0x06000000&((data)<<25))
#define  AUDIO_AVC2_Control_1_ch67_fast_recov_ctrl_ch67(data)                    (0x01000000&((data)<<24))
#define  AUDIO_AVC2_Control_1_ch67_slow_up_db_ch67(data)                         (0x00C00000&((data)<<22))
#define  AUDIO_AVC2_Control_1_ch67_fast_up_db_ch67(data)                         (0x00300000&((data)<<20))
#define  AUDIO_AVC2_Control_1_ch67_down_db_ch67(data)                            (0x000C0000&((data)<<18))
#define  AUDIO_AVC2_Control_1_ch67_avc2_noise_gain_ch67(data)                    (0x00030000&((data)<<16))
#define  AUDIO_AVC2_Control_1_ch67_avc2_noise_thre_ch67(data)                    (0x0000FFFF&(data))
#define  AUDIO_AVC2_Control_1_ch67_get_avc2_nr_det_only_ch67(data)               ((0x80000000&(data))>>31)
#define  AUDIO_AVC2_Control_1_ch67_get_avc2_lpf_coef_ch67(data)                  ((0x38000000&(data))>>27)
#define  AUDIO_AVC2_Control_1_ch67_get_avc2_vol_detect_ch67(data)                ((0x06000000&(data))>>25)
#define  AUDIO_AVC2_Control_1_ch67_get_fast_recov_ctrl_ch67(data)                ((0x01000000&(data))>>24)
#define  AUDIO_AVC2_Control_1_ch67_get_slow_up_db_ch67(data)                     ((0x00C00000&(data))>>22)
#define  AUDIO_AVC2_Control_1_ch67_get_fast_up_db_ch67(data)                     ((0x00300000&(data))>>20)
#define  AUDIO_AVC2_Control_1_ch67_get_down_db_ch67(data)                        ((0x000C0000&(data))>>18)
#define  AUDIO_AVC2_Control_1_ch67_get_avc2_noise_gain_ch67(data)                ((0x00030000&(data))>>16)
#define  AUDIO_AVC2_Control_1_ch67_get_avc2_noise_thre_ch67(data)                (0x0000FFFF&(data))

#define  AUDIO_AVC2_Control_2_ch67                                              0x18006800
#define  AUDIO_AVC2_Control_2_ch67_reg_addr                                      "0xB8006800"
#define  AUDIO_AVC2_Control_2_ch67_reg                                           0xB8006800
#define  AUDIO_AVC2_Control_2_ch67_inst_addr                                     "0x0142"
#define  set_AUDIO_AVC2_Control_2_ch67_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_2_ch67_reg)=data)
#define  get_AUDIO_AVC2_Control_2_ch67_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_2_ch67_reg))
#define  AUDIO_AVC2_Control_2_ch67_avc2_nr_mute_ch67_shift                       (31)
#define  AUDIO_AVC2_Control_2_ch67_avc2_nr_flag_ch67_shift                       (30)
#define  AUDIO_AVC2_Control_2_ch67_avc2_cnt_thre_ch67_shift                      (20)
#define  AUDIO_AVC2_Control_2_ch67_avc2_zc_win_ch67_shift                        (10)
#define  AUDIO_AVC2_Control_2_ch67_avc2_mon_win_ch67_shift                       (0)
#define  AUDIO_AVC2_Control_2_ch67_avc2_nr_mute_ch67_mask                        (0x80000000)
#define  AUDIO_AVC2_Control_2_ch67_avc2_nr_flag_ch67_mask                        (0x40000000)
#define  AUDIO_AVC2_Control_2_ch67_avc2_cnt_thre_ch67_mask                       (0x3FF00000)
#define  AUDIO_AVC2_Control_2_ch67_avc2_zc_win_ch67_mask                         (0x000FFC00)
#define  AUDIO_AVC2_Control_2_ch67_avc2_mon_win_ch67_mask                        (0x000003FF)
#define  AUDIO_AVC2_Control_2_ch67_avc2_nr_mute_ch67(data)                       (0x80000000&((data)<<31))
#define  AUDIO_AVC2_Control_2_ch67_avc2_nr_flag_ch67(data)                       (0x40000000&((data)<<30))
#define  AUDIO_AVC2_Control_2_ch67_avc2_cnt_thre_ch67(data)                      (0x3FF00000&((data)<<20))
#define  AUDIO_AVC2_Control_2_ch67_avc2_zc_win_ch67(data)                        (0x000FFC00&((data)<<10))
#define  AUDIO_AVC2_Control_2_ch67_avc2_mon_win_ch67(data)                       (0x000003FF&(data))
#define  AUDIO_AVC2_Control_2_ch67_get_avc2_nr_mute_ch67(data)                   ((0x80000000&(data))>>31)
#define  AUDIO_AVC2_Control_2_ch67_get_avc2_nr_flag_ch67(data)                   ((0x40000000&(data))>>30)
#define  AUDIO_AVC2_Control_2_ch67_get_avc2_cnt_thre_ch67(data)                  ((0x3FF00000&(data))>>20)
#define  AUDIO_AVC2_Control_2_ch67_get_avc2_zc_win_ch67(data)                    ((0x000FFC00&(data))>>10)
#define  AUDIO_AVC2_Control_2_ch67_get_avc2_mon_win_ch67(data)                   (0x000003FF&(data))

#define  AUDIO_AVC2_Control_3_ch67                                              0x18006804
#define  AUDIO_AVC2_Control_3_ch67_reg_addr                                      "0xB8006804"
#define  AUDIO_AVC2_Control_3_ch67_reg                                           0xB8006804
#define  AUDIO_AVC2_Control_3_ch67_inst_addr                                     "0x0143"
#define  set_AUDIO_AVC2_Control_3_ch67_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_3_ch67_reg)=data)
#define  get_AUDIO_AVC2_Control_3_ch67_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_3_ch67_reg))
#define  AUDIO_AVC2_Control_3_ch67_avc2_noise_thre_hi_ch67_shift                 (16)
#define  AUDIO_AVC2_Control_3_ch67_recov_win_max_ch67_shift                      (8)
#define  AUDIO_AVC2_Control_3_ch67_recov_win_min_ch67_shift                      (0)
#define  AUDIO_AVC2_Control_3_ch67_avc2_noise_thre_hi_ch67_mask                  (0xFFFF0000)
#define  AUDIO_AVC2_Control_3_ch67_recov_win_max_ch67_mask                       (0x0000FF00)
#define  AUDIO_AVC2_Control_3_ch67_recov_win_min_ch67_mask                       (0x000000FF)
#define  AUDIO_AVC2_Control_3_ch67_avc2_noise_thre_hi_ch67(data)                 (0xFFFF0000&((data)<<16))
#define  AUDIO_AVC2_Control_3_ch67_recov_win_max_ch67(data)                      (0x0000FF00&((data)<<8))
#define  AUDIO_AVC2_Control_3_ch67_recov_win_min_ch67(data)                      (0x000000FF&(data))
#define  AUDIO_AVC2_Control_3_ch67_get_avc2_noise_thre_hi_ch67(data)             ((0xFFFF0000&(data))>>16)
#define  AUDIO_AVC2_Control_3_ch67_get_recov_win_max_ch67(data)                  ((0x0000FF00&(data))>>8)
#define  AUDIO_AVC2_Control_3_ch67_get_recov_win_min_ch67(data)                  (0x000000FF&(data))

#define  AUDIO_AVC2_Control_4_ch67                                              0x18006808
#define  AUDIO_AVC2_Control_4_ch67_reg_addr                                      "0xB8006808"
#define  AUDIO_AVC2_Control_4_ch67_reg                                           0xB8006808
#define  AUDIO_AVC2_Control_4_ch67_inst_addr                                     "0x0144"
#define  set_AUDIO_AVC2_Control_4_ch67_reg(data)                                 (*((volatile unsigned int*)AUDIO_AVC2_Control_4_ch67_reg)=data)
#define  get_AUDIO_AVC2_Control_4_ch67_reg                                       (*((volatile unsigned int*)AUDIO_AVC2_Control_4_ch67_reg))
#define  AUDIO_AVC2_Control_4_ch67_avc2_level_max_ch67_shift                     (16)
#define  AUDIO_AVC2_Control_4_ch67_avc2_level_min_ch67_shift                     (0)
#define  AUDIO_AVC2_Control_4_ch67_avc2_level_max_ch67_mask                      (0xFFFF0000)
#define  AUDIO_AVC2_Control_4_ch67_avc2_level_min_ch67_mask                      (0x0000FFFF)
#define  AUDIO_AVC2_Control_4_ch67_avc2_level_max_ch67(data)                     (0xFFFF0000&((data)<<16))
#define  AUDIO_AVC2_Control_4_ch67_avc2_level_min_ch67(data)                     (0x0000FFFF&(data))
#define  AUDIO_AVC2_Control_4_ch67_get_avc2_level_max_ch67(data)                 ((0xFFFF0000&(data))>>16)
#define  AUDIO_AVC2_Control_4_ch67_get_avc2_level_min_ch67(data)                 (0x0000FFFF&(data))

#define  AUDIO_hw_out_trans                                                     0x1800680C
#define  AUDIO_hw_out_trans_reg_addr                                             "0xB800680C"
#define  AUDIO_hw_out_trans_reg                                                  0xB800680C
#define  AUDIO_hw_out_trans_inst_addr                                            "0x0145"
#define  set_AUDIO_hw_out_trans_reg(data)                                        (*((volatile unsigned int*)AUDIO_hw_out_trans_reg)=data)
#define  get_AUDIO_hw_out_trans_reg                                              (*((volatile unsigned int*)AUDIO_hw_out_trans_reg))
#define  AUDIO_hw_out_trans_hw_mixing_sel_shift                                  (4)
#define  AUDIO_hw_out_trans_w_ch_01_factor_shift                                 (2)
#define  AUDIO_hw_out_trans_w_ch_mix_factor_shift                                (0)
#define  AUDIO_hw_out_trans_hw_mixing_sel_mask                                   (0x00000030)
#define  AUDIO_hw_out_trans_w_ch_01_factor_mask                                  (0x0000000C)
#define  AUDIO_hw_out_trans_w_ch_mix_factor_mask                                 (0x00000003)
#define  AUDIO_hw_out_trans_hw_mixing_sel(data)                                  (0x00000030&((data)<<4))
#define  AUDIO_hw_out_trans_w_ch_01_factor(data)                                 (0x0000000C&((data)<<2))
#define  AUDIO_hw_out_trans_w_ch_mix_factor(data)                                (0x00000003&(data))
#define  AUDIO_hw_out_trans_get_hw_mixing_sel(data)                              ((0x00000030&(data))>>4)
#define  AUDIO_hw_out_trans_get_w_ch_01_factor(data)                             ((0x0000000C&(data))>>2)
#define  AUDIO_hw_out_trans_get_w_ch_mix_factor(data)                            (0x00000003&(data))

#define  AUDIO_System_Int_En                                                    0x18006810
#define  AUDIO_System_Int_En_reg_addr                                            "0xB8006810"
#define  AUDIO_System_Int_En_reg                                                 0xB8006810
#define  AUDIO_System_Int_En_inst_addr                                           "0x0146"
#define  set_AUDIO_System_Int_En_reg(data)                                       (*((volatile unsigned int*)AUDIO_System_Int_En_reg)=data)
#define  get_AUDIO_System_Int_En_reg                                             (*((volatile unsigned int*)AUDIO_System_Int_En_reg))
#define  AUDIO_System_Int_En_eq_ovf_en_shift                                     (17)
#define  AUDIO_System_Int_En_loudness_ovf_en_shift                               (16)
#define  AUDIO_System_Int_En_dvol_int_en_shift                                   (15)
#define  AUDIO_System_Int_En_dvol_done_shift                                     (2)
#define  AUDIO_System_Int_En_eq_ovf_shift                                        (1)
#define  AUDIO_System_Int_En_loudness_ovf_shift                                  (0)
#define  AUDIO_System_Int_En_eq_ovf_en_mask                                      (0x00020000)
#define  AUDIO_System_Int_En_loudness_ovf_en_mask                                (0x00010000)
#define  AUDIO_System_Int_En_dvol_int_en_mask                                    (0x00008000)
#define  AUDIO_System_Int_En_dvol_done_mask                                      (0x00000004)
#define  AUDIO_System_Int_En_eq_ovf_mask                                         (0x00000002)
#define  AUDIO_System_Int_En_loudness_ovf_mask                                   (0x00000001)
#define  AUDIO_System_Int_En_eq_ovf_en(data)                                     (0x00020000&((data)<<17))
#define  AUDIO_System_Int_En_loudness_ovf_en(data)                               (0x00010000&((data)<<16))
#define  AUDIO_System_Int_En_dvol_int_en(data)                                   (0x00008000&((data)<<15))
#define  AUDIO_System_Int_En_dvol_done(data)                                     (0x00000004&((data)<<2))
#define  AUDIO_System_Int_En_eq_ovf(data)                                        (0x00000002&((data)<<1))
#define  AUDIO_System_Int_En_loudness_ovf(data)                                  (0x00000001&(data))
#define  AUDIO_System_Int_En_get_eq_ovf_en(data)                                 ((0x00020000&(data))>>17)
#define  AUDIO_System_Int_En_get_loudness_ovf_en(data)                           ((0x00010000&(data))>>16)
#define  AUDIO_System_Int_En_get_dvol_int_en(data)                               ((0x00008000&(data))>>15)
#define  AUDIO_System_Int_En_get_dvol_done(data)                                 ((0x00000004&(data))>>2)
#define  AUDIO_System_Int_En_get_eq_ovf(data)                                    ((0x00000002&(data))>>1)
#define  AUDIO_System_Int_En_get_loudness_ovf(data)                              (0x00000001&(data))

#define  AUDIO_avc_lp_out_control                                               0x18006814
#define  AUDIO_avc_lp_out_control_reg_addr                                       "0xB8006814"
#define  AUDIO_avc_lp_out_control_reg                                            0xB8006814
#define  AUDIO_avc_lp_out_control_inst_addr                                      "0x0147"
#define  set_AUDIO_avc_lp_out_control_reg(data)                                  (*((volatile unsigned int*)AUDIO_avc_lp_out_control_reg)=data)
#define  get_AUDIO_avc_lp_out_control_reg                                        (*((volatile unsigned int*)AUDIO_avc_lp_out_control_reg))
#define  AUDIO_avc_lp_out_control_avc_lp_out_shift                               (0)
#define  AUDIO_avc_lp_out_control_avc_lp_out_mask                                (0x00FFFFFF)
#define  AUDIO_avc_lp_out_control_avc_lp_out(data)                               (0x00FFFFFF&(data))
#define  AUDIO_avc_lp_out_control_get_avc_lp_out(data)                           (0x00FFFFFF&(data))

#define  AUDIO_Dummy_6718                                                       0x18006818
#define  AUDIO_Dummy_6718_reg_addr                                               "0xB8006818"
#define  AUDIO_Dummy_6718_reg                                                    0xB8006818
#define  AUDIO_Dummy_6718_inst_addr                                              "0x0148"
#define  set_AUDIO_Dummy_6718_reg(data)                                          (*((volatile unsigned int*)AUDIO_Dummy_6718_reg)=data)
#define  get_AUDIO_Dummy_6718_reg                                                (*((volatile unsigned int*)AUDIO_Dummy_6718_reg))
#define  AUDIO_Dummy_6718_dummy_31_0_shift                                       (0)
#define  AUDIO_Dummy_6718_dummy_31_0_mask                                        (0xFFFFFFFF)
#define  AUDIO_Dummy_6718_dummy_31_0(data)                                       (0xFFFFFFFF&(data))
#define  AUDIO_Dummy_6718_get_dummy_31_0(data)                                   (0xFFFFFFFF&(data))

#define  AUDIO_Dummy_671c                                                       0x1800681C
#define  AUDIO_Dummy_671c_reg_addr                                               "0xB800681C"
#define  AUDIO_Dummy_671c_reg                                                    0xB800681C
#define  AUDIO_Dummy_671c_inst_addr                                              "0x0149"
#define  set_AUDIO_Dummy_671c_reg(data)                                          (*((volatile unsigned int*)AUDIO_Dummy_671c_reg)=data)
#define  get_AUDIO_Dummy_671c_reg                                                (*((volatile unsigned int*)AUDIO_Dummy_671c_reg))
#define  AUDIO_Dummy_671c_dummy_31_0_shift                                       (0)
#define  AUDIO_Dummy_671c_dummy_31_0_mask                                        (0xFFFFFFFF)
#define  AUDIO_Dummy_671c_dummy_31_0(data)                                       (0xFFFFFFFF&(data))
#define  AUDIO_Dummy_671c_get_dummy_31_0(data)                                   (0xFFFFFFFF&(data))

#define  AUDIO_hw_in_pre_scale                                                  0x18006830
#define  AUDIO_hw_in_pre_scale_reg_addr                                          "0xB8006830"
#define  AUDIO_hw_in_pre_scale_reg                                               0xB8006830
#define  AUDIO_hw_in_pre_scale_inst_addr                                         "0x014A"
#define  set_AUDIO_hw_in_pre_scale_reg(data)                                     (*((volatile unsigned int*)AUDIO_hw_in_pre_scale_reg)=data)
#define  get_AUDIO_hw_in_pre_scale_reg                                           (*((volatile unsigned int*)AUDIO_hw_in_pre_scale_reg))
#define  AUDIO_hw_in_pre_scale_ch67_scale_a_shift                                (28)
#define  AUDIO_hw_in_pre_scale_ch67_scale_b_shift                                (24)
#define  AUDIO_hw_in_pre_scale_ch45_scale_a_shift                                (20)
#define  AUDIO_hw_in_pre_scale_ch45_scale_b_shift                                (16)
#define  AUDIO_hw_in_pre_scale_ch23_scale_a_shift                                (12)
#define  AUDIO_hw_in_pre_scale_ch23_scale_b_shift                                (8)
#define  AUDIO_hw_in_pre_scale_ch01_scale_a_shift                                (4)
#define  AUDIO_hw_in_pre_scale_ch01_scale_b_shift                                (0)
#define  AUDIO_hw_in_pre_scale_ch67_scale_a_mask                                 (0xF0000000)
#define  AUDIO_hw_in_pre_scale_ch67_scale_b_mask                                 (0x07000000)
#define  AUDIO_hw_in_pre_scale_ch45_scale_a_mask                                 (0x00F00000)
#define  AUDIO_hw_in_pre_scale_ch45_scale_b_mask                                 (0x00070000)
#define  AUDIO_hw_in_pre_scale_ch23_scale_a_mask                                 (0x0000F000)
#define  AUDIO_hw_in_pre_scale_ch23_scale_b_mask                                 (0x00000700)
#define  AUDIO_hw_in_pre_scale_ch01_scale_a_mask                                 (0x000000F0)
#define  AUDIO_hw_in_pre_scale_ch01_scale_b_mask                                 (0x00000007)
#define  AUDIO_hw_in_pre_scale_ch67_scale_a(data)                                (0xF0000000&((data)<<28))
#define  AUDIO_hw_in_pre_scale_ch67_scale_b(data)                                (0x07000000&((data)<<24))
#define  AUDIO_hw_in_pre_scale_ch45_scale_a(data)                                (0x00F00000&((data)<<20))
#define  AUDIO_hw_in_pre_scale_ch45_scale_b(data)                                (0x00070000&((data)<<16))
#define  AUDIO_hw_in_pre_scale_ch23_scale_a(data)                                (0x0000F000&((data)<<12))
#define  AUDIO_hw_in_pre_scale_ch23_scale_b(data)                                (0x00000700&((data)<<8))
#define  AUDIO_hw_in_pre_scale_ch01_scale_a(data)                                (0x000000F0&((data)<<4))
#define  AUDIO_hw_in_pre_scale_ch01_scale_b(data)                                (0x00000007&(data))
#define  AUDIO_hw_in_pre_scale_get_ch67_scale_a(data)                            ((0xF0000000&(data))>>28)
#define  AUDIO_hw_in_pre_scale_get_ch67_scale_b(data)                            ((0x07000000&(data))>>24)
#define  AUDIO_hw_in_pre_scale_get_ch45_scale_a(data)                            ((0x00F00000&(data))>>20)
#define  AUDIO_hw_in_pre_scale_get_ch45_scale_b(data)                            ((0x00070000&(data))>>16)
#define  AUDIO_hw_in_pre_scale_get_ch23_scale_a(data)                            ((0x0000F000&(data))>>12)
#define  AUDIO_hw_in_pre_scale_get_ch23_scale_b(data)                            ((0x00000700&(data))>>8)
#define  AUDIO_hw_in_pre_scale_get_ch01_scale_a(data)                            ((0x000000F0&(data))>>4)
#define  AUDIO_hw_in_pre_scale_get_ch01_scale_b(data)                            (0x00000007&(data))

#define  AUDIO_hw_distortion_Control_0                                          0x18006834
#define  AUDIO_hw_distortion_Control_0_reg_addr                                  "0xB8006834"
#define  AUDIO_hw_distortion_Control_0_reg                                       0xB8006834
#define  AUDIO_hw_distortion_Control_0_inst_addr                                 "0x014B"
#define  set_AUDIO_hw_distortion_Control_0_reg(data)                             (*((volatile unsigned int*)AUDIO_hw_distortion_Control_0_reg)=data)
#define  get_AUDIO_hw_distortion_Control_0_reg                                   (*((volatile unsigned int*)AUDIO_hw_distortion_Control_0_reg))
#define  AUDIO_hw_distortion_Control_0_dist_vol_detect_shift                     (30)
#define  AUDIO_hw_distortion_Control_0_dist_down_db_fine_shift                   (26)
#define  AUDIO_hw_distortion_Control_0_dist_down_db_shift                        (24)
#define  AUDIO_hw_distortion_Control_0_dist_coef_shift                           (20)
#define  AUDIO_hw_distortion_Control_0_dist_high_thre_shift                      (12)
#define  AUDIO_hw_distortion_Control_0_dist_low_thre_shift                       (4)
#define  AUDIO_hw_distortion_Control_0_dist_up_db_fine_shift                     (2)
#define  AUDIO_hw_distortion_Control_0_dist_up_db_shift                          (0)
#define  AUDIO_hw_distortion_Control_0_dist_vol_detect_mask                      (0xC0000000)
#define  AUDIO_hw_distortion_Control_0_dist_down_db_fine_mask                    (0x0C000000)
#define  AUDIO_hw_distortion_Control_0_dist_down_db_mask                         (0x03000000)
#define  AUDIO_hw_distortion_Control_0_dist_coef_mask                            (0x00700000)
#define  AUDIO_hw_distortion_Control_0_dist_high_thre_mask                       (0x000FF000)
#define  AUDIO_hw_distortion_Control_0_dist_low_thre_mask                        (0x00000FF0)
#define  AUDIO_hw_distortion_Control_0_dist_up_db_fine_mask                      (0x0000000C)
#define  AUDIO_hw_distortion_Control_0_dist_up_db_mask                           (0x00000003)
#define  AUDIO_hw_distortion_Control_0_dist_vol_detect(data)                     (0xC0000000&((data)<<30))
#define  AUDIO_hw_distortion_Control_0_dist_down_db_fine(data)                   (0x0C000000&((data)<<26))
#define  AUDIO_hw_distortion_Control_0_dist_down_db(data)                        (0x03000000&((data)<<24))
#define  AUDIO_hw_distortion_Control_0_dist_coef(data)                           (0x00700000&((data)<<20))
#define  AUDIO_hw_distortion_Control_0_dist_high_thre(data)                      (0x000FF000&((data)<<12))
#define  AUDIO_hw_distortion_Control_0_dist_low_thre(data)                       (0x00000FF0&((data)<<4))
#define  AUDIO_hw_distortion_Control_0_dist_up_db_fine(data)                     (0x0000000C&((data)<<2))
#define  AUDIO_hw_distortion_Control_0_dist_up_db(data)                          (0x00000003&(data))
#define  AUDIO_hw_distortion_Control_0_get_dist_vol_detect(data)                 ((0xC0000000&(data))>>30)
#define  AUDIO_hw_distortion_Control_0_get_dist_down_db_fine(data)               ((0x0C000000&(data))>>26)
#define  AUDIO_hw_distortion_Control_0_get_dist_down_db(data)                    ((0x03000000&(data))>>24)
#define  AUDIO_hw_distortion_Control_0_get_dist_coef(data)                       ((0x00700000&(data))>>20)
#define  AUDIO_hw_distortion_Control_0_get_dist_high_thre(data)                  ((0x000FF000&(data))>>12)
#define  AUDIO_hw_distortion_Control_0_get_dist_low_thre(data)                   ((0x00000FF0&(data))>>4)
#define  AUDIO_hw_distortion_Control_0_get_dist_up_db_fine(data)                 ((0x0000000C&(data))>>2)
#define  AUDIO_hw_distortion_Control_0_get_dist_up_db(data)                      (0x00000003&(data))

#define  AUDIO_hw_distortion_Control_1                                          0x18006838
#define  AUDIO_hw_distortion_Control_1_reg_addr                                  "0xB8006838"
#define  AUDIO_hw_distortion_Control_1_reg                                       0xB8006838
#define  AUDIO_hw_distortion_Control_1_inst_addr                                 "0x014C"
#define  set_AUDIO_hw_distortion_Control_1_reg(data)                             (*((volatile unsigned int*)AUDIO_hw_distortion_Control_1_reg)=data)
#define  get_AUDIO_hw_distortion_Control_1_reg                                   (*((volatile unsigned int*)AUDIO_hw_distortion_Control_1_reg))
#define  AUDIO_hw_distortion_Control_1_dist_cnt_thre_shift                       (20)
#define  AUDIO_hw_distortion_Control_1_dist_zc_win_shift                         (10)
#define  AUDIO_hw_distortion_Control_1_dist_mon_win_shift                        (0)
#define  AUDIO_hw_distortion_Control_1_dist_cnt_thre_mask                        (0x3FF00000)
#define  AUDIO_hw_distortion_Control_1_dist_zc_win_mask                          (0x000FFC00)
#define  AUDIO_hw_distortion_Control_1_dist_mon_win_mask                         (0x000003FF)
#define  AUDIO_hw_distortion_Control_1_dist_cnt_thre(data)                       (0x3FF00000&((data)<<20))
#define  AUDIO_hw_distortion_Control_1_dist_zc_win(data)                         (0x000FFC00&((data)<<10))
#define  AUDIO_hw_distortion_Control_1_dist_mon_win(data)                        (0x000003FF&(data))
#define  AUDIO_hw_distortion_Control_1_get_dist_cnt_thre(data)                   ((0x3FF00000&(data))>>20)
#define  AUDIO_hw_distortion_Control_1_get_dist_zc_win(data)                     ((0x000FFC00&(data))>>10)
#define  AUDIO_hw_distortion_Control_1_get_dist_mon_win(data)                    (0x000003FF&(data))

#define  AUDIO_AVC2_distortion_control                                          0x1800683C
#define  AUDIO_AVC2_distortion_control_reg_addr                                  "0xB800683C"
#define  AUDIO_AVC2_distortion_control_reg                                       0xB800683C
#define  AUDIO_AVC2_distortion_control_inst_addr                                 "0x014D"
#define  set_AUDIO_AVC2_distortion_control_reg(data)                             (*((volatile unsigned int*)AUDIO_AVC2_distortion_control_reg)=data)
#define  get_AUDIO_AVC2_distortion_control_reg                                   (*((volatile unsigned int*)AUDIO_AVC2_distortion_control_reg))
#define  AUDIO_AVC2_distortion_control_avc2_count_reset_shift                    (31)
#define  AUDIO_AVC2_distortion_control_avc2_detect_samples_shift                 (16)
#define  AUDIO_AVC2_distortion_control_avc2_hi_threshold_shift                   (0)
#define  AUDIO_AVC2_distortion_control_avc2_count_reset_mask                     (0x80000000)
#define  AUDIO_AVC2_distortion_control_avc2_detect_samples_mask                  (0x7FFF0000)
#define  AUDIO_AVC2_distortion_control_avc2_hi_threshold_mask                    (0x0000FFFF)
#define  AUDIO_AVC2_distortion_control_avc2_count_reset(data)                    (0x80000000&((data)<<31))
#define  AUDIO_AVC2_distortion_control_avc2_detect_samples(data)                 (0x7FFF0000&((data)<<16))
#define  AUDIO_AVC2_distortion_control_avc2_hi_threshold(data)                   (0x0000FFFF&(data))
#define  AUDIO_AVC2_distortion_control_get_avc2_count_reset(data)                ((0x80000000&(data))>>31)
#define  AUDIO_AVC2_distortion_control_get_avc2_detect_samples(data)             ((0x7FFF0000&(data))>>16)
#define  AUDIO_AVC2_distortion_control_get_avc2_hi_threshold(data)               (0x0000FFFF&(data))

#define  AUDIO_AVC2_distortion_status_l                                         0x18006840
#define  AUDIO_AVC2_distortion_status_l_reg_addr                                 "0xB8006840"
#define  AUDIO_AVC2_distortion_status_l_reg                                      0xB8006840
#define  AUDIO_AVC2_distortion_status_l_inst_addr                                "0x014E"
#define  set_AUDIO_AVC2_distortion_status_l_reg(data)                            (*((volatile unsigned int*)AUDIO_AVC2_distortion_status_l_reg)=data)
#define  get_AUDIO_AVC2_distortion_status_l_reg                                  (*((volatile unsigned int*)AUDIO_AVC2_distortion_status_l_reg))
#define  AUDIO_AVC2_distortion_status_l_avc2_count_l_shift                       (16)
#define  AUDIO_AVC2_distortion_status_l_avc2_max_energy_l_shift                  (0)
#define  AUDIO_AVC2_distortion_status_l_avc2_count_l_mask                        (0x7FFF0000)
#define  AUDIO_AVC2_distortion_status_l_avc2_max_energy_l_mask                   (0x0000FFFF)
#define  AUDIO_AVC2_distortion_status_l_avc2_count_l(data)                       (0x7FFF0000&((data)<<16))
#define  AUDIO_AVC2_distortion_status_l_avc2_max_energy_l(data)                  (0x0000FFFF&(data))
#define  AUDIO_AVC2_distortion_status_l_get_avc2_count_l(data)                   ((0x7FFF0000&(data))>>16)
#define  AUDIO_AVC2_distortion_status_l_get_avc2_max_energy_l(data)              (0x0000FFFF&(data))

#define  AUDIO_AVC2_distortion_status_r                                         0x18006844
#define  AUDIO_AVC2_distortion_status_r_reg_addr                                 "0xB8006844"
#define  AUDIO_AVC2_distortion_status_r_reg                                      0xB8006844
#define  AUDIO_AVC2_distortion_status_r_inst_addr                                "0x014F"
#define  set_AUDIO_AVC2_distortion_status_r_reg(data)                            (*((volatile unsigned int*)AUDIO_AVC2_distortion_status_r_reg)=data)
#define  get_AUDIO_AVC2_distortion_status_r_reg                                  (*((volatile unsigned int*)AUDIO_AVC2_distortion_status_r_reg))
#define  AUDIO_AVC2_distortion_status_r_avc2_count_r_shift                       (16)
#define  AUDIO_AVC2_distortion_status_r_avc2_max_energy_r_shift                  (0)
#define  AUDIO_AVC2_distortion_status_r_avc2_count_r_mask                        (0x7FFF0000)
#define  AUDIO_AVC2_distortion_status_r_avc2_max_energy_r_mask                   (0x0000FFFF)
#define  AUDIO_AVC2_distortion_status_r_avc2_count_r(data)                       (0x7FFF0000&((data)<<16))
#define  AUDIO_AVC2_distortion_status_r_avc2_max_energy_r(data)                  (0x0000FFFF&(data))
#define  AUDIO_AVC2_distortion_status_r_get_avc2_count_r(data)                   ((0x7FFF0000&(data))>>16)
#define  AUDIO_AVC2_distortion_status_r_get_avc2_max_energy_r(data)              (0x0000FFFF&(data))

#define  AUDIO_hw_distortion_Control_gain_step                                  0x18006848
#define  AUDIO_hw_distortion_Control_gain_step_reg_addr                          "0xB8006848"
#define  AUDIO_hw_distortion_Control_gain_step_reg                               0xB8006848
#define  AUDIO_hw_distortion_Control_gain_step_inst_addr                         "0x0150"
#define  set_AUDIO_hw_distortion_Control_gain_step_reg(data)                     (*((volatile unsigned int*)AUDIO_hw_distortion_Control_gain_step_reg)=data)
#define  get_AUDIO_hw_distortion_Control_gain_step_reg                           (*((volatile unsigned int*)AUDIO_hw_distortion_Control_gain_step_reg))
#define  AUDIO_hw_distortion_Control_gain_step_step_mag_thre_shift               (16)
#define  AUDIO_hw_distortion_Control_gain_step_step_cnt_high_thre_shift          (8)
#define  AUDIO_hw_distortion_Control_gain_step_step_cnt_low_thre_shift           (0)
#define  AUDIO_hw_distortion_Control_gain_step_step_mag_thre_mask                (0x00FF0000)
#define  AUDIO_hw_distortion_Control_gain_step_step_cnt_high_thre_mask           (0x0000FF00)
#define  AUDIO_hw_distortion_Control_gain_step_step_cnt_low_thre_mask            (0x000000FF)
#define  AUDIO_hw_distortion_Control_gain_step_step_mag_thre(data)               (0x00FF0000&((data)<<16))
#define  AUDIO_hw_distortion_Control_gain_step_step_cnt_high_thre(data)          (0x0000FF00&((data)<<8))
#define  AUDIO_hw_distortion_Control_gain_step_step_cnt_low_thre(data)           (0x000000FF&(data))
#define  AUDIO_hw_distortion_Control_gain_step_get_step_mag_thre(data)           ((0x00FF0000&(data))>>16)
#define  AUDIO_hw_distortion_Control_gain_step_get_step_cnt_high_thre(data)      ((0x0000FF00&(data))>>8)
#define  AUDIO_hw_distortion_Control_gain_step_get_step_cnt_low_thre(data)       (0x000000FF&(data))

#define  AUDIO_lrrr_Digital_Volume_Control_0                                    0x18006900
#define  AUDIO_lrrr_Digital_Volume_Control_0_reg_addr                            "0xB8006900"
#define  AUDIO_lrrr_Digital_Volume_Control_0_reg                                 0xB8006900
#define  AUDIO_lrrr_Digital_Volume_Control_0_inst_addr                           "0x0151"
#define  set_AUDIO_lrrr_Digital_Volume_Control_0_reg(data)                       (*((volatile unsigned int*)AUDIO_lrrr_Digital_Volume_Control_0_reg)=data)
#define  get_AUDIO_lrrr_Digital_Volume_Control_0_reg                             (*((volatile unsigned int*)AUDIO_lrrr_Digital_Volume_Control_0_reg))
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_dvol_apply_shift               (31)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_zcto_shift                     (28)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_ramp_step_shift                (26)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_delay_ctrl_shift               (16)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_mute_apply_shift               (15)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_zcto_mute_shift                (12)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_ramp_step_mute_shift           (10)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_delay_ctrl_mute_shift          (0)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_dvol_apply_mask                (0x80000000)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_zcto_mask                      (0x70000000)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_ramp_step_mask                 (0x0C000000)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_delay_ctrl_mask                (0x03FF0000)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_mute_apply_mask                (0x00008000)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_zcto_mute_mask                 (0x00007000)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_ramp_step_mute_mask            (0x00000C00)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_delay_ctrl_mute_mask           (0x000003FF)
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_dvol_apply(data)               (0x80000000&((data)<<31))
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_zcto(data)                     (0x70000000&((data)<<28))
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_ramp_step(data)                (0x0C000000&((data)<<26))
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_delay_ctrl(data)               (0x03FF0000&((data)<<16))
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_mute_apply(data)               (0x00008000&((data)<<15))
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_zcto_mute(data)                (0x00007000&((data)<<12))
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_ramp_step_mute(data)           (0x00000C00&((data)<<10))
#define  AUDIO_lrrr_Digital_Volume_Control_0_lrrr_delay_ctrl_mute(data)          (0x000003FF&(data))
#define  AUDIO_lrrr_Digital_Volume_Control_0_get_lrrr_dvol_apply(data)           ((0x80000000&(data))>>31)
#define  AUDIO_lrrr_Digital_Volume_Control_0_get_lrrr_zcto(data)                 ((0x70000000&(data))>>28)
#define  AUDIO_lrrr_Digital_Volume_Control_0_get_lrrr_ramp_step(data)            ((0x0C000000&(data))>>26)
#define  AUDIO_lrrr_Digital_Volume_Control_0_get_lrrr_delay_ctrl(data)           ((0x03FF0000&(data))>>16)
#define  AUDIO_lrrr_Digital_Volume_Control_0_get_lrrr_mute_apply(data)           ((0x00008000&(data))>>15)
#define  AUDIO_lrrr_Digital_Volume_Control_0_get_lrrr_zcto_mute(data)            ((0x00007000&(data))>>12)
#define  AUDIO_lrrr_Digital_Volume_Control_0_get_lrrr_ramp_step_mute(data)       ((0x00000C00&(data))>>10)
#define  AUDIO_lrrr_Digital_Volume_Control_0_get_lrrr_delay_ctrl_mute(data)      (0x000003FF&(data))

#define  AUDIO_LRRR_Digital_Volume_Control_1                                    0x18006904
#define  AUDIO_LRRR_Digital_Volume_Control_1_reg_addr                            "0xB8006904"
#define  AUDIO_LRRR_Digital_Volume_Control_1_reg                                 0xB8006904
#define  AUDIO_LRRR_Digital_Volume_Control_1_inst_addr                           "0x0152"
#define  set_AUDIO_LRRR_Digital_Volume_Control_1_reg(data)                       (*((volatile unsigned int*)AUDIO_LRRR_Digital_Volume_Control_1_reg)=data)
#define  get_AUDIO_LRRR_Digital_Volume_Control_1_reg                             (*((volatile unsigned int*)AUDIO_LRRR_Digital_Volume_Control_1_reg))
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_dvol_enable_shift              (10)
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_zcto_status_shift              (9)
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_zcth_shift                     (4)
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_dvcm_shift                     (0)
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_dvol_enable_mask               (0x00000400)
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_zcto_status_mask               (0x00000200)
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_zcth_mask                      (0x000001F0)
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_dvcm_mask                      (0x00000003)
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_dvol_enable(data)              (0x00000400&((data)<<10))
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_zcto_status(data)              (0x00000200&((data)<<9))
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_zcth(data)                     (0x000001F0&((data)<<4))
#define  AUDIO_LRRR_Digital_Volume_Control_1_lrrr_dvcm(data)                     (0x00000003&(data))
#define  AUDIO_LRRR_Digital_Volume_Control_1_get_lrrr_dvol_enable(data)          ((0x00000400&(data))>>10)
#define  AUDIO_LRRR_Digital_Volume_Control_1_get_lrrr_zcto_status(data)          ((0x00000200&(data))>>9)
#define  AUDIO_LRRR_Digital_Volume_Control_1_get_lrrr_zcth(data)                 ((0x000001F0&(data))>>4)
#define  AUDIO_LRRR_Digital_Volume_Control_1_get_lrrr_dvcm(data)                 (0x00000003&(data))

#define  AUDIO_LRRR_Digital_Volume_Control_2                                    0x18006908
#define  AUDIO_LRRR_Digital_Volume_Control_2_reg_addr                            "0xB8006908"
#define  AUDIO_LRRR_Digital_Volume_Control_2_reg                                 0xB8006908
#define  AUDIO_LRRR_Digital_Volume_Control_2_inst_addr                           "0x0153"
#define  set_AUDIO_LRRR_Digital_Volume_Control_2_reg(data)                       (*((volatile unsigned int*)AUDIO_LRRR_Digital_Volume_Control_2_reg)=data)
#define  get_AUDIO_LRRR_Digital_Volume_Control_2_reg                             (*((volatile unsigned int*)AUDIO_LRRR_Digital_Volume_Control_2_reg))
#define  AUDIO_LRRR_Digital_Volume_Control_2_mute_lr_shift                       (31)
#define  AUDIO_LRRR_Digital_Volume_Control_2_hpf_lr_enable_shift                 (28)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_lr_ready_shift                  (27)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_lr_a_shift                      (22)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_lr_b_shift                      (16)
#define  AUDIO_LRRR_Digital_Volume_Control_2_mute_rr_shift                       (15)
#define  AUDIO_LRRR_Digital_Volume_Control_2_hpf_rr_enable_shift                 (12)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_rr_ready_shift                  (11)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_rr_a_shift                      (6)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_rr_b_shift                      (0)
#define  AUDIO_LRRR_Digital_Volume_Control_2_mute_lr_mask                        (0x80000000)
#define  AUDIO_LRRR_Digital_Volume_Control_2_hpf_lr_enable_mask                  (0x10000000)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_lr_ready_mask                   (0x08000000)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_lr_a_mask                       (0x07C00000)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_lr_b_mask                       (0x003F0000)
#define  AUDIO_LRRR_Digital_Volume_Control_2_mute_rr_mask                        (0x00008000)
#define  AUDIO_LRRR_Digital_Volume_Control_2_hpf_rr_enable_mask                  (0x00001000)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_rr_ready_mask                   (0x00000800)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_rr_a_mask                       (0x000007C0)
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_rr_b_mask                       (0x0000003F)
#define  AUDIO_LRRR_Digital_Volume_Control_2_mute_lr(data)                       (0x80000000&((data)<<31))
#define  AUDIO_LRRR_Digital_Volume_Control_2_hpf_lr_enable(data)                 (0x10000000&((data)<<28))
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_lr_ready(data)                  (0x08000000&((data)<<27))
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_lr_a(data)                      (0x07C00000&((data)<<22))
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_lr_b(data)                      (0x003F0000&((data)<<16))
#define  AUDIO_LRRR_Digital_Volume_Control_2_mute_rr(data)                       (0x00008000&((data)<<15))
#define  AUDIO_LRRR_Digital_Volume_Control_2_hpf_rr_enable(data)                 (0x00001000&((data)<<12))
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_rr_ready(data)                  (0x00000800&((data)<<11))
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_rr_a(data)                      (0x000007C0&((data)<<6))
#define  AUDIO_LRRR_Digital_Volume_Control_2_vol_rr_b(data)                      (0x0000003F&(data))
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_mute_lr(data)                   ((0x80000000&(data))>>31)
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_hpf_lr_enable(data)             ((0x10000000&(data))>>28)
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_vol_lr_ready(data)              ((0x08000000&(data))>>27)
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_vol_lr_a(data)                  ((0x07C00000&(data))>>22)
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_vol_lr_b(data)                  ((0x003F0000&(data))>>16)
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_mute_rr(data)                   ((0x00008000&(data))>>15)
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_hpf_rr_enable(data)             ((0x00001000&(data))>>12)
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_vol_rr_ready(data)              ((0x00000800&(data))>>11)
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_vol_rr_a(data)                  ((0x000007C0&(data))>>6)
#define  AUDIO_LRRR_Digital_Volume_Control_2_get_vol_rr_b(data)                  (0x0000003F&(data))

#define  AUDIO_ts_ds_mbist_recoding                                             0x1800690C
#define  AUDIO_ts_ds_mbist_recoding_reg_addr                                     "0xB800690C"
#define  AUDIO_ts_ds_mbist_recoding_reg                                          0xB800690C
#define  AUDIO_ts_ds_mbist_recoding_inst_addr                                    "0x0154"
#define  set_AUDIO_ts_ds_mbist_recoding_reg(data)                                (*((volatile unsigned int*)AUDIO_ts_ds_mbist_recoding_reg)=data)
#define  get_AUDIO_ts_ds_mbist_recoding_reg                                      (*((volatile unsigned int*)AUDIO_ts_ds_mbist_recoding_reg))
#define  AUDIO_ts_ds_mbist_recoding_dummy_31_0_shift                             (0)
#define  AUDIO_ts_ds_mbist_recoding_dummy_31_0_mask                              (0xFFFFFFFF)
#define  AUDIO_ts_ds_mbist_recoding_dummy_31_0(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_ts_ds_mbist_recoding_get_dummy_31_0(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_DVOL_CONTROL                                                     0x18006910
#define  AUDIO_DVOL_CONTROL_reg_addr                                             "0xB8006910"
#define  AUDIO_DVOL_CONTROL_reg                                                  0xB8006910
#define  AUDIO_DVOL_CONTROL_inst_addr                                            "0x0155"
#define  set_AUDIO_DVOL_CONTROL_reg(data)                                        (*((volatile unsigned int*)AUDIO_DVOL_CONTROL_reg)=data)
#define  get_AUDIO_DVOL_CONTROL_reg                                              (*((volatile unsigned int*)AUDIO_DVOL_CONTROL_reg))
#define  AUDIO_DVOL_CONTROL_down_sample_rate_shift                               (1)
#define  AUDIO_DVOL_CONTROL_vol_source_sel_shift                                 (0)
#define  AUDIO_DVOL_CONTROL_down_sample_rate_mask                                (0x00000006)
#define  AUDIO_DVOL_CONTROL_vol_source_sel_mask                                  (0x00000001)
#define  AUDIO_DVOL_CONTROL_down_sample_rate(data)                               (0x00000006&((data)<<1))
#define  AUDIO_DVOL_CONTROL_vol_source_sel(data)                                 (0x00000001&(data))
#define  AUDIO_DVOL_CONTROL_get_down_sample_rate(data)                           ((0x00000006&(data))>>1)
#define  AUDIO_DVOL_CONTROL_get_vol_source_sel(data)                             (0x00000001&(data))

#define  AUDIO_test_pattern_gen                                                 0x18006A00
#define  AUDIO_test_pattern_gen_reg_addr                                         "0xB8006A00"
#define  AUDIO_test_pattern_gen_reg                                              0xB8006A00
#define  AUDIO_test_pattern_gen_inst_addr                                        "0x0156"
#define  set_AUDIO_test_pattern_gen_reg(data)                                    (*((volatile unsigned int*)AUDIO_test_pattern_gen_reg)=data)
#define  get_AUDIO_test_pattern_gen_reg                                          (*((volatile unsigned int*)AUDIO_test_pattern_gen_reg))
#define  AUDIO_test_pattern_gen_sif_adc_in_test_en_shift                         (13)
#define  AUDIO_test_pattern_gen_sif_adc_in_test_sel_shift                        (12)
#define  AUDIO_test_pattern_gen_debug_mode_sel_shift                             (0)
#define  AUDIO_test_pattern_gen_sif_adc_in_test_en_mask                          (0x00002000)
#define  AUDIO_test_pattern_gen_sif_adc_in_test_sel_mask                         (0x00001000)
#define  AUDIO_test_pattern_gen_debug_mode_sel_mask                              (0x000001FF)
#define  AUDIO_test_pattern_gen_sif_adc_in_test_en(data)                         (0x00002000&((data)<<13))
#define  AUDIO_test_pattern_gen_sif_adc_in_test_sel(data)                        (0x00001000&((data)<<12))
#define  AUDIO_test_pattern_gen_debug_mode_sel(data)                             (0x000001FF&(data))
#define  AUDIO_test_pattern_gen_get_sif_adc_in_test_en(data)                     ((0x00002000&(data))>>13)
#define  AUDIO_test_pattern_gen_get_sif_adc_in_test_sel(data)                    ((0x00001000&(data))>>12)
#define  AUDIO_test_pattern_gen_get_debug_mode_sel(data)                         (0x000001FF&(data))

#define  AUDIO_crc_header                                                       0x18006A04
#define  AUDIO_crc_header_reg_addr                                               "0xB8006A04"
#define  AUDIO_crc_header_reg                                                    0xB8006A04
#define  AUDIO_crc_header_inst_addr                                              "0x0157"
#define  set_AUDIO_crc_header_reg(data)                                          (*((volatile unsigned int*)AUDIO_crc_header_reg)=data)
#define  get_AUDIO_crc_header_reg                                                (*((volatile unsigned int*)AUDIO_crc_header_reg))
#define  AUDIO_crc_header_audio_crc_header_shift                                 (0)
#define  AUDIO_crc_header_audio_crc_header_mask                                  (0x00FFFFFF)
#define  AUDIO_crc_header_audio_crc_header(data)                                 (0x00FFFFFF&(data))
#define  AUDIO_crc_header_get_audio_crc_header(data)                             (0x00FFFFFF&(data))

#define  AUDIO_crc_contorl                                                      0x18006A08
#define  AUDIO_crc_contorl_reg_addr                                              "0xB8006A08"
#define  AUDIO_crc_contorl_reg                                                   0xB8006A08
#define  AUDIO_crc_contorl_inst_addr                                             "0x0158"
#define  set_AUDIO_crc_contorl_reg(data)                                         (*((volatile unsigned int*)AUDIO_crc_contorl_reg)=data)
#define  get_AUDIO_crc_contorl_reg                                               (*((volatile unsigned int*)AUDIO_crc_contorl_reg))
#define  AUDIO_crc_contorl_audio_crc_en_shift                                    (19)
#define  AUDIO_crc_contorl_audio_crc_ch_sel_shift                                (16)
#define  AUDIO_crc_contorl_audio_crc_frame_length_shift                          (0)
#define  AUDIO_crc_contorl_audio_crc_en_mask                                     (0x00080000)
#define  AUDIO_crc_contorl_audio_crc_ch_sel_mask                                 (0x00070000)
#define  AUDIO_crc_contorl_audio_crc_frame_length_mask                           (0x0000FFFF)
#define  AUDIO_crc_contorl_audio_crc_en(data)                                    (0x00080000&((data)<<19))
#define  AUDIO_crc_contorl_audio_crc_ch_sel(data)                                (0x00070000&((data)<<16))
#define  AUDIO_crc_contorl_audio_crc_frame_length(data)                          (0x0000FFFF&(data))
#define  AUDIO_crc_contorl_get_audio_crc_en(data)                                ((0x00080000&(data))>>19)
#define  AUDIO_crc_contorl_get_audio_crc_ch_sel(data)                            ((0x00070000&(data))>>16)
#define  AUDIO_crc_contorl_get_audio_crc_frame_length(data)                      (0x0000FFFF&(data))

#define  AUDIO_crc_status                                                       0x18006A0C
#define  AUDIO_crc_status_reg_addr                                               "0xB8006A0C"
#define  AUDIO_crc_status_reg                                                    0xB8006A0C
#define  AUDIO_crc_status_inst_addr                                              "0x0159"
#define  set_AUDIO_crc_status_reg(data)                                          (*((volatile unsigned int*)AUDIO_crc_status_reg)=data)
#define  get_AUDIO_crc_status_reg                                                (*((volatile unsigned int*)AUDIO_crc_status_reg))
#define  AUDIO_crc_status_audio_crc_done_shift                                   (24)
#define  AUDIO_crc_status_audio_crc_shift                                        (0)
#define  AUDIO_crc_status_audio_crc_done_mask                                    (0x01000000)
#define  AUDIO_crc_status_audio_crc_mask                                         (0x00FFFFFF)
#define  AUDIO_crc_status_audio_crc_done(data)                                   (0x01000000&((data)<<24))
#define  AUDIO_crc_status_audio_crc(data)                                        (0x00FFFFFF&(data))
#define  AUDIO_crc_status_get_audio_crc_done(data)                               ((0x01000000&(data))>>24)
#define  AUDIO_crc_status_get_audio_crc(data)                                    (0x00FFFFFF&(data))

#define  AUDIO_sine_auto_chk                                                    0x18006A10
#define  AUDIO_sine_auto_chk_reg_addr                                            "0xB8006A10"
#define  AUDIO_sine_auto_chk_reg                                                 0xB8006A10
#define  AUDIO_sine_auto_chk_inst_addr                                           "0x015A"
#define  set_AUDIO_sine_auto_chk_reg(data)                                       (*((volatile unsigned int*)AUDIO_sine_auto_chk_reg)=data)
#define  get_AUDIO_sine_auto_chk_reg                                             (*((volatile unsigned int*)AUDIO_sine_auto_chk_reg))
#define  AUDIO_sine_auto_chk_sine_auto_chk_en_shift                              (31)
#define  AUDIO_sine_auto_chk_sine_channel_select_shift                           (28)
#define  AUDIO_sine_auto_chk_auto_chk_result_shift                               (24)
#define  AUDIO_sine_auto_chk_half_sine_num_shift                                 (22)
#define  AUDIO_sine_auto_chk_amplitude_low_threshold_shift                       (20)
#define  AUDIO_sine_auto_chk_zc_sample_cnt_threshold_shift                       (12)
#define  AUDIO_sine_auto_chk_zc_sample_cnt_golden_shift                          (0)
#define  AUDIO_sine_auto_chk_sine_auto_chk_en_mask                               (0x80000000)
#define  AUDIO_sine_auto_chk_sine_channel_select_mask                            (0x70000000)
#define  AUDIO_sine_auto_chk_auto_chk_result_mask                                (0x01000000)
#define  AUDIO_sine_auto_chk_half_sine_num_mask                                  (0x00C00000)
#define  AUDIO_sine_auto_chk_amplitude_low_threshold_mask                        (0x00300000)
#define  AUDIO_sine_auto_chk_zc_sample_cnt_threshold_mask                        (0x0003F000)
#define  AUDIO_sine_auto_chk_zc_sample_cnt_golden_mask                           (0x00000FFF)
#define  AUDIO_sine_auto_chk_sine_auto_chk_en(data)                              (0x80000000&((data)<<31))
#define  AUDIO_sine_auto_chk_sine_channel_select(data)                           (0x70000000&((data)<<28))
#define  AUDIO_sine_auto_chk_auto_chk_result(data)                               (0x01000000&((data)<<24))
#define  AUDIO_sine_auto_chk_half_sine_num(data)                                 (0x00C00000&((data)<<22))
#define  AUDIO_sine_auto_chk_amplitude_low_threshold(data)                       (0x00300000&((data)<<20))
#define  AUDIO_sine_auto_chk_zc_sample_cnt_threshold(data)                       (0x0003F000&((data)<<12))
#define  AUDIO_sine_auto_chk_zc_sample_cnt_golden(data)                          (0x00000FFF&(data))
#define  AUDIO_sine_auto_chk_get_sine_auto_chk_en(data)                          ((0x80000000&(data))>>31)
#define  AUDIO_sine_auto_chk_get_sine_channel_select(data)                       ((0x70000000&(data))>>28)
#define  AUDIO_sine_auto_chk_get_auto_chk_result(data)                           ((0x01000000&(data))>>24)
#define  AUDIO_sine_auto_chk_get_half_sine_num(data)                             ((0x00C00000&(data))>>22)
#define  AUDIO_sine_auto_chk_get_amplitude_low_threshold(data)                   ((0x00300000&(data))>>20)
#define  AUDIO_sine_auto_chk_get_zc_sample_cnt_threshold(data)                   ((0x0003F000&(data))>>12)
#define  AUDIO_sine_auto_chk_get_zc_sample_cnt_golden(data)                      (0x00000FFF&(data))

#define  AUDIO_sine_wave_value                                                  0x18006A14
#define  AUDIO_sine_wave_value_reg_addr                                          "0xB8006A14"
#define  AUDIO_sine_wave_value_reg                                               0xB8006A14
#define  AUDIO_sine_wave_value_inst_addr                                         "0x015B"
#define  set_AUDIO_sine_wave_value_reg(data)                                     (*((volatile unsigned int*)AUDIO_sine_wave_value_reg)=data)
#define  get_AUDIO_sine_wave_value_reg                                           (*((volatile unsigned int*)AUDIO_sine_wave_value_reg))
#define  AUDIO_sine_wave_value_sine_amplitude_shift                              (12)
#define  AUDIO_sine_wave_value_zc_sample_cnt_shift                               (0)
#define  AUDIO_sine_wave_value_sine_amplitude_mask                               (0x000FF000)
#define  AUDIO_sine_wave_value_zc_sample_cnt_mask                                (0x00000FFF)
#define  AUDIO_sine_wave_value_sine_amplitude(data)                              (0x000FF000&((data)<<12))
#define  AUDIO_sine_wave_value_zc_sample_cnt(data)                               (0x00000FFF&(data))
#define  AUDIO_sine_wave_value_get_sine_amplitude(data)                          ((0x000FF000&(data))>>12)
#define  AUDIO_sine_wave_value_get_zc_sample_cnt(data)                           (0x00000FFF&(data))

#define  AUDIO_pattern_gen_dummy                                                0x18006A18
#define  AUDIO_pattern_gen_dummy_reg_addr                                        "0xB8006A18"
#define  AUDIO_pattern_gen_dummy_reg                                             0xB8006A18
#define  AUDIO_pattern_gen_dummy_inst_addr                                       "0x015C"
#define  set_AUDIO_pattern_gen_dummy_reg(data)                                   (*((volatile unsigned int*)AUDIO_pattern_gen_dummy_reg)=data)
#define  get_AUDIO_pattern_gen_dummy_reg                                         (*((volatile unsigned int*)AUDIO_pattern_gen_dummy_reg))
#define  AUDIO_pattern_gen_dummy_dummy_31_0_shift                                (0)
#define  AUDIO_pattern_gen_dummy_dummy_31_0_mask                                 (0xFFFFFFFF)
#define  AUDIO_pattern_gen_dummy_dummy_31_0(data)                                (0xFFFFFFFF&(data))
#define  AUDIO_pattern_gen_dummy_get_dummy_31_0(data)                            (0xFFFFFFFF&(data))

#define  AUDIO_rbus_ack_ctrl                                                    0x18006A50
#define  AUDIO_rbus_ack_ctrl_reg_addr                                            "0xB8006A50"
#define  AUDIO_rbus_ack_ctrl_reg                                                 0xB8006A50
#define  AUDIO_rbus_ack_ctrl_inst_addr                                           "0x015D"
#define  set_AUDIO_rbus_ack_ctrl_reg(data)                                       (*((volatile unsigned int*)AUDIO_rbus_ack_ctrl_reg)=data)
#define  get_AUDIO_rbus_ack_ctrl_reg                                             (*((volatile unsigned int*)AUDIO_rbus_ack_ctrl_reg))
#define  AUDIO_rbus_ack_ctrl_rbus_timeout_thr_shift                              (4)
#define  AUDIO_rbus_ack_ctrl_dummy_3_1_shift                                     (1)
#define  AUDIO_rbus_ack_ctrl_to_ack_en_shift                                     (0)
#define  AUDIO_rbus_ack_ctrl_rbus_timeout_thr_mask                               (0x00003FF0)
#define  AUDIO_rbus_ack_ctrl_dummy_3_1_mask                                      (0x0000000E)
#define  AUDIO_rbus_ack_ctrl_to_ack_en_mask                                      (0x00000001)
#define  AUDIO_rbus_ack_ctrl_rbus_timeout_thr(data)                              (0x00003FF0&((data)<<4))
#define  AUDIO_rbus_ack_ctrl_dummy_3_1(data)                                     (0x0000000E&((data)<<1))
#define  AUDIO_rbus_ack_ctrl_to_ack_en(data)                                     (0x00000001&(data))
#define  AUDIO_rbus_ack_ctrl_get_rbus_timeout_thr(data)                          ((0x00003FF0&(data))>>4)
#define  AUDIO_rbus_ack_ctrl_get_dummy_3_1(data)                                 ((0x0000000E&(data))>>1)
#define  AUDIO_rbus_ack_ctrl_get_to_ack_en(data)                                 (0x00000001&(data))

#define  AUDIO_ack_fail_info                                                    0x18006A54
#define  AUDIO_ack_fail_info_reg_addr                                            "0xB8006A54"
#define  AUDIO_ack_fail_info_reg                                                 0xB8006A54
#define  AUDIO_ack_fail_info_inst_addr                                           "0x015E"
#define  set_AUDIO_ack_fail_info_reg(data)                                       (*((volatile unsigned int*)AUDIO_ack_fail_info_reg)=data)
#define  get_AUDIO_ack_fail_info_reg                                             (*((volatile unsigned int*)AUDIO_ack_fail_info_reg))
#define  AUDIO_ack_fail_info_ack_fail_rw_shift                                   (12)
#define  AUDIO_ack_fail_info_ack_fail_addr_shift                                 (0)
#define  AUDIO_ack_fail_info_ack_fail_rw_mask                                    (0x00001000)
#define  AUDIO_ack_fail_info_ack_fail_addr_mask                                  (0x00000FFF)
#define  AUDIO_ack_fail_info_ack_fail_rw(data)                                   (0x00001000&((data)<<12))
#define  AUDIO_ack_fail_info_ack_fail_addr(data)                                 (0x00000FFF&(data))
#define  AUDIO_ack_fail_info_get_ack_fail_rw(data)                               ((0x00001000&(data))>>12)
#define  AUDIO_ack_fail_info_get_ack_fail_addr(data)                             (0x00000FFF&(data))

#define  AUDIO_aud_90k_cnt_ctrl1                                                0x18006A60
#define  AUDIO_aud_90k_cnt_ctrl1_reg_addr                                        "0xB8006A60"
#define  AUDIO_aud_90k_cnt_ctrl1_reg                                             0xB8006A60
#define  AUDIO_aud_90k_cnt_ctrl1_inst_addr                                       "0x015F"
#define  set_AUDIO_aud_90k_cnt_ctrl1_reg(data)                                   (*((volatile unsigned int*)AUDIO_aud_90k_cnt_ctrl1_reg)=data)
#define  get_AUDIO_aud_90k_cnt_ctrl1_reg                                         (*((volatile unsigned int*)AUDIO_aud_90k_cnt_ctrl1_reg))
#define  AUDIO_aud_90k_cnt_ctrl1_pcr_earc_delta_shift                            (0)
#define  AUDIO_aud_90k_cnt_ctrl1_pcr_earc_delta_mask                             (0xFFFFFFFF)
#define  AUDIO_aud_90k_cnt_ctrl1_pcr_earc_delta(data)                            (0xFFFFFFFF&(data))
#define  AUDIO_aud_90k_cnt_ctrl1_get_pcr_earc_delta(data)                        (0xFFFFFFFF&(data))

#define  AUDIO_aud_90k_cnt_ctrl2                                                0x18006A64
#define  AUDIO_aud_90k_cnt_ctrl2_reg_addr                                        "0xB8006A64"
#define  AUDIO_aud_90k_cnt_ctrl2_reg                                             0xB8006A64
#define  AUDIO_aud_90k_cnt_ctrl2_inst_addr                                       "0x0160"
#define  set_AUDIO_aud_90k_cnt_ctrl2_reg(data)                                   (*((volatile unsigned int*)AUDIO_aud_90k_cnt_ctrl2_reg)=data)
#define  get_AUDIO_aud_90k_cnt_ctrl2_reg                                         (*((volatile unsigned int*)AUDIO_aud_90k_cnt_ctrl2_reg))
#define  AUDIO_aud_90k_cnt_ctrl2_pcr_90k_cnt_shift                               (0)
#define  AUDIO_aud_90k_cnt_ctrl2_pcr_90k_cnt_mask                                (0x0001FFFF)
#define  AUDIO_aud_90k_cnt_ctrl2_pcr_90k_cnt(data)                               (0x0001FFFF&(data))
#define  AUDIO_aud_90k_cnt_ctrl2_get_pcr_90k_cnt(data)                           (0x0001FFFF&(data))

#define  AUDIO_aud_90k_cnt_ctrl3                                                0x18006A68
#define  AUDIO_aud_90k_cnt_ctrl3_reg_addr                                        "0xB8006A68"
#define  AUDIO_aud_90k_cnt_ctrl3_reg                                             0xB8006A68
#define  AUDIO_aud_90k_cnt_ctrl3_inst_addr                                       "0x0161"
#define  set_AUDIO_aud_90k_cnt_ctrl3_reg(data)                                   (*((volatile unsigned int*)AUDIO_aud_90k_cnt_ctrl3_reg)=data)
#define  get_AUDIO_aud_90k_cnt_ctrl3_reg                                         (*((volatile unsigned int*)AUDIO_aud_90k_cnt_ctrl3_reg))
#define  AUDIO_aud_90k_cnt_ctrl3_pcr_earc_counter_en_shift                       (31)
#define  AUDIO_aud_90k_cnt_ctrl3_aud_pcr_a_b_sel_shift                           (30)
#define  AUDIO_aud_90k_cnt_ctrl3_sw_rate_shift                                   (8)
#define  AUDIO_aud_90k_cnt_ctrl3_time_interval_sel_shift                         (4)
#define  AUDIO_aud_90k_cnt_ctrl3_data_rate_sel_shift                             (0)
#define  AUDIO_aud_90k_cnt_ctrl3_pcr_earc_counter_en_mask                        (0x80000000)
#define  AUDIO_aud_90k_cnt_ctrl3_aud_pcr_a_b_sel_mask                            (0x40000000)
#define  AUDIO_aud_90k_cnt_ctrl3_sw_rate_mask                                    (0x0007FF00)
#define  AUDIO_aud_90k_cnt_ctrl3_time_interval_sel_mask                          (0x00000070)
#define  AUDIO_aud_90k_cnt_ctrl3_data_rate_sel_mask                              (0x0000000F)
#define  AUDIO_aud_90k_cnt_ctrl3_pcr_earc_counter_en(data)                       (0x80000000&((data)<<31))
#define  AUDIO_aud_90k_cnt_ctrl3_aud_pcr_a_b_sel(data)                           (0x40000000&((data)<<30))
#define  AUDIO_aud_90k_cnt_ctrl3_sw_rate(data)                                   (0x0007FF00&((data)<<8))
#define  AUDIO_aud_90k_cnt_ctrl3_time_interval_sel(data)                         (0x00000070&((data)<<4))
#define  AUDIO_aud_90k_cnt_ctrl3_data_rate_sel(data)                             (0x0000000F&(data))
#define  AUDIO_aud_90k_cnt_ctrl3_get_pcr_earc_counter_en(data)                   ((0x80000000&(data))>>31)
#define  AUDIO_aud_90k_cnt_ctrl3_get_aud_pcr_a_b_sel(data)                       ((0x40000000&(data))>>30)
#define  AUDIO_aud_90k_cnt_ctrl3_get_sw_rate(data)                               ((0x0007FF00&(data))>>8)
#define  AUDIO_aud_90k_cnt_ctrl3_get_time_interval_sel(data)                     ((0x00000070&(data))>>4)
#define  AUDIO_aud_90k_cnt_ctrl3_get_data_rate_sel(data)                         (0x0000000F&(data))

#define  AUDIO_AUDIO_BIST_MODE                                                  0x18006C00
#define  AUDIO_AUDIO_BIST_MODE_reg_addr                                          "0xB8006C00"
#define  AUDIO_AUDIO_BIST_MODE_reg                                               0xB8006C00
#define  AUDIO_AUDIO_BIST_MODE_inst_addr                                         "0x0162"
#define  set_AUDIO_AUDIO_BIST_MODE_reg(data)                                     (*((volatile unsigned int*)AUDIO_AUDIO_BIST_MODE_reg)=data)
#define  get_AUDIO_AUDIO_BIST_MODE_reg                                           (*((volatile unsigned int*)AUDIO_AUDIO_BIST_MODE_reg))
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_dma_shift                         (3)
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_a2_eiaj_shift                     (2)
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_am_shift                          (1)
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_msd_shift                         (0)
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_dma_mask                          (0x00000008)
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_a2_eiaj_mask                      (0x00000004)
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_am_mask                           (0x00000002)
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_msd_mask                          (0x00000001)
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_dma(data)                         (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_a2_eiaj(data)                     (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_am(data)                          (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_BIST_MODE_audio_bist_mode_msd(data)                         (0x00000001&(data))
#define  AUDIO_AUDIO_BIST_MODE_get_audio_bist_mode_dma(data)                     ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_BIST_MODE_get_audio_bist_mode_a2_eiaj(data)                 ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_BIST_MODE_get_audio_bist_mode_am(data)                      ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_BIST_MODE_get_audio_bist_mode_msd(data)                     (0x00000001&(data))

#define  AUDIO_AUDIO_BIST_DONE                                                  0x18006C04
#define  AUDIO_AUDIO_BIST_DONE_reg_addr                                          "0xB8006C04"
#define  AUDIO_AUDIO_BIST_DONE_reg                                               0xB8006C04
#define  AUDIO_AUDIO_BIST_DONE_inst_addr                                         "0x0163"
#define  set_AUDIO_AUDIO_BIST_DONE_reg(data)                                     (*((volatile unsigned int*)AUDIO_AUDIO_BIST_DONE_reg)=data)
#define  get_AUDIO_AUDIO_BIST_DONE_reg                                           (*((volatile unsigned int*)AUDIO_AUDIO_BIST_DONE_reg))
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_dma_shift                         (3)
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_a2_eiaj_shift                     (2)
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_am_shift                          (1)
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_msd_shift                         (0)
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_dma_mask                          (0x00000008)
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_a2_eiaj_mask                      (0x00000004)
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_am_mask                           (0x00000002)
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_msd_mask                          (0x00000001)
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_dma(data)                         (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_a2_eiaj(data)                     (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_am(data)                          (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_BIST_DONE_audio_bist_done_msd(data)                         (0x00000001&(data))
#define  AUDIO_AUDIO_BIST_DONE_get_audio_bist_done_dma(data)                     ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_BIST_DONE_get_audio_bist_done_a2_eiaj(data)                 ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_BIST_DONE_get_audio_bist_done_am(data)                      ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_BIST_DONE_get_audio_bist_done_msd(data)                     (0x00000001&(data))

#define  AUDIO_AUDIO_BIST_FAIL_GROUP                                            0x18006C08
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_reg_addr                                    "0xB8006C08"
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_reg                                         0xB8006C08
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_inst_addr                                   "0x0164"
#define  set_AUDIO_AUDIO_BIST_FAIL_GROUP_reg(data)                               (*((volatile unsigned int*)AUDIO_AUDIO_BIST_FAIL_GROUP_reg)=data)
#define  get_AUDIO_AUDIO_BIST_FAIL_GROUP_reg                                     (*((volatile unsigned int*)AUDIO_AUDIO_BIST_FAIL_GROUP_reg))
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_dma_shift             (3)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_a2_eiaj_shift         (2)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_am_shift              (1)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_msd_shift             (0)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_dma_mask              (0x00000008)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_a2_eiaj_mask          (0x00000004)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_am_mask               (0x00000002)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_msd_mask              (0x00000001)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_dma(data)             (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_a2_eiaj(data)         (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_am(data)              (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_audio_bist_fail_group_msd(data)             (0x00000001&(data))
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_get_audio_bist_fail_group_dma(data)         ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_get_audio_bist_fail_group_a2_eiaj(data)     ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_get_audio_bist_fail_group_am(data)          ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_BIST_FAIL_GROUP_get_audio_bist_fail_group_msd(data)         (0x00000001&(data))

#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL                                          0x18006C0C
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_reg_addr                                  "0xB8006C0C"
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_reg                                       0xB8006C0C
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_inst_addr                                 "0x0165"
#define  set_AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_reg(data)                             (*((volatile unsigned int*)AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_reg)=data)
#define  get_AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_reg                                   (*((volatile unsigned int*)AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_reg))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_5_shift               (14)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_4_shift               (13)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_3_shift               (12)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_2_shift               (11)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_1_shift               (10)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_0_shift               (9)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_8_shift           (8)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_7_shift           (7)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_6_shift           (6)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_5_shift           (5)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_4_shift           (4)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_3_shift           (3)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_2_shift           (2)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_1_shift           (1)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_0_shift           (0)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_5_mask                (0x00004000)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_4_mask                (0x00002000)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_3_mask                (0x00001000)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_2_mask                (0x00000800)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_1_mask                (0x00000400)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_0_mask                (0x00000200)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_8_mask            (0x00000100)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_7_mask            (0x00000080)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_6_mask            (0x00000040)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_5_mask            (0x00000020)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_4_mask            (0x00000010)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_3_mask            (0x00000008)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_2_mask            (0x00000004)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_1_mask            (0x00000002)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_0_mask            (0x00000001)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_5(data)               (0x00004000&((data)<<14))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_4(data)               (0x00002000&((data)<<13))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_3(data)               (0x00001000&((data)<<12))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_2(data)               (0x00000800&((data)<<11))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_1(data)               (0x00000400&((data)<<10))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_dma_fail_0(data)               (0x00000200&((data)<<9))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_8(data)           (0x00000100&((data)<<8))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_7(data)           (0x00000080&((data)<<7))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_6(data)           (0x00000040&((data)<<6))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_5(data)           (0x00000020&((data)<<5))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_4(data)           (0x00000010&((data)<<4))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_3(data)           (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_2(data)           (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_1(data)           (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_audio_bist_a2_eiaj_fail_0(data)           (0x00000001&(data))
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_dma_fail_5(data)           ((0x00004000&(data))>>14)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_dma_fail_4(data)           ((0x00002000&(data))>>13)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_dma_fail_3(data)           ((0x00001000&(data))>>12)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_dma_fail_2(data)           ((0x00000800&(data))>>11)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_dma_fail_1(data)           ((0x00000400&(data))>>10)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_dma_fail_0(data)           ((0x00000200&(data))>>9)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_a2_eiaj_fail_8(data)       ((0x00000100&(data))>>8)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_a2_eiaj_fail_7(data)       ((0x00000080&(data))>>7)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_a2_eiaj_fail_6(data)       ((0x00000040&(data))>>6)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_a2_eiaj_fail_5(data)       ((0x00000020&(data))>>5)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_a2_eiaj_fail_4(data)       ((0x00000010&(data))>>4)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_a2_eiaj_fail_3(data)       ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_a2_eiaj_fail_2(data)       ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_a2_eiaj_fail_1(data)       ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_BIST_A2_EIAJ_FAIL_get_audio_bist_a2_eiaj_fail_0(data)       (0x00000001&(data))

#define  AUDIO_AUDIO_DRF_MODE                                                   0x18006C10
#define  AUDIO_AUDIO_DRF_MODE_reg_addr                                           "0xB8006C10"
#define  AUDIO_AUDIO_DRF_MODE_reg                                                0xB8006C10
#define  AUDIO_AUDIO_DRF_MODE_inst_addr                                          "0x0166"
#define  set_AUDIO_AUDIO_DRF_MODE_reg(data)                                      (*((volatile unsigned int*)AUDIO_AUDIO_DRF_MODE_reg)=data)
#define  get_AUDIO_AUDIO_DRF_MODE_reg                                            (*((volatile unsigned int*)AUDIO_AUDIO_DRF_MODE_reg))
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_dma_shift                           (3)
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_a2_eiaj_shift                       (2)
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_am_shift                            (1)
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_msd_shift                           (0)
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_dma_mask                            (0x00000008)
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_a2_eiaj_mask                        (0x00000004)
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_am_mask                             (0x00000002)
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_msd_mask                            (0x00000001)
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_dma(data)                           (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_a2_eiaj(data)                       (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_am(data)                            (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_DRF_MODE_audio_drf_mode_msd(data)                           (0x00000001&(data))
#define  AUDIO_AUDIO_DRF_MODE_get_audio_drf_mode_dma(data)                       ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_DRF_MODE_get_audio_drf_mode_a2_eiaj(data)                   ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_DRF_MODE_get_audio_drf_mode_am(data)                        ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_DRF_MODE_get_audio_drf_mode_msd(data)                       (0x00000001&(data))

#define  AUDIO_AUDIO_DRF_RESUME                                                 0x18006C14
#define  AUDIO_AUDIO_DRF_RESUME_reg_addr                                         "0xB8006C14"
#define  AUDIO_AUDIO_DRF_RESUME_reg                                              0xB8006C14
#define  AUDIO_AUDIO_DRF_RESUME_inst_addr                                        "0x0167"
#define  set_AUDIO_AUDIO_DRF_RESUME_reg(data)                                    (*((volatile unsigned int*)AUDIO_AUDIO_DRF_RESUME_reg)=data)
#define  get_AUDIO_AUDIO_DRF_RESUME_reg                                          (*((volatile unsigned int*)AUDIO_AUDIO_DRF_RESUME_reg))
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_dma_shift                       (3)
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_a2_eiaj_shift                   (2)
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_am_shift                        (1)
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_msd_shift                       (0)
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_dma_mask                        (0x00000008)
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_a2_eiaj_mask                    (0x00000004)
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_am_mask                         (0x00000002)
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_msd_mask                        (0x00000001)
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_dma(data)                       (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_a2_eiaj(data)                   (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_am(data)                        (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_DRF_RESUME_audio_drf_resume_msd(data)                       (0x00000001&(data))
#define  AUDIO_AUDIO_DRF_RESUME_get_audio_drf_resume_dma(data)                   ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_DRF_RESUME_get_audio_drf_resume_a2_eiaj(data)               ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_DRF_RESUME_get_audio_drf_resume_am(data)                    ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_DRF_RESUME_get_audio_drf_resume_msd(data)                   (0x00000001&(data))

#define  AUDIO_AUDIO_DRF_DONE                                                   0x18006C18
#define  AUDIO_AUDIO_DRF_DONE_reg_addr                                           "0xB8006C18"
#define  AUDIO_AUDIO_DRF_DONE_reg                                                0xB8006C18
#define  AUDIO_AUDIO_DRF_DONE_inst_addr                                          "0x0168"
#define  set_AUDIO_AUDIO_DRF_DONE_reg(data)                                      (*((volatile unsigned int*)AUDIO_AUDIO_DRF_DONE_reg)=data)
#define  get_AUDIO_AUDIO_DRF_DONE_reg                                            (*((volatile unsigned int*)AUDIO_AUDIO_DRF_DONE_reg))
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_dma_shift                           (3)
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_a2_eiaj_shift                       (2)
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_am_shift                            (1)
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_msd_shift                           (0)
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_dma_mask                            (0x00000008)
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_a2_eiaj_mask                        (0x00000004)
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_am_mask                             (0x00000002)
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_msd_mask                            (0x00000001)
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_dma(data)                           (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_a2_eiaj(data)                       (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_am(data)                            (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_DRF_DONE_audio_drf_done_msd(data)                           (0x00000001&(data))
#define  AUDIO_AUDIO_DRF_DONE_get_audio_drf_done_dma(data)                       ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_DRF_DONE_get_audio_drf_done_a2_eiaj(data)                   ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_DRF_DONE_get_audio_drf_done_am(data)                        ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_DRF_DONE_get_audio_drf_done_msd(data)                       (0x00000001&(data))

#define  AUDIO_AUDIO_DRF_PAUSE                                                  0x18006C1C
#define  AUDIO_AUDIO_DRF_PAUSE_reg_addr                                          "0xB8006C1C"
#define  AUDIO_AUDIO_DRF_PAUSE_reg                                               0xB8006C1C
#define  AUDIO_AUDIO_DRF_PAUSE_inst_addr                                         "0x0169"
#define  set_AUDIO_AUDIO_DRF_PAUSE_reg(data)                                     (*((volatile unsigned int*)AUDIO_AUDIO_DRF_PAUSE_reg)=data)
#define  get_AUDIO_AUDIO_DRF_PAUSE_reg                                           (*((volatile unsigned int*)AUDIO_AUDIO_DRF_PAUSE_reg))
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_dma_shift                         (3)
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_a2_eiaj_shift                     (2)
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_am_shift                          (1)
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_msd_shift                         (0)
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_dma_mask                          (0x00000008)
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_a2_eiaj_mask                      (0x00000004)
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_am_mask                           (0x00000002)
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_msd_mask                          (0x00000001)
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_dma(data)                         (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_a2_eiaj(data)                     (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_am(data)                          (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_DRF_PAUSE_audio_drf_pause_msd(data)                         (0x00000001&(data))
#define  AUDIO_AUDIO_DRF_PAUSE_get_audio_drf_pause_dma(data)                     ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_DRF_PAUSE_get_audio_drf_pause_a2_eiaj(data)                 ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_DRF_PAUSE_get_audio_drf_pause_am(data)                      ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_DRF_PAUSE_get_audio_drf_pause_msd(data)                     (0x00000001&(data))

#define  AUDIO_AUDIO_DRF_FAIL_GROUP                                             0x18006C20
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_reg_addr                                     "0xB8006C20"
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_reg                                          0xB8006C20
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_inst_addr                                    "0x016A"
#define  set_AUDIO_AUDIO_DRF_FAIL_GROUP_reg(data)                                (*((volatile unsigned int*)AUDIO_AUDIO_DRF_FAIL_GROUP_reg)=data)
#define  get_AUDIO_AUDIO_DRF_FAIL_GROUP_reg                                      (*((volatile unsigned int*)AUDIO_AUDIO_DRF_FAIL_GROUP_reg))
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_dma_shift               (3)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_a2_eiaj_shift           (2)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_am_shift                (1)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_msd_shift               (0)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_dma_mask                (0x00000008)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_a2_eiaj_mask            (0x00000004)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_am_mask                 (0x00000002)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_msd_mask                (0x00000001)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_dma(data)               (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_a2_eiaj(data)           (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_am(data)                (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_audio_drf_fail_group_msd(data)               (0x00000001&(data))
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_get_audio_drf_fail_group_dma(data)           ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_get_audio_drf_fail_group_a2_eiaj(data)       ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_get_audio_drf_fail_group_am(data)            ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_DRF_FAIL_GROUP_get_audio_drf_fail_group_msd(data)           (0x00000001&(data))

#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL                                           0x18006C24
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_reg_addr                                   "0xB8006C24"
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_reg                                        0xB8006C24
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_inst_addr                                  "0x016B"
#define  set_AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_reg(data)                              (*((volatile unsigned int*)AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_reg)=data)
#define  get_AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_reg                                    (*((volatile unsigned int*)AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_reg))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_5_shift                 (14)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_4_shift                 (13)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_3_shift                 (12)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_2_shift                 (11)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_1_shift                 (10)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_0_shift                 (9)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_8_shift             (8)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_7_shift             (7)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_6_shift             (6)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_5_shift             (5)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_4_shift             (4)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_3_shift             (3)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_2_shift             (2)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_1_shift             (1)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_0_shift             (0)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_5_mask                  (0x00004000)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_4_mask                  (0x00002000)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_3_mask                  (0x00001000)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_2_mask                  (0x00000800)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_1_mask                  (0x00000400)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_0_mask                  (0x00000200)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_8_mask              (0x00000100)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_7_mask              (0x00000080)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_6_mask              (0x00000040)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_5_mask              (0x00000020)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_4_mask              (0x00000010)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_3_mask              (0x00000008)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_2_mask              (0x00000004)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_1_mask              (0x00000002)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_0_mask              (0x00000001)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_5(data)                 (0x00004000&((data)<<14))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_4(data)                 (0x00002000&((data)<<13))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_3(data)                 (0x00001000&((data)<<12))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_2(data)                 (0x00000800&((data)<<11))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_1(data)                 (0x00000400&((data)<<10))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_dma_fail_0(data)                 (0x00000200&((data)<<9))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_8(data)             (0x00000100&((data)<<8))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_7(data)             (0x00000080&((data)<<7))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_6(data)             (0x00000040&((data)<<6))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_5(data)             (0x00000020&((data)<<5))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_4(data)             (0x00000010&((data)<<4))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_3(data)             (0x00000008&((data)<<3))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_2(data)             (0x00000004&((data)<<2))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_1(data)             (0x00000002&((data)<<1))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_audio_drf_a2_eiaj_fail_0(data)             (0x00000001&(data))
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_dma_fail_5(data)             ((0x00004000&(data))>>14)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_dma_fail_4(data)             ((0x00002000&(data))>>13)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_dma_fail_3(data)             ((0x00001000&(data))>>12)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_dma_fail_2(data)             ((0x00000800&(data))>>11)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_dma_fail_1(data)             ((0x00000400&(data))>>10)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_dma_fail_0(data)             ((0x00000200&(data))>>9)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_a2_eiaj_fail_8(data)         ((0x00000100&(data))>>8)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_a2_eiaj_fail_7(data)         ((0x00000080&(data))>>7)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_a2_eiaj_fail_6(data)         ((0x00000040&(data))>>6)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_a2_eiaj_fail_5(data)         ((0x00000020&(data))>>5)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_a2_eiaj_fail_4(data)         ((0x00000010&(data))>>4)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_a2_eiaj_fail_3(data)         ((0x00000008&(data))>>3)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_a2_eiaj_fail_2(data)         ((0x00000004&(data))>>2)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_a2_eiaj_fail_1(data)         ((0x00000002&(data))>>1)
#define  AUDIO_AUDIO_DRF_A2_EIAJ_FAIL_get_audio_drf_a2_eiaj_fail_0(data)         (0x00000001&(data))

#define  AUDIO_vr_adfilter_ctrl_1                                               0x18006B00
#define  AUDIO_vr_adfilter_ctrl_1_reg_addr                                       "0xB8006B00"
#define  AUDIO_vr_adfilter_ctrl_1_reg                                            0xB8006B00
#define  AUDIO_vr_adfilter_ctrl_1_inst_addr                                      "0x016C"
#define  set_AUDIO_vr_adfilter_ctrl_1_reg(data)                                  (*((volatile unsigned int*)AUDIO_vr_adfilter_ctrl_1_reg)=data)
#define  get_AUDIO_vr_adfilter_ctrl_1_reg                                        (*((volatile unsigned int*)AUDIO_vr_adfilter_ctrl_1_reg))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmicl_ri_fa_sel_shift              (31)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmicr_ri_fa_sel_shift              (30)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmic_lpf2nd_fc_sel_shift           (27)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_hpf_en_shift                    (26)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_comp_gain_shift                 (24)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_gain_l_shift                    (17)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_gain_r_shift                    (10)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_mute_l_shift                    (9)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_mute_r_shift                    (8)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_zdet_tout_shift                 (6)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_zdet_func_shift                 (4)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmic_boost_gain_l_shift            (2)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmic_boost_gain_r_shift            (0)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmicl_ri_fa_sel_mask               (0x80000000)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmicr_ri_fa_sel_mask               (0x40000000)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmic_lpf2nd_fc_sel_mask            (0x08000000)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_hpf_en_mask                     (0x04000000)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_comp_gain_mask                  (0x03000000)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_gain_l_mask                     (0x00FE0000)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_gain_r_mask                     (0x0001FC00)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_mute_l_mask                     (0x00000200)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_mute_r_mask                     (0x00000100)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_zdet_tout_mask                  (0x000000C0)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_zdet_func_mask                  (0x00000030)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmic_boost_gain_l_mask             (0x0000000C)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmic_boost_gain_r_mask             (0x00000003)
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmicl_ri_fa_sel(data)              (0x80000000&((data)<<31))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmicr_ri_fa_sel(data)              (0x40000000&((data)<<30))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmic_lpf2nd_fc_sel(data)           (0x08000000&((data)<<27))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_hpf_en(data)                    (0x04000000&((data)<<26))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_comp_gain(data)                 (0x03000000&((data)<<24))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_gain_l(data)                    (0x00FE0000&((data)<<17))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_gain_r(data)                    (0x0001FC00&((data)<<10))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_mute_l(data)                    (0x00000200&((data)<<9))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_mute_r(data)                    (0x00000100&((data)<<8))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_zdet_tout(data)                 (0x000000C0&((data)<<6))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_ad_zdet_func(data)                 (0x00000030&((data)<<4))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmic_boost_gain_l(data)            (0x0000000C&((data)<<2))
#define  AUDIO_vr_adfilter_ctrl_1_reg_vr_adc2_dmic_boost_gain_r(data)            (0x00000003&(data))
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_dmicl_ri_fa_sel(data)          ((0x80000000&(data))>>31)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_dmicr_ri_fa_sel(data)          ((0x40000000&(data))>>30)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_dmic_lpf2nd_fc_sel(data)       ((0x08000000&(data))>>27)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_ad_hpf_en(data)                ((0x04000000&(data))>>26)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_ad_comp_gain(data)             ((0x03000000&(data))>>24)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_ad_gain_l(data)                ((0x00FE0000&(data))>>17)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_ad_gain_r(data)                ((0x0001FC00&(data))>>10)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_ad_mute_l(data)                ((0x00000200&(data))>>9)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_ad_mute_r(data)                ((0x00000100&(data))>>8)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_ad_zdet_tout(data)             ((0x000000C0&(data))>>6)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_ad_zdet_func(data)             ((0x00000030&(data))>>4)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_dmic_boost_gain_l(data)        ((0x0000000C&(data))>>2)
#define  AUDIO_vr_adfilter_ctrl_1_get_reg_vr_adc2_dmic_boost_gain_r(data)        (0x00000003&(data))

#define  AUDIO_adfilter_ctrl_2                                                  0x18006B04
#define  AUDIO_adfilter_ctrl_2_reg_addr                                          "0xB8006B04"
#define  AUDIO_adfilter_ctrl_2_reg                                               0xB8006B04
#define  AUDIO_adfilter_ctrl_2_inst_addr                                         "0x016D"
#define  set_AUDIO_adfilter_ctrl_2_reg(data)                                     (*((volatile unsigned int*)AUDIO_adfilter_ctrl_2_reg)=data)
#define  get_AUDIO_adfilter_ctrl_2_reg                                           (*((volatile unsigned int*)AUDIO_adfilter_ctrl_2_reg))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmicl_ri_fa_sel_shift                 (31)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmicr_ri_fa_sel_shift                 (30)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmic_lpf2nd_fc_sel_shift              (27)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_hpf_en_shift                       (26)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_comp_gain_shift                    (24)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_gain_l_shift                       (17)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_gain_r_shift                       (10)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_mute_l_shift                       (9)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_mute_r_shift                       (8)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_zdet_tout_shift                    (6)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_zdet_func_shift                    (4)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmic_boost_gain_l_shift               (2)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmic_boost_gain_r_shift               (0)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmicl_ri_fa_sel_mask                  (0x80000000)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmicr_ri_fa_sel_mask                  (0x40000000)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmic_lpf2nd_fc_sel_mask               (0x08000000)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_hpf_en_mask                        (0x04000000)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_comp_gain_mask                     (0x03000000)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_gain_l_mask                        (0x00FE0000)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_gain_r_mask                        (0x0001FC00)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_mute_l_mask                        (0x00000200)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_mute_r_mask                        (0x00000100)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_zdet_tout_mask                     (0x000000C0)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_zdet_func_mask                     (0x00000030)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmic_boost_gain_l_mask                (0x0000000C)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmic_boost_gain_r_mask                (0x00000003)
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmicl_ri_fa_sel(data)                 (0x80000000&((data)<<31))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmicr_ri_fa_sel(data)                 (0x40000000&((data)<<30))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmic_lpf2nd_fc_sel(data)              (0x08000000&((data)<<27))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_hpf_en(data)                       (0x04000000&((data)<<26))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_comp_gain(data)                    (0x03000000&((data)<<24))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_gain_l(data)                       (0x00FE0000&((data)<<17))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_gain_r(data)                       (0x0001FC00&((data)<<10))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_mute_l(data)                       (0x00000200&((data)<<9))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_mute_r(data)                       (0x00000100&((data)<<8))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_zdet_tout(data)                    (0x000000C0&((data)<<6))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_ad_zdet_func(data)                    (0x00000030&((data)<<4))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmic_boost_gain_l(data)               (0x0000000C&((data)<<2))
#define  AUDIO_adfilter_ctrl_2_reg_vr_adc3_dmic_boost_gain_r(data)               (0x00000003&(data))
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_dmicl_ri_fa_sel(data)             ((0x80000000&(data))>>31)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_dmicr_ri_fa_sel(data)             ((0x40000000&(data))>>30)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_dmic_lpf2nd_fc_sel(data)          ((0x08000000&(data))>>27)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_ad_hpf_en(data)                   ((0x04000000&(data))>>26)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_ad_comp_gain(data)                ((0x03000000&(data))>>24)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_ad_gain_l(data)                   ((0x00FE0000&(data))>>17)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_ad_gain_r(data)                   ((0x0001FC00&(data))>>10)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_ad_mute_l(data)                   ((0x00000200&(data))>>9)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_ad_mute_r(data)                   ((0x00000100&(data))>>8)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_ad_zdet_tout(data)                ((0x000000C0&(data))>>6)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_ad_zdet_func(data)                ((0x00000030&(data))>>4)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_dmic_boost_gain_l(data)           ((0x0000000C&(data))>>2)
#define  AUDIO_adfilter_ctrl_2_get_reg_vr_adc3_dmic_boost_gain_r(data)           (0x00000003&(data))

#define  AUDIO_adfilter_ctrl_3                                                  0x18006B08
#define  AUDIO_adfilter_ctrl_3_reg_addr                                          "0xB8006B08"
#define  AUDIO_adfilter_ctrl_3_reg                                               0xB8006B08
#define  AUDIO_adfilter_ctrl_3_inst_addr                                         "0x016E"
#define  set_AUDIO_adfilter_ctrl_3_reg(data)                                     (*((volatile unsigned int*)AUDIO_adfilter_ctrl_3_reg)=data)
#define  get_AUDIO_adfilter_ctrl_3_reg                                           (*((volatile unsigned int*)AUDIO_adfilter_ctrl_3_reg))
#define  AUDIO_adfilter_ctrl_3_hw2asrc_en_shift                                  (31)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_underflow_shift                           (30)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_overflow_shift                            (29)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_empty_shift                               (28)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_full_shift                                (27)
#define  AUDIO_adfilter_ctrl_3_reg_asrc_fifo_in_sel_shift                        (25)
#define  AUDIO_adfilter_ctrl_3_vr_out_lr_sync_shift                              (10)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_dahpf_en_shift                       (9)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_fb_ad_hpf_en_shift                   (8)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_out_ad_hpf_en_shift                  (7)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_dither_sel_shift                     (4)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_fb_ad_comp_gain_shift                (2)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_out_ad_comp_gain_shift               (0)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_en_mask                                   (0x80000000)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_underflow_mask                            (0x40000000)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_overflow_mask                             (0x20000000)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_empty_mask                                (0x10000000)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_full_mask                                 (0x08000000)
#define  AUDIO_adfilter_ctrl_3_reg_asrc_fifo_in_sel_mask                         (0x06000000)
#define  AUDIO_adfilter_ctrl_3_vr_out_lr_sync_mask                               (0x00000400)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_dahpf_en_mask                        (0x00000200)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_fb_ad_hpf_en_mask                    (0x00000100)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_out_ad_hpf_en_mask                   (0x00000080)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_dither_sel_mask                      (0x00000070)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_fb_ad_comp_gain_mask                 (0x0000000C)
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_out_ad_comp_gain_mask                (0x00000003)
#define  AUDIO_adfilter_ctrl_3_hw2asrc_en(data)                                  (0x80000000&((data)<<31))
#define  AUDIO_adfilter_ctrl_3_hw2asrc_underflow(data)                           (0x40000000&((data)<<30))
#define  AUDIO_adfilter_ctrl_3_hw2asrc_overflow(data)                            (0x20000000&((data)<<29))
#define  AUDIO_adfilter_ctrl_3_hw2asrc_empty(data)                               (0x10000000&((data)<<28))
#define  AUDIO_adfilter_ctrl_3_hw2asrc_full(data)                                (0x08000000&((data)<<27))
#define  AUDIO_adfilter_ctrl_3_reg_asrc_fifo_in_sel(data)                        (0x06000000&((data)<<25))
#define  AUDIO_adfilter_ctrl_3_vr_out_lr_sync(data)                              (0x00000400&((data)<<10))
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_dahpf_en(data)                       (0x00000200&((data)<<9))
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_fb_ad_hpf_en(data)                   (0x00000100&((data)<<8))
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_out_ad_hpf_en(data)                  (0x00000080&((data)<<7))
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_dither_sel(data)                     (0x00000070&((data)<<4))
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_fb_ad_comp_gain(data)                (0x0000000C&((data)<<2))
#define  AUDIO_adfilter_ctrl_3_reg_vr_srcin_out_ad_comp_gain(data)               (0x00000003&(data))
#define  AUDIO_adfilter_ctrl_3_get_hw2asrc_en(data)                              ((0x80000000&(data))>>31)
#define  AUDIO_adfilter_ctrl_3_get_hw2asrc_underflow(data)                       ((0x40000000&(data))>>30)
#define  AUDIO_adfilter_ctrl_3_get_hw2asrc_overflow(data)                        ((0x20000000&(data))>>29)
#define  AUDIO_adfilter_ctrl_3_get_hw2asrc_empty(data)                           ((0x10000000&(data))>>28)
#define  AUDIO_adfilter_ctrl_3_get_hw2asrc_full(data)                            ((0x08000000&(data))>>27)
#define  AUDIO_adfilter_ctrl_3_get_reg_asrc_fifo_in_sel(data)                    ((0x06000000&(data))>>25)
#define  AUDIO_adfilter_ctrl_3_get_vr_out_lr_sync(data)                          ((0x00000400&(data))>>10)
#define  AUDIO_adfilter_ctrl_3_get_reg_vr_srcin_dahpf_en(data)                   ((0x00000200&(data))>>9)
#define  AUDIO_adfilter_ctrl_3_get_reg_vr_srcin_fb_ad_hpf_en(data)               ((0x00000100&(data))>>8)
#define  AUDIO_adfilter_ctrl_3_get_reg_vr_srcin_out_ad_hpf_en(data)              ((0x00000080&(data))>>7)
#define  AUDIO_adfilter_ctrl_3_get_reg_vr_srcin_dither_sel(data)                 ((0x00000070&(data))>>4)
#define  AUDIO_adfilter_ctrl_3_get_reg_vr_srcin_fb_ad_comp_gain(data)            ((0x0000000C&(data))>>2)
#define  AUDIO_adfilter_ctrl_3_get_reg_vr_srcin_out_ad_comp_gain(data)           (0x00000003&(data))

#define  AUDIO_adfilter_dmic_src_reg                                            0x18006B0C
#define  AUDIO_adfilter_dmic_src_reg_reg_addr                                    "0xB8006B0C"
#define  AUDIO_adfilter_dmic_src_reg_reg                                         0xB8006B0C
#define  AUDIO_adfilter_dmic_src_reg_inst_addr                                   "0x016F"
#define  set_AUDIO_adfilter_dmic_src_reg_reg(data)                               (*((volatile unsigned int*)AUDIO_adfilter_dmic_src_reg_reg)=data)
#define  get_AUDIO_adfilter_dmic_src_reg_reg                                     (*((volatile unsigned int*)AUDIO_adfilter_dmic_src_reg_reg))
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc2_dmic_lpf1st_en_shift            (15)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc3_dmic_lpf1st_en_shift            (14)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc2_src_en_shift                    (13)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc3_src_en_shift                    (12)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc2_dmic_lpf1st_fc_sel_shift        (9)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc3_dmic_lpf1st_fc_sel_shift        (6)
#define  AUDIO_adfilter_dmic_src_reg_adc4_dmic_lpf1st_fc_sel_shift               (3)
#define  AUDIO_adfilter_dmic_src_reg_adc4_in_sel_shift                           (2)
#define  AUDIO_adfilter_dmic_src_reg_adc4_lr_sel_shift                           (0)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc2_dmic_lpf1st_en_mask             (0x00008000)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc3_dmic_lpf1st_en_mask             (0x00004000)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc2_src_en_mask                     (0x00002000)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc3_src_en_mask                     (0x00001000)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc2_dmic_lpf1st_fc_sel_mask         (0x00000E00)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc3_dmic_lpf1st_fc_sel_mask         (0x000001C0)
#define  AUDIO_adfilter_dmic_src_reg_adc4_dmic_lpf1st_fc_sel_mask                (0x00000038)
#define  AUDIO_adfilter_dmic_src_reg_adc4_in_sel_mask                            (0x00000004)
#define  AUDIO_adfilter_dmic_src_reg_adc4_lr_sel_mask                            (0x00000003)
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc2_dmic_lpf1st_en(data)            (0x00008000&((data)<<15))
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc3_dmic_lpf1st_en(data)            (0x00004000&((data)<<14))
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc2_src_en(data)                    (0x00002000&((data)<<13))
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc3_src_en(data)                    (0x00001000&((data)<<12))
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc2_dmic_lpf1st_fc_sel(data)        (0x00000E00&((data)<<9))
#define  AUDIO_adfilter_dmic_src_reg_reg_vr_adc3_dmic_lpf1st_fc_sel(data)        (0x000001C0&((data)<<6))
#define  AUDIO_adfilter_dmic_src_reg_adc4_dmic_lpf1st_fc_sel(data)               (0x00000038&((data)<<3))
#define  AUDIO_adfilter_dmic_src_reg_adc4_in_sel(data)                           (0x00000004&((data)<<2))
#define  AUDIO_adfilter_dmic_src_reg_adc4_lr_sel(data)                           (0x00000003&(data))
#define  AUDIO_adfilter_dmic_src_reg_get_reg_vr_adc2_dmic_lpf1st_en(data)        ((0x00008000&(data))>>15)
#define  AUDIO_adfilter_dmic_src_reg_get_reg_vr_adc3_dmic_lpf1st_en(data)        ((0x00004000&(data))>>14)
#define  AUDIO_adfilter_dmic_src_reg_get_reg_vr_adc2_src_en(data)                ((0x00002000&(data))>>13)
#define  AUDIO_adfilter_dmic_src_reg_get_reg_vr_adc3_src_en(data)                ((0x00001000&(data))>>12)
#define  AUDIO_adfilter_dmic_src_reg_get_reg_vr_adc2_dmic_lpf1st_fc_sel(data)    ((0x00000E00&(data))>>9)
#define  AUDIO_adfilter_dmic_src_reg_get_reg_vr_adc3_dmic_lpf1st_fc_sel(data)    ((0x000001C0&(data))>>6)
#define  AUDIO_adfilter_dmic_src_reg_get_adc4_dmic_lpf1st_fc_sel(data)           ((0x00000038&(data))>>3)
#define  AUDIO_adfilter_dmic_src_reg_get_adc4_in_sel(data)                       ((0x00000004&(data))>>2)
#define  AUDIO_adfilter_dmic_src_reg_get_adc4_lr_sel(data)                       (0x00000003&(data))

#define  AUDIO_adfilter_src_4_reg                                               0x18006B10
#define  AUDIO_adfilter_src_4_reg_reg_addr                                       "0xB8006B10"
#define  AUDIO_adfilter_src_4_reg_reg                                            0xB8006B10
#define  AUDIO_adfilter_src_4_reg_inst_addr                                      "0x0170"
#define  set_AUDIO_adfilter_src_4_reg_reg(data)                                  (*((volatile unsigned int*)AUDIO_adfilter_src_4_reg_reg)=data)
#define  get_AUDIO_adfilter_src_4_reg_reg                                        (*((volatile unsigned int*)AUDIO_adfilter_src_4_reg_reg))
#define  AUDIO_adfilter_src_4_reg_adc4_ad_comp_gain_shift                        (30)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_gain_l_shift                           (23)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_gain_r_shift                           (16)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_hpf_en_shift                           (15)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_mute_l_shift                           (14)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_mute_r_shift                           (13)
#define  AUDIO_adfilter_src_4_reg_adc4_src_en_shift                              (12)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_zdet_tout_shift                        (10)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_zdet_func_shift                        (8)
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_boost_gain_l_shift                   (6)
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_boost_gain_r_shift                   (4)
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_lpf1st_en_shift                      (3)
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_lpf2nd_fc_sel_shift                  (2)
#define  AUDIO_adfilter_src_4_reg_adc4_dmicl_ri_fa_sel_shift                     (1)
#define  AUDIO_adfilter_src_4_reg_adc4_dmicr_ri_fa_sel_shift                     (0)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_comp_gain_mask                         (0xC0000000)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_gain_l_mask                            (0x3F800000)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_gain_r_mask                            (0x007F0000)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_hpf_en_mask                            (0x00008000)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_mute_l_mask                            (0x00004000)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_mute_r_mask                            (0x00002000)
#define  AUDIO_adfilter_src_4_reg_adc4_src_en_mask                               (0x00001000)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_zdet_tout_mask                         (0x00000C00)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_zdet_func_mask                         (0x00000300)
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_boost_gain_l_mask                    (0x000000C0)
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_boost_gain_r_mask                    (0x00000030)
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_lpf1st_en_mask                       (0x00000008)
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_lpf2nd_fc_sel_mask                   (0x00000004)
#define  AUDIO_adfilter_src_4_reg_adc4_dmicl_ri_fa_sel_mask                      (0x00000002)
#define  AUDIO_adfilter_src_4_reg_adc4_dmicr_ri_fa_sel_mask                      (0x00000001)
#define  AUDIO_adfilter_src_4_reg_adc4_ad_comp_gain(data)                        (0xC0000000&((data)<<30))
#define  AUDIO_adfilter_src_4_reg_adc4_ad_gain_l(data)                           (0x3F800000&((data)<<23))
#define  AUDIO_adfilter_src_4_reg_adc4_ad_gain_r(data)                           (0x007F0000&((data)<<16))
#define  AUDIO_adfilter_src_4_reg_adc4_ad_hpf_en(data)                           (0x00008000&((data)<<15))
#define  AUDIO_adfilter_src_4_reg_adc4_ad_mute_l(data)                           (0x00004000&((data)<<14))
#define  AUDIO_adfilter_src_4_reg_adc4_ad_mute_r(data)                           (0x00002000&((data)<<13))
#define  AUDIO_adfilter_src_4_reg_adc4_src_en(data)                              (0x00001000&((data)<<12))
#define  AUDIO_adfilter_src_4_reg_adc4_ad_zdet_tout(data)                        (0x00000C00&((data)<<10))
#define  AUDIO_adfilter_src_4_reg_adc4_ad_zdet_func(data)                        (0x00000300&((data)<<8))
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_boost_gain_l(data)                   (0x000000C0&((data)<<6))
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_boost_gain_r(data)                   (0x00000030&((data)<<4))
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_lpf1st_en(data)                      (0x00000008&((data)<<3))
#define  AUDIO_adfilter_src_4_reg_adc4_dmic_lpf2nd_fc_sel(data)                  (0x00000004&((data)<<2))
#define  AUDIO_adfilter_src_4_reg_adc4_dmicl_ri_fa_sel(data)                     (0x00000002&((data)<<1))
#define  AUDIO_adfilter_src_4_reg_adc4_dmicr_ri_fa_sel(data)                     (0x00000001&(data))
#define  AUDIO_adfilter_src_4_reg_get_adc4_ad_comp_gain(data)                    ((0xC0000000&(data))>>30)
#define  AUDIO_adfilter_src_4_reg_get_adc4_ad_gain_l(data)                       ((0x3F800000&(data))>>23)
#define  AUDIO_adfilter_src_4_reg_get_adc4_ad_gain_r(data)                       ((0x007F0000&(data))>>16)
#define  AUDIO_adfilter_src_4_reg_get_adc4_ad_hpf_en(data)                       ((0x00008000&(data))>>15)
#define  AUDIO_adfilter_src_4_reg_get_adc4_ad_mute_l(data)                       ((0x00004000&(data))>>14)
#define  AUDIO_adfilter_src_4_reg_get_adc4_ad_mute_r(data)                       ((0x00002000&(data))>>13)
#define  AUDIO_adfilter_src_4_reg_get_adc4_src_en(data)                          ((0x00001000&(data))>>12)
#define  AUDIO_adfilter_src_4_reg_get_adc4_ad_zdet_tout(data)                    ((0x00000C00&(data))>>10)
#define  AUDIO_adfilter_src_4_reg_get_adc4_ad_zdet_func(data)                    ((0x00000300&(data))>>8)
#define  AUDIO_adfilter_src_4_reg_get_adc4_dmic_boost_gain_l(data)               ((0x000000C0&(data))>>6)
#define  AUDIO_adfilter_src_4_reg_get_adc4_dmic_boost_gain_r(data)               ((0x00000030&(data))>>4)
#define  AUDIO_adfilter_src_4_reg_get_adc4_dmic_lpf1st_en(data)                  ((0x00000008&(data))>>3)
#define  AUDIO_adfilter_src_4_reg_get_adc4_dmic_lpf2nd_fc_sel(data)              ((0x00000004&(data))>>2)
#define  AUDIO_adfilter_src_4_reg_get_adc4_dmicl_ri_fa_sel(data)                 ((0x00000002&(data))>>1)
#define  AUDIO_adfilter_src_4_reg_get_adc4_dmicr_ri_fa_sel(data)                 (0x00000001&(data))

#define  AUDIO_dafilter_src_reg_1                                               0x18006B14
#define  AUDIO_dafilter_src_reg_1_reg_addr                                       "0xB8006B14"
#define  AUDIO_dafilter_src_reg_1_reg                                            0xB8006B14
#define  AUDIO_dafilter_src_reg_1_inst_addr                                      "0x0171"
#define  set_AUDIO_dafilter_src_reg_1_reg(data)                                  (*((volatile unsigned int*)AUDIO_dafilter_src_reg_1_reg)=data)
#define  get_AUDIO_dafilter_src_reg_1_reg                                        (*((volatile unsigned int*)AUDIO_dafilter_src_reg_1_reg))
#define  AUDIO_dafilter_src_reg_1_dac0_gain_l_shift                              (24)
#define  AUDIO_dafilter_src_reg_1_dac0_gain_r_shift                              (16)
#define  AUDIO_dafilter_src_reg_1_dac1_gain_l_shift                              (8)
#define  AUDIO_dafilter_src_reg_1_dac1_gain_r_shift                              (0)
#define  AUDIO_dafilter_src_reg_1_dac0_gain_l_mask                               (0xFF000000)
#define  AUDIO_dafilter_src_reg_1_dac0_gain_r_mask                               (0x00FF0000)
#define  AUDIO_dafilter_src_reg_1_dac1_gain_l_mask                               (0x0000FF00)
#define  AUDIO_dafilter_src_reg_1_dac1_gain_r_mask                               (0x000000FF)
#define  AUDIO_dafilter_src_reg_1_dac0_gain_l(data)                              (0xFF000000&((data)<<24))
#define  AUDIO_dafilter_src_reg_1_dac0_gain_r(data)                              (0x00FF0000&((data)<<16))
#define  AUDIO_dafilter_src_reg_1_dac1_gain_l(data)                              (0x0000FF00&((data)<<8))
#define  AUDIO_dafilter_src_reg_1_dac1_gain_r(data)                              (0x000000FF&(data))
#define  AUDIO_dafilter_src_reg_1_get_dac0_gain_l(data)                          ((0xFF000000&(data))>>24)
#define  AUDIO_dafilter_src_reg_1_get_dac0_gain_r(data)                          ((0x00FF0000&(data))>>16)
#define  AUDIO_dafilter_src_reg_1_get_dac1_gain_l(data)                          ((0x0000FF00&(data))>>8)
#define  AUDIO_dafilter_src_reg_1_get_dac1_gain_r(data)                          (0x000000FF&(data))

#define  AUDIO_dafilter_src_reg_2                                               0x18006B18
#define  AUDIO_dafilter_src_reg_2_reg_addr                                       "0xB8006B18"
#define  AUDIO_dafilter_src_reg_2_reg                                            0xB8006B18
#define  AUDIO_dafilter_src_reg_2_inst_addr                                      "0x0172"
#define  set_AUDIO_dafilter_src_reg_2_reg(data)                                  (*((volatile unsigned int*)AUDIO_dafilter_src_reg_2_reg)=data)
#define  get_AUDIO_dafilter_src_reg_2_reg                                        (*((volatile unsigned int*)AUDIO_dafilter_src_reg_2_reg))
#define  AUDIO_dafilter_src_reg_2_da1_fifo_empty_shift                           (22)
#define  AUDIO_dafilter_src_reg_2_da1_fifo_full_shift                            (21)
#define  AUDIO_dafilter_src_reg_2_da1_fifo_empty_pending_shift                   (20)
#define  AUDIO_dafilter_src_reg_2_da1_fifo_full_pending_shift                    (19)
#define  AUDIO_dafilter_src_reg_2_da0_fifo_empty_shift                           (18)
#define  AUDIO_dafilter_src_reg_2_da0_fifo_full_shift                            (17)
#define  AUDIO_dafilter_src_reg_2_da0_fifo_empty_pending_shift                   (16)
#define  AUDIO_dafilter_src_reg_2_da0_fifo_full_pending_shift                    (15)
#define  AUDIO_dafilter_src_reg_2_daad_lp_en_shift                               (14)
#define  AUDIO_dafilter_src_reg_2_dac0_dither_sel_shift                          (12)
#define  AUDIO_dafilter_src_reg_2_dac0_hpf_en_shift                              (11)
#define  AUDIO_dafilter_src_reg_2_dac0_mute_l_shift                              (10)
#define  AUDIO_dafilter_src_reg_2_dac0_mute_r_shift                              (9)
#define  AUDIO_dafilter_src_reg_2_dac1_dither_sel_shift                          (7)
#define  AUDIO_dafilter_src_reg_2_dac1_hpf_en_shift                              (6)
#define  AUDIO_dafilter_src_reg_2_dac1_mute_l_shift                              (5)
#define  AUDIO_dafilter_src_reg_2_dac1_mute_r_shift                              (4)
#define  AUDIO_dafilter_src_reg_2_dac_zdet_tout_shift                            (2)
#define  AUDIO_dafilter_src_reg_2_dac_zdet_func_shift                            (0)
#define  AUDIO_dafilter_src_reg_2_da1_fifo_empty_mask                            (0x00400000)
#define  AUDIO_dafilter_src_reg_2_da1_fifo_full_mask                             (0x00200000)
#define  AUDIO_dafilter_src_reg_2_da1_fifo_empty_pending_mask                    (0x00100000)
#define  AUDIO_dafilter_src_reg_2_da1_fifo_full_pending_mask                     (0x00080000)
#define  AUDIO_dafilter_src_reg_2_da0_fifo_empty_mask                            (0x00040000)
#define  AUDIO_dafilter_src_reg_2_da0_fifo_full_mask                             (0x00020000)
#define  AUDIO_dafilter_src_reg_2_da0_fifo_empty_pending_mask                    (0x00010000)
#define  AUDIO_dafilter_src_reg_2_da0_fifo_full_pending_mask                     (0x00008000)
#define  AUDIO_dafilter_src_reg_2_daad_lp_en_mask                                (0x00004000)
#define  AUDIO_dafilter_src_reg_2_dac0_dither_sel_mask                           (0x00003000)
#define  AUDIO_dafilter_src_reg_2_dac0_hpf_en_mask                               (0x00000800)
#define  AUDIO_dafilter_src_reg_2_dac0_mute_l_mask                               (0x00000400)
#define  AUDIO_dafilter_src_reg_2_dac0_mute_r_mask                               (0x00000200)
#define  AUDIO_dafilter_src_reg_2_dac1_dither_sel_mask                           (0x00000180)
#define  AUDIO_dafilter_src_reg_2_dac1_hpf_en_mask                               (0x00000040)
#define  AUDIO_dafilter_src_reg_2_dac1_mute_l_mask                               (0x00000020)
#define  AUDIO_dafilter_src_reg_2_dac1_mute_r_mask                               (0x00000010)
#define  AUDIO_dafilter_src_reg_2_dac_zdet_tout_mask                             (0x0000000C)
#define  AUDIO_dafilter_src_reg_2_dac_zdet_func_mask                             (0x00000003)
#define  AUDIO_dafilter_src_reg_2_da1_fifo_empty(data)                           (0x00400000&((data)<<22))
#define  AUDIO_dafilter_src_reg_2_da1_fifo_full(data)                            (0x00200000&((data)<<21))
#define  AUDIO_dafilter_src_reg_2_da1_fifo_empty_pending(data)                   (0x00100000&((data)<<20))
#define  AUDIO_dafilter_src_reg_2_da1_fifo_full_pending(data)                    (0x00080000&((data)<<19))
#define  AUDIO_dafilter_src_reg_2_da0_fifo_empty(data)                           (0x00040000&((data)<<18))
#define  AUDIO_dafilter_src_reg_2_da0_fifo_full(data)                            (0x00020000&((data)<<17))
#define  AUDIO_dafilter_src_reg_2_da0_fifo_empty_pending(data)                   (0x00010000&((data)<<16))
#define  AUDIO_dafilter_src_reg_2_da0_fifo_full_pending(data)                    (0x00008000&((data)<<15))
#define  AUDIO_dafilter_src_reg_2_daad_lp_en(data)                               (0x00004000&((data)<<14))
#define  AUDIO_dafilter_src_reg_2_dac0_dither_sel(data)                          (0x00003000&((data)<<12))
#define  AUDIO_dafilter_src_reg_2_dac0_hpf_en(data)                              (0x00000800&((data)<<11))
#define  AUDIO_dafilter_src_reg_2_dac0_mute_l(data)                              (0x00000400&((data)<<10))
#define  AUDIO_dafilter_src_reg_2_dac0_mute_r(data)                              (0x00000200&((data)<<9))
#define  AUDIO_dafilter_src_reg_2_dac1_dither_sel(data)                          (0x00000180&((data)<<7))
#define  AUDIO_dafilter_src_reg_2_dac1_hpf_en(data)                              (0x00000040&((data)<<6))
#define  AUDIO_dafilter_src_reg_2_dac1_mute_l(data)                              (0x00000020&((data)<<5))
#define  AUDIO_dafilter_src_reg_2_dac1_mute_r(data)                              (0x00000010&((data)<<4))
#define  AUDIO_dafilter_src_reg_2_dac_zdet_tout(data)                            (0x0000000C&((data)<<2))
#define  AUDIO_dafilter_src_reg_2_dac_zdet_func(data)                            (0x00000003&(data))
#define  AUDIO_dafilter_src_reg_2_get_da1_fifo_empty(data)                       ((0x00400000&(data))>>22)
#define  AUDIO_dafilter_src_reg_2_get_da1_fifo_full(data)                        ((0x00200000&(data))>>21)
#define  AUDIO_dafilter_src_reg_2_get_da1_fifo_empty_pending(data)               ((0x00100000&(data))>>20)
#define  AUDIO_dafilter_src_reg_2_get_da1_fifo_full_pending(data)                ((0x00080000&(data))>>19)
#define  AUDIO_dafilter_src_reg_2_get_da0_fifo_empty(data)                       ((0x00040000&(data))>>18)
#define  AUDIO_dafilter_src_reg_2_get_da0_fifo_full(data)                        ((0x00020000&(data))>>17)
#define  AUDIO_dafilter_src_reg_2_get_da0_fifo_empty_pending(data)               ((0x00010000&(data))>>16)
#define  AUDIO_dafilter_src_reg_2_get_da0_fifo_full_pending(data)                ((0x00008000&(data))>>15)
#define  AUDIO_dafilter_src_reg_2_get_daad_lp_en(data)                           ((0x00004000&(data))>>14)
#define  AUDIO_dafilter_src_reg_2_get_dac0_dither_sel(data)                      ((0x00003000&(data))>>12)
#define  AUDIO_dafilter_src_reg_2_get_dac0_hpf_en(data)                          ((0x00000800&(data))>>11)
#define  AUDIO_dafilter_src_reg_2_get_dac0_mute_l(data)                          ((0x00000400&(data))>>10)
#define  AUDIO_dafilter_src_reg_2_get_dac0_mute_r(data)                          ((0x00000200&(data))>>9)
#define  AUDIO_dafilter_src_reg_2_get_dac1_dither_sel(data)                      ((0x00000180&(data))>>7)
#define  AUDIO_dafilter_src_reg_2_get_dac1_hpf_en(data)                          ((0x00000040&(data))>>6)
#define  AUDIO_dafilter_src_reg_2_get_dac1_mute_l(data)                          ((0x00000020&(data))>>5)
#define  AUDIO_dafilter_src_reg_2_get_dac1_mute_r(data)                          ((0x00000010&(data))>>4)
#define  AUDIO_dafilter_src_reg_2_get_dac_zdet_tout(data)                        ((0x0000000C&(data))>>2)
#define  AUDIO_dafilter_src_reg_2_get_dac_zdet_func(data)                        (0x00000003&(data))

#define  AUDIO_dac0_1_src_sel                                                   0x18006B1C
#define  AUDIO_dac0_1_src_sel_reg_addr                                           "0xB8006B1C"
#define  AUDIO_dac0_1_src_sel_reg                                                0xB8006B1C
#define  AUDIO_dac0_1_src_sel_inst_addr                                          "0x0173"
#define  set_AUDIO_dac0_1_src_sel_reg(data)                                      (*((volatile unsigned int*)AUDIO_dac0_1_src_sel_reg)=data)
#define  get_AUDIO_dac0_1_src_sel_reg                                            (*((volatile unsigned int*)AUDIO_dac0_1_src_sel_reg))
#define  AUDIO_dac0_1_src_sel_dac1_hw_l_inverter_en_shift                        (31)
#define  AUDIO_dac0_1_src_sel_dac1_hw_r_inverter_en_shift                        (30)
#define  AUDIO_dac0_1_src_sel_dac1_hw_out_limiter_en_shift                       (29)
#define  AUDIO_dac0_1_src_sel_dac1_hw_out_limiter_shift                          (22)
#define  AUDIO_dac0_1_src_sel_dac1_pcm_source_sel_shift                          (18)
#define  AUDIO_dac0_1_src_sel_dac0_swap_sel_shift                                (16)
#define  AUDIO_dac0_1_src_sel_dac1_swap_sel_shift                                (14)
#define  AUDIO_dac0_1_src_sel_dac0_hw_l_inverter_en_shift                        (13)
#define  AUDIO_dac0_1_src_sel_dac0_hw_r_inverter_en_shift                        (12)
#define  AUDIO_dac0_1_src_sel_dac0_hw_out_limiter_en_shift                       (11)
#define  AUDIO_dac0_1_src_sel_dac0_hw_out_limiter_shift                          (4)
#define  AUDIO_dac0_1_src_sel_dac0_pcm_source_sel_shift                          (0)
#define  AUDIO_dac0_1_src_sel_dac1_hw_l_inverter_en_mask                         (0x80000000)
#define  AUDIO_dac0_1_src_sel_dac1_hw_r_inverter_en_mask                         (0x40000000)
#define  AUDIO_dac0_1_src_sel_dac1_hw_out_limiter_en_mask                        (0x20000000)
#define  AUDIO_dac0_1_src_sel_dac1_hw_out_limiter_mask                           (0x1FC00000)
#define  AUDIO_dac0_1_src_sel_dac1_pcm_source_sel_mask                           (0x003C0000)
#define  AUDIO_dac0_1_src_sel_dac0_swap_sel_mask                                 (0x00030000)
#define  AUDIO_dac0_1_src_sel_dac1_swap_sel_mask                                 (0x0000C000)
#define  AUDIO_dac0_1_src_sel_dac0_hw_l_inverter_en_mask                         (0x00002000)
#define  AUDIO_dac0_1_src_sel_dac0_hw_r_inverter_en_mask                         (0x00001000)
#define  AUDIO_dac0_1_src_sel_dac0_hw_out_limiter_en_mask                        (0x00000800)
#define  AUDIO_dac0_1_src_sel_dac0_hw_out_limiter_mask                           (0x000007F0)
#define  AUDIO_dac0_1_src_sel_dac0_pcm_source_sel_mask                           (0x0000000F)
#define  AUDIO_dac0_1_src_sel_dac1_hw_l_inverter_en(data)                        (0x80000000&((data)<<31))
#define  AUDIO_dac0_1_src_sel_dac1_hw_r_inverter_en(data)                        (0x40000000&((data)<<30))
#define  AUDIO_dac0_1_src_sel_dac1_hw_out_limiter_en(data)                       (0x20000000&((data)<<29))
#define  AUDIO_dac0_1_src_sel_dac1_hw_out_limiter(data)                          (0x1FC00000&((data)<<22))
#define  AUDIO_dac0_1_src_sel_dac1_pcm_source_sel(data)                          (0x003C0000&((data)<<18))
#define  AUDIO_dac0_1_src_sel_dac0_swap_sel(data)                                (0x00030000&((data)<<16))
#define  AUDIO_dac0_1_src_sel_dac1_swap_sel(data)                                (0x0000C000&((data)<<14))
#define  AUDIO_dac0_1_src_sel_dac0_hw_l_inverter_en(data)                        (0x00002000&((data)<<13))
#define  AUDIO_dac0_1_src_sel_dac0_hw_r_inverter_en(data)                        (0x00001000&((data)<<12))
#define  AUDIO_dac0_1_src_sel_dac0_hw_out_limiter_en(data)                       (0x00000800&((data)<<11))
#define  AUDIO_dac0_1_src_sel_dac0_hw_out_limiter(data)                          (0x000007F0&((data)<<4))
#define  AUDIO_dac0_1_src_sel_dac0_pcm_source_sel(data)                          (0x0000000F&(data))
#define  AUDIO_dac0_1_src_sel_get_dac1_hw_l_inverter_en(data)                    ((0x80000000&(data))>>31)
#define  AUDIO_dac0_1_src_sel_get_dac1_hw_r_inverter_en(data)                    ((0x40000000&(data))>>30)
#define  AUDIO_dac0_1_src_sel_get_dac1_hw_out_limiter_en(data)                   ((0x20000000&(data))>>29)
#define  AUDIO_dac0_1_src_sel_get_dac1_hw_out_limiter(data)                      ((0x1FC00000&(data))>>22)
#define  AUDIO_dac0_1_src_sel_get_dac1_pcm_source_sel(data)                      ((0x003C0000&(data))>>18)
#define  AUDIO_dac0_1_src_sel_get_dac0_swap_sel(data)                            ((0x00030000&(data))>>16)
#define  AUDIO_dac0_1_src_sel_get_dac1_swap_sel(data)                            ((0x0000C000&(data))>>14)
#define  AUDIO_dac0_1_src_sel_get_dac0_hw_l_inverter_en(data)                    ((0x00002000&(data))>>13)
#define  AUDIO_dac0_1_src_sel_get_dac0_hw_r_inverter_en(data)                    ((0x00001000&(data))>>12)
#define  AUDIO_dac0_1_src_sel_get_dac0_hw_out_limiter_en(data)                   ((0x00000800&(data))>>11)
#define  AUDIO_dac0_1_src_sel_get_dac0_hw_out_limiter(data)                      ((0x000007F0&(data))>>4)
#define  AUDIO_dac0_1_src_sel_get_dac0_pcm_source_sel(data)                      (0x0000000F&(data))

#define  AUDIO_ADC_Digital_Volume_Control_0                                     0x18006B20
#define  AUDIO_ADC_Digital_Volume_Control_0_reg_addr                             "0xB8006B20"
#define  AUDIO_ADC_Digital_Volume_Control_0_reg                                  0xB8006B20
#define  AUDIO_ADC_Digital_Volume_Control_0_inst_addr                            "0x0174"
#define  set_AUDIO_ADC_Digital_Volume_Control_0_reg(data)                        (*((volatile unsigned int*)AUDIO_ADC_Digital_Volume_Control_0_reg)=data)
#define  get_AUDIO_ADC_Digital_Volume_Control_0_reg                              (*((volatile unsigned int*)AUDIO_ADC_Digital_Volume_Control_0_reg))
#define  AUDIO_ADC_Digital_Volume_Control_0_adc_dvol_enable_shift                (31)
#define  AUDIO_ADC_Digital_Volume_Control_0_reg_in_thre_shift                    (13)
#define  AUDIO_ADC_Digital_Volume_Control_0_reg_zero_in_en_shift                 (12)
#define  AUDIO_ADC_Digital_Volume_Control_0_zcth_shift                           (4)
#define  AUDIO_ADC_Digital_Volume_Control_0_adc4_l_inverter_en_shift             (3)
#define  AUDIO_ADC_Digital_Volume_Control_0_adc4_r_inverter_en_shift             (2)
#define  AUDIO_ADC_Digital_Volume_Control_0_dvcm_shift                           (0)
#define  AUDIO_ADC_Digital_Volume_Control_0_adc_dvol_enable_mask                 (0x80000000)
#define  AUDIO_ADC_Digital_Volume_Control_0_reg_in_thre_mask                     (0x0003E000)
#define  AUDIO_ADC_Digital_Volume_Control_0_reg_zero_in_en_mask                  (0x00001000)
#define  AUDIO_ADC_Digital_Volume_Control_0_zcth_mask                            (0x000001F0)
#define  AUDIO_ADC_Digital_Volume_Control_0_adc4_l_inverter_en_mask              (0x00000008)
#define  AUDIO_ADC_Digital_Volume_Control_0_adc4_r_inverter_en_mask              (0x00000004)
#define  AUDIO_ADC_Digital_Volume_Control_0_dvcm_mask                            (0x00000003)
#define  AUDIO_ADC_Digital_Volume_Control_0_adc_dvol_enable(data)                (0x80000000&((data)<<31))
#define  AUDIO_ADC_Digital_Volume_Control_0_reg_in_thre(data)                    (0x0003E000&((data)<<13))
#define  AUDIO_ADC_Digital_Volume_Control_0_reg_zero_in_en(data)                 (0x00001000&((data)<<12))
#define  AUDIO_ADC_Digital_Volume_Control_0_zcth(data)                           (0x000001F0&((data)<<4))
#define  AUDIO_ADC_Digital_Volume_Control_0_adc4_l_inverter_en(data)             (0x00000008&((data)<<3))
#define  AUDIO_ADC_Digital_Volume_Control_0_adc4_r_inverter_en(data)             (0x00000004&((data)<<2))
#define  AUDIO_ADC_Digital_Volume_Control_0_dvcm(data)                           (0x00000003&(data))
#define  AUDIO_ADC_Digital_Volume_Control_0_get_adc_dvol_enable(data)            ((0x80000000&(data))>>31)
#define  AUDIO_ADC_Digital_Volume_Control_0_get_reg_in_thre(data)                ((0x0003E000&(data))>>13)
#define  AUDIO_ADC_Digital_Volume_Control_0_get_reg_zero_in_en(data)             ((0x00001000&(data))>>12)
#define  AUDIO_ADC_Digital_Volume_Control_0_get_zcth(data)                       ((0x000001F0&(data))>>4)
#define  AUDIO_ADC_Digital_Volume_Control_0_get_adc4_l_inverter_en(data)         ((0x00000008&(data))>>3)
#define  AUDIO_ADC_Digital_Volume_Control_0_get_adc4_r_inverter_en(data)         ((0x00000004&(data))>>2)
#define  AUDIO_ADC_Digital_Volume_Control_0_get_dvcm(data)                       (0x00000003&(data))

#define  AUDIO_ADC_Digital_Volume_Control_1                                     0x18006B24
#define  AUDIO_ADC_Digital_Volume_Control_1_reg_addr                             "0xB8006B24"
#define  AUDIO_ADC_Digital_Volume_Control_1_reg                                  0xB8006B24
#define  AUDIO_ADC_Digital_Volume_Control_1_inst_addr                            "0x0175"
#define  set_AUDIO_ADC_Digital_Volume_Control_1_reg(data)                        (*((volatile unsigned int*)AUDIO_ADC_Digital_Volume_Control_1_reg)=data)
#define  get_AUDIO_ADC_Digital_Volume_Control_1_reg                              (*((volatile unsigned int*)AUDIO_ADC_Digital_Volume_Control_1_reg))
#define  AUDIO_ADC_Digital_Volume_Control_1_dvol_apply_shift                     (31)
#define  AUDIO_ADC_Digital_Volume_Control_1_zcto_shift                           (28)
#define  AUDIO_ADC_Digital_Volume_Control_1_ramp_step_shift                      (26)
#define  AUDIO_ADC_Digital_Volume_Control_1_delay_ctrl_shift                     (16)
#define  AUDIO_ADC_Digital_Volume_Control_1_mute_apply_shift                     (15)
#define  AUDIO_ADC_Digital_Volume_Control_1_zcto_mute_shift                      (12)
#define  AUDIO_ADC_Digital_Volume_Control_1_ramp_step_mute_shift                 (10)
#define  AUDIO_ADC_Digital_Volume_Control_1_delay_ctrl_mute_shift                (0)
#define  AUDIO_ADC_Digital_Volume_Control_1_dvol_apply_mask                      (0x80000000)
#define  AUDIO_ADC_Digital_Volume_Control_1_zcto_mask                            (0x70000000)
#define  AUDIO_ADC_Digital_Volume_Control_1_ramp_step_mask                       (0x0C000000)
#define  AUDIO_ADC_Digital_Volume_Control_1_delay_ctrl_mask                      (0x03FF0000)
#define  AUDIO_ADC_Digital_Volume_Control_1_mute_apply_mask                      (0x00008000)
#define  AUDIO_ADC_Digital_Volume_Control_1_zcto_mute_mask                       (0x00007000)
#define  AUDIO_ADC_Digital_Volume_Control_1_ramp_step_mute_mask                  (0x00000C00)
#define  AUDIO_ADC_Digital_Volume_Control_1_delay_ctrl_mute_mask                 (0x000003FF)
#define  AUDIO_ADC_Digital_Volume_Control_1_dvol_apply(data)                     (0x80000000&((data)<<31))
#define  AUDIO_ADC_Digital_Volume_Control_1_zcto(data)                           (0x70000000&((data)<<28))
#define  AUDIO_ADC_Digital_Volume_Control_1_ramp_step(data)                      (0x0C000000&((data)<<26))
#define  AUDIO_ADC_Digital_Volume_Control_1_delay_ctrl(data)                     (0x03FF0000&((data)<<16))
#define  AUDIO_ADC_Digital_Volume_Control_1_mute_apply(data)                     (0x00008000&((data)<<15))
#define  AUDIO_ADC_Digital_Volume_Control_1_zcto_mute(data)                      (0x00007000&((data)<<12))
#define  AUDIO_ADC_Digital_Volume_Control_1_ramp_step_mute(data)                 (0x00000C00&((data)<<10))
#define  AUDIO_ADC_Digital_Volume_Control_1_delay_ctrl_mute(data)                (0x000003FF&(data))
#define  AUDIO_ADC_Digital_Volume_Control_1_get_dvol_apply(data)                 ((0x80000000&(data))>>31)
#define  AUDIO_ADC_Digital_Volume_Control_1_get_zcto(data)                       ((0x70000000&(data))>>28)
#define  AUDIO_ADC_Digital_Volume_Control_1_get_ramp_step(data)                  ((0x0C000000&(data))>>26)
#define  AUDIO_ADC_Digital_Volume_Control_1_get_delay_ctrl(data)                 ((0x03FF0000&(data))>>16)
#define  AUDIO_ADC_Digital_Volume_Control_1_get_mute_apply(data)                 ((0x00008000&(data))>>15)
#define  AUDIO_ADC_Digital_Volume_Control_1_get_zcto_mute(data)                  ((0x00007000&(data))>>12)
#define  AUDIO_ADC_Digital_Volume_Control_1_get_ramp_step_mute(data)             ((0x00000C00&(data))>>10)
#define  AUDIO_ADC_Digital_Volume_Control_1_get_delay_ctrl_mute(data)            (0x000003FF&(data))

#define  AUDIO_ADC_LR_Digital_Volume_Control                                    0x18006B28
#define  AUDIO_ADC_LR_Digital_Volume_Control_reg_addr                            "0xB8006B28"
#define  AUDIO_ADC_LR_Digital_Volume_Control_reg                                 0xB8006B28
#define  AUDIO_ADC_LR_Digital_Volume_Control_inst_addr                           "0x0176"
#define  set_AUDIO_ADC_LR_Digital_Volume_Control_reg(data)                       (*((volatile unsigned int*)AUDIO_ADC_LR_Digital_Volume_Control_reg)=data)
#define  get_AUDIO_ADC_LR_Digital_Volume_Control_reg                             (*((volatile unsigned int*)AUDIO_ADC_LR_Digital_Volume_Control_reg))
#define  AUDIO_ADC_LR_Digital_Volume_Control_mute_l_shift                        (31)
#define  AUDIO_ADC_LR_Digital_Volume_Control_rep_l_status_shift                  (30)
#define  AUDIO_ADC_LR_Digital_Volume_Control_hpf_l_enable_shift                  (28)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_l_ready_shift                   (27)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_l_a_shift                       (22)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_l_b_shift                       (16)
#define  AUDIO_ADC_LR_Digital_Volume_Control_mute_r_shift                        (15)
#define  AUDIO_ADC_LR_Digital_Volume_Control_rep_r_status_shift                  (14)
#define  AUDIO_ADC_LR_Digital_Volume_Control_hpf_r_enable_shift                  (12)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_r_ready_shift                   (11)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_r_a_shift                       (6)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_r_b_shift                       (0)
#define  AUDIO_ADC_LR_Digital_Volume_Control_mute_l_mask                         (0x80000000)
#define  AUDIO_ADC_LR_Digital_Volume_Control_rep_l_status_mask                   (0x40000000)
#define  AUDIO_ADC_LR_Digital_Volume_Control_hpf_l_enable_mask                   (0x10000000)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_l_ready_mask                    (0x08000000)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_l_a_mask                        (0x07C00000)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_l_b_mask                        (0x003F0000)
#define  AUDIO_ADC_LR_Digital_Volume_Control_mute_r_mask                         (0x00008000)
#define  AUDIO_ADC_LR_Digital_Volume_Control_rep_r_status_mask                   (0x00004000)
#define  AUDIO_ADC_LR_Digital_Volume_Control_hpf_r_enable_mask                   (0x00001000)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_r_ready_mask                    (0x00000800)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_r_a_mask                        (0x000007C0)
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_r_b_mask                        (0x0000003F)
#define  AUDIO_ADC_LR_Digital_Volume_Control_mute_l(data)                        (0x80000000&((data)<<31))
#define  AUDIO_ADC_LR_Digital_Volume_Control_rep_l_status(data)                  (0x40000000&((data)<<30))
#define  AUDIO_ADC_LR_Digital_Volume_Control_hpf_l_enable(data)                  (0x10000000&((data)<<28))
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_l_ready(data)                   (0x08000000&((data)<<27))
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_l_a(data)                       (0x07C00000&((data)<<22))
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_l_b(data)                       (0x003F0000&((data)<<16))
#define  AUDIO_ADC_LR_Digital_Volume_Control_mute_r(data)                        (0x00008000&((data)<<15))
#define  AUDIO_ADC_LR_Digital_Volume_Control_rep_r_status(data)                  (0x00004000&((data)<<14))
#define  AUDIO_ADC_LR_Digital_Volume_Control_hpf_r_enable(data)                  (0x00001000&((data)<<12))
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_r_ready(data)                   (0x00000800&((data)<<11))
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_r_a(data)                       (0x000007C0&((data)<<6))
#define  AUDIO_ADC_LR_Digital_Volume_Control_vol_r_b(data)                       (0x0000003F&(data))
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_mute_l(data)                    ((0x80000000&(data))>>31)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_rep_l_status(data)              ((0x40000000&(data))>>30)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_hpf_l_enable(data)              ((0x10000000&(data))>>28)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_vol_l_ready(data)               ((0x08000000&(data))>>27)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_vol_l_a(data)                   ((0x07C00000&(data))>>22)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_vol_l_b(data)                   ((0x003F0000&(data))>>16)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_mute_r(data)                    ((0x00008000&(data))>>15)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_rep_r_status(data)              ((0x00004000&(data))>>14)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_hpf_r_enable(data)              ((0x00001000&(data))>>12)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_vol_r_ready(data)               ((0x00000800&(data))>>11)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_vol_r_a(data)                   ((0x000007C0&(data))>>6)
#define  AUDIO_ADC_LR_Digital_Volume_Control_get_vol_r_b(data)                   (0x0000003F&(data))

#define  AUDIO_ADC_Double_buffer_ack                                            0x18006B2C
#define  AUDIO_ADC_Double_buffer_ack_reg_addr                                    "0xB8006B2C"
#define  AUDIO_ADC_Double_buffer_ack_reg                                         0xB8006B2C
#define  AUDIO_ADC_Double_buffer_ack_inst_addr                                   "0x0177"
#define  set_AUDIO_ADC_Double_buffer_ack_reg(data)                               (*((volatile unsigned int*)AUDIO_ADC_Double_buffer_ack_reg)=data)
#define  get_AUDIO_ADC_Double_buffer_ack_reg                                     (*((volatile unsigned int*)AUDIO_ADC_Double_buffer_ack_reg))
#define  AUDIO_ADC_Double_buffer_ack_zcto_status_shift                           (1)
#define  AUDIO_ADC_Double_buffer_ack_double_buffer_ack_shift                     (0)
#define  AUDIO_ADC_Double_buffer_ack_zcto_status_mask                            (0x00000002)
#define  AUDIO_ADC_Double_buffer_ack_double_buffer_ack_mask                      (0x00000001)
#define  AUDIO_ADC_Double_buffer_ack_zcto_status(data)                           (0x00000002&((data)<<1))
#define  AUDIO_ADC_Double_buffer_ack_double_buffer_ack(data)                     (0x00000001&(data))
#define  AUDIO_ADC_Double_buffer_ack_get_zcto_status(data)                       ((0x00000002&(data))>>1)
#define  AUDIO_ADC_Double_buffer_ack_get_double_buffer_ack(data)                 (0x00000001&(data))

#define  AUDIO_analog_frontend1_mute                                            0x18006B30
#define  AUDIO_analog_frontend1_mute_reg_addr                                    "0xB8006B30"
#define  AUDIO_analog_frontend1_mute_reg                                         0xB8006B30
#define  AUDIO_analog_frontend1_mute_inst_addr                                   "0x0178"
#define  set_AUDIO_analog_frontend1_mute_reg(data)                               (*((volatile unsigned int*)AUDIO_analog_frontend1_mute_reg)=data)
#define  get_AUDIO_analog_frontend1_mute_reg                                     (*((volatile unsigned int*)AUDIO_analog_frontend1_mute_reg))
#define  AUDIO_analog_frontend1_mute_reg_bb_adcfe_muter_shift                    (18)
#define  AUDIO_analog_frontend1_mute_reg_bb_adcfe_mutel_shift                    (0)
#define  AUDIO_analog_frontend1_mute_reg_bb_adcfe_muter_mask                     (0x01FC0000)
#define  AUDIO_analog_frontend1_mute_reg_bb_adcfe_mutel_mask                     (0x0000007F)
#define  AUDIO_analog_frontend1_mute_reg_bb_adcfe_muter(data)                    (0x01FC0000&((data)<<18))
#define  AUDIO_analog_frontend1_mute_reg_bb_adcfe_mutel(data)                    (0x0000007F&(data))
#define  AUDIO_analog_frontend1_mute_get_reg_bb_adcfe_muter(data)                ((0x01FC0000&(data))>>18)
#define  AUDIO_analog_frontend1_mute_get_reg_bb_adcfe_mutel(data)                (0x0000007F&(data))

#define  AUDIO_analog_frontend2_mute                                            0x18006B34
#define  AUDIO_analog_frontend2_mute_reg_addr                                    "0xB8006B34"
#define  AUDIO_analog_frontend2_mute_reg                                         0xB8006B34
#define  AUDIO_analog_frontend2_mute_inst_addr                                   "0x0179"
#define  set_AUDIO_analog_frontend2_mute_reg(data)                               (*((volatile unsigned int*)AUDIO_analog_frontend2_mute_reg)=data)
#define  get_AUDIO_analog_frontend2_mute_reg                                     (*((volatile unsigned int*)AUDIO_analog_frontend2_mute_reg))
#define  AUDIO_analog_frontend2_mute_reg_bb_adcfe2_muter_shift                   (18)
#define  AUDIO_analog_frontend2_mute_reg_bb_adcfe2_mutel_shift                   (0)
#define  AUDIO_analog_frontend2_mute_reg_bb_adcfe2_muter_mask                    (0x01FC0000)
#define  AUDIO_analog_frontend2_mute_reg_bb_adcfe2_mutel_mask                    (0x0000007F)
#define  AUDIO_analog_frontend2_mute_reg_bb_adcfe2_muter(data)                   (0x01FC0000&((data)<<18))
#define  AUDIO_analog_frontend2_mute_reg_bb_adcfe2_mutel(data)                   (0x0000007F&(data))
#define  AUDIO_analog_frontend2_mute_get_reg_bb_adcfe2_muter(data)               ((0x01FC0000&(data))>>18)
#define  AUDIO_analog_frontend2_mute_get_reg_bb_adcfe2_mutel(data)               (0x0000007F&(data))

#define  AUDIO_analog_aio_Hpout_Lineout_L                                       0x18006B38
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_addr                               "0xB8006B38"
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg                                    0xB8006B38
#define  AUDIO_analog_aio_Hpout_Lineout_L_inst_addr                              "0x017A"
#define  set_AUDIO_analog_aio_Hpout_Lineout_L_reg(data)                          (*((volatile unsigned int*)AUDIO_analog_aio_Hpout_Lineout_L_reg)=data)
#define  get_AUDIO_analog_aio_Hpout_Lineout_L_reg                                (*((volatile unsigned int*)AUDIO_analog_aio_Hpout_Lineout_L_reg))
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_hpo_bias_sel_shift              (31)
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_hpo_mutel_shift                 (18)
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_aio2_mutel_shift                (6)
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_aio1_mutel_shift                (0)
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_hpo_bias_sel_mask               (0x80000000)
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_hpo_mutel_mask                  (0x01FC0000)
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_aio2_mutel_mask                 (0x00000FC0)
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_aio1_mutel_mask                 (0x0000003F)
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_hpo_bias_sel(data)              (0x80000000&((data)<<31))
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_hpo_mutel(data)                 (0x01FC0000&((data)<<18))
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_aio2_mutel(data)                (0x00000FC0&((data)<<6))
#define  AUDIO_analog_aio_Hpout_Lineout_L_reg_bb_aio1_mutel(data)                (0x0000003F&(data))
#define  AUDIO_analog_aio_Hpout_Lineout_L_get_reg_bb_hpo_bias_sel(data)          ((0x80000000&(data))>>31)
#define  AUDIO_analog_aio_Hpout_Lineout_L_get_reg_bb_hpo_mutel(data)             ((0x01FC0000&(data))>>18)
#define  AUDIO_analog_aio_Hpout_Lineout_L_get_reg_bb_aio2_mutel(data)            ((0x00000FC0&(data))>>6)
#define  AUDIO_analog_aio_Hpout_Lineout_L_get_reg_bb_aio1_mutel(data)            (0x0000003F&(data))

#define  AUDIO_analog_aio_Hpout_Lineout_R                                       0x18006B3C
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_addr                               "0xB8006B3C"
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg                                    0xB8006B3C
#define  AUDIO_analog_aio_Hpout_Lineout_R_inst_addr                              "0x017B"
#define  set_AUDIO_analog_aio_Hpout_Lineout_R_reg(data)                          (*((volatile unsigned int*)AUDIO_analog_aio_Hpout_Lineout_R_reg)=data)
#define  get_AUDIO_analog_aio_Hpout_Lineout_R_reg                                (*((volatile unsigned int*)AUDIO_analog_aio_Hpout_Lineout_R_reg))
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_bb_hpo_muter_shift                 (18)
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_bb_aio2_muter_shift                (6)
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_bb_aio1_muter_shift                (0)
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_bb_hpo_muter_mask                  (0x01FC0000)
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_bb_aio2_muter_mask                 (0x00000FC0)
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_bb_aio1_muter_mask                 (0x0000003F)
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_bb_hpo_muter(data)                 (0x01FC0000&((data)<<18))
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_bb_aio2_muter(data)                (0x00000FC0&((data)<<6))
#define  AUDIO_analog_aio_Hpout_Lineout_R_reg_bb_aio1_muter(data)                (0x0000003F&(data))
#define  AUDIO_analog_aio_Hpout_Lineout_R_get_reg_bb_hpo_muter(data)             ((0x01FC0000&(data))>>18)
#define  AUDIO_analog_aio_Hpout_Lineout_R_get_reg_bb_aio2_muter(data)            ((0x00000FC0&(data))>>6)
#define  AUDIO_analog_aio_Hpout_Lineout_R_get_reg_bb_aio1_muter(data)            (0x0000003F&(data))

#define  AUDIO_adc_volume_gain_control                                          0x18006B40
#define  AUDIO_adc_volume_gain_control_reg_addr                                  "0xB8006B40"
#define  AUDIO_adc_volume_gain_control_reg                                       0xB8006B40
#define  AUDIO_adc_volume_gain_control_inst_addr                                 "0x017C"
#define  set_AUDIO_adc_volume_gain_control_reg(data)                             (*((volatile unsigned int*)AUDIO_adc_volume_gain_control_reg)=data)
#define  get_AUDIO_adc_volume_gain_control_reg                                   (*((volatile unsigned int*)AUDIO_adc_volume_gain_control_reg))
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe2_gsell_shift                 (6)
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe2_gselr_shift                 (4)
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe_gsell_shift                  (2)
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe_gselr_shift                  (0)
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe2_gsell_mask                  (0x000000C0)
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe2_gselr_mask                  (0x00000030)
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe_gsell_mask                   (0x0000000C)
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe_gselr_mask                   (0x00000003)
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe2_gsell(data)                 (0x000000C0&((data)<<6))
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe2_gselr(data)                 (0x00000030&((data)<<4))
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe_gsell(data)                  (0x0000000C&((data)<<2))
#define  AUDIO_adc_volume_gain_control_reg_bb_adcfe_gselr(data)                  (0x00000003&(data))
#define  AUDIO_adc_volume_gain_control_get_reg_bb_adcfe2_gsell(data)             ((0x000000C0&(data))>>6)
#define  AUDIO_adc_volume_gain_control_get_reg_bb_adcfe2_gselr(data)             ((0x00000030&(data))>>4)
#define  AUDIO_adc_volume_gain_control_get_reg_bb_adcfe_gsell(data)              ((0x0000000C&(data))>>2)
#define  AUDIO_adc_volume_gain_control_get_reg_bb_adcfe_gselr(data)              (0x00000003&(data))

#define  AUDIO_analog_power                                                     0x18006B44
#define  AUDIO_analog_power_reg_addr                                             "0xB8006B44"
#define  AUDIO_analog_power_reg                                                  0xB8006B44
#define  AUDIO_analog_power_inst_addr                                            "0x017D"
#define  set_AUDIO_analog_power_reg(data)                                        (*((volatile unsigned int*)AUDIO_analog_power_reg)=data)
#define  get_AUDIO_analog_power_reg                                              (*((volatile unsigned int*)AUDIO_analog_power_reg))
#define  AUDIO_analog_power_reg_bb_adcfe2_pow_shift                              (13)
#define  AUDIO_analog_power_reg_bb_adc2_pow_shift                                (12)
#define  AUDIO_analog_power_reg_bb_adcfe_pow_shift                               (11)
#define  AUDIO_analog_power_reg_bb_adc_pow_shift                                 (10)
#define  AUDIO_analog_power_reg_bb_dac_pow_shift                                 (8)
#define  AUDIO_analog_power_reg_bb_mbias_pow_shift                               (7)
#define  AUDIO_analog_power_reg_bb_hpo_pow_shift                                 (3)
#define  AUDIO_analog_power_reg_bb_aio1_pow_shift                                (2)
#define  AUDIO_analog_power_reg_bb_aio2_pow_shift                                (1)
#define  AUDIO_analog_power_reg_bb_adcfe2_pow_mask                               (0x00002000)
#define  AUDIO_analog_power_reg_bb_adc2_pow_mask                                 (0x00001000)
#define  AUDIO_analog_power_reg_bb_adcfe_pow_mask                                (0x00000800)
#define  AUDIO_analog_power_reg_bb_adc_pow_mask                                  (0x00000400)
#define  AUDIO_analog_power_reg_bb_dac_pow_mask                                  (0x00000300)
#define  AUDIO_analog_power_reg_bb_mbias_pow_mask                                (0x00000080)
#define  AUDIO_analog_power_reg_bb_hpo_pow_mask                                  (0x00000008)
#define  AUDIO_analog_power_reg_bb_aio1_pow_mask                                 (0x00000004)
#define  AUDIO_analog_power_reg_bb_aio2_pow_mask                                 (0x00000002)
#define  AUDIO_analog_power_reg_bb_adcfe2_pow(data)                              (0x00002000&((data)<<13))
#define  AUDIO_analog_power_reg_bb_adc2_pow(data)                                (0x00001000&((data)<<12))
#define  AUDIO_analog_power_reg_bb_adcfe_pow(data)                               (0x00000800&((data)<<11))
#define  AUDIO_analog_power_reg_bb_adc_pow(data)                                 (0x00000400&((data)<<10))
#define  AUDIO_analog_power_reg_bb_dac_pow(data)                                 (0x00000300&((data)<<8))
#define  AUDIO_analog_power_reg_bb_mbias_pow(data)                               (0x00000080&((data)<<7))
#define  AUDIO_analog_power_reg_bb_hpo_pow(data)                                 (0x00000008&((data)<<3))
#define  AUDIO_analog_power_reg_bb_aio1_pow(data)                                (0x00000004&((data)<<2))
#define  AUDIO_analog_power_reg_bb_aio2_pow(data)                                (0x00000002&((data)<<1))
#define  AUDIO_analog_power_get_reg_bb_adcfe2_pow(data)                          ((0x00002000&(data))>>13)
#define  AUDIO_analog_power_get_reg_bb_adc2_pow(data)                            ((0x00001000&(data))>>12)
#define  AUDIO_analog_power_get_reg_bb_adcfe_pow(data)                           ((0x00000800&(data))>>11)
#define  AUDIO_analog_power_get_reg_bb_adc_pow(data)                             ((0x00000400&(data))>>10)
#define  AUDIO_analog_power_get_reg_bb_dac_pow(data)                             ((0x00000300&(data))>>8)
#define  AUDIO_analog_power_get_reg_bb_mbias_pow(data)                           ((0x00000080&(data))>>7)
#define  AUDIO_analog_power_get_reg_bb_hpo_pow(data)                             ((0x00000008&(data))>>3)
#define  AUDIO_analog_power_get_reg_bb_aio1_pow(data)                            ((0x00000004&(data))>>2)
#define  AUDIO_analog_power_get_reg_bb_aio2_pow(data)                            ((0x00000002&(data))>>1)

#define  AUDIO_analog_pga                                                       0x18006B48
#define  AUDIO_analog_pga_reg_addr                                               "0xB8006B48"
#define  AUDIO_analog_pga_reg                                                    0xB8006B48
#define  AUDIO_analog_pga_inst_addr                                              "0x017E"
#define  set_AUDIO_analog_pga_reg(data)                                          (*((volatile unsigned int*)AUDIO_analog_pga_reg)=data)
#define  get_AUDIO_analog_pga_reg                                                (*((volatile unsigned int*)AUDIO_analog_pga_reg))
#define  AUDIO_analog_pga_reg_bb_hpo_hpmode_shift                                (17)
#define  AUDIO_analog_pga_reg_bb_adcfe_input_20k_shift                           (16)
#define  AUDIO_analog_pga_option_gain_shift                                      (13)
#define  AUDIO_analog_pga_fix_gain_shift                                         (9)
#define  AUDIO_analog_pga_afe_pga_vol_shift                                      (0)
#define  AUDIO_analog_pga_reg_bb_hpo_hpmode_mask                                 (0x00020000)
#define  AUDIO_analog_pga_reg_bb_adcfe_input_20k_mask                            (0x00010000)
#define  AUDIO_analog_pga_option_gain_mask                                       (0x00002000)
#define  AUDIO_analog_pga_fix_gain_mask                                          (0x00001E00)
#define  AUDIO_analog_pga_afe_pga_vol_mask                                       (0x000001FF)
#define  AUDIO_analog_pga_reg_bb_hpo_hpmode(data)                                (0x00020000&((data)<<17))
#define  AUDIO_analog_pga_reg_bb_adcfe_input_20k(data)                           (0x00010000&((data)<<16))
#define  AUDIO_analog_pga_option_gain(data)                                      (0x00002000&((data)<<13))
#define  AUDIO_analog_pga_fix_gain(data)                                         (0x00001E00&((data)<<9))
#define  AUDIO_analog_pga_afe_pga_vol(data)                                      (0x000001FF&(data))
#define  AUDIO_analog_pga_get_reg_bb_hpo_hpmode(data)                            ((0x00020000&(data))>>17)
#define  AUDIO_analog_pga_get_reg_bb_adcfe_input_20k(data)                       ((0x00010000&(data))>>16)
#define  AUDIO_analog_pga_get_option_gain(data)                                  ((0x00002000&(data))>>13)
#define  AUDIO_analog_pga_get_fix_gain(data)                                     ((0x00001E00&(data))>>9)
#define  AUDIO_analog_pga_get_afe_pga_vol(data)                                  (0x000001FF&(data))

#define  AUDIO_analog_CI01                                                      0x18006B4C
#define  AUDIO_analog_CI01_reg_addr                                              "0xB8006B4C"
#define  AUDIO_analog_CI01_reg                                                   0xB8006B4C
#define  AUDIO_analog_CI01_inst_addr                                             "0x017F"
#define  set_AUDIO_analog_CI01_reg(data)                                         (*((volatile unsigned int*)AUDIO_analog_CI01_reg)=data)
#define  get_AUDIO_analog_CI01_reg                                               (*((volatile unsigned int*)AUDIO_analog_CI01_reg))
#define  AUDIO_analog_CI01_reg_bb_isel_adc_vcm_shift                             (30)
#define  AUDIO_analog_CI01_reg_bb_isel_vref_shift                                (28)
#define  AUDIO_analog_CI01_reg_bb_isel_aio1_shift                                (26)
#define  AUDIO_analog_CI01_reg_bb_isel_aio2_shift                                (24)
#define  AUDIO_analog_CI01_reg_bb_isel_hpo_shift                                 (22)
#define  AUDIO_analog_CI01_reg_bb_isel_depop_shift                               (18)
#define  AUDIO_analog_CI01_reg_bb_isel_dac_shift                                 (12)
#define  AUDIO_analog_CI01_reg_bb_isel_adcfe_shift                               (4)
#define  AUDIO_analog_CI01_reg_bb_isel_adc_aa_shift                              (0)
#define  AUDIO_analog_CI01_reg_bb_isel_adc_vcm_mask                              (0xC0000000)
#define  AUDIO_analog_CI01_reg_bb_isel_vref_mask                                 (0x30000000)
#define  AUDIO_analog_CI01_reg_bb_isel_aio1_mask                                 (0x0C000000)
#define  AUDIO_analog_CI01_reg_bb_isel_aio2_mask                                 (0x03000000)
#define  AUDIO_analog_CI01_reg_bb_isel_hpo_mask                                  (0x00C00000)
#define  AUDIO_analog_CI01_reg_bb_isel_depop_mask                                (0x000C0000)
#define  AUDIO_analog_CI01_reg_bb_isel_dac_mask                                  (0x00003000)
#define  AUDIO_analog_CI01_reg_bb_isel_adcfe_mask                                (0x00000030)
#define  AUDIO_analog_CI01_reg_bb_isel_adc_aa_mask                               (0x00000003)
#define  AUDIO_analog_CI01_reg_bb_isel_adc_vcm(data)                             (0xC0000000&((data)<<30))
#define  AUDIO_analog_CI01_reg_bb_isel_vref(data)                                (0x30000000&((data)<<28))
#define  AUDIO_analog_CI01_reg_bb_isel_aio1(data)                                (0x0C000000&((data)<<26))
#define  AUDIO_analog_CI01_reg_bb_isel_aio2(data)                                (0x03000000&((data)<<24))
#define  AUDIO_analog_CI01_reg_bb_isel_hpo(data)                                 (0x00C00000&((data)<<22))
#define  AUDIO_analog_CI01_reg_bb_isel_depop(data)                               (0x000C0000&((data)<<18))
#define  AUDIO_analog_CI01_reg_bb_isel_dac(data)                                 (0x00003000&((data)<<12))
#define  AUDIO_analog_CI01_reg_bb_isel_adcfe(data)                               (0x00000030&((data)<<4))
#define  AUDIO_analog_CI01_reg_bb_isel_adc_aa(data)                              (0x00000003&(data))
#define  AUDIO_analog_CI01_get_reg_bb_isel_adc_vcm(data)                         ((0xC0000000&(data))>>30)
#define  AUDIO_analog_CI01_get_reg_bb_isel_vref(data)                            ((0x30000000&(data))>>28)
#define  AUDIO_analog_CI01_get_reg_bb_isel_aio1(data)                            ((0x0C000000&(data))>>26)
#define  AUDIO_analog_CI01_get_reg_bb_isel_aio2(data)                            ((0x03000000&(data))>>24)
#define  AUDIO_analog_CI01_get_reg_bb_isel_hpo(data)                             ((0x00C00000&(data))>>22)
#define  AUDIO_analog_CI01_get_reg_bb_isel_depop(data)                           ((0x000C0000&(data))>>18)
#define  AUDIO_analog_CI01_get_reg_bb_isel_dac(data)                             ((0x00003000&(data))>>12)
#define  AUDIO_analog_CI01_get_reg_bb_isel_adcfe(data)                           ((0x00000030&(data))>>4)
#define  AUDIO_analog_CI01_get_reg_bb_isel_adc_aa(data)                          (0x00000003&(data))

#define  AUDIO_analog_CI02                                                      0x18006B50
#define  AUDIO_analog_CI02_reg_addr                                              "0xB8006B50"
#define  AUDIO_analog_CI02_reg                                                   0xB8006B50
#define  AUDIO_analog_CI02_inst_addr                                             "0x0180"
#define  set_AUDIO_analog_CI02_reg(data)                                         (*((volatile unsigned int*)AUDIO_analog_CI02_reg)=data)
#define  get_AUDIO_analog_CI02_reg                                               (*((volatile unsigned int*)AUDIO_analog_CI02_reg))
#define  AUDIO_analog_CI02_reg_bb_isel_micbias_shift                             (30)
#define  AUDIO_analog_CI02_reg_bb_isel_micbst_shift                              (28)
#define  AUDIO_analog_CI02_reg_bb_adc2_ossel_shift                               (10)
#define  AUDIO_analog_CI02_reg_bb_adc_ossel_shift                                (8)
#define  AUDIO_analog_CI02_reg_bb_adc2_ckxen_shift                               (7)
#define  AUDIO_analog_CI02_reg_bb_adc2_fset_shift                                (6)
#define  AUDIO_analog_CI02_reg_bb_adc_ckxen_shift                                (4)
#define  AUDIO_analog_CI02_reg_bb_adc_fset_shift                                 (2)
#define  AUDIO_analog_CI02_reg_bb_isel_micbias_mask                              (0xC0000000)
#define  AUDIO_analog_CI02_reg_bb_isel_micbst_mask                               (0x30000000)
#define  AUDIO_analog_CI02_reg_bb_adc2_ossel_mask                                (0x00000C00)
#define  AUDIO_analog_CI02_reg_bb_adc_ossel_mask                                 (0x00000300)
#define  AUDIO_analog_CI02_reg_bb_adc2_ckxen_mask                                (0x00000080)
#define  AUDIO_analog_CI02_reg_bb_adc2_fset_mask                                 (0x00000040)
#define  AUDIO_analog_CI02_reg_bb_adc_ckxen_mask                                 (0x00000010)
#define  AUDIO_analog_CI02_reg_bb_adc_fset_mask                                  (0x0000000C)
#define  AUDIO_analog_CI02_reg_bb_isel_micbias(data)                             (0xC0000000&((data)<<30))
#define  AUDIO_analog_CI02_reg_bb_isel_micbst(data)                              (0x30000000&((data)<<28))
#define  AUDIO_analog_CI02_reg_bb_adc2_ossel(data)                               (0x00000C00&((data)<<10))
#define  AUDIO_analog_CI02_reg_bb_adc_ossel(data)                                (0x00000300&((data)<<8))
#define  AUDIO_analog_CI02_reg_bb_adc2_ckxen(data)                               (0x00000080&((data)<<7))
#define  AUDIO_analog_CI02_reg_bb_adc2_fset(data)                                (0x00000040&((data)<<6))
#define  AUDIO_analog_CI02_reg_bb_adc_ckxen(data)                                (0x00000010&((data)<<4))
#define  AUDIO_analog_CI02_reg_bb_adc_fset(data)                                 (0x0000000C&((data)<<2))
#define  AUDIO_analog_CI02_get_reg_bb_isel_micbias(data)                         ((0xC0000000&(data))>>30)
#define  AUDIO_analog_CI02_get_reg_bb_isel_micbst(data)                          ((0x30000000&(data))>>28)
#define  AUDIO_analog_CI02_get_reg_bb_adc2_ossel(data)                           ((0x00000C00&(data))>>10)
#define  AUDIO_analog_CI02_get_reg_bb_adc_ossel(data)                            ((0x00000300&(data))>>8)
#define  AUDIO_analog_CI02_get_reg_bb_adc2_ckxen(data)                           ((0x00000080&(data))>>7)
#define  AUDIO_analog_CI02_get_reg_bb_adc2_fset(data)                            ((0x00000040&(data))>>6)
#define  AUDIO_analog_CI02_get_reg_bb_adc_ckxen(data)                            ((0x00000010&(data))>>4)
#define  AUDIO_analog_CI02_get_reg_bb_adc_fset(data)                             ((0x0000000C&(data))>>2)

#define  AUDIO_analog_CI03                                                      0x18006B54
#define  AUDIO_analog_CI03_reg_addr                                              "0xB8006B54"
#define  AUDIO_analog_CI03_reg                                                   0xB8006B54
#define  AUDIO_analog_CI03_inst_addr                                             "0x0181"
#define  set_AUDIO_analog_CI03_reg(data)                                         (*((volatile unsigned int*)AUDIO_analog_CI03_reg)=data)
#define  get_AUDIO_analog_CI03_reg                                               (*((volatile unsigned int*)AUDIO_analog_CI03_reg))
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_vcm_shift                            (30)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_st2_shift                            (10)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_st1_shift                            (8)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_ref_shift                            (6)
#define  AUDIO_analog_CI03_reg_bb_isel_adcfe2_shift                              (4)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_comp_shift                           (2)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_aa_shift                             (0)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_vcm_mask                             (0xC0000000)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_st2_mask                             (0x00000C00)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_st1_mask                             (0x00000300)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_ref_mask                             (0x000000C0)
#define  AUDIO_analog_CI03_reg_bb_isel_adcfe2_mask                               (0x00000030)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_comp_mask                            (0x0000000C)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_aa_mask                              (0x00000003)
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_vcm(data)                            (0xC0000000&((data)<<30))
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_st2(data)                            (0x00000C00&((data)<<10))
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_st1(data)                            (0x00000300&((data)<<8))
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_ref(data)                            (0x000000C0&((data)<<6))
#define  AUDIO_analog_CI03_reg_bb_isel_adcfe2(data)                              (0x00000030&((data)<<4))
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_comp(data)                           (0x0000000C&((data)<<2))
#define  AUDIO_analog_CI03_reg_bb_isel_adc2_aa(data)                             (0x00000003&(data))
#define  AUDIO_analog_CI03_get_reg_bb_isel_adc2_vcm(data)                        ((0xC0000000&(data))>>30)
#define  AUDIO_analog_CI03_get_reg_bb_isel_adc2_st2(data)                        ((0x00000C00&(data))>>10)
#define  AUDIO_analog_CI03_get_reg_bb_isel_adc2_st1(data)                        ((0x00000300&(data))>>8)
#define  AUDIO_analog_CI03_get_reg_bb_isel_adc2_ref(data)                        ((0x000000C0&(data))>>6)
#define  AUDIO_analog_CI03_get_reg_bb_isel_adcfe2(data)                          ((0x00000030&(data))>>4)
#define  AUDIO_analog_CI03_get_reg_bb_isel_adc2_comp(data)                       ((0x0000000C&(data))>>2)
#define  AUDIO_analog_CI03_get_reg_bb_isel_adc2_aa(data)                         (0x00000003&(data))

#define  AUDIO_analog_depop1                                                    0x18006B58
#define  AUDIO_analog_depop1_reg_addr                                            "0xB8006B58"
#define  AUDIO_analog_depop1_reg                                                 0xB8006B58
#define  AUDIO_analog_depop1_inst_addr                                           "0x0182"
#define  set_AUDIO_analog_depop1_reg(data)                                       (*((volatile unsigned int*)AUDIO_analog_depop1_reg)=data)
#define  get_AUDIO_analog_depop1_reg                                             (*((volatile unsigned int*)AUDIO_analog_depop1_reg))
#define  AUDIO_analog_depop1_reg_bb_refgen_vref_bypass_shift                     (18)
#define  AUDIO_analog_depop1_reg_bb_refgen_vref_pow_shift                        (17)
#define  AUDIO_analog_depop1_reg_bb_refgen_vrp_pow_shift                         (16)
#define  AUDIO_analog_depop1_reg_bb_isel_refgen_shift                            (14)
#define  AUDIO_analog_depop1_reg_bb_refgen_vref_vrefsel_shift                    (12)
#define  AUDIO_analog_depop1_reg_bb_isel_adc_core_shift                          (10)
#define  AUDIO_analog_depop1_reg_bb_hpo_endp_shift                               (9)
#define  AUDIO_analog_depop1_reg_bb_aio_endp_shift                               (8)
#define  AUDIO_analog_depop1_reg_bb_dpramp_enramp_shift                          (4)
#define  AUDIO_analog_depop1_bb_ck_depop_en_shift                                (3)
#define  AUDIO_analog_depop1_sel_bb_ck_depop_shift                               (0)
#define  AUDIO_analog_depop1_reg_bb_refgen_vref_bypass_mask                      (0x00040000)
#define  AUDIO_analog_depop1_reg_bb_refgen_vref_pow_mask                         (0x00020000)
#define  AUDIO_analog_depop1_reg_bb_refgen_vrp_pow_mask                          (0x00010000)
#define  AUDIO_analog_depop1_reg_bb_isel_refgen_mask                             (0x0000C000)
#define  AUDIO_analog_depop1_reg_bb_refgen_vref_vrefsel_mask                     (0x00003000)
#define  AUDIO_analog_depop1_reg_bb_isel_adc_core_mask                           (0x00000C00)
#define  AUDIO_analog_depop1_reg_bb_hpo_endp_mask                                (0x00000200)
#define  AUDIO_analog_depop1_reg_bb_aio_endp_mask                                (0x00000100)
#define  AUDIO_analog_depop1_reg_bb_dpramp_enramp_mask                           (0x00000010)
#define  AUDIO_analog_depop1_bb_ck_depop_en_mask                                 (0x00000008)
#define  AUDIO_analog_depop1_sel_bb_ck_depop_mask                                (0x00000007)
#define  AUDIO_analog_depop1_reg_bb_refgen_vref_bypass(data)                     (0x00040000&((data)<<18))
#define  AUDIO_analog_depop1_reg_bb_refgen_vref_pow(data)                        (0x00020000&((data)<<17))
#define  AUDIO_analog_depop1_reg_bb_refgen_vrp_pow(data)                         (0x00010000&((data)<<16))
#define  AUDIO_analog_depop1_reg_bb_isel_refgen(data)                            (0x0000C000&((data)<<14))
#define  AUDIO_analog_depop1_reg_bb_refgen_vref_vrefsel(data)                    (0x00003000&((data)<<12))
#define  AUDIO_analog_depop1_reg_bb_isel_adc_core(data)                          (0x00000C00&((data)<<10))
#define  AUDIO_analog_depop1_reg_bb_hpo_endp(data)                               (0x00000200&((data)<<9))
#define  AUDIO_analog_depop1_reg_bb_aio_endp(data)                               (0x00000100&((data)<<8))
#define  AUDIO_analog_depop1_reg_bb_dpramp_enramp(data)                          (0x00000010&((data)<<4))
#define  AUDIO_analog_depop1_bb_ck_depop_en(data)                                (0x00000008&((data)<<3))
#define  AUDIO_analog_depop1_sel_bb_ck_depop(data)                               (0x00000007&(data))
#define  AUDIO_analog_depop1_get_reg_bb_refgen_vref_bypass(data)                 ((0x00040000&(data))>>18)
#define  AUDIO_analog_depop1_get_reg_bb_refgen_vref_pow(data)                    ((0x00020000&(data))>>17)
#define  AUDIO_analog_depop1_get_reg_bb_refgen_vrp_pow(data)                     ((0x00010000&(data))>>16)
#define  AUDIO_analog_depop1_get_reg_bb_isel_refgen(data)                        ((0x0000C000&(data))>>14)
#define  AUDIO_analog_depop1_get_reg_bb_refgen_vref_vrefsel(data)                ((0x00003000&(data))>>12)
#define  AUDIO_analog_depop1_get_reg_bb_isel_adc_core(data)                      ((0x00000C00&(data))>>10)
#define  AUDIO_analog_depop1_get_reg_bb_hpo_endp(data)                           ((0x00000200&(data))>>9)
#define  AUDIO_analog_depop1_get_reg_bb_aio_endp(data)                           ((0x00000100&(data))>>8)
#define  AUDIO_analog_depop1_get_reg_bb_dpramp_enramp(data)                      ((0x00000010&(data))>>4)
#define  AUDIO_analog_depop1_get_bb_ck_depop_en(data)                            ((0x00000008&(data))>>3)
#define  AUDIO_analog_depop1_get_sel_bb_ck_depop(data)                           (0x00000007&(data))

#define  AUDIO_analog_depop2                                                    0x18006B5C
#define  AUDIO_analog_depop2_reg_addr                                            "0xB8006B5C"
#define  AUDIO_analog_depop2_reg                                                 0xB8006B5C
#define  AUDIO_analog_depop2_inst_addr                                           "0x0183"
#define  set_AUDIO_analog_depop2_reg(data)                                       (*((volatile unsigned int*)AUDIO_analog_depop2_reg)=data)
#define  get_AUDIO_analog_depop2_reg                                             (*((volatile unsigned int*)AUDIO_analog_depop2_reg))
#define  AUDIO_analog_depop2_reg_bb_dpramp_pow_shift                             (6)
#define  AUDIO_analog_depop2_reg_bb_dpramp_csel_shift                            (4)
#define  AUDIO_analog_depop2_reg_bb_hpo_normal_shift                             (3)
#define  AUDIO_analog_depop2_reg_bb_aio1_normal_shift                            (2)
#define  AUDIO_analog_depop2_reg_bb_aio2_normal_shift                            (1)
#define  AUDIO_analog_depop2_reg_bb_dpramp_pow_mask                              (0x00000040)
#define  AUDIO_analog_depop2_reg_bb_dpramp_csel_mask                             (0x00000030)
#define  AUDIO_analog_depop2_reg_bb_hpo_normal_mask                              (0x00000008)
#define  AUDIO_analog_depop2_reg_bb_aio1_normal_mask                             (0x00000004)
#define  AUDIO_analog_depop2_reg_bb_aio2_normal_mask                             (0x00000002)
#define  AUDIO_analog_depop2_reg_bb_dpramp_pow(data)                             (0x00000040&((data)<<6))
#define  AUDIO_analog_depop2_reg_bb_dpramp_csel(data)                            (0x00000030&((data)<<4))
#define  AUDIO_analog_depop2_reg_bb_hpo_normal(data)                             (0x00000008&((data)<<3))
#define  AUDIO_analog_depop2_reg_bb_aio1_normal(data)                            (0x00000004&((data)<<2))
#define  AUDIO_analog_depop2_reg_bb_aio2_normal(data)                            (0x00000002&((data)<<1))
#define  AUDIO_analog_depop2_get_reg_bb_dpramp_pow(data)                         ((0x00000040&(data))>>6)
#define  AUDIO_analog_depop2_get_reg_bb_dpramp_csel(data)                        ((0x00000030&(data))>>4)
#define  AUDIO_analog_depop2_get_reg_bb_hpo_normal(data)                         ((0x00000008&(data))>>3)
#define  AUDIO_analog_depop2_get_reg_bb_aio1_normal(data)                        ((0x00000004&(data))>>2)
#define  AUDIO_analog_depop2_get_reg_bb_aio2_normal(data)                        ((0x00000002&(data))>>1)

#define  AUDIO_analog_post_gain                                                 0x18006B60
#define  AUDIO_analog_post_gain_reg_addr                                         "0xB8006B60"
#define  AUDIO_analog_post_gain_reg                                              0xB8006B60
#define  AUDIO_analog_post_gain_inst_addr                                        "0x0184"
#define  set_AUDIO_analog_post_gain_reg(data)                                    (*((volatile unsigned int*)AUDIO_analog_post_gain_reg)=data)
#define  get_AUDIO_analog_post_gain_reg                                          (*((volatile unsigned int*)AUDIO_analog_post_gain_reg))
#define  AUDIO_analog_post_gain_reg_bb_hpo_engl_shift                            (25)
#define  AUDIO_analog_post_gain_reg_bb_hpo_engr_shift                            (24)
#define  AUDIO_analog_post_gain_reg_bb_hpo_gsell_shift                           (2)
#define  AUDIO_analog_post_gain_reg_bb_hpo_gselr_shift                           (0)
#define  AUDIO_analog_post_gain_reg_bb_hpo_engl_mask                             (0x02000000)
#define  AUDIO_analog_post_gain_reg_bb_hpo_engr_mask                             (0x01000000)
#define  AUDIO_analog_post_gain_reg_bb_hpo_gsell_mask                            (0x0000000C)
#define  AUDIO_analog_post_gain_reg_bb_hpo_gselr_mask                            (0x00000003)
#define  AUDIO_analog_post_gain_reg_bb_hpo_engl(data)                            (0x02000000&((data)<<25))
#define  AUDIO_analog_post_gain_reg_bb_hpo_engr(data)                            (0x01000000&((data)<<24))
#define  AUDIO_analog_post_gain_reg_bb_hpo_gsell(data)                           (0x0000000C&((data)<<2))
#define  AUDIO_analog_post_gain_reg_bb_hpo_gselr(data)                           (0x00000003&(data))
#define  AUDIO_analog_post_gain_get_reg_bb_hpo_engl(data)                        ((0x02000000&(data))>>25)
#define  AUDIO_analog_post_gain_get_reg_bb_hpo_engr(data)                        ((0x01000000&(data))>>24)
#define  AUDIO_analog_post_gain_get_reg_bb_hpo_gsell(data)                       ((0x0000000C&(data))>>2)
#define  AUDIO_analog_post_gain_get_reg_bb_hpo_gselr(data)                       (0x00000003&(data))

#define  AUDIO_amic1                                                            0x18006B68
#define  AUDIO_amic1_reg_addr                                                    "0xB8006B68"
#define  AUDIO_amic1_reg                                                         0xB8006B68
#define  AUDIO_amic1_inst_addr                                                   "0x0185"
#define  set_AUDIO_amic1_reg(data)                                               (*((volatile unsigned int*)AUDIO_amic1_reg)=data)
#define  get_AUDIO_amic1_reg                                                     (*((volatile unsigned int*)AUDIO_amic1_reg))
#define  AUDIO_amic1_reg_bb_micbst_endfl_shift                                   (31)
#define  AUDIO_amic1_reg_bb_micbst_endfr_shift                                   (30)
#define  AUDIO_amic1_reg_bb_micbst_gsell_shift                                   (28)
#define  AUDIO_amic1_reg_bb_micbst_gselr_shift                                   (26)
#define  AUDIO_amic1_reg_bb_micbias_vset_shift                                   (25)
#define  AUDIO_amic1_reg_bb_micbias_ocsel_shift                                  (23)
#define  AUDIO_amic1_reg_bb_micbias_powshdt_shift                                (22)
#define  AUDIO_amic1_reg_bb_micbias_pow_shift                                    (21)
#define  AUDIO_amic1_reg_bb_micbst_pow_shift                                     (19)
#define  AUDIO_amic1_mic_short_det_conf_shift                                    (18)
#define  AUDIO_amic1_mic_short_det_polarity_shift                                (17)
#define  AUDIO_amic1_mic_short_det_sticky_en_shift                               (16)
#define  AUDIO_amic1_mic_short_det_status_shift                                  (15)
#define  AUDIO_amic1_reg_bb_micbias_oc_shift                                     (14)
#define  AUDIO_amic1_reg_bb_micbias_enchx_shift                                  (13)
#define  AUDIO_amic1_reg_bb_micbst_endfl_mask                                    (0x80000000)
#define  AUDIO_amic1_reg_bb_micbst_endfr_mask                                    (0x40000000)
#define  AUDIO_amic1_reg_bb_micbst_gsell_mask                                    (0x30000000)
#define  AUDIO_amic1_reg_bb_micbst_gselr_mask                                    (0x0C000000)
#define  AUDIO_amic1_reg_bb_micbias_vset_mask                                    (0x02000000)
#define  AUDIO_amic1_reg_bb_micbias_ocsel_mask                                   (0x01800000)
#define  AUDIO_amic1_reg_bb_micbias_powshdt_mask                                 (0x00400000)
#define  AUDIO_amic1_reg_bb_micbias_pow_mask                                     (0x00200000)
#define  AUDIO_amic1_reg_bb_micbst_pow_mask                                      (0x00180000)
#define  AUDIO_amic1_mic_short_det_conf_mask                                     (0x00040000)
#define  AUDIO_amic1_mic_short_det_polarity_mask                                 (0x00020000)
#define  AUDIO_amic1_mic_short_det_sticky_en_mask                                (0x00010000)
#define  AUDIO_amic1_mic_short_det_status_mask                                   (0x00008000)
#define  AUDIO_amic1_reg_bb_micbias_oc_mask                                      (0x00004000)
#define  AUDIO_amic1_reg_bb_micbias_enchx_mask                                   (0x00002000)
#define  AUDIO_amic1_reg_bb_micbst_endfl(data)                                   (0x80000000&((data)<<31))
#define  AUDIO_amic1_reg_bb_micbst_endfr(data)                                   (0x40000000&((data)<<30))
#define  AUDIO_amic1_reg_bb_micbst_gsell(data)                                   (0x30000000&((data)<<28))
#define  AUDIO_amic1_reg_bb_micbst_gselr(data)                                   (0x0C000000&((data)<<26))
#define  AUDIO_amic1_reg_bb_micbias_vset(data)                                   (0x02000000&((data)<<25))
#define  AUDIO_amic1_reg_bb_micbias_ocsel(data)                                  (0x01800000&((data)<<23))
#define  AUDIO_amic1_reg_bb_micbias_powshdt(data)                                (0x00400000&((data)<<22))
#define  AUDIO_amic1_reg_bb_micbias_pow(data)                                    (0x00200000&((data)<<21))
#define  AUDIO_amic1_reg_bb_micbst_pow(data)                                     (0x00180000&((data)<<19))
#define  AUDIO_amic1_mic_short_det_conf(data)                                    (0x00040000&((data)<<18))
#define  AUDIO_amic1_mic_short_det_polarity(data)                                (0x00020000&((data)<<17))
#define  AUDIO_amic1_mic_short_det_sticky_en(data)                               (0x00010000&((data)<<16))
#define  AUDIO_amic1_mic_short_det_status(data)                                  (0x00008000&((data)<<15))
#define  AUDIO_amic1_reg_bb_micbias_oc(data)                                     (0x00004000&((data)<<14))
#define  AUDIO_amic1_reg_bb_micbias_enchx(data)                                  (0x00002000&((data)<<13))
#define  AUDIO_amic1_get_reg_bb_micbst_endfl(data)                               ((0x80000000&(data))>>31)
#define  AUDIO_amic1_get_reg_bb_micbst_endfr(data)                               ((0x40000000&(data))>>30)
#define  AUDIO_amic1_get_reg_bb_micbst_gsell(data)                               ((0x30000000&(data))>>28)
#define  AUDIO_amic1_get_reg_bb_micbst_gselr(data)                               ((0x0C000000&(data))>>26)
#define  AUDIO_amic1_get_reg_bb_micbias_vset(data)                               ((0x02000000&(data))>>25)
#define  AUDIO_amic1_get_reg_bb_micbias_ocsel(data)                              ((0x01800000&(data))>>23)
#define  AUDIO_amic1_get_reg_bb_micbias_powshdt(data)                            ((0x00400000&(data))>>22)
#define  AUDIO_amic1_get_reg_bb_micbias_pow(data)                                ((0x00200000&(data))>>21)
#define  AUDIO_amic1_get_reg_bb_micbst_pow(data)                                 ((0x00180000&(data))>>19)
#define  AUDIO_amic1_get_mic_short_det_conf(data)                                ((0x00040000&(data))>>18)
#define  AUDIO_amic1_get_mic_short_det_polarity(data)                            ((0x00020000&(data))>>17)
#define  AUDIO_amic1_get_mic_short_det_sticky_en(data)                           ((0x00010000&(data))>>16)
#define  AUDIO_amic1_get_mic_short_det_status(data)                              ((0x00008000&(data))>>15)
#define  AUDIO_amic1_get_reg_bb_micbias_oc(data)                                 ((0x00004000&(data))>>14)
#define  AUDIO_amic1_get_reg_bb_micbias_enchx(data)                              ((0x00002000&(data))>>13)

#define  AUDIO_analog_reserved                                                  0x18006B70
#define  AUDIO_analog_reserved_reg_addr                                          "0xB8006B70"
#define  AUDIO_analog_reserved_reg                                               0xB8006B70
#define  AUDIO_analog_reserved_inst_addr                                         "0x0186"
#define  set_AUDIO_analog_reserved_reg(data)                                     (*((volatile unsigned int*)AUDIO_analog_reserved_reg)=data)
#define  get_AUDIO_analog_reserved_reg                                           (*((volatile unsigned int*)AUDIO_analog_reserved_reg))
#define  AUDIO_analog_reserved_reg_bb_micbst_enpdrl_shift                        (25)
#define  AUDIO_analog_reserved_reg_bb_micbst_enpdrr_shift                        (24)
#define  AUDIO_analog_reserved_reg_bb_micbst_enpdrl_mask                         (0x02000000)
#define  AUDIO_analog_reserved_reg_bb_micbst_enpdrr_mask                         (0x01000000)
#define  AUDIO_analog_reserved_reg_bb_micbst_enpdrl(data)                        (0x02000000&((data)<<25))
#define  AUDIO_analog_reserved_reg_bb_micbst_enpdrr(data)                        (0x01000000&((data)<<24))
#define  AUDIO_analog_reserved_get_reg_bb_micbst_enpdrl(data)                    ((0x02000000&(data))>>25)
#define  AUDIO_analog_reserved_get_reg_bb_micbst_enpdrr(data)                    ((0x01000000&(data))>>24)

#define  AUDIO_analog_dummy2                                                    0x18006B78
#define  AUDIO_analog_dummy2_reg_addr                                            "0xB8006B78"
#define  AUDIO_analog_dummy2_reg                                                 0xB8006B78
#define  AUDIO_analog_dummy2_inst_addr                                           "0x0187"
#define  set_AUDIO_analog_dummy2_reg(data)                                       (*((volatile unsigned int*)AUDIO_analog_dummy2_reg)=data)
#define  get_AUDIO_analog_dummy2_reg                                             (*((volatile unsigned int*)AUDIO_analog_dummy2_reg))
#define  AUDIO_analog_dummy2_dummy_31_0_shift                                    (0)
#define  AUDIO_analog_dummy2_dummy_31_0_mask                                     (0xFFFFFFFF)
#define  AUDIO_analog_dummy2_dummy_31_0(data)                                    (0xFFFFFFFF&(data))
#define  AUDIO_analog_dummy2_get_dummy_31_0(data)                                (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio                                                    0x18006C30
#define  AUDIO_hdmi_to_audio_reg_addr                                            "0xB8006C30"
#define  AUDIO_hdmi_to_audio_reg                                                 0xB8006C30
#define  AUDIO_hdmi_to_audio_inst_addr                                           "0x0188"
#define  set_AUDIO_hdmi_to_audio_reg(data)                                       (*((volatile unsigned int*)AUDIO_hdmi_to_audio_reg)=data)
#define  get_AUDIO_hdmi_to_audio_reg                                             (*((volatile unsigned int*)AUDIO_hdmi_to_audio_reg))
#define  AUDIO_hdmi_to_audio_data_type_shift                                     (12)
#define  AUDIO_hdmi_to_audio_data_type_chk_sel_shift                             (10)
#define  AUDIO_hdmi_to_audio_u_mode_sel_shift                                    (9)
#define  AUDIO_hdmi_to_audio_hdmi_to_aud_testmode_shift                          (7)
#define  AUDIO_hdmi_to_audio_testmode_enable_shift                               (6)
#define  AUDIO_hdmi_to_audio_u_bit_prepare_shift                                 (5)
#define  AUDIO_hdmi_to_audio_valid_flag_shift                                    (4)
#define  AUDIO_hdmi_to_audio_hdmi_to_aud_ch_mode_shift                           (1)
#define  AUDIO_hdmi_to_audio_hdmi_to_aud_enable_shift                            (0)
#define  AUDIO_hdmi_to_audio_data_type_mask                                      (0x00001000)
#define  AUDIO_hdmi_to_audio_data_type_chk_sel_mask                              (0x00000C00)
#define  AUDIO_hdmi_to_audio_u_mode_sel_mask                                     (0x00000200)
#define  AUDIO_hdmi_to_audio_hdmi_to_aud_testmode_mask                           (0x00000180)
#define  AUDIO_hdmi_to_audio_testmode_enable_mask                                (0x00000040)
#define  AUDIO_hdmi_to_audio_u_bit_prepare_mask                                  (0x00000020)
#define  AUDIO_hdmi_to_audio_valid_flag_mask                                     (0x00000010)
#define  AUDIO_hdmi_to_audio_hdmi_to_aud_ch_mode_mask                            (0x0000000E)
#define  AUDIO_hdmi_to_audio_hdmi_to_aud_enable_mask                             (0x00000001)
#define  AUDIO_hdmi_to_audio_data_type(data)                                     (0x00001000&((data)<<12))
#define  AUDIO_hdmi_to_audio_data_type_chk_sel(data)                             (0x00000C00&((data)<<10))
#define  AUDIO_hdmi_to_audio_u_mode_sel(data)                                    (0x00000200&((data)<<9))
#define  AUDIO_hdmi_to_audio_hdmi_to_aud_testmode(data)                          (0x00000180&((data)<<7))
#define  AUDIO_hdmi_to_audio_testmode_enable(data)                               (0x00000040&((data)<<6))
#define  AUDIO_hdmi_to_audio_u_bit_prepare(data)                                 (0x00000020&((data)<<5))
#define  AUDIO_hdmi_to_audio_valid_flag(data)                                    (0x00000010&((data)<<4))
#define  AUDIO_hdmi_to_audio_hdmi_to_aud_ch_mode(data)                           (0x0000000E&((data)<<1))
#define  AUDIO_hdmi_to_audio_hdmi_to_aud_enable(data)                            (0x00000001&(data))
#define  AUDIO_hdmi_to_audio_get_data_type(data)                                 ((0x00001000&(data))>>12)
#define  AUDIO_hdmi_to_audio_get_data_type_chk_sel(data)                         ((0x00000C00&(data))>>10)
#define  AUDIO_hdmi_to_audio_get_u_mode_sel(data)                                ((0x00000200&(data))>>9)
#define  AUDIO_hdmi_to_audio_get_hdmi_to_aud_testmode(data)                      ((0x00000180&(data))>>7)
#define  AUDIO_hdmi_to_audio_get_testmode_enable(data)                           ((0x00000040&(data))>>6)
#define  AUDIO_hdmi_to_audio_get_u_bit_prepare(data)                             ((0x00000020&(data))>>5)
#define  AUDIO_hdmi_to_audio_get_valid_flag(data)                                ((0x00000010&(data))>>4)
#define  AUDIO_hdmi_to_audio_get_hdmi_to_aud_ch_mode(data)                       ((0x0000000E&(data))>>1)
#define  AUDIO_hdmi_to_audio_get_hdmi_to_aud_enable(data)                        (0x00000001&(data))

#define  AUDIO_hdmi_to_audio_debug                                              0x18006C34
#define  AUDIO_hdmi_to_audio_debug_reg_addr                                      "0xB8006C34"
#define  AUDIO_hdmi_to_audio_debug_reg                                           0xB8006C34
#define  AUDIO_hdmi_to_audio_debug_inst_addr                                     "0x0189"
#define  set_AUDIO_hdmi_to_audio_debug_reg(data)                                 (*((volatile unsigned int*)AUDIO_hdmi_to_audio_debug_reg)=data)
#define  get_AUDIO_hdmi_to_audio_debug_reg                                       (*((volatile unsigned int*)AUDIO_hdmi_to_audio_debug_reg))
#define  AUDIO_hdmi_to_audio_debug_b_bit_err_flag_shift                          (3)
#define  AUDIO_hdmi_to_audio_debug_hdmi_to_aud_ch_num_shift                      (0)
#define  AUDIO_hdmi_to_audio_debug_b_bit_err_flag_mask                           (0x00000008)
#define  AUDIO_hdmi_to_audio_debug_hdmi_to_aud_ch_num_mask                       (0x00000007)
#define  AUDIO_hdmi_to_audio_debug_b_bit_err_flag(data)                          (0x00000008&((data)<<3))
#define  AUDIO_hdmi_to_audio_debug_hdmi_to_aud_ch_num(data)                      (0x00000007&(data))
#define  AUDIO_hdmi_to_audio_debug_get_b_bit_err_flag(data)                      ((0x00000008&(data))>>3)
#define  AUDIO_hdmi_to_audio_debug_get_hdmi_to_aud_ch_num(data)                  (0x00000007&(data))

#define  AUDIO_hdmi_to_audio_cs_1                                               0x18006C38
#define  AUDIO_hdmi_to_audio_cs_1_reg_addr                                       "0xB8006C38"
#define  AUDIO_hdmi_to_audio_cs_1_reg                                            0xB8006C38
#define  AUDIO_hdmi_to_audio_cs_1_inst_addr                                      "0x018A"
#define  set_AUDIO_hdmi_to_audio_cs_1_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_1_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_1_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_1_reg))
#define  AUDIO_hdmi_to_audio_cs_1_cs_lb3_31_30_shift                             (30)
#define  AUDIO_hdmi_to_audio_cs_1_clock_accuracy_shift                           (28)
#define  AUDIO_hdmi_to_audio_cs_1_sampling_freq_shift                            (24)
#define  AUDIO_hdmi_to_audio_cs_1_channel_number_shift                           (20)
#define  AUDIO_hdmi_to_audio_cs_1_source_number_shift                            (16)
#define  AUDIO_hdmi_to_audio_cs_1_category_code_shift                            (8)
#define  AUDIO_hdmi_to_audio_cs_1_mode_shift                                     (6)
#define  AUDIO_hdmi_to_audio_cs_1_pre_emphasis_shift                             (3)
#define  AUDIO_hdmi_to_audio_cs_1_copyright_shift                                (2)
#define  AUDIO_hdmi_to_audio_cs_1_data_type_l_shift                              (1)
#define  AUDIO_hdmi_to_audio_cs_1_professional_shift                             (0)
#define  AUDIO_hdmi_to_audio_cs_1_cs_lb3_31_30_mask                              (0xC0000000)
#define  AUDIO_hdmi_to_audio_cs_1_clock_accuracy_mask                            (0x30000000)
#define  AUDIO_hdmi_to_audio_cs_1_sampling_freq_mask                             (0x0F000000)
#define  AUDIO_hdmi_to_audio_cs_1_channel_number_mask                            (0x00F00000)
#define  AUDIO_hdmi_to_audio_cs_1_source_number_mask                             (0x000F0000)
#define  AUDIO_hdmi_to_audio_cs_1_category_code_mask                             (0x0000FF00)
#define  AUDIO_hdmi_to_audio_cs_1_mode_mask                                      (0x000000C0)
#define  AUDIO_hdmi_to_audio_cs_1_pre_emphasis_mask                              (0x00000038)
#define  AUDIO_hdmi_to_audio_cs_1_copyright_mask                                 (0x00000004)
#define  AUDIO_hdmi_to_audio_cs_1_data_type_l_mask                               (0x00000002)
#define  AUDIO_hdmi_to_audio_cs_1_professional_mask                              (0x00000001)
#define  AUDIO_hdmi_to_audio_cs_1_cs_lb3_31_30(data)                             (0xC0000000&((data)<<30))
#define  AUDIO_hdmi_to_audio_cs_1_clock_accuracy(data)                           (0x30000000&((data)<<28))
#define  AUDIO_hdmi_to_audio_cs_1_sampling_freq(data)                            (0x0F000000&((data)<<24))
#define  AUDIO_hdmi_to_audio_cs_1_channel_number(data)                           (0x00F00000&((data)<<20))
#define  AUDIO_hdmi_to_audio_cs_1_source_number(data)                            (0x000F0000&((data)<<16))
#define  AUDIO_hdmi_to_audio_cs_1_category_code(data)                            (0x0000FF00&((data)<<8))
#define  AUDIO_hdmi_to_audio_cs_1_mode(data)                                     (0x000000C0&((data)<<6))
#define  AUDIO_hdmi_to_audio_cs_1_pre_emphasis(data)                             (0x00000038&((data)<<3))
#define  AUDIO_hdmi_to_audio_cs_1_copyright(data)                                (0x00000004&((data)<<2))
#define  AUDIO_hdmi_to_audio_cs_1_data_type_l(data)                              (0x00000002&((data)<<1))
#define  AUDIO_hdmi_to_audio_cs_1_professional(data)                             (0x00000001&(data))
#define  AUDIO_hdmi_to_audio_cs_1_get_cs_lb3_31_30(data)                         ((0xC0000000&(data))>>30)
#define  AUDIO_hdmi_to_audio_cs_1_get_clock_accuracy(data)                       ((0x30000000&(data))>>28)
#define  AUDIO_hdmi_to_audio_cs_1_get_sampling_freq(data)                        ((0x0F000000&(data))>>24)
#define  AUDIO_hdmi_to_audio_cs_1_get_channel_number(data)                       ((0x00F00000&(data))>>20)
#define  AUDIO_hdmi_to_audio_cs_1_get_source_number(data)                        ((0x000F0000&(data))>>16)
#define  AUDIO_hdmi_to_audio_cs_1_get_category_code(data)                        ((0x0000FF00&(data))>>8)
#define  AUDIO_hdmi_to_audio_cs_1_get_mode(data)                                 ((0x000000C0&(data))>>6)
#define  AUDIO_hdmi_to_audio_cs_1_get_pre_emphasis(data)                         ((0x00000038&(data))>>3)
#define  AUDIO_hdmi_to_audio_cs_1_get_copyright(data)                            ((0x00000004&(data))>>2)
#define  AUDIO_hdmi_to_audio_cs_1_get_data_type_l(data)                          ((0x00000002&(data))>>1)
#define  AUDIO_hdmi_to_audio_cs_1_get_professional(data)                         (0x00000001&(data))

#define  AUDIO_hdmi_to_audio_cs_2                                               0x18006C3C
#define  AUDIO_hdmi_to_audio_cs_2_reg_addr                                       "0xB8006C3C"
#define  AUDIO_hdmi_to_audio_cs_2_reg                                            0xB8006C3C
#define  AUDIO_hdmi_to_audio_cs_2_inst_addr                                      "0x018B"
#define  set_AUDIO_hdmi_to_audio_cs_2_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_2_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_2_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_2_reg))
#define  AUDIO_hdmi_to_audio_cs_2_layout_channel_num_shift                       (12)
#define  AUDIO_hdmi_to_audio_cs_2_cs_lb5_43_shift                                (11)
#define  AUDIO_hdmi_to_audio_cs_2_cs_lb5_42_shift                                (10)
#define  AUDIO_hdmi_to_audio_cs_2_cgms_a_shift                                   (8)
#define  AUDIO_hdmi_to_audio_cs_2_original_sampling_freq_shift                   (4)
#define  AUDIO_hdmi_to_audio_cs_2_cs_lb4_35_32_shift                             (0)
#define  AUDIO_hdmi_to_audio_cs_2_layout_channel_num_mask                        (0x0000F000)
#define  AUDIO_hdmi_to_audio_cs_2_cs_lb5_43_mask                                 (0x00000800)
#define  AUDIO_hdmi_to_audio_cs_2_cs_lb5_42_mask                                 (0x00000400)
#define  AUDIO_hdmi_to_audio_cs_2_cgms_a_mask                                    (0x00000300)
#define  AUDIO_hdmi_to_audio_cs_2_original_sampling_freq_mask                    (0x000000F0)
#define  AUDIO_hdmi_to_audio_cs_2_cs_lb4_35_32_mask                              (0x0000000F)
#define  AUDIO_hdmi_to_audio_cs_2_layout_channel_num(data)                       (0x0000F000&((data)<<12))
#define  AUDIO_hdmi_to_audio_cs_2_cs_lb5_43(data)                                (0x00000800&((data)<<11))
#define  AUDIO_hdmi_to_audio_cs_2_cs_lb5_42(data)                                (0x00000400&((data)<<10))
#define  AUDIO_hdmi_to_audio_cs_2_cgms_a(data)                                   (0x00000300&((data)<<8))
#define  AUDIO_hdmi_to_audio_cs_2_original_sampling_freq(data)                   (0x000000F0&((data)<<4))
#define  AUDIO_hdmi_to_audio_cs_2_cs_lb4_35_32(data)                             (0x0000000F&(data))
#define  AUDIO_hdmi_to_audio_cs_2_get_layout_channel_num(data)                   ((0x0000F000&(data))>>12)
#define  AUDIO_hdmi_to_audio_cs_2_get_cs_lb5_43(data)                            ((0x00000800&(data))>>11)
#define  AUDIO_hdmi_to_audio_cs_2_get_cs_lb5_42(data)                            ((0x00000400&(data))>>10)
#define  AUDIO_hdmi_to_audio_cs_2_get_cgms_a(data)                               ((0x00000300&(data))>>8)
#define  AUDIO_hdmi_to_audio_cs_2_get_original_sampling_freq(data)               ((0x000000F0&(data))>>4)
#define  AUDIO_hdmi_to_audio_cs_2_get_cs_lb4_35_32(data)                         (0x0000000F&(data))

#define  AUDIO_hdmi_to_audio_cs_3                                               0x18006C40
#define  AUDIO_hdmi_to_audio_cs_3_reg_addr                                       "0xB8006C40"
#define  AUDIO_hdmi_to_audio_cs_3_reg                                            0xB8006C40
#define  AUDIO_hdmi_to_audio_cs_3_inst_addr                                      "0x018C"
#define  set_AUDIO_hdmi_to_audio_cs_3_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_3_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_3_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_3_reg))
#define  AUDIO_hdmi_to_audio_cs_3_cs_byte_7_6_l_shift                            (0)
#define  AUDIO_hdmi_to_audio_cs_3_cs_byte_7_6_l_mask                             (0x0000FFFF)
#define  AUDIO_hdmi_to_audio_cs_3_cs_byte_7_6_l(data)                            (0x0000FFFF&(data))
#define  AUDIO_hdmi_to_audio_cs_3_get_cs_byte_7_6_l(data)                        (0x0000FFFF&(data))

#define  AUDIO_hdmi_to_audio_cs_4                                               0x18006C44
#define  AUDIO_hdmi_to_audio_cs_4_reg_addr                                       "0xB8006C44"
#define  AUDIO_hdmi_to_audio_cs_4_reg                                            0xB8006C44
#define  AUDIO_hdmi_to_audio_cs_4_inst_addr                                      "0x018D"
#define  set_AUDIO_hdmi_to_audio_cs_4_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_4_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_4_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_4_reg))
#define  AUDIO_hdmi_to_audio_cs_4_cs_byte_11_8_l_shift                           (0)
#define  AUDIO_hdmi_to_audio_cs_4_cs_byte_11_8_l_mask                            (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_cs_4_cs_byte_11_8_l(data)                           (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_cs_4_get_cs_byte_11_8_l(data)                       (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_cs_5                                               0x18006C48
#define  AUDIO_hdmi_to_audio_cs_5_reg_addr                                       "0xB8006C48"
#define  AUDIO_hdmi_to_audio_cs_5_reg                                            0xB8006C48
#define  AUDIO_hdmi_to_audio_cs_5_inst_addr                                      "0x018E"
#define  set_AUDIO_hdmi_to_audio_cs_5_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_5_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_5_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_5_reg))
#define  AUDIO_hdmi_to_audio_cs_5_cs_byte_15_12_l_shift                          (0)
#define  AUDIO_hdmi_to_audio_cs_5_cs_byte_15_12_l_mask                           (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_cs_5_cs_byte_15_12_l(data)                          (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_cs_5_get_cs_byte_15_12_l(data)                      (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_cs_6                                               0x18006C4C
#define  AUDIO_hdmi_to_audio_cs_6_reg_addr                                       "0xB8006C4C"
#define  AUDIO_hdmi_to_audio_cs_6_reg                                            0xB8006C4C
#define  AUDIO_hdmi_to_audio_cs_6_inst_addr                                      "0x018F"
#define  set_AUDIO_hdmi_to_audio_cs_6_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_6_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_6_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_6_reg))
#define  AUDIO_hdmi_to_audio_cs_6_cs_byte_19_16_l_shift                          (0)
#define  AUDIO_hdmi_to_audio_cs_6_cs_byte_19_16_l_mask                           (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_cs_6_cs_byte_19_16_l(data)                          (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_cs_6_get_cs_byte_19_16_l(data)                      (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_cs_7                                               0x18006C50
#define  AUDIO_hdmi_to_audio_cs_7_reg_addr                                       "0xB8006C50"
#define  AUDIO_hdmi_to_audio_cs_7_reg                                            0xB8006C50
#define  AUDIO_hdmi_to_audio_cs_7_inst_addr                                      "0x0190"
#define  set_AUDIO_hdmi_to_audio_cs_7_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_7_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_7_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_7_reg))
#define  AUDIO_hdmi_to_audio_cs_7_cs_byte_23_20_l_shift                          (0)
#define  AUDIO_hdmi_to_audio_cs_7_cs_byte_23_20_l_mask                           (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_cs_7_cs_byte_23_20_l(data)                          (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_cs_7_get_cs_byte_23_20_l(data)                      (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_cs_8                                               0x18006C54
#define  AUDIO_hdmi_to_audio_cs_8_reg_addr                                       "0xB8006C54"
#define  AUDIO_hdmi_to_audio_cs_8_reg                                            0xB8006C54
#define  AUDIO_hdmi_to_audio_cs_8_inst_addr                                      "0x0191"
#define  set_AUDIO_hdmi_to_audio_cs_8_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_8_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_8_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_8_reg))
#define  AUDIO_hdmi_to_audio_cs_8_cs_rb3_31_30_shift                             (30)
#define  AUDIO_hdmi_to_audio_cs_8_clock_accuracy_r_shift                         (28)
#define  AUDIO_hdmi_to_audio_cs_8_sampling_freq_r_shift                          (24)
#define  AUDIO_hdmi_to_audio_cs_8_channel_number_r_shift                         (20)
#define  AUDIO_hdmi_to_audio_cs_8_source_number_r_shift                          (16)
#define  AUDIO_hdmi_to_audio_cs_8_category_code_r_shift                          (8)
#define  AUDIO_hdmi_to_audio_cs_8_mode_r_shift                                   (6)
#define  AUDIO_hdmi_to_audio_cs_8_pre_emphasis_r_shift                           (3)
#define  AUDIO_hdmi_to_audio_cs_8_copyright_r_shift                              (2)
#define  AUDIO_hdmi_to_audio_cs_8_data_type_r_shift                              (1)
#define  AUDIO_hdmi_to_audio_cs_8_professional_r_shift                           (0)
#define  AUDIO_hdmi_to_audio_cs_8_cs_rb3_31_30_mask                              (0xC0000000)
#define  AUDIO_hdmi_to_audio_cs_8_clock_accuracy_r_mask                          (0x30000000)
#define  AUDIO_hdmi_to_audio_cs_8_sampling_freq_r_mask                           (0x0F000000)
#define  AUDIO_hdmi_to_audio_cs_8_channel_number_r_mask                          (0x00F00000)
#define  AUDIO_hdmi_to_audio_cs_8_source_number_r_mask                           (0x000F0000)
#define  AUDIO_hdmi_to_audio_cs_8_category_code_r_mask                           (0x0000FF00)
#define  AUDIO_hdmi_to_audio_cs_8_mode_r_mask                                    (0x000000C0)
#define  AUDIO_hdmi_to_audio_cs_8_pre_emphasis_r_mask                            (0x00000038)
#define  AUDIO_hdmi_to_audio_cs_8_copyright_r_mask                               (0x00000004)
#define  AUDIO_hdmi_to_audio_cs_8_data_type_r_mask                               (0x00000002)
#define  AUDIO_hdmi_to_audio_cs_8_professional_r_mask                            (0x00000001)
#define  AUDIO_hdmi_to_audio_cs_8_cs_rb3_31_30(data)                             (0xC0000000&((data)<<30))
#define  AUDIO_hdmi_to_audio_cs_8_clock_accuracy_r(data)                         (0x30000000&((data)<<28))
#define  AUDIO_hdmi_to_audio_cs_8_sampling_freq_r(data)                          (0x0F000000&((data)<<24))
#define  AUDIO_hdmi_to_audio_cs_8_channel_number_r(data)                         (0x00F00000&((data)<<20))
#define  AUDIO_hdmi_to_audio_cs_8_source_number_r(data)                          (0x000F0000&((data)<<16))
#define  AUDIO_hdmi_to_audio_cs_8_category_code_r(data)                          (0x0000FF00&((data)<<8))
#define  AUDIO_hdmi_to_audio_cs_8_mode_r(data)                                   (0x000000C0&((data)<<6))
#define  AUDIO_hdmi_to_audio_cs_8_pre_emphasis_r(data)                           (0x00000038&((data)<<3))
#define  AUDIO_hdmi_to_audio_cs_8_copyright_r(data)                              (0x00000004&((data)<<2))
#define  AUDIO_hdmi_to_audio_cs_8_data_type_r(data)                              (0x00000002&((data)<<1))
#define  AUDIO_hdmi_to_audio_cs_8_professional_r(data)                           (0x00000001&(data))
#define  AUDIO_hdmi_to_audio_cs_8_get_cs_rb3_31_30(data)                         ((0xC0000000&(data))>>30)
#define  AUDIO_hdmi_to_audio_cs_8_get_clock_accuracy_r(data)                     ((0x30000000&(data))>>28)
#define  AUDIO_hdmi_to_audio_cs_8_get_sampling_freq_r(data)                      ((0x0F000000&(data))>>24)
#define  AUDIO_hdmi_to_audio_cs_8_get_channel_number_r(data)                     ((0x00F00000&(data))>>20)
#define  AUDIO_hdmi_to_audio_cs_8_get_source_number_r(data)                      ((0x000F0000&(data))>>16)
#define  AUDIO_hdmi_to_audio_cs_8_get_category_code_r(data)                      ((0x0000FF00&(data))>>8)
#define  AUDIO_hdmi_to_audio_cs_8_get_mode_r(data)                               ((0x000000C0&(data))>>6)
#define  AUDIO_hdmi_to_audio_cs_8_get_pre_emphasis_r(data)                       ((0x00000038&(data))>>3)
#define  AUDIO_hdmi_to_audio_cs_8_get_copyright_r(data)                          ((0x00000004&(data))>>2)
#define  AUDIO_hdmi_to_audio_cs_8_get_data_type_r(data)                          ((0x00000002&(data))>>1)
#define  AUDIO_hdmi_to_audio_cs_8_get_professional_r(data)                       (0x00000001&(data))

#define  AUDIO_hdmi_to_audio_cs_9                                               0x18006C58
#define  AUDIO_hdmi_to_audio_cs_9_reg_addr                                       "0xB8006C58"
#define  AUDIO_hdmi_to_audio_cs_9_reg                                            0xB8006C58
#define  AUDIO_hdmi_to_audio_cs_9_inst_addr                                      "0x0192"
#define  set_AUDIO_hdmi_to_audio_cs_9_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_9_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_9_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_9_reg))
#define  AUDIO_hdmi_to_audio_cs_9_layout_channel_num_r_shift                     (12)
#define  AUDIO_hdmi_to_audio_cs_9_cs_rb5_43_shift                                (11)
#define  AUDIO_hdmi_to_audio_cs_9_cs_rb5_42_shift                                (10)
#define  AUDIO_hdmi_to_audio_cs_9_cgms_a_r_shift                                 (8)
#define  AUDIO_hdmi_to_audio_cs_9_original_sampling_freq_r_shift                 (4)
#define  AUDIO_hdmi_to_audio_cs_9_cs_rb4_35_32_shift                             (0)
#define  AUDIO_hdmi_to_audio_cs_9_layout_channel_num_r_mask                      (0x0000F000)
#define  AUDIO_hdmi_to_audio_cs_9_cs_rb5_43_mask                                 (0x00000800)
#define  AUDIO_hdmi_to_audio_cs_9_cs_rb5_42_mask                                 (0x00000400)
#define  AUDIO_hdmi_to_audio_cs_9_cgms_a_r_mask                                  (0x00000300)
#define  AUDIO_hdmi_to_audio_cs_9_original_sampling_freq_r_mask                  (0x000000F0)
#define  AUDIO_hdmi_to_audio_cs_9_cs_rb4_35_32_mask                              (0x0000000F)
#define  AUDIO_hdmi_to_audio_cs_9_layout_channel_num_r(data)                     (0x0000F000&((data)<<12))
#define  AUDIO_hdmi_to_audio_cs_9_cs_rb5_43(data)                                (0x00000800&((data)<<11))
#define  AUDIO_hdmi_to_audio_cs_9_cs_rb5_42(data)                                (0x00000400&((data)<<10))
#define  AUDIO_hdmi_to_audio_cs_9_cgms_a_r(data)                                 (0x00000300&((data)<<8))
#define  AUDIO_hdmi_to_audio_cs_9_original_sampling_freq_r(data)                 (0x000000F0&((data)<<4))
#define  AUDIO_hdmi_to_audio_cs_9_cs_rb4_35_32(data)                             (0x0000000F&(data))
#define  AUDIO_hdmi_to_audio_cs_9_get_layout_channel_num_r(data)                 ((0x0000F000&(data))>>12)
#define  AUDIO_hdmi_to_audio_cs_9_get_cs_rb5_43(data)                            ((0x00000800&(data))>>11)
#define  AUDIO_hdmi_to_audio_cs_9_get_cs_rb5_42(data)                            ((0x00000400&(data))>>10)
#define  AUDIO_hdmi_to_audio_cs_9_get_cgms_a_r(data)                             ((0x00000300&(data))>>8)
#define  AUDIO_hdmi_to_audio_cs_9_get_original_sampling_freq_r(data)             ((0x000000F0&(data))>>4)
#define  AUDIO_hdmi_to_audio_cs_9_get_cs_rb4_35_32(data)                         (0x0000000F&(data))

#define  AUDIO_hdmi_to_audio_cs_10                                              0x18006C5C
#define  AUDIO_hdmi_to_audio_cs_10_reg_addr                                      "0xB8006C5C"
#define  AUDIO_hdmi_to_audio_cs_10_reg                                           0xB8006C5C
#define  AUDIO_hdmi_to_audio_cs_10_inst_addr                                     "0x0193"
#define  set_AUDIO_hdmi_to_audio_cs_10_reg(data)                                 (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_10_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_10_reg                                       (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_10_reg))
#define  AUDIO_hdmi_to_audio_cs_10_cs_byte_7_6_r_shift                           (0)
#define  AUDIO_hdmi_to_audio_cs_10_cs_byte_7_6_r_mask                            (0x0000FFFF)
#define  AUDIO_hdmi_to_audio_cs_10_cs_byte_7_6_r(data)                           (0x0000FFFF&(data))
#define  AUDIO_hdmi_to_audio_cs_10_get_cs_byte_7_6_r(data)                       (0x0000FFFF&(data))

#define  AUDIO_hdmi_to_audio_11                                                 0x18006C60
#define  AUDIO_hdmi_to_audio_11_reg_addr                                         "0xB8006C60"
#define  AUDIO_hdmi_to_audio_11_reg                                              0xB8006C60
#define  AUDIO_hdmi_to_audio_11_inst_addr                                        "0x0194"
#define  set_AUDIO_hdmi_to_audio_11_reg(data)                                    (*((volatile unsigned int*)AUDIO_hdmi_to_audio_11_reg)=data)
#define  get_AUDIO_hdmi_to_audio_11_reg                                          (*((volatile unsigned int*)AUDIO_hdmi_to_audio_11_reg))
#define  AUDIO_hdmi_to_audio_11_cs_byte_11_8_r_shift                             (0)
#define  AUDIO_hdmi_to_audio_11_cs_byte_11_8_r_mask                              (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_11_cs_byte_11_8_r(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_11_get_cs_byte_11_8_r(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_cs_12                                              0x18006C64
#define  AUDIO_hdmi_to_audio_cs_12_reg_addr                                      "0xB8006C64"
#define  AUDIO_hdmi_to_audio_cs_12_reg                                           0xB8006C64
#define  AUDIO_hdmi_to_audio_cs_12_inst_addr                                     "0x0195"
#define  set_AUDIO_hdmi_to_audio_cs_12_reg(data)                                 (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_12_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_12_reg                                       (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_12_reg))
#define  AUDIO_hdmi_to_audio_cs_12_cs_byte_15_12_r_shift                         (0)
#define  AUDIO_hdmi_to_audio_cs_12_cs_byte_15_12_r_mask                          (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_cs_12_cs_byte_15_12_r(data)                         (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_cs_12_get_cs_byte_15_12_r(data)                     (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_cs_13                                              0x18006C68
#define  AUDIO_hdmi_to_audio_cs_13_reg_addr                                      "0xB8006C68"
#define  AUDIO_hdmi_to_audio_cs_13_reg                                           0xB8006C68
#define  AUDIO_hdmi_to_audio_cs_13_inst_addr                                     "0x0196"
#define  set_AUDIO_hdmi_to_audio_cs_13_reg(data)                                 (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_13_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_13_reg                                       (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_13_reg))
#define  AUDIO_hdmi_to_audio_cs_13_cs_byte_19_16_r_shift                         (0)
#define  AUDIO_hdmi_to_audio_cs_13_cs_byte_19_16_r_mask                          (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_cs_13_cs_byte_19_16_r(data)                         (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_cs_13_get_cs_byte_19_16_r(data)                     (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_cs_14                                              0x18006C6C
#define  AUDIO_hdmi_to_audio_cs_14_reg_addr                                      "0xB8006C6C"
#define  AUDIO_hdmi_to_audio_cs_14_reg                                           0xB8006C6C
#define  AUDIO_hdmi_to_audio_cs_14_inst_addr                                     "0x0197"
#define  set_AUDIO_hdmi_to_audio_cs_14_reg(data)                                 (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_14_reg)=data)
#define  get_AUDIO_hdmi_to_audio_cs_14_reg                                       (*((volatile unsigned int*)AUDIO_hdmi_to_audio_cs_14_reg))
#define  AUDIO_hdmi_to_audio_cs_14_cs_byte_23_20_r_shift                         (0)
#define  AUDIO_hdmi_to_audio_cs_14_cs_byte_23_20_r_mask                          (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_cs_14_cs_byte_23_20_r(data)                         (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_cs_14_get_cs_byte_23_20_r(data)                     (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_1                                                0x18006C70
#define  AUDIO_hdmi_to_audio_u_1_reg_addr                                        "0xB8006C70"
#define  AUDIO_hdmi_to_audio_u_1_reg                                             0xB8006C70
#define  AUDIO_hdmi_to_audio_u_1_inst_addr                                       "0x0198"
#define  set_AUDIO_hdmi_to_audio_u_1_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_1_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_1_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_1_reg))
#define  AUDIO_hdmi_to_audio_u_1_iu_byte_3_0_shift                               (0)
#define  AUDIO_hdmi_to_audio_u_1_iu_byte_3_0_mask                                (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_1_iu_byte_3_0(data)                               (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_1_get_iu_byte_3_0(data)                           (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_2                                                0x18006C74
#define  AUDIO_hdmi_to_audio_u_2_reg_addr                                        "0xB8006C74"
#define  AUDIO_hdmi_to_audio_u_2_reg                                             0xB8006C74
#define  AUDIO_hdmi_to_audio_u_2_inst_addr                                       "0x0199"
#define  set_AUDIO_hdmi_to_audio_u_2_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_2_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_2_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_2_reg))
#define  AUDIO_hdmi_to_audio_u_2_iu_byte_7_4_shift                               (0)
#define  AUDIO_hdmi_to_audio_u_2_iu_byte_7_4_mask                                (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_2_iu_byte_7_4(data)                               (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_2_get_iu_byte_7_4(data)                           (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_3                                                0x18006C78
#define  AUDIO_hdmi_to_audio_u_3_reg_addr                                        "0xB8006C78"
#define  AUDIO_hdmi_to_audio_u_3_reg                                             0xB8006C78
#define  AUDIO_hdmi_to_audio_u_3_inst_addr                                       "0x019A"
#define  set_AUDIO_hdmi_to_audio_u_3_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_3_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_3_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_3_reg))
#define  AUDIO_hdmi_to_audio_u_3_iu_byte_11_8_shift                              (0)
#define  AUDIO_hdmi_to_audio_u_3_iu_byte_11_8_mask                               (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_3_iu_byte_11_8(data)                              (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_3_get_iu_byte_11_8(data)                          (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_4                                                0x18006C7C
#define  AUDIO_hdmi_to_audio_u_4_reg_addr                                        "0xB8006C7C"
#define  AUDIO_hdmi_to_audio_u_4_reg                                             0xB8006C7C
#define  AUDIO_hdmi_to_audio_u_4_inst_addr                                       "0x019B"
#define  set_AUDIO_hdmi_to_audio_u_4_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_4_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_4_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_4_reg))
#define  AUDIO_hdmi_to_audio_u_4_iu_byte_15_12_shift                             (0)
#define  AUDIO_hdmi_to_audio_u_4_iu_byte_15_12_mask                              (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_4_iu_byte_15_12(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_4_get_iu_byte_15_12(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_5                                                0x18006C80
#define  AUDIO_hdmi_to_audio_u_5_reg_addr                                        "0xB8006C80"
#define  AUDIO_hdmi_to_audio_u_5_reg                                             0xB8006C80
#define  AUDIO_hdmi_to_audio_u_5_inst_addr                                       "0x019C"
#define  set_AUDIO_hdmi_to_audio_u_5_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_5_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_5_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_5_reg))
#define  AUDIO_hdmi_to_audio_u_5_iu_byte_19_16_shift                             (0)
#define  AUDIO_hdmi_to_audio_u_5_iu_byte_19_16_mask                              (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_5_iu_byte_19_16(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_5_get_iu_byte_19_16(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_6                                                0x18006C84
#define  AUDIO_hdmi_to_audio_u_6_reg_addr                                        "0xB8006C84"
#define  AUDIO_hdmi_to_audio_u_6_reg                                             0xB8006C84
#define  AUDIO_hdmi_to_audio_u_6_inst_addr                                       "0x019D"
#define  set_AUDIO_hdmi_to_audio_u_6_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_6_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_6_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_6_reg))
#define  AUDIO_hdmi_to_audio_u_6_iu_byte_23_20_shift                             (0)
#define  AUDIO_hdmi_to_audio_u_6_iu_byte_23_20_mask                              (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_6_iu_byte_23_20(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_6_get_iu_byte_23_20(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_7                                                0x18006C88
#define  AUDIO_hdmi_to_audio_u_7_reg_addr                                        "0xB8006C88"
#define  AUDIO_hdmi_to_audio_u_7_reg                                             0xB8006C88
#define  AUDIO_hdmi_to_audio_u_7_inst_addr                                       "0x019E"
#define  set_AUDIO_hdmi_to_audio_u_7_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_7_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_7_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_7_reg))
#define  AUDIO_hdmi_to_audio_u_7_iu_byte_27_24_shift                             (0)
#define  AUDIO_hdmi_to_audio_u_7_iu_byte_27_24_mask                              (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_7_iu_byte_27_24(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_7_get_iu_byte_27_24(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_8                                                0x18006C8C
#define  AUDIO_hdmi_to_audio_u_8_reg_addr                                        "0xB8006C8C"
#define  AUDIO_hdmi_to_audio_u_8_reg                                             0xB8006C8C
#define  AUDIO_hdmi_to_audio_u_8_inst_addr                                       "0x019F"
#define  set_AUDIO_hdmi_to_audio_u_8_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_8_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_8_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_8_reg))
#define  AUDIO_hdmi_to_audio_u_8_iu_byte_31_28_shift                             (0)
#define  AUDIO_hdmi_to_audio_u_8_iu_byte_31_28_mask                              (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_8_iu_byte_31_28(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_8_get_iu_byte_31_28(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_9                                                0x18006C90
#define  AUDIO_hdmi_to_audio_u_9_reg_addr                                        "0xB8006C90"
#define  AUDIO_hdmi_to_audio_u_9_reg                                             0xB8006C90
#define  AUDIO_hdmi_to_audio_u_9_inst_addr                                       "0x01A0"
#define  set_AUDIO_hdmi_to_audio_u_9_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_9_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_9_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_9_reg))
#define  AUDIO_hdmi_to_audio_u_9_iu_byte_35_32_shift                             (0)
#define  AUDIO_hdmi_to_audio_u_9_iu_byte_35_32_mask                              (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_9_iu_byte_35_32(data)                             (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_9_get_iu_byte_35_32(data)                         (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_10                                               0x18006C94
#define  AUDIO_hdmi_to_audio_u_10_reg_addr                                       "0xB8006C94"
#define  AUDIO_hdmi_to_audio_u_10_reg                                            0xB8006C94
#define  AUDIO_hdmi_to_audio_u_10_inst_addr                                      "0x01A1"
#define  set_AUDIO_hdmi_to_audio_u_10_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_10_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_10_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_10_reg))
#define  AUDIO_hdmi_to_audio_u_10_iu_byte_39_36_shift                            (0)
#define  AUDIO_hdmi_to_audio_u_10_iu_byte_39_36_mask                             (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_10_iu_byte_39_36(data)                            (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_10_get_iu_byte_39_36(data)                        (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_11                                               0x18006C98
#define  AUDIO_hdmi_to_audio_u_11_reg_addr                                       "0xB8006C98"
#define  AUDIO_hdmi_to_audio_u_11_reg                                            0xB8006C98
#define  AUDIO_hdmi_to_audio_u_11_inst_addr                                      "0x01A2"
#define  set_AUDIO_hdmi_to_audio_u_11_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_11_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_11_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_11_reg))
#define  AUDIO_hdmi_to_audio_u_11_iu_byte_43_40_shift                            (0)
#define  AUDIO_hdmi_to_audio_u_11_iu_byte_43_40_mask                             (0xFFFFFFFF)
#define  AUDIO_hdmi_to_audio_u_11_iu_byte_43_40(data)                            (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_11_get_iu_byte_43_40(data)                        (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_to_audio_u_12                                               0x18006C9C
#define  AUDIO_hdmi_to_audio_u_12_reg_addr                                       "0xB8006C9C"
#define  AUDIO_hdmi_to_audio_u_12_reg                                            0xB8006C9C
#define  AUDIO_hdmi_to_audio_u_12_inst_addr                                      "0x01A3"
#define  set_AUDIO_hdmi_to_audio_u_12_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_12_reg)=data)
#define  get_AUDIO_hdmi_to_audio_u_12_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_u_12_reg))
#define  AUDIO_hdmi_to_audio_u_12_iu_byte_46_44_shift                            (0)
#define  AUDIO_hdmi_to_audio_u_12_iu_byte_46_44_mask                             (0x00FFFFFF)
#define  AUDIO_hdmi_to_audio_u_12_iu_byte_46_44(data)                            (0x00FFFFFF&(data))
#define  AUDIO_hdmi_to_audio_u_12_get_iu_byte_46_44(data)                        (0x00FFFFFF&(data))

#define  AUDIO_hdmi_to_audio_lock                                               0x18006CA0
#define  AUDIO_hdmi_to_audio_lock_reg_addr                                       "0xB8006CA0"
#define  AUDIO_hdmi_to_audio_lock_reg                                            0xB8006CA0
#define  AUDIO_hdmi_to_audio_lock_inst_addr                                      "0x01A4"
#define  set_AUDIO_hdmi_to_audio_lock_reg(data)                                  (*((volatile unsigned int*)AUDIO_hdmi_to_audio_lock_reg)=data)
#define  get_AUDIO_hdmi_to_audio_lock_reg                                        (*((volatile unsigned int*)AUDIO_hdmi_to_audio_lock_reg))
#define  AUDIO_hdmi_to_audio_lock_hdmi2aud_lock_shift                            (31)
#define  AUDIO_hdmi_to_audio_lock_aud_golden_mode_shift                          (24)
#define  AUDIO_hdmi_to_audio_lock_detect_status_shift                            (21)
#define  AUDIO_hdmi_to_audio_lock_hdmi2aud_dnum_shift                            (5)
#define  AUDIO_hdmi_to_audio_lock_hw_lock_variation_en_shift                     (4)
#define  AUDIO_hdmi_to_audio_lock_hw_lock_position_shift                         (2)
#define  AUDIO_hdmi_to_audio_lock_debounce_en_shift                              (1)
#define  AUDIO_hdmi_to_audio_lock_lock_mode_shift                                (0)
#define  AUDIO_hdmi_to_audio_lock_hdmi2aud_lock_mask                             (0x80000000)
#define  AUDIO_hdmi_to_audio_lock_aud_golden_mode_mask                           (0x0F000000)
#define  AUDIO_hdmi_to_audio_lock_detect_status_mask                             (0x00E00000)
#define  AUDIO_hdmi_to_audio_lock_hdmi2aud_dnum_mask                             (0x001FFFE0)
#define  AUDIO_hdmi_to_audio_lock_hw_lock_variation_en_mask                      (0x00000010)
#define  AUDIO_hdmi_to_audio_lock_hw_lock_position_mask                          (0x0000000C)
#define  AUDIO_hdmi_to_audio_lock_debounce_en_mask                               (0x00000002)
#define  AUDIO_hdmi_to_audio_lock_lock_mode_mask                                 (0x00000001)
#define  AUDIO_hdmi_to_audio_lock_hdmi2aud_lock(data)                            (0x80000000&((data)<<31))
#define  AUDIO_hdmi_to_audio_lock_aud_golden_mode(data)                          (0x0F000000&((data)<<24))
#define  AUDIO_hdmi_to_audio_lock_detect_status(data)                            (0x00E00000&((data)<<21))
#define  AUDIO_hdmi_to_audio_lock_hdmi2aud_dnum(data)                            (0x001FFFE0&((data)<<5))
#define  AUDIO_hdmi_to_audio_lock_hw_lock_variation_en(data)                     (0x00000010&((data)<<4))
#define  AUDIO_hdmi_to_audio_lock_hw_lock_position(data)                         (0x0000000C&((data)<<2))
#define  AUDIO_hdmi_to_audio_lock_debounce_en(data)                              (0x00000002&((data)<<1))
#define  AUDIO_hdmi_to_audio_lock_lock_mode(data)                                (0x00000001&(data))
#define  AUDIO_hdmi_to_audio_lock_get_hdmi2aud_lock(data)                        ((0x80000000&(data))>>31)
#define  AUDIO_hdmi_to_audio_lock_get_aud_golden_mode(data)                      ((0x0F000000&(data))>>24)
#define  AUDIO_hdmi_to_audio_lock_get_detect_status(data)                        ((0x00E00000&(data))>>21)
#define  AUDIO_hdmi_to_audio_lock_get_hdmi2aud_dnum(data)                        ((0x001FFFE0&(data))>>5)
#define  AUDIO_hdmi_to_audio_lock_get_hw_lock_variation_en(data)                 ((0x00000010&(data))>>4)
#define  AUDIO_hdmi_to_audio_lock_get_hw_lock_position(data)                     ((0x0000000C&(data))>>2)
#define  AUDIO_hdmi_to_audio_lock_get_debounce_en(data)                          ((0x00000002&(data))>>1)
#define  AUDIO_hdmi_to_audio_lock_get_lock_mode(data)                            (0x00000001&(data))

#define  AUDIO_hdmi_to_audio_lock_2                                             0x18006CA4
#define  AUDIO_hdmi_to_audio_lock_2_reg_addr                                     "0xB8006CA4"
#define  AUDIO_hdmi_to_audio_lock_2_reg                                          0xB8006CA4
#define  AUDIO_hdmi_to_audio_lock_2_inst_addr                                    "0x01A5"
#define  set_AUDIO_hdmi_to_audio_lock_2_reg(data)                                (*((volatile unsigned int*)AUDIO_hdmi_to_audio_lock_2_reg)=data)
#define  get_AUDIO_hdmi_to_audio_lock_2_reg                                      (*((volatile unsigned int*)AUDIO_hdmi_to_audio_lock_2_reg))
#define  AUDIO_hdmi_to_audio_lock_2_fw_10ms_min_shift                            (16)
#define  AUDIO_hdmi_to_audio_lock_2_fw_10ms_max_shift                            (0)
#define  AUDIO_hdmi_to_audio_lock_2_fw_10ms_min_mask                             (0x3FFF0000)
#define  AUDIO_hdmi_to_audio_lock_2_fw_10ms_max_mask                             (0x00003FFF)
#define  AUDIO_hdmi_to_audio_lock_2_fw_10ms_min(data)                            (0x3FFF0000&((data)<<16))
#define  AUDIO_hdmi_to_audio_lock_2_fw_10ms_max(data)                            (0x00003FFF&(data))
#define  AUDIO_hdmi_to_audio_lock_2_get_fw_10ms_min(data)                        ((0x3FFF0000&(data))>>16)
#define  AUDIO_hdmi_to_audio_lock_2_get_fw_10ms_max(data)                        (0x00003FFF&(data))

#define  AUDIO_hdmi_in_pattern_search1                                          0x18006ED0
#define  AUDIO_hdmi_in_pattern_search1_reg_addr                                  "0xB8006ED0"
#define  AUDIO_hdmi_in_pattern_search1_reg                                       0xB8006ED0
#define  AUDIO_hdmi_in_pattern_search1_inst_addr                                 "0x01A6"
#define  set_AUDIO_hdmi_in_pattern_search1_reg(data)                             (*((volatile unsigned int*)AUDIO_hdmi_in_pattern_search1_reg)=data)
#define  get_AUDIO_hdmi_in_pattern_search1_reg                                   (*((volatile unsigned int*)AUDIO_hdmi_in_pattern_search1_reg))
#define  AUDIO_hdmi_in_pattern_search1_pattern_search_enable1_shift              (31)
#define  AUDIO_hdmi_in_pattern_search1_pattern_search_catch1_shift               (30)
#define  AUDIO_hdmi_in_pattern_search1_pattern_search_length1_shift              (0)
#define  AUDIO_hdmi_in_pattern_search1_pattern_search_enable1_mask               (0x80000000)
#define  AUDIO_hdmi_in_pattern_search1_pattern_search_catch1_mask                (0x40000000)
#define  AUDIO_hdmi_in_pattern_search1_pattern_search_length1_mask               (0x00007FFF)
#define  AUDIO_hdmi_in_pattern_search1_pattern_search_enable1(data)              (0x80000000&((data)<<31))
#define  AUDIO_hdmi_in_pattern_search1_pattern_search_catch1(data)               (0x40000000&((data)<<30))
#define  AUDIO_hdmi_in_pattern_search1_pattern_search_length1(data)              (0x00007FFF&(data))
#define  AUDIO_hdmi_in_pattern_search1_get_pattern_search_enable1(data)          ((0x80000000&(data))>>31)
#define  AUDIO_hdmi_in_pattern_search1_get_pattern_search_catch1(data)           ((0x40000000&(data))>>30)
#define  AUDIO_hdmi_in_pattern_search1_get_pattern_search_length1(data)          (0x00007FFF&(data))

#define  AUDIO_hdmi_in_pattern_set1                                             0x18006ED4
#define  AUDIO_hdmi_in_pattern_set1_reg_addr                                     "0xB8006ED4"
#define  AUDIO_hdmi_in_pattern_set1_reg                                          0xB8006ED4
#define  AUDIO_hdmi_in_pattern_set1_inst_addr                                    "0x01A7"
#define  set_AUDIO_hdmi_in_pattern_set1_reg(data)                                (*((volatile unsigned int*)AUDIO_hdmi_in_pattern_set1_reg)=data)
#define  get_AUDIO_hdmi_in_pattern_set1_reg                                      (*((volatile unsigned int*)AUDIO_hdmi_in_pattern_set1_reg))
#define  AUDIO_hdmi_in_pattern_set1_specific_pattern1_shift                      (0)
#define  AUDIO_hdmi_in_pattern_set1_specific_pattern1_mask                       (0xFFFFFFFF)
#define  AUDIO_hdmi_in_pattern_set1_specific_pattern1(data)                      (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_in_pattern_set1_get_specific_pattern1(data)                  (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_in_pattern_search2                                          0x18006ED8
#define  AUDIO_hdmi_in_pattern_search2_reg_addr                                  "0xB8006ED8"
#define  AUDIO_hdmi_in_pattern_search2_reg                                       0xB8006ED8
#define  AUDIO_hdmi_in_pattern_search2_inst_addr                                 "0x01A8"
#define  set_AUDIO_hdmi_in_pattern_search2_reg(data)                             (*((volatile unsigned int*)AUDIO_hdmi_in_pattern_search2_reg)=data)
#define  get_AUDIO_hdmi_in_pattern_search2_reg                                   (*((volatile unsigned int*)AUDIO_hdmi_in_pattern_search2_reg))
#define  AUDIO_hdmi_in_pattern_search2_pattern_search_enable2_shift              (31)
#define  AUDIO_hdmi_in_pattern_search2_pattern_search_catch2_shift               (30)
#define  AUDIO_hdmi_in_pattern_search2_pattern_search_length2_shift              (0)
#define  AUDIO_hdmi_in_pattern_search2_pattern_search_enable2_mask               (0x80000000)
#define  AUDIO_hdmi_in_pattern_search2_pattern_search_catch2_mask                (0x40000000)
#define  AUDIO_hdmi_in_pattern_search2_pattern_search_length2_mask               (0x00007FFF)
#define  AUDIO_hdmi_in_pattern_search2_pattern_search_enable2(data)              (0x80000000&((data)<<31))
#define  AUDIO_hdmi_in_pattern_search2_pattern_search_catch2(data)               (0x40000000&((data)<<30))
#define  AUDIO_hdmi_in_pattern_search2_pattern_search_length2(data)              (0x00007FFF&(data))
#define  AUDIO_hdmi_in_pattern_search2_get_pattern_search_enable2(data)          ((0x80000000&(data))>>31)
#define  AUDIO_hdmi_in_pattern_search2_get_pattern_search_catch2(data)           ((0x40000000&(data))>>30)
#define  AUDIO_hdmi_in_pattern_search2_get_pattern_search_length2(data)          (0x00007FFF&(data))

#define  AUDIO_hdmi_in_pattern_set2                                             0x18006EDC
#define  AUDIO_hdmi_in_pattern_set2_reg_addr                                     "0xB8006EDC"
#define  AUDIO_hdmi_in_pattern_set2_reg                                          0xB8006EDC
#define  AUDIO_hdmi_in_pattern_set2_inst_addr                                    "0x01A9"
#define  set_AUDIO_hdmi_in_pattern_set2_reg(data)                                (*((volatile unsigned int*)AUDIO_hdmi_in_pattern_set2_reg)=data)
#define  get_AUDIO_hdmi_in_pattern_set2_reg                                      (*((volatile unsigned int*)AUDIO_hdmi_in_pattern_set2_reg))
#define  AUDIO_hdmi_in_pattern_set2_specific_pattern2_shift                      (0)
#define  AUDIO_hdmi_in_pattern_set2_specific_pattern2_mask                       (0xFFFFFFFF)
#define  AUDIO_hdmi_in_pattern_set2_specific_pattern2(data)                      (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_in_pattern_set2_get_specific_pattern2(data)                  (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_in_PaPb_search                                              0x18006EE0
#define  AUDIO_hdmi_in_PaPb_search_reg_addr                                      "0xB8006EE0"
#define  AUDIO_hdmi_in_PaPb_search_reg                                           0xB8006EE0
#define  AUDIO_hdmi_in_PaPb_search_inst_addr                                     "0x01AA"
#define  set_AUDIO_hdmi_in_PaPb_search_reg(data)                                 (*((volatile unsigned int*)AUDIO_hdmi_in_PaPb_search_reg)=data)
#define  get_AUDIO_hdmi_in_PaPb_search_reg                                       (*((volatile unsigned int*)AUDIO_hdmi_in_PaPb_search_reg))
#define  AUDIO_hdmi_in_PaPb_search_papb_search_enable_shift                      (31)
#define  AUDIO_hdmi_in_PaPb_search_papb_search_catch_shift                       (30)
#define  AUDIO_hdmi_in_PaPb_search_papb_04_flag_shift                            (20)
#define  AUDIO_hdmi_in_PaPb_search_hbr_i2s_ch_no_shift                           (17)
#define  AUDIO_hdmi_in_PaPb_search_det_path_sel_shift                            (16)
#define  AUDIO_hdmi_in_PaPb_search_papb_search_enable_mask                       (0x80000000)
#define  AUDIO_hdmi_in_PaPb_search_papb_search_catch_mask                        (0x40000000)
#define  AUDIO_hdmi_in_PaPb_search_papb_04_flag_mask                             (0x00100000)
#define  AUDIO_hdmi_in_PaPb_search_hbr_i2s_ch_no_mask                            (0x000E0000)
#define  AUDIO_hdmi_in_PaPb_search_det_path_sel_mask                             (0x00010000)
#define  AUDIO_hdmi_in_PaPb_search_papb_search_enable(data)                      (0x80000000&((data)<<31))
#define  AUDIO_hdmi_in_PaPb_search_papb_search_catch(data)                       (0x40000000&((data)<<30))
#define  AUDIO_hdmi_in_PaPb_search_papb_04_flag(data)                            (0x00100000&((data)<<20))
#define  AUDIO_hdmi_in_PaPb_search_hbr_i2s_ch_no(data)                           (0x000E0000&((data)<<17))
#define  AUDIO_hdmi_in_PaPb_search_det_path_sel(data)                            (0x00010000&((data)<<16))
#define  AUDIO_hdmi_in_PaPb_search_get_papb_search_enable(data)                  ((0x80000000&(data))>>31)
#define  AUDIO_hdmi_in_PaPb_search_get_papb_search_catch(data)                   ((0x40000000&(data))>>30)
#define  AUDIO_hdmi_in_PaPb_search_get_papb_04_flag(data)                        ((0x00100000&(data))>>20)
#define  AUDIO_hdmi_in_PaPb_search_get_hbr_i2s_ch_no(data)                       ((0x000E0000&(data))>>17)
#define  AUDIO_hdmi_in_PaPb_search_get_det_path_sel(data)                        ((0x00010000&(data))>>16)

#define  AUDIO_hdmi_in_PaPb_val                                                 0x18006EE4
#define  AUDIO_hdmi_in_PaPb_val_reg_addr                                         "0xB8006EE4"
#define  AUDIO_hdmi_in_PaPb_val_reg                                              0xB8006EE4
#define  AUDIO_hdmi_in_PaPb_val_inst_addr                                        "0x01AB"
#define  set_AUDIO_hdmi_in_PaPb_val_reg(data)                                    (*((volatile unsigned int*)AUDIO_hdmi_in_PaPb_val_reg)=data)
#define  get_AUDIO_hdmi_in_PaPb_val_reg                                          (*((volatile unsigned int*)AUDIO_hdmi_in_PaPb_val_reg))
#define  AUDIO_hdmi_in_PaPb_val_pd_val_shift                                     (16)
#define  AUDIO_hdmi_in_PaPb_val_pc_val_shift                                     (0)
#define  AUDIO_hdmi_in_PaPb_val_pd_val_mask                                      (0xFFFF0000)
#define  AUDIO_hdmi_in_PaPb_val_pc_val_mask                                      (0x0000FFFF)
#define  AUDIO_hdmi_in_PaPb_val_pd_val(data)                                     (0xFFFF0000&((data)<<16))
#define  AUDIO_hdmi_in_PaPb_val_pc_val(data)                                     (0x0000FFFF&(data))
#define  AUDIO_hdmi_in_PaPb_val_get_pd_val(data)                                 ((0xFFFF0000&(data))>>16)
#define  AUDIO_hdmi_in_PaPb_val_get_pc_val(data)                                 (0x0000FFFF&(data))

#define  AUDIO_hdmi_in_PaPb_val2                                                0x18006EE8
#define  AUDIO_hdmi_in_PaPb_val2_reg_addr                                        "0xB8006EE8"
#define  AUDIO_hdmi_in_PaPb_val2_reg                                             0xB8006EE8
#define  AUDIO_hdmi_in_PaPb_val2_inst_addr                                       "0x01AC"
#define  set_AUDIO_hdmi_in_PaPb_val2_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_in_PaPb_val2_reg)=data)
#define  get_AUDIO_hdmi_in_PaPb_val2_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_in_PaPb_val2_reg))
#define  AUDIO_hdmi_in_PaPb_val2_pb_val_shift                                    (16)
#define  AUDIO_hdmi_in_PaPb_val2_pa_val_shift                                    (0)
#define  AUDIO_hdmi_in_PaPb_val2_pb_val_mask                                     (0xFFFF0000)
#define  AUDIO_hdmi_in_PaPb_val2_pa_val_mask                                     (0x0000FFFF)
#define  AUDIO_hdmi_in_PaPb_val2_pb_val(data)                                    (0xFFFF0000&((data)<<16))
#define  AUDIO_hdmi_in_PaPb_val2_pa_val(data)                                    (0x0000FFFF&(data))
#define  AUDIO_hdmi_in_PaPb_val2_get_pb_val(data)                                ((0xFFFF0000&(data))>>16)
#define  AUDIO_hdmi_in_PaPb_val2_get_pa_val(data)                                (0x0000FFFF&(data))

#define  AUDIO_hdmi_in_PaPb_val3                                                0x18006EEC
#define  AUDIO_hdmi_in_PaPb_val3_reg_addr                                        "0xB8006EEC"
#define  AUDIO_hdmi_in_PaPb_val3_reg                                             0xB8006EEC
#define  AUDIO_hdmi_in_PaPb_val3_inst_addr                                       "0x01AD"
#define  set_AUDIO_hdmi_in_PaPb_val3_reg(data)                                   (*((volatile unsigned int*)AUDIO_hdmi_in_PaPb_val3_reg)=data)
#define  get_AUDIO_hdmi_in_PaPb_val3_reg                                         (*((volatile unsigned int*)AUDIO_hdmi_in_PaPb_val3_reg))
#define  AUDIO_hdmi_in_PaPb_val3_pc_val_buf_shift                                (0)
#define  AUDIO_hdmi_in_PaPb_val3_pc_val_buf_mask                                 (0xFFFFFFFF)
#define  AUDIO_hdmi_in_PaPb_val3_pc_val_buf(data)                                (0xFFFFFFFF&(data))
#define  AUDIO_hdmi_in_PaPb_val3_get_pc_val_buf(data)                            (0xFFFFFFFF&(data))

#define  AUDIO_hdmi_in_pattern1_val                                             0x18006EF0
#define  AUDIO_hdmi_in_pattern1_val_reg_addr                                     "0xB8006EF0"
#define  AUDIO_hdmi_in_pattern1_val_reg                                          0xB8006EF0
#define  AUDIO_hdmi_in_pattern1_val_inst_addr                                    "0x01AE"
#define  set_AUDIO_hdmi_in_pattern1_val_reg(data)                                (*((volatile unsigned int*)AUDIO_hdmi_in_pattern1_val_reg)=data)
#define  get_AUDIO_hdmi_in_pattern1_val_reg                                      (*((volatile unsigned int*)AUDIO_hdmi_in_pattern1_val_reg))
#define  AUDIO_hdmi_in_pattern1_val_pd_val_pat1_shift                            (16)
#define  AUDIO_hdmi_in_pattern1_val_pc_val_pat1_shift                            (0)
#define  AUDIO_hdmi_in_pattern1_val_pd_val_pat1_mask                             (0xFFFF0000)
#define  AUDIO_hdmi_in_pattern1_val_pc_val_pat1_mask                             (0x0000FFFF)
#define  AUDIO_hdmi_in_pattern1_val_pd_val_pat1(data)                            (0xFFFF0000&((data)<<16))
#define  AUDIO_hdmi_in_pattern1_val_pc_val_pat1(data)                            (0x0000FFFF&(data))
#define  AUDIO_hdmi_in_pattern1_val_get_pd_val_pat1(data)                        ((0xFFFF0000&(data))>>16)
#define  AUDIO_hdmi_in_pattern1_val_get_pc_val_pat1(data)                        (0x0000FFFF&(data))

#define  AUDIO_hdmi_in_pattern2_val                                             0x18006EF4
#define  AUDIO_hdmi_in_pattern2_val_reg_addr                                     "0xB8006EF4"
#define  AUDIO_hdmi_in_pattern2_val_reg                                          0xB8006EF4
#define  AUDIO_hdmi_in_pattern2_val_inst_addr                                    "0x01AF"
#define  set_AUDIO_hdmi_in_pattern2_val_reg(data)                                (*((volatile unsigned int*)AUDIO_hdmi_in_pattern2_val_reg)=data)
#define  get_AUDIO_hdmi_in_pattern2_val_reg                                      (*((volatile unsigned int*)AUDIO_hdmi_in_pattern2_val_reg))
#define  AUDIO_hdmi_in_pattern2_val_pd_val_pat2_shift                            (16)
#define  AUDIO_hdmi_in_pattern2_val_pc_val_pat2_shift                            (0)
#define  AUDIO_hdmi_in_pattern2_val_pd_val_pat2_mask                             (0xFFFF0000)
#define  AUDIO_hdmi_in_pattern2_val_pc_val_pat2_mask                             (0x0000FFFF)
#define  AUDIO_hdmi_in_pattern2_val_pd_val_pat2(data)                            (0xFFFF0000&((data)<<16))
#define  AUDIO_hdmi_in_pattern2_val_pc_val_pat2(data)                            (0x0000FFFF&(data))
#define  AUDIO_hdmi_in_pattern2_val_get_pd_val_pat2(data)                        ((0xFFFF0000&(data))>>16)
#define  AUDIO_hdmi_in_pattern2_val_get_pc_val_pat2(data)                        (0x0000FFFF&(data))

#ifndef LITTLE_ENDIAN //apply BIG_ENDIAN

//======AUDIO register structure define==========

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  inv_ad1_128fs:1;
        RBus_UInt32  inv_ad_128fs:1;
        RBus_UInt32  dmic_clk_sel:2;
        RBus_UInt32  div_pre_512fs_ts:2;
        RBus_UInt32  frontend_clkgate_enable:1;
        RBus_UInt32  sel_clk_vrloop_fsi:1;
        RBus_UInt32  div_dma_r_512fs:2;
        RBus_UInt32  div_tsdma_r_512fs:2;
        RBus_UInt32  play_r_adc_512fs_sel:2;
        RBus_UInt32  play_r_adc_512fs_sel_ts:2;
        RBus_UInt32  sel_64fs_ts:3;
        RBus_UInt32  sel_64fs:3;
        RBus_UInt32  div_arcdma_r_512fs:2;
        RBus_UInt32  play_r_adc_512fs_sel_arc:2;
        RBus_UInt32  sel_clk_adc_fsi:2;
        RBus_UInt32  sel_clk_dac0_fsi:2;
        RBus_UInt32  sel_clk_dac1_fsi:2;
    };
}audio_global_ctrl_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sel_clk_i2s_out:3;
        RBus_UInt32  sel_clk_earc_tx:2;
        RBus_UInt32  psaud_s2_sel:2;
        RBus_UInt32  psaud_div_s1:1;
        RBus_UInt32  normal_psaud:1;
        RBus_UInt32  aud_mclk_enable:1;
        RBus_UInt32  sel_aud_mclk_post:2;
        RBus_UInt32  div_aud_mclk_512fs:2;
        RBus_UInt32  sel_clk_aud_mclk:2;
        RBus_UInt32  reg_pcr_clk_1_sel:2;
        RBus_UInt32  reg_pcr_clk_0_sel:2;
        RBus_UInt32  res1:1;
        RBus_UInt32  div_earc_tx_512fs:2;
        RBus_UInt32  tv_demod_en:1;
        RBus_UInt32  i2s_out_en:1;
        RBus_UInt32  i2s_in_en:1;
        RBus_UInt32  spdif_out_en:1;
        RBus_UInt32  spdif_in_en:1;
        RBus_UInt32  sel_clk_spdif_out:2;
        RBus_UInt32  sel_clk_spdif_out_1:2;
    };
}audio_global_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_sram_on:1;
        RBus_UInt32  dac_sram_on:1;
        RBus_UInt32  am_sram_on:1;
        RBus_UInt32  a2_eiaj_sram_on:1;
        RBus_UInt32  inv_da_128fs:1;
        RBus_UInt32  inv_da_128fs_ts:1;
        RBus_UInt32  src_da_128fs:1;
        RBus_UInt32  src_da_128fs_ts:1;
        RBus_UInt32  hdv_mode_sel:1;
        RBus_UInt32  sif_adc_clk_sel:2;
        RBus_UInt32  sif_adc_clk_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  sel_play_r_ck_source_arc:2;
        RBus_UInt32  spdif_nicam:1;
        RBus_UInt32  adc_512fs_sel_ts:2;
        RBus_UInt32  sel_ts_ck_source:2;
        RBus_UInt32  back_end_ts_sample_rate:2;
        RBus_UInt32  sel_play_r_ck_source_ts:2;
        RBus_UInt32  adc_512fs_sel:2;
        RBus_UInt32  sel_play_ck_source:2;
        RBus_UInt32  back_end_play_sample_rate:2;
        RBus_UInt32  sel_play_r_ck_source:2;
    };
}audio_global_ctrl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  contword_inv:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  div_2fs:2;
        RBus_UInt32  res2:1;
        RBus_UInt32  reg_para_e:3;
        RBus_UInt32  res3:1;
        RBus_UInt32  ps_testmode:1;
        RBus_UInt32  pll_spdif_dtrack_en:1;
        RBus_UInt32  reg_smooth_en:1;
        RBus_UInt32  pll_spdif_auto_mode:1;
        RBus_UInt32  mod_acc_rst:1;
        RBus_UInt32  reg_para_d:5;
        RBus_UInt32  reg_para_b:7;
        RBus_UInt32  reg_para_a:6;
    };
}audio_pllcg_spdif_gain_cr0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  asrcin0_div_fsi:2;
        RBus_UInt32  asrcin1_div_fsi:2;
        RBus_UInt32  asrcin2_div_fsi:2;
        RBus_UInt32  asrcin3_div_fsi:2;
        RBus_UInt32  p_gain_set:10;
        RBus_UInt32  p_gain_set2:10;
    };
}audio_pllcg_spdif_gain_cr1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  i_gain_set:10;
    };
}audio_pllcg_spdif_gain_cr2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  reach_time_num:3;
        RBus_UInt32  max_correct_range:4;
    };
}audio_pllcg_spdif_number_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  high_bound1:8;
        RBus_UInt32  low_bound1:8;
        RBus_UInt32  high_bound2:8;
        RBus_UInt32  low_bound2:8;
    };
}audio_pllcg_spdif_bound_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006024_31_19:13;
        RBus_UInt32  res1:2;
        RBus_UInt32  inv_ck512fs_pll_spdif:1;
        RBus_UInt32  res2:4;
        RBus_UInt32  phase_contword:5;
        RBus_UInt32  wdog_switch_en_1:1;
        RBus_UInt32  freq_sel_1:2;
        RBus_UInt32  res3:1;
        RBus_UInt32  wdog_switch_en:1;
        RBus_UInt32  freq_sel:2;
    };
}audio_global_dummy_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  vr_tcon_clken:1;
        RBus_UInt32  vr_tcon_rst_n:1;
        RBus_UInt32  vr_asrcin_div_fsi:2;
        RBus_UInt32  vr_asrcin_ftk_loop_gain_sel1:2;
        RBus_UInt32  vr_asrcin_ftk_sdm_ini1:24;
    };
}audio_vr_ctrl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vr_adc_3_en:1;
        RBus_UInt32  vr_srcin_en:1;
        RBus_UInt32  vr_asrcin_tcon_en1:1;
        RBus_UInt32  vr_asrcin_fsi1_gating_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  vr_adc_2_en:1;
        RBus_UInt32  vr_asrcin_ftk_m1:3;
        RBus_UInt32  vr_asrcin_ftk_n1:2;
        RBus_UInt32  vr_adc_2_sample_rate:4;
        RBus_UInt32  vr_adc_3_sample_rate:4;
        RBus_UInt32  vr_srcin_fb_sample_rate:4;
        RBus_UInt32  vr_srcin_out_sample_rate:4;
        RBus_UInt32  vr_dmic_1_clk_sel:4;
        RBus_UInt32  vr_dmic_1_en:1;
    };
}audio_vr_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  cnt_debug_1:8;
        RBus_UInt32  pll_64512fs_1_unstable:1;
        RBus_UInt32  pll_64512_1_detect_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  deta_1:7;
        RBus_UInt32  res3:1;
        RBus_UInt32  average_value_1:7;
    };
}audio_pll_64512_1_detect_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  vr_adc_4_en:1;
        RBus_UInt32  vr_adc_4_clk_gate_en:1;
        RBus_UInt32  res2:8;
        RBus_UInt32  vr_adc_4_sample_rate:4;
        RBus_UInt32  vr_adc_ana_0_en:1;
        RBus_UInt32  vr_osr_adc_sel:1;
        RBus_UInt32  vr_dac_0_en:1;
        RBus_UInt32  vr_dac_1_en:1;
        RBus_UInt32  vr_dac_0_clk_gate_en:1;
        RBus_UInt32  vr_dac_1_clk_gate_en:1;
        RBus_UInt32  vr_dac_0_sample_rate:4;
        RBus_UInt32  vr_dac_1_sample_rate:4;
        RBus_UInt32  vr_dac_ana_0_en:1;
        RBus_UInt32  vr_dac_ana_1_en:1;
    };
}audio_tcon_reg_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  vr_osr_dac_sel:1;
        RBus_UInt32  vr_damod_0_en:1;
        RBus_UInt32  vr_damod_1_en:1;
        RBus_UInt32  res2:5;
        RBus_UInt32  vr_asrcin_tcon_en0:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  vr_asrcin_tcon_en2:1;
        RBus_UInt32  vr_asrcin_tcon_en3:1;
        RBus_UInt32  vr_asrcin_fsi0_gating_en:1;
        RBus_UInt32  res4:1;
        RBus_UInt32  vr_asrcin_fsi2_gating_en:1;
        RBus_UInt32  vr_asrcin_fsi3_gating_en:1;
        RBus_UInt32  vr_asrcin_ftk_loop_gain_sel0:2;
        RBus_UInt32  res5:2;
    };
}audio_tcon_reg_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vr_asrcin_ftk_loop_gain_sel2:2;
        RBus_UInt32  vr_asrcin_ftk_loop_gain_sel3:2;
        RBus_UInt32  vr_asrcin_ftk_m0:3;
        RBus_UInt32  res1:3;
        RBus_UInt32  vr_asrcin_ftk_m2:3;
        RBus_UInt32  vr_asrcin_ftk_m3:3;
        RBus_UInt32  vr_asrcin_ftk_n0:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  vr_asrcin_ftk_n2:2;
        RBus_UInt32  vr_asrcin_ftk_n3:2;
        RBus_UInt32  res3:8;
    };
}audio_tcon_reg_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  vr_asrcin_ftk_sdm_ini0:24;
    };
}audio_tcon_reg_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  vr_asrcin_ftk_sdm_ini2:24;
    };
}audio_tcon_reg_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  vr_asrcin_ftk_sdm_ini3:24;
    };
}audio_con_reg_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  int_nicam_true_detect_en:1;
        RBus_UInt32  int_fifo0_ts_full_en:1;
        RBus_UInt32  int_fifo0_ts_empty_en:1;
        RBus_UInt32  int_pll64512_wd_en:1;
        RBus_UInt32  int_msd_decision_done_en:1;
        RBus_UInt32  int_msd_fw_scan_done_en:1;
        RBus_UInt32  int_rbus_timeout_en:1;
        RBus_UInt32  int_btsc_mode_chg_en:1;
        RBus_UInt32  int_fifo3_full_en:1;
        RBus_UInt32  int_fifo2_full_en:1;
        RBus_UInt32  int_fifo1_full_en:1;
        RBus_UInt32  int_fifo0_full_en:1;
        RBus_UInt32  int_fifo3_empty_en:1;
        RBus_UInt32  int_fifo2_empty_en:1;
        RBus_UInt32  int_fifo1_empty_en:1;
        RBus_UInt32  int_fifo0_empty_en:1;
        RBus_UInt32  int_nicam_level_status_en:1;
        RBus_UInt32  int_ain_timer_en:1;
        RBus_UInt32  int_aout_timer_en:1;
        RBus_UInt32  int_spi_in_datatype_change_en:1;
        RBus_UInt32  int_spi_in_lock_change_en:1;
        RBus_UInt32  int_nicam_hierr_change_en:1;
        RBus_UInt32  int_i2s_pri_sample_rate_chg_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  int_spi_sample_rate_chg_en:1;
        RBus_UInt32  int_i2s_pri_word_length_change_en:1;
        RBus_UInt32  int_pll64512_wd_en_1:1;
        RBus_UInt32  int_sif_nopt_en:1;
        RBus_UInt32  int_msd_change_en:1;
        RBus_UInt32  int_msd_timeout_en:1;
        RBus_UInt32  int_mode_det_status_change_en:1;
        RBus_UInt32  int_sif_ovf_en:1;
    };
}audio_interrupt_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  int_nicam_true_detect:1;
        RBus_UInt32  int_fifo0_ts_full:1;
        RBus_UInt32  int_fifo0_ts_empty:1;
        RBus_UInt32  int_pll64512_wd:1;
        RBus_UInt32  int_msd_decision_done:1;
        RBus_UInt32  int_msd_fw_scan_done:1;
        RBus_UInt32  int_rbus_timeout:1;
        RBus_UInt32  int_btsc_mode_chg:1;
        RBus_UInt32  int_fifo3_full:1;
        RBus_UInt32  int_fifo2_full:1;
        RBus_UInt32  int_fifo1_full:1;
        RBus_UInt32  int_fifo0_full:1;
        RBus_UInt32  int_fifo3_empty:1;
        RBus_UInt32  int_fifo2_empty:1;
        RBus_UInt32  int_fifo1_empty:1;
        RBus_UInt32  int_fifo0_empty:1;
        RBus_UInt32  int_nicam_level_status:1;
        RBus_UInt32  int_ain_timer:1;
        RBus_UInt32  int_aout_timer:1;
        RBus_UInt32  int_spi_in_datatype_change:1;
        RBus_UInt32  int_spi_in_lock_change:1;
        RBus_UInt32  int_nicam_hierr_change:1;
        RBus_UInt32  int_i2s_pri_sample_rate_chg:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  int_spi_sample_rate_chg:1;
        RBus_UInt32  int_i2s_pri_word_length_change:1;
        RBus_UInt32  int_pll64512_wd_1:1;
        RBus_UInt32  int_sif_nopt:1;
        RBus_UInt32  int_msd_change:1;
        RBus_UInt32  int_msd_timeout:1;
        RBus_UInt32  int_mode_det_status_change:1;
        RBus_UInt32  int_sif_ovf:1;
    };
}audio_interrupt_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  timer_clr_mode_sel:1;
        RBus_UInt32  timer_div:3;
        RBus_UInt32  ain_timer_src:2;
        RBus_UInt32  aout_timer_src:2;
        RBus_UInt32  ain_timer_en:1;
        RBus_UInt32  aout_timer_en:1;
    };
}audio_aio_timer_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ain_timer:32;
    };
}audio_ain_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ain_compare:32;
    };
}audio_ain_compare_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  aout_timer:32;
    };
}audio_aout_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  aout_compare:32;
    };
}audio_aout_compare_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sw_dbg_reg_0:32;
    };
}audio_sw_dbg_reg_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sw_dbg_reg_1:32;
    };
}audio_sw_dbg_reg_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sw_dbg_reg_2:32;
    };
}audio_sw_dbg_reg_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sw_dbg_reg_3:32;
    };
}audio_sw_dbg_reg_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  int_64512_unstable_1_en:1;
        RBus_UInt32  int_64512_unstable_en:1;
        RBus_UInt32  res2:14;
        RBus_UInt32  int_64512fs_unstable_1:1;
        RBus_UInt32  int_64512fs_unstable:1;
    };
}audio_int_en_states_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  hw2asrc_int_en:1;
        RBus_UInt32  int_fifo0_arc_full_en:1;
        RBus_UInt32  int_fifo0_arc_empty_en:1;
        RBus_UInt32  int_fifo2_ts_full_en:1;
        RBus_UInt32  int_fifo2_ts_empty_en:1;
        RBus_UInt32  int_fifo1_ts_full_en:1;
        RBus_UInt32  int_fifo1_ts_empty_en:1;
        RBus_UInt32  int_hdmi_in_datatype_change_en:1;
        RBus_UInt32  int_hdmi_in_datarate_change_en:1;
        RBus_UInt32  int_hdmi_in_channel_change_en:1;
        RBus_UInt32  int_hdmi_in_lock_change_en:1;
    };
}audio_interrupt_en_earc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  hw2asrc_int:1;
        RBus_UInt32  int_fifo0_arc_full:1;
        RBus_UInt32  int_fifo0_arc_empty:1;
        RBus_UInt32  int_fifo2_ts_full:1;
        RBus_UInt32  int_fifo2_ts_empty:1;
        RBus_UInt32  int_fifo1_ts_full:1;
        RBus_UInt32  int_fifo1_ts_empty:1;
        RBus_UInt32  int_hdmi_in_datatype_change:1;
        RBus_UInt32  int_hdmi_in_datarate_change:1;
        RBus_UInt32  int_hdmi_in_channel_change:1;
        RBus_UInt32  int_hdmi_in_lock_change:1;
    };
}audio_interrupt_status_earc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  source_sel:2;
        RBus_UInt32  left_right:2;
        RBus_UInt32  mode_sel:1;
        RBus_UInt32  debounce_en:1;
        RBus_UInt32  sclk_inv:1;
        RBus_UInt32  dummy18006100_24_16:9;
        RBus_UInt32  res1:4;
        RBus_UInt32  sampling_rate:4;
        RBus_UInt32  res2:1;
        RBus_UInt32  pcm_width:7;
    };
}audio_i2s_in_primary_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  source_sel:2;
        RBus_UInt32  req_after_lock:1;
        RBus_UInt32  debounce_en:1;
        RBus_UInt32  source_sel_spdif_out:1;
        RBus_UInt32  res1:11;
        RBus_UInt32  dummy18006130_15_5:11;
        RBus_UInt32  spdif_in_2fs_sel:1;
        RBus_UInt32  sampling_rate:4;
    };
}audio_spdif_in_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hw_locked:1;
        RBus_UInt32  invalid_bit:1;
        RBus_UInt32  clock_accuracy_r:2;
        RBus_UInt32  sampling_freq_r:4;
        RBus_UInt32  channel_number_r:4;
        RBus_UInt32  source_number_r:4;
        RBus_UInt32  category_code_r:8;
        RBus_UInt32  mode_r:2;
        RBus_UInt32  pre_emphasis_r:3;
        RBus_UInt32  copyright_r:1;
        RBus_UInt32  data_type_r:1;
        RBus_UInt32  professional_r:1;
    };
}audio_spdif_in_cs_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  cs_rb3_31_30:2;
        RBus_UInt32  cs_lb3_31_30:2;
        RBus_UInt32  pre_emphasis_l:3;
        RBus_UInt32  copyright_l:1;
        RBus_UInt32  data_type_l:1;
        RBus_UInt32  professional_l:1;
        RBus_UInt32  cgms_a_l:2;
        RBus_UInt32  cgms_a_r:2;
        RBus_UInt32  original_sampling_freq_r:4;
        RBus_UInt32  word_length_r:4;
    };
}audio_spdif_in_cs_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  original_sampling_freq_l:4;
        RBus_UInt32  word_length_l:4;
        RBus_UInt32  clock_accuracy_l:2;
        RBus_UInt32  sampling_freq_l:4;
        RBus_UInt32  channel_number_l:4;
        RBus_UInt32  source_number_l:4;
        RBus_UInt32  category_code_l:8;
        RBus_UInt32  mode_l:2;
    };
}audio_spdif_in_cs_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  cs_byte_7_5_r:22;
    };
}audio_spdif_in_cs_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_r:32;
    };
}audio_spdif_in_cs_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_r:32;
    };
}audio_spdif_in_cs_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_r:32;
    };
}audio_spdif_in_cs_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_r:32;
    };
}audio_spdif_in_cs_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  cs_byte_7_5_l:22;
    };
}audio_spdif_in_cs_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_l:32;
    };
}audio_spdif_in_cs_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_l:32;
    };
}audio_spdif_in_cs_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_l:32;
    };
}audio_spdif_in_cs_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_l:32;
    };
}audio_spdif_in_cs_13_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  dmic_0_enable:1;
        RBus_UInt32  digital_0_boost_ctrl:3;
        RBus_UInt32  res2:2;
        RBus_UInt32  dmic_0_adc_r_mute_ctrl:1;
        RBus_UInt32  dmic_0_adc_l_mute_ctrl:1;
        RBus_UInt32  dmic_0_r_sel:1;
        RBus_UInt32  dmic_0_l_sel:1;
        RBus_UInt32  res3:2;
    };
}audio_digital_mic_0_in_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  dmic_1_enable:1;
        RBus_UInt32  digital_1_boost_ctrl:3;
        RBus_UInt32  res2:2;
        RBus_UInt32  dmic_1_adc_r_mute_ctrl:1;
        RBus_UInt32  dmic_1_adc_l_mute_ctrl:1;
        RBus_UInt32  dmic_1_r_sel:1;
        RBus_UInt32  dmic_1_l_sel:1;
        RBus_UInt32  res3:2;
    };
}audio_digital_mic_1_in_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  output_swap_sel:1;
        RBus_UInt32  output_sel:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  vr_o_clk_sel:1;
        RBus_UInt32  mclk_sel:2;
        RBus_UInt32  res2:6;
        RBus_UInt32  wclk_inv:1;
        RBus_UInt32  sclk_inv:1;
        RBus_UInt32  output_pad1_sel:2;
        RBus_UInt32  output_pad2_sel:2;
        RBus_UInt32  output_pad3_sel:2;
        RBus_UInt32  output_pad4_sel:2;
        RBus_UInt32  dummy18006150_7_0:8;
    };
}audio_i2s_out_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pcm_source_sel_ch01:4;
        RBus_UInt32  pcm_source_sel_ch23:4;
        RBus_UInt32  pcm_source_sel_ch45:4;
        RBus_UInt32  pcm_source_sel_ch67:4;
        RBus_UInt32  swap_sel_ch01:2;
        RBus_UInt32  swap_sel_ch23:2;
        RBus_UInt32  swap_sel_ch45:2;
        RBus_UInt32  swap_sel_ch67:2;
        RBus_UInt32  i2s_pb_vr_sel_ch67:2;
        RBus_UInt32  i2s_pb_vr_sel_ch45:2;
        RBus_UInt32  i2s_pb_vr_sel_ch23:2;
        RBus_UInt32  i2s_pb_vr_sel_ch01:2;
    };
}audio_i2s_out_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hw_limit_en_ch67:1;
        RBus_UInt32  hw_limit_ch67:7;
        RBus_UInt32  hw_limit_en_ch45:1;
        RBus_UInt32  hw_limit_ch45:7;
        RBus_UInt32  hw_limit_en_ch23:1;
        RBus_UInt32  hw_limit_ch23:7;
        RBus_UInt32  hw_limit_en_ch01:1;
        RBus_UInt32  hw_limit_ch01:7;
    };
}audio_i2s_out_sel_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  output_sel:2;
        RBus_UInt32  wait_en:1;
        RBus_UInt32  validity_ctrl:1;
        RBus_UInt32  spdif_out_null_burst:1;
        RBus_UInt32  pcm_source_sel:4;
        RBus_UInt32  spdif_output_ch_sel:2;
        RBus_UInt32  spdif_output_mux:1;
        RBus_UInt32  spo_pb_vr_sel:2;
        RBus_UInt32  swap_sel:2;
        RBus_UInt32  dummy18006170_15_0:16;
    };
}audio_spdif_out_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_lb3_31_30:2;
        RBus_UInt32  clock_accuracy:2;
        RBus_UInt32  sampling_freq:4;
        RBus_UInt32  channel_number:4;
        RBus_UInt32  source_number:4;
        RBus_UInt32  category_code:8;
        RBus_UInt32  mode:2;
        RBus_UInt32  pre_emphasis:3;
        RBus_UInt32  copyright:1;
        RBus_UInt32  data_type:1;
        RBus_UInt32  professional:1;
    };
}audio_spdif_out_cs_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  cgms_a:2;
        RBus_UInt32  original_sampling_freq:4;
        RBus_UInt32  word_length:4;
    };
}audio_spdif_out_cs_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hw_limit_en:1;
        RBus_UInt32  hw_limit:7;
    };
}audio_spdif_out_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_rb3_31_30:2;
        RBus_UInt32  clock_accuracy_r:2;
        RBus_UInt32  sampling_freq_r:4;
        RBus_UInt32  channel_number_r:4;
        RBus_UInt32  source_number_r:4;
        RBus_UInt32  category_code_r:8;
        RBus_UInt32  mode_r:2;
        RBus_UInt32  pre_emphasis_r:3;
        RBus_UInt32  copyright_r:1;
        RBus_UInt32  data_type_r:1;
        RBus_UInt32  professional_r:1;
    };
}audio_spdif_out_cs_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  cgms_a_r:2;
        RBus_UInt32  original_sampling_freq_r:4;
        RBus_UInt32  word_length_r:4;
    };
}audio_spdif_out_cs_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  cs_byte_7_5_l:22;
    };
}audio_spdif_out_cs_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_l:32;
    };
}audio_spdif_out_cs_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_l:32;
    };
}audio_spdif_out_cs_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_l:32;
    };
}audio_spdif_out_cs_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_l:32;
    };
}audio_spdif_out_cs_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  cs_byte_7_5_r:22;
    };
}audio_spdif_out_cs_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_r:32;
    };
}audio_spdif_out_cs_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_r:32;
    };
}audio_spdif_out_cs_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_r:32;
    };
}audio_spdif_out_cs_13_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_r:32;
    };
}audio_spdif_out_cs_14_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  output_sel:2;
        RBus_UInt32  wait_en:1;
        RBus_UInt32  validity_ctrl:1;
        RBus_UInt32  spdif_out_null_burst:1;
        RBus_UInt32  pcm_source_sel:4;
        RBus_UInt32  spdif_output_ch_sel:2;
        RBus_UInt32  spdif_output_mux:1;
        RBus_UInt32  spo_pb_vr_sel:2;
        RBus_UInt32  swap_sel:2;
        RBus_UInt32  dummy18006e60_15_0:16;
    };
}audio_spdif_out_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_lb3_31_30:2;
        RBus_UInt32  clock_accuracy:2;
        RBus_UInt32  sampling_freq:4;
        RBus_UInt32  channel_number:4;
        RBus_UInt32  source_number:4;
        RBus_UInt32  category_code:8;
        RBus_UInt32  mode:2;
        RBus_UInt32  pre_emphasis:3;
        RBus_UInt32  copyright:1;
        RBus_UInt32  data_type:1;
        RBus_UInt32  professional:1;
    };
}audio_spdif_out_1_cs_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  cgms_a:2;
        RBus_UInt32  original_sampling_freq:4;
        RBus_UInt32  word_length:4;
    };
}audio_spdif_out_1_cs_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hw_limit_en:1;
        RBus_UInt32  hw_limit:7;
    };
}audio_spdif_out_1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_rb3_31_30:2;
        RBus_UInt32  clock_accuracy_r:2;
        RBus_UInt32  sampling_freq_r:4;
        RBus_UInt32  channel_number_r:4;
        RBus_UInt32  source_number_r:4;
        RBus_UInt32  category_code_r:8;
        RBus_UInt32  mode_r:2;
        RBus_UInt32  pre_emphasis_r:3;
        RBus_UInt32  copyright_r:1;
        RBus_UInt32  data_type_r:1;
        RBus_UInt32  professional_r:1;
    };
}audio_spdif_out_1_cs_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  cgms_a_r:2;
        RBus_UInt32  original_sampling_freq_r:4;
        RBus_UInt32  word_length_r:4;
    };
}audio_spdif_out_1_cs_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  cs_byte_7_5_l:22;
    };
}audio_spdif_out_1_cs_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_l:32;
    };
}audio_spdif_out_1_cs_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_l:32;
    };
}audio_spdif_out_1_cs_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_l:32;
    };
}audio_spdif_out_1_cs_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_l:32;
    };
}audio_spdif_out_1_cs_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  cs_byte_7_5_r:22;
    };
}audio_spdif_out_1_cs_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_r:32;
    };
}audio_spdif_out_1_cs_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_r:32;
    };
}audio_spdif_out_1_cs_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_r:32;
    };
}audio_spdif_out_1_cs_13_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_r:32;
    };
}audio_spdif_out_1_cs_14_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  dummy18006180_19_17:3;
        RBus_UInt32  hw_agc_en:1;
        RBus_UInt32  ob_time:16;
    };
}audio_sif_agc_eval_cnt_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:13;
        RBus_UInt32  non_opt_cnt_th:3;
        RBus_UInt32  non_opt_cnt_under:8;
        RBus_UInt32  non_opt_cnt_ovf:8;
    };
}audio_sif_agc_optimal_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  ovf_th:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  opt_th:10;
    };
}audio_sif_agc_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  ovf:1;
        RBus_UInt32  opt:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  abs_peak:10;
    };
}audio_sif_agc_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  agc2_debounce_cnt:3;
        RBus_UInt32  agc2_stepsize:2;
        RBus_UInt32  agc2_gain_a:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  agc2_gain_b:6;
        RBus_UInt32  agc2_obtime:16;
    };
}audio_sif_agc2_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc2_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  agc2_overflow:1;
        RBus_UInt32  agc2_underflow:1;
        RBus_UInt32  res2:18;
        RBus_UInt32  agc2_sif_mag:10;
    };
}audio_sif_agc2_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  sif_sel:1;
        RBus_UInt32  aagc_en:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  audio_gain_manual:9;
        RBus_UInt32  res3:2;
        RBus_UInt32  output_bpf_input_div2:2;
        RBus_UInt32  audio_bp_sel:8;
        RBus_UInt32  res4:2;
        RBus_UInt32  audio_upsample_lp_sel:2;
    };
}audio_sif_agc3_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  soft_reset:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  audiodn_fifo_clr:1;
        RBus_UInt32  res3:2;
        RBus_UInt32  audiodn_fifo_full:1;
        RBus_UInt32  audiodn_fifo_empty:1;
        RBus_UInt32  res4:3;
        RBus_UInt32  audiodbg_fifo_clr:1;
        RBus_UInt32  audiodbg_fifo_full:1;
        RBus_UInt32  audiodbg_fifo_empty:1;
        RBus_UInt32  debug_mode2:2;
        RBus_UInt32  res5:12;
    };
}audio_sif_agc3_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  pdetect_enable:1;
        RBus_UInt32  detect_source_sel:4;
    };
}audio_peak_contorl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  opt_th_l:16;
        RBus_UInt32  ovf_th_l:16;
    };
}audio_peak_contorl_l_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy180061b4_31_19:13;
        RBus_UInt32  nonopt_cnt_tr_l:3;
        RBus_UInt32  res1:2;
        RBus_UInt32  vpp_eval_cnt_l:14;
    };
}audio_peak_control_l_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  optimize_l_irq_en:1;
        RBus_UInt32  overflow_l_irq_en:1;
        RBus_UInt32  res1:6;
        RBus_UInt32  optimize_l:1;
        RBus_UInt32  overflow_l:1;
        RBus_UInt32  pk_adj_l:6;
        RBus_UInt32  magnitude_l:16;
    };
}audio_peak_status_l_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  toggle_cnt:8;
        RBus_UInt32  pcm_l_monitor:24;
    };
}audio_peak_status_l_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  opt_th_r:16;
        RBus_UInt32  ovf_th_r:16;
    };
}audio_peak_contorl_r_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy180061c4_31_19:13;
        RBus_UInt32  nonopt_cnt_tr_r:3;
        RBus_UInt32  res1:2;
        RBus_UInt32  vpp_eval_cnt_r:14;
    };
}audio_peak_contorl_r_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  optimize_r_irq_en:1;
        RBus_UInt32  overflow_r_irq_en:1;
        RBus_UInt32  res1:6;
        RBus_UInt32  optimize_r:1;
        RBus_UInt32  overflow_r:1;
        RBus_UInt32  pk_adj_r:6;
        RBus_UInt32  magnitude_r:16;
    };
}audio_peak_status_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  pcm_r_monitor:24;
    };
}audio_peak_status_r_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  msd_en:1;
        RBus_UInt32  update_en:1;
        RBus_UInt32  carrier_shift_scan_en:1;
        RBus_UInt32  carrier_phase_delta:3;
        RBus_UInt32  msd_reset_n:1;
        RBus_UInt32  msd_debounce_cnt:3;
        RBus_UInt32  reg_scan_cnt:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  mn_priority:2;
        RBus_UInt32  dkl_priority:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  calc_time_sel:1;
        RBus_UInt32  sound_select:2;
        RBus_UInt32  res4:1;
        RBus_UInt32  fw_scan_freq:3;
    };
}audio_msd_crtl_word_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  deviation_unnormal:2;
        RBus_UInt32  case_subtomain:4;
        RBus_UInt32  res2:1;
        RBus_UInt32  flag_unnormal:1;
        RBus_UInt32  flag_subtomain:1;
        RBus_UInt32  h_dv_th_sel:1;
        RBus_UInt32  res3:3;
        RBus_UInt32  hw_detected_std:5;
        RBus_UInt32  res4:3;
        RBus_UInt32  reg_std:5;
    };
}audio_msd_result_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  bw_cnt_max:5;
        RBus_UInt32  res2:3;
        RBus_UInt32  bw_cnt_min:5;
        RBus_UInt32  res3:4;
        RBus_UInt32  shift_value:4;
        RBus_UInt32  res4:1;
        RBus_UInt32  main_cari_idx:3;
        RBus_UInt32  deviation:4;
    };
}audio_msd_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  main_thresh:16;
        RBus_UInt32  main_thresh_low:16;
    };
}audio_main_tone_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  main_thresh_hd:16;
        RBus_UInt32  main_thresh_hd_low:16;
    };
}audio_main_tone_threshold_hd_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bw_dev_thresh_hd:16;
        RBus_UInt32  bw_dev_thresh:16;
    };
}audio_bw_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bw_dev_thresh_low:16;
        RBus_UInt32  main_sub_ratio:16;
    };
}audio_main_sub_ratio_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_4_5:16;
    };
}audio_msd_mag_4_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_4_28:16;
    };
}audio_msd_mag_4_28_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_4_72:16;
    };
}audio_msd_mag_4_72_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_5_5:16;
    };
}audio_msd_mag_5_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_5_25:16;
    };
}audio_msd_mag_5_25_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_5_74:16;
    };
}audio_msd_mag_5_74_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_5_85:16;
    };
}audio_msd_carrier_5_85_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_5_95:16;
    };
}audio_msd_carrier_5_95_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_6:16;
    };
}audio_msd_mag_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_6_25:16;
    };
}audio_msd_mag_6_25_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_6_5:16;
    };
}audio_msd_carrier_6_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_6_552:16;
    };
}audio_msd_mag_6_552_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_mag_6_74:16;
    };
}audio_msd_carrier_6_74_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:17;
        RBus_UInt32  flag_fw_4:1;
        RBus_UInt32  flag_fw_3:1;
        RBus_UInt32  flag_fw_2:1;
        RBus_UInt32  flag_fw_1:1;
        RBus_UInt32  flag_fw:1;
        RBus_UInt32  flag_4_5:1;
        RBus_UInt32  flag_5_5:1;
        RBus_UInt32  flag_6:1;
        RBus_UInt32  flag_6_5:1;
        RBus_UInt32  flag_4_72:1;
        RBus_UInt32  flag_5_74:1;
        RBus_UInt32  flag_5_85:1;
        RBus_UInt32  flag_6_25:1;
        RBus_UInt32  flag_6_552:1;
        RBus_UInt32  flag_6_74:1;
    };
}audio_msd_flags_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  fw_phase_delta:14;
        RBus_UInt32  reg_mag_fw:16;
    };
}audio_msd_programmable_freq_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh:16;
        RBus_UInt32  fw_thresh_low:16;
    };
}audio_threshold_msd_carrier_fw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  fw_phase_delta_1:14;
        RBus_UInt32  reg_mag_fw_1:16;
    };
}audio_msd_programmable_freq_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh_1:16;
        RBus_UInt32  fw_thresh_1_low:16;
    };
}audio_threshold_msd_carrier_fw_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  fw_phase_delta_2:14;
        RBus_UInt32  reg_mag_fw_2:16;
    };
}audio_msd_programmable_freq_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh_2:16;
        RBus_UInt32  fw_thresh_2_low:16;
    };
}audio_threshold_msd_carrier_fw_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  fw_phase_delta_3:14;
        RBus_UInt32  reg_mag_fw_3:16;
    };
}audio_msd_programmable_freq_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh_3:16;
        RBus_UInt32  fw_thresh_3_low:16;
    };
}audio_threshold_msd_carrier_fw_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  fw_phase_delta_4:14;
        RBus_UInt32  reg_mag_fw_4:16;
    };
}audio_msd_programmable_freq_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh_4:16;
        RBus_UInt32  fw_thresh_4_low:16;
    };
}audio_threshold_msd_carrier_fw_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  reg_cari_sft_detect_en:1;
        RBus_UInt32  reg_bw_detect_en:1;
        RBus_UInt32  mono_std_sel:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  second_reg_std:5;
    };
}audio_msd_second_reg_std_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sec_thresh:16;
        RBus_UInt32  sec_thresh_low:16;
    };
}audio_second_main_tone_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  rme_0:1;
        RBus_UInt32  rm_0:4;
    };
}audio_msd_bist_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_45_fix:16;
        RBus_UInt32  reg_mag_55_fix:16;
    };
}audio_msd_main_mag_ori1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_60_fix:16;
        RBus_UInt32  reg_mag_65_fix:16;
    };
}audio_msd_main_mag_ori2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  msd_gain_en:1;
        RBus_UInt32  msd_gain_result:4;
    };
}audio_msd_gain_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_update_count:16;
        RBus_UInt32  msd_update_count:16;
    };
}audio_msd_update_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  md_update_count:16;
        RBus_UInt32  res1:13;
        RBus_UInt32  hw_mode_en:1;
        RBus_UInt32  mode_result:2;
    };
}audio_mode_detect_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  enable:1;
        RBus_UInt32  bpf_sel:1;
        RBus_UInt32  high_threshold:2;
        RBus_UInt32  low_threshold:2;
        RBus_UInt32  auto_pre_gain_ctrl_en:1;
        RBus_UInt32  auto_gain_ctrl_en:1;
        RBus_UInt32  max_threshold:24;
    };
}audio_md_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gain_result_pre:4;
        RBus_UInt32  gain_result:4;
        RBus_UInt32  max_other:24;
    };
}audio_md_status_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  lpf_coef_sel:2;
        RBus_UInt32  lpf_coef_sel_lock:2;
        RBus_UInt32  mode_result:2;
        RBus_UInt32  max_dual:24;
    };
}audio_md_status_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy1800631c_31_27:5;
        RBus_UInt32  debounce_time:3;
        RBus_UInt32  max_stereo:24;
    };
}audio_md_status_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gain_win:16;
        RBus_UInt32  pre_gain_win:16;
    };
}audio_md_gain_window_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  md_limit_thre:24;
    };
}audio_md_limit_thre_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sif_data_source:1;
        RBus_UInt32  nicam_play_ana_sel:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  tone_det_en:1;
        RBus_UInt32  force_a2_dk_sel:2;
        RBus_UInt32  freq_manual_en:1;
        RBus_UInt32  res2:10;
        RBus_UInt32  phase_3rd_delta:14;
    };
}audio_carrier_freq_deviation_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  main_phase_delta:14;
        RBus_UInt32  res2:2;
        RBus_UInt32  sub_phase_delta:14;
    };
}audio_carrier_phase_delta_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fm_magnitude:16;
        RBus_UInt32  dummy18006358_15_0:16;
    };
}audio_a2_eiaj_dc_filter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  dvol_apply_tvd:1;
        RBus_UInt32  dvol_enable_tvd:1;
        RBus_UInt32  mode_sel_tvd:1;
        RBus_UInt32  force_mute_tvd:1;
        RBus_UInt32  switch_status_tvd:2;
        RBus_UInt32  zcto_status_tvd:1;
        RBus_UInt32  zcth_tvd:5;
        RBus_UInt32  dvcm_tvd:2;
        RBus_UInt32  zcto_mute_tvd:3;
        RBus_UInt32  ramp_step_mute_tvd:2;
        RBus_UInt32  delay_ctrl_tvd:10;
    };
}audio_tvdemod_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  vol_a_tvd:5;
        RBus_UInt32  delay_ctrl_unmute_tvd:10;
        RBus_UInt32  vol_b_tvd:6;
        RBus_UInt32  delay_ctrl_mute_tvd:10;
    };
}audio_tvdemod_digital_volume_control_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_bp1_a1:16;
        RBus_UInt32  eq_tvd_bp1_a2:16;
    };
}audio_eq_tvd_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_tvd_bp1_h0:16;
    };
}audio_eq_tvd_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_bp2_a1:16;
        RBus_UInt32  eq_tvd_bp2_a2:16;
    };
}audio_eq_tvd_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_tvd_bp2_h0:16;
    };
}audio_eq_tvd_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:28;
        RBus_UInt32  eq_tvd_deq_enable:1;
        RBus_UInt32  eq_tvd_lp_enable:1;
        RBus_UInt32  eq_tvd_band2_enable:1;
        RBus_UInt32  eq_tvd_band1_enable:1;
    };
}audio_eq_tvd_bp_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:29;
        RBus_UInt32  eq_tvd_lp_of:1;
        RBus_UInt32  eq_tvd_band2_of:1;
        RBus_UInt32  eq_tvd_band1_of:1;
    };
}audio_eq_tvd_bp_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_lp_a1:16;
        RBus_UInt32  eq_tvd_lp_h0:16;
    };
}audio_eq_tvd_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  dummy18006360_7_4:4;
        RBus_UInt32  am_bpf_bw:1;
        RBus_UInt32  am_path_sel:1;
        RBus_UInt32  hw_am_prescale:2;
    };
}audio_am_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  rme_0:1;
        RBus_UInt32  rm_0:4;
    };
}audio_bist_am_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage1_b0:16;
        RBus_UInt32  sap_bpf_stage1_b1:16;
    };
}audio_sap_bpf_stage1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  sap_bpf_stage1_b2:16;
    };
}audio_sap_bpf_stage1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage1_a1:16;
        RBus_UInt32  sap_bpf_stage1_a2:16;
    };
}audio_sap_bpf_stage1_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage2_b0:16;
        RBus_UInt32  sap_bpf_stage2_b1:16;
    };
}audio_sap_bpf_stage2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  sap_bpf_stage2_b2:16;
    };
}audio_sap_bpf_stage2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage2_a1:16;
        RBus_UInt32  sap_bpf_stage2_a2:16;
    };
}audio_sap_bpf_stage2_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage3_b0:16;
        RBus_UInt32  sap_bpf_stage3_b1:16;
    };
}audio_sap_bpf_stage3_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  sap_bpf_stage3_b2:16;
    };
}audio_sap_bpf_stage3_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage3_a1:16;
        RBus_UInt32  sap_bpf_stage3_a2:16;
    };
}audio_sap_bpf_stage3_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lock_reference:1;
        RBus_UInt32  fm_radio_en:1;
        RBus_UInt32  fm_radio_deem_sel:1;
        RBus_UInt32  fm_radio_deem_bypass:1;
        RBus_UInt32  bypass_com_hpf:1;
        RBus_UInt32  bypass_com_bpf:1;
        RBus_UInt32  pilot_hithresh:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  pilot_lothresh:10;
    };
}audio_btsc_pilot_thres_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:13;
        RBus_UInt32  pilot_lock_reset:1;
        RBus_UInt32  out_hpf_en:1;
        RBus_UInt32  w1pilotpresent:1;
        RBus_UInt32  w1pilotlocked:1;
        RBus_UInt32  pilot_level_pass:1;
        RBus_UInt32  pilot_hi_pass:1;
        RBus_UInt32  pilot_lo_refuse:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  w10pilotmagnitude:10;
    };
}audio_btsc_pilot_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  sap_hithresh:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  sap_lothresh:10;
    };
}audio_btsc_sap_thresh_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  sap_noise_hi_thresh:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  sap_noise_lo_thresh:10;
    };
}audio_btsc_sap_noise_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  w10sapnoise:10;
    };
}audio_btsc_sap_noise_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:17;
        RBus_UInt32  w1sapqualitygood:1;
        RBus_UInt32  sap_hi_pass:1;
        RBus_UInt32  sap_lo_refuse:1;
        RBus_UInt32  sap_noise_flag:1;
        RBus_UInt32  sap_compen_en:1;
        RBus_UInt32  w10sapmagnitude:10;
    };
}audio_btsc_sap_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  sap_debounce_en:1;
        RBus_UInt32  sap_debounce:4;
    };
}audio_btsc_sap_debounce_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  fm_mag_overflow:1;
        RBus_UInt32  fm_mag_optimize:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  w10fmmagnitude:10;
    };
}audio_btsc_sif_fm_magnitude_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:28;
        RBus_UInt32  testoutputselect:4;
    };
}audio_btsc_test_mux_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  dummy_6424:16;
    };
}audio_btsc_dummy_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pilot_phase_delta:32;
    };
}audio_btsc_pilot_phase_delta_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  unlock_p_gain:4;
        RBus_UInt32  unlock_i_gain:4;
        RBus_UInt32  locked_p_gain:4;
        RBus_UInt32  locked_i_gain:4;
    };
}audio_phase_error_pi_gain_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_hpf_en:1;
        RBus_UInt32  mono_lpf_sel:1;
        RBus_UInt32  stereo_lpf_sel:1;
        RBus_UInt32  res1:5;
        RBus_UInt32  phase_err_threshold:24;
    };
}audio_phase_err_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  phase_err_high_threshold:24;
    };
}audio_phase_err_threshold2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  freq_correction:22;
    };
}audio_freq_correction_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  average_movement:24;
    };
}audio_phase_error_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  a2_bw_sel:2;
        RBus_UInt32  de_emphasis_time:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  hdv_compen_en:1;
        RBus_UInt32  down_6db:1;
        RBus_UInt32  res2:10;
        RBus_UInt32  a2_sub_bw_sel:2;
        RBus_UInt32  res3:1;
        RBus_UInt32  fm1_deviation_gain:3;
        RBus_UInt32  res4:1;
        RBus_UInt32  fm2_deviation_gain:3;
        RBus_UInt32  res5:4;
    };
}audio_a2_eiaj_demod_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  magnitude_sub:10;
        RBus_UInt32  noise_sub:10;
    };
}audio_a2_eiaj_mag_noise_sub_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  magnitude:10;
        RBus_UInt32  noise:10;
    };
}audio_a2_eiaj_mag_noise_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_7:4;
        RBus_UInt32  rm_6:4;
        RBus_UInt32  rm_5:4;
        RBus_UInt32  rm_4:4;
        RBus_UInt32  rm_3:4;
        RBus_UInt32  rm_2:4;
        RBus_UInt32  rm_1:4;
        RBus_UInt32  rm_0:4;
    };
}audio_mbist_a2_eiaj_demod_rm_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:28;
        RBus_UInt32  rm_8:4;
    };
}audio_mbist_a2_eiaj_demod_rm_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:23;
        RBus_UInt32  rme_8:1;
        RBus_UInt32  rme_7:1;
        RBus_UInt32  rme_6:1;
        RBus_UInt32  rme_5:1;
        RBus_UInt32  rme_4:1;
        RBus_UInt32  rme_3:1;
        RBus_UInt32  rme_2:1;
        RBus_UInt32  rme_1:1;
        RBus_UInt32  rme_0:1;
    };
}audio_mbist_a2_eiaj_demod_rme_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  psf_sel:1;
        RBus_UInt32  tr_lpf_kp:3;
        RBus_UInt32  psf_bg_sel:1;
        RBus_UInt32  cr_lpf_kp:3;
        RBus_UInt32  res1:2;
        RBus_UInt32  cr_lpf_ki:2;
        RBus_UInt32  tr_timing_step:20;
    };
}audio_nicam_demod_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  enable:1;
        RBus_UInt32  debounce_cnt:3;
        RBus_UInt32  res1:2;
        RBus_UInt32  window_size:10;
        RBus_UInt32  res2:10;
        RBus_UInt32  gain_adjust:6;
    };
}audio_nicam_dagc_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  high:16;
        RBus_UInt32  low:16;
    };
}audio_nicam_dagc_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  magnitude:16;
    };
}audio_nicam_dagc_mag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  data_channel_sel:1;
        RBus_UInt32  pcm_l_out_sel:1;
        RBus_UInt32  pcm_r_out_sel:1;
        RBus_UInt32  cib_1:1;
        RBus_UInt32  cib_0:1;
        RBus_UInt32  cib_mask:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  status_debounce_cnt:4;
        RBus_UInt32  bypass_interpol:1;
        RBus_UInt32  sat_en:1;
        RBus_UInt32  de_em_by_pass:1;
        RBus_UInt32  dummy_0:1;
        RBus_UInt32  level_sel:2;
        RBus_UInt32  dummy18006510_13_2:12;
        RBus_UInt32  nicam_to_mute_clk_sel:1;
        RBus_UInt32  nicam_to_mono_clk_sel:1;
    };
}audio_nicam_decode_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  c0:1;
        RBus_UInt32  c1c2c3:3;
        RBus_UInt32  c4:1;
        RBus_UInt32  additional_data:11;
        RBus_UInt32  res1:2;
        RBus_UInt32  bit_cnt_sync:1;
        RBus_UInt32  true_detect:1;
        RBus_UInt32  bit_error_rate:12;
    };
}audio_nicam_decode_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  enable:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  c4_hi_ber:2;
        RBus_UInt32  analog_flag:1;
        RBus_UInt32  hi_ber_debounce:3;
        RBus_UInt32  high_threshold:12;
        RBus_UInt32  low_threshold:12;
    };
}audio_nicam_auto_switch_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  enable:1;
        RBus_UInt32  dur_rand_en:1;
        RBus_UInt32  duration:2;
        RBus_UInt32  res1:5;
        RBus_UInt32  ted_error_threshold:3;
        RBus_UInt32  res2:2;
        RBus_UInt32  ted_error:18;
    };
}audio_nicam_demod_auto_recovery_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  bit_error_rate_l:12;
        RBus_UInt32  bit_error_rate_r:12;
    };
}audio_nicam_bit_error_rate_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  window_en:1;
        RBus_UInt32  l_start:6;
        RBus_UInt32  l_end:6;
        RBus_UInt32  r_start:6;
        RBus_UInt32  r_end:6;
    };
}audio_nicam_ber_window_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_ch7_source:2;
        RBus_UInt32  fifo_ch6_source:2;
        RBus_UInt32  fifo_ch5_source:2;
        RBus_UInt32  fifo_ch4_source:2;
        RBus_UInt32  fifo_ch3_source:2;
        RBus_UInt32  fifo_ch2_source:2;
        RBus_UInt32  fifo_ch1_source:2;
        RBus_UInt32  fifo_ch0_source:2;
        RBus_UInt32  res1:12;
        RBus_UInt32  output_hold_zero:1;
        RBus_UInt32  backend_play_en:1;
        RBus_UInt32  downsample_en:1;
        RBus_UInt32  down_rate:1;
    };
}audio_down_sample_control_for_playback_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  fifo_ch67_sel:4;
        RBus_UInt32  fifo_ch45_sel:4;
        RBus_UInt32  fifo_ch23_sel:4;
        RBus_UInt32  fifo_ch01_sel:4;
    };
}audio_down_sample_fifo_source_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006558_31_14:18;
        RBus_UInt32  res1:14;
    };
}audio_down_sample_mbist_recoding_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:32;
    };
}audio_down_sample_fifo_pre_scale_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_7:4;
        RBus_UInt32  rm_6:4;
        RBus_UInt32  rm_5:4;
        RBus_UInt32  rm_4:4;
        RBus_UInt32  rm_3:4;
        RBus_UInt32  rm_2:4;
        RBus_UInt32  rm_1:4;
        RBus_UInt32  rm_0:4;
    };
}audio_down_sample_mbist_rm_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_15:4;
        RBus_UInt32  rm_14:4;
        RBus_UInt32  rm_13:4;
        RBus_UInt32  rm_12:4;
        RBus_UInt32  rm_11:4;
        RBus_UInt32  rm_10:4;
        RBus_UInt32  rm_9:4;
        RBus_UInt32  rm_8:4;
    };
}audio_down_sample_mbist_rm_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  rme_15:1;
        RBus_UInt32  rme_14:1;
        RBus_UInt32  rme_13:1;
        RBus_UInt32  rme_12:1;
        RBus_UInt32  rme_11:1;
        RBus_UInt32  rme_10:1;
        RBus_UInt32  rme_9:1;
        RBus_UInt32  rme_8:1;
        RBus_UInt32  rme_7:1;
        RBus_UInt32  rme_6:1;
        RBus_UInt32  rme_5:1;
        RBus_UInt32  rme_4:1;
        RBus_UInt32  rme_3:1;
        RBus_UInt32  rme_2:1;
        RBus_UInt32  rme_1:1;
        RBus_UInt32  rme_0:1;
    };
}audio_down_sample_mbist_rme_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  catch_data_mode:1;
        RBus_UInt32  fifo_ch2_source:2;
        RBus_UInt32  fifo_ch3_source:2;
        RBus_UInt32  fifo_ch23_sel:4;
        RBus_UInt32  fifo_ch0_source:2;
        RBus_UInt32  fifo_ch1_source:2;
        RBus_UInt32  fifo_ch01_sel:4;
        RBus_UInt32  fifo_ch4_source:2;
        RBus_UInt32  fifo_ch5_source:2;
        RBus_UInt32  fifo_ch45_sel:4;
        RBus_UInt32  output_hold_zero:1;
        RBus_UInt32  backend_play_en:1;
        RBus_UInt32  downsample_en:1;
        RBus_UInt32  down_rate:1;
    };
}audio_down_sample_control_for_ts_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy180065a4_31_16:16;
        RBus_UInt32  rm_3:4;
        RBus_UInt32  rm_2:4;
        RBus_UInt32  rm_1:4;
        RBus_UInt32  rm_0:4;
    };
}audio_ts_ds_fifo_mbist_rm_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:28;
        RBus_UInt32  rme_3:1;
        RBus_UInt32  rme_2:1;
        RBus_UInt32  rme_1:1;
        RBus_UInt32  rme_0:1;
    };
}audio_ts_ds_fifo_mbist_rme_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  fifo_ch0_source:2;
        RBus_UInt32  fifo_ch1_source:2;
        RBus_UInt32  fifo_ch01_sel:4;
        RBus_UInt32  res2:8;
        RBus_UInt32  output_hold_zero:1;
        RBus_UInt32  backend_play_en:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:1;
    };
}audio_fifo_control_for_arc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_wr_src_sel:2;
        RBus_UInt32  dma_w_format:2;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  arb_req_1:1;
        RBus_UInt32  res1:10;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  hbr_nonpcm:1;
        RBus_UInt32  pre_fifo_en:1;
        RBus_UInt32  pcm_random:1;
        RBus_UInt32  wr_channel_no:3;
        RBus_UInt32  aidmatype:1;
        RBus_UInt32  int_wr_en:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  dma_soft_wr_rst:1;
        RBus_UInt32  dma_write_enable:1;
        RBus_UInt32  overflow_dma_status:1;
        RBus_UInt32  wr_intr_dma_status:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  res2:1;
    };
}audio_adma_csr_pbw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  write_len:15;
        RBus_UInt32  res2:1;
        RBus_UInt32  wr_intr_point:15;
    };
}audio_adma_wconf_pbw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  wr_buffer_length:15;
        RBus_UInt32  load_wr:1;
        RBus_UInt32  avail_length:15;
    };
}audio_adma_wrconf_pbw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wr_start_addr:26;
        RBus_UInt32  res1:2;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  ch_sel:3;
    };
}audio_adma_wsadr_pbw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_wr_src_sel:2;
        RBus_UInt32  dma_w_format:2;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  arb_req_3:1;
        RBus_UInt32  res1:10;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  hbr_nonpcm:1;
        RBus_UInt32  pre_fifo_en:1;
        RBus_UInt32  pcm_random:1;
        RBus_UInt32  wr_channel_no:3;
        RBus_UInt32  aidmatype:1;
        RBus_UInt32  int_wr_en:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  dma_soft_wr_rst:1;
        RBus_UInt32  dma_write_enable:1;
        RBus_UInt32  overflow_dma_status:1;
        RBus_UInt32  wr_intr_dma_status:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  res2:1;
    };
}audio_adma_csr_tsw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  write_len:15;
        RBus_UInt32  res2:1;
        RBus_UInt32  wr_intr_point:15;
    };
}audio_adma_wconf_tsw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  wr_buffer_length:15;
        RBus_UInt32  load_wr:1;
        RBus_UInt32  avail_length:15;
    };
}audio_adma_wrconf_tsw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wr_start_addr:26;
        RBus_UInt32  res1:2;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  ch_sel:3;
    };
}audio_adma_wsadr_tsw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_wr_src_sel:2;
        RBus_UInt32  dma_w_format:2;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  arb_req_5:1;
        RBus_UInt32  res1:10;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  hbr_nonpcm:1;
        RBus_UInt32  pre_fifo_en:1;
        RBus_UInt32  pcm_random:1;
        RBus_UInt32  wr_channel_no:3;
        RBus_UInt32  aidmatype:1;
        RBus_UInt32  int_wr_en:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  dma_soft_wr_rst:1;
        RBus_UInt32  dma_write_enable:1;
        RBus_UInt32  overflow_dma_status:1;
        RBus_UInt32  wr_intr_dma_status:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  res2:1;
    };
}audio_adma_csr_arcw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  write_len:15;
        RBus_UInt32  res2:1;
        RBus_UInt32  wr_intr_point:15;
    };
}audio_adma_wconf_arcw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  wr_buffer_length:15;
        RBus_UInt32  load_wr:1;
        RBus_UInt32  avail_length:15;
    };
}audio_adma_wrconf_arcw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wr_start_addr:26;
        RBus_UInt32  res1:2;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  ch_sel:3;
    };
}audio_adma_wsadr_arcw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_output_src_sel:2;
        RBus_UInt32  dma_r_format:1;
        RBus_UInt32  output_hold_en:1;
        RBus_UInt32  cur_st:2;
        RBus_UInt32  empty_gnt:1;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  arb_req_1:1;
        RBus_UInt32  res1:8;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  rdma_to_en:1;
        RBus_UInt32  nonpcm_1_buf_en:1;
        RBus_UInt32  rd_channel_no:3;
        RBus_UInt32  aodmatype:1;
        RBus_UInt32  int_rd_en:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  dma_soft_rd_rst:1;
        RBus_UInt32  dma_read_enable:1;
        RBus_UInt32  unflow_dma_status:1;
        RBus_UInt32  rd_intr_dma_status:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  res2:1;
    };
}audio_adma_csr_pbr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  read_len:15;
        RBus_UInt32  res2:1;
        RBus_UInt32  read_intr_point:15;
    };
}audio_adma_rconf_pbr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  rd_buffer_length:15;
        RBus_UInt32  load_rd:1;
        RBus_UInt32  read_length:15;
    };
}audio_adma_wrconf_pbr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rd_start_addr:26;
        RBus_UInt32  res1:2;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  ch_sel:3;
    };
}audio_adma_rsadr_pbr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_output_src_sel:2;
        RBus_UInt32  dma_r_format:1;
        RBus_UInt32  output_hold_en:1;
        RBus_UInt32  cur_st:2;
        RBus_UInt32  empty_gnt:1;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  arb_req_3:1;
        RBus_UInt32  res1:8;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  rdma_to_en:1;
        RBus_UInt32  nonpcm_1_buf_en:1;
        RBus_UInt32  rd_channel_no:3;
        RBus_UInt32  aodmatype:1;
        RBus_UInt32  int_rd_en:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  dma_soft_rd_rst:1;
        RBus_UInt32  dma_read_enable:1;
        RBus_UInt32  unflow_dma_status:1;
        RBus_UInt32  rd_intr_dma_status:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  res2:1;
    };
}audio_adma_csr_tsr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  read_len:15;
        RBus_UInt32  res2:1;
        RBus_UInt32  read_intr_point:15;
    };
}audio_adma_rconf_tsr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  rd_buffer_length:15;
        RBus_UInt32  load_rd:1;
        RBus_UInt32  read_length:15;
    };
}audio_adma_wrconf_tsr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rd_start_addr:26;
        RBus_UInt32  res1:2;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  ch_sel:3;
    };
}audio_adma_rsadr_tsr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_output_src_sel:2;
        RBus_UInt32  dma_r_format:1;
        RBus_UInt32  output_hold_en:1;
        RBus_UInt32  cur_st:2;
        RBus_UInt32  empty_gnt:1;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  arb_req_5:1;
        RBus_UInt32  res1:8;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  rdma_to_en:1;
        RBus_UInt32  nonpcm_1_buf_en:1;
        RBus_UInt32  rd_channel_no:3;
        RBus_UInt32  aodmatype:1;
        RBus_UInt32  int_rd_en:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  dma_soft_rd_rst:1;
        RBus_UInt32  dma_read_enable:1;
        RBus_UInt32  unflow_dma_status:1;
        RBus_UInt32  rd_intr_dma_status:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  res2:1;
    };
}audio_adma_csr_arcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  read_len:15;
        RBus_UInt32  res2:1;
        RBus_UInt32  read_intr_point:15;
    };
}audio_adma_rconf_arcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  rd_buffer_length:15;
        RBus_UInt32  load_rd:1;
        RBus_UInt32  read_length:15;
    };
}audio_adma_wrconf_arcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rd_start_addr:26;
        RBus_UInt32  res1:2;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  ch_sel:3;
    };
}audio_adma_rsadr_arcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_up_limit:29;
        RBus_UInt32  res1:3;
    };
}audio_awdma_rule_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_low_limit:29;
        RBus_UInt32  res1:3;
    };
}audio_awdma_rule1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006668_31_10:22;
        RBus_UInt32  max_outstanding:2;
        RBus_UInt32  dummy18006668_7_3:5;
        RBus_UInt32  rtk_wr_soft_rst:1;
        RBus_UInt32  force_all_rst:1;
        RBus_UInt32  dma_enable:1;
    };
}audio_awdma_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  dma_cmd_water:3;
        RBus_UInt32  res2:8;
        RBus_UInt32  dma_data_water:4;
        RBus_UInt32  res3:5;
        RBus_UInt32  cur_outstanding:3;
        RBus_UInt32  res4:3;
        RBus_UInt32  soft_rst_before_cmd_finish:1;
        RBus_UInt32  soft_rst_with_data_left:1;
        RBus_UInt32  data_fifo_underflow_err:1;
        RBus_UInt32  exceed_range_err:1;
        RBus_UInt32  zero_length_err:1;
    };
}audio_awdma_status0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ack_num_error:1;
        RBus_UInt32  last_no_ack_error:1;
        RBus_UInt32  res1:6;
        RBus_UInt32  target_ack_num:8;
        RBus_UInt32  last_ack_num:8;
        RBus_UInt32  selected_bl:8;
    };
}audio_awdma_status1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  selected_addr:29;
        RBus_UInt32  res1:1;
        RBus_UInt32  addr_bl_sel:2;
    };
}audio_awdma_status2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  monitor_en:1;
        RBus_UInt32  monitor_conti:1;
        RBus_UInt32  res1:5;
        RBus_UInt32  reach_thd:1;
        RBus_UInt32  res2:4;
        RBus_UInt32  monitor_thd:4;
        RBus_UInt32  res3:12;
        RBus_UInt32  highest_water_level:4;
    };
}audio_awdma_monitor_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_up_limit:29;
        RBus_UInt32  res1:3;
    };
}audio_ardma_rule0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_low_limit:29;
        RBus_UInt32  res1:3;
    };
}audio_ardma_rule1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006684_31_14:18;
        RBus_UInt32  rdma_to_dly:4;
        RBus_UInt32  max_outstanding:2;
        RBus_UInt32  arb_rst_dly:5;
        RBus_UInt32  rtk_rd_soft_rst:1;
        RBus_UInt32  force_all_rst:1;
        RBus_UInt32  dma_enable:1;
    };
}audio_ardma_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  dma_cmd_water:3;
        RBus_UInt32  res2:8;
        RBus_UInt32  dma_data_water:4;
        RBus_UInt32  res3:5;
        RBus_UInt32  cur_outstanding:3;
        RBus_UInt32  res4:3;
        RBus_UInt32  soft_rst_before_cmd_finish:1;
        RBus_UInt32  soft_rst_with_data_left:1;
        RBus_UInt32  data_fifo_overflow_err:1;
        RBus_UInt32  exceed_range_err:1;
        RBus_UInt32  zero_length_err:1;
    };
}audio_ardma_status0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ack_num_error:1;
        RBus_UInt32  last_no_ack_error:1;
        RBus_UInt32  res1:6;
        RBus_UInt32  target_ack_num:8;
        RBus_UInt32  last_ack_num:8;
        RBus_UInt32  selected_bl:8;
    };
}audio_ardma_status1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  selected_addr:29;
        RBus_UInt32  res1:1;
        RBus_UInt32  addr_bl_sel:2;
    };
}audio_ardma_status2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  monitor_en:1;
        RBus_UInt32  monitor_conti:1;
        RBus_UInt32  res1:5;
        RBus_UInt32  reach_thd:1;
        RBus_UInt32  res2:4;
        RBus_UInt32  monitor_thd:4;
        RBus_UInt32  res3:12;
        RBus_UInt32  lowest_water_level:4;
    };
}audio_ardma_monitor_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ls_on:1;
        RBus_UInt32  test0:1;
        RBus_UInt32  test1:1;
        RBus_UInt32  test2:1;
        RBus_UInt32  test3:1;
        RBus_UInt32  test4:1;
        RBus_UInt32  test5:1;
        RBus_UInt32  pb_wr_ena_sel:1;
        RBus_UInt32  ts_wr_ena_sel:1;
        RBus_UInt32  arc_wr_ena_sel:1;
        RBus_UInt32  res1:22;
    };
}audio_audio_dma_bist_control_indicate_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  rme_5:1;
        RBus_UInt32  rm_5:4;
        RBus_UInt32  rme_4:1;
        RBus_UInt32  rm_4:4;
        RBus_UInt32  rme_3:1;
        RBus_UInt32  rm_3:4;
        RBus_UInt32  rme_2:1;
        RBus_UInt32  rm_2:4;
        RBus_UInt32  rme_1:1;
        RBus_UInt32  rm_1:4;
        RBus_UInt32  rme_0:1;
        RBus_UInt32  rm_0:4;
    };
}audio_audio_dma_bist_control_indicate2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  test_dma_en:1;
        RBus_UInt32  res1:24;
        RBus_UInt32  test_dma_in_sel:3;
        RBus_UInt32  res2:3;
        RBus_UInt32  eco_ifd_inv:1;
    };
}audio_test_dma_control_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  res2:1;
        RBus_UInt32  reg_pb_protect:1;
        RBus_UInt32  distortion_enable:1;
        RBus_UInt32  avc2_enable:1;
        RBus_UInt32  basic_premium_sel:1;
        RBus_UInt32  dvol_enable:1;
        RBus_UInt32  loud_enable:1;
        RBus_UInt32  deq_enable:1;
        RBus_UInt32  spatial_ctrlenable:1;
        RBus_UInt32  auto_volenable:1;
    };
}audio_hw_process_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc_vol_detect:2;
        RBus_UInt32  avc_noise_gain:2;
        RBus_UInt32  avc_noise_thre:8;
        RBus_UInt32  avc_level_max:8;
        RBus_UInt32  avc_level_min:8;
        RBus_UInt32  avc_down_db:2;
        RBus_UInt32  avc_up_db:2;
    };
}audio_auto_volume_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  avc_cnt_thre:10;
        RBus_UInt32  avc_zc_win:10;
        RBus_UInt32  avc_mon_win:10;
    };
}audio_avc_volume_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc_vol_amplif_enable:1;
        RBus_UInt32  avc1_coef:3;
        RBus_UInt32  avc_small_level_max:8;
        RBus_UInt32  avc_small_level_min:8;
        RBus_UInt32  avc_small_down_db:2;
        RBus_UInt32  avc_small_up_db:2;
        RBus_UInt32  avc_small_cnt_thre:8;
    };
}audio_avc_volume_control_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  avc_small_level:16;
    };
}audio_avc_volume_control_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  spatial_zc_win:12;
        RBus_UInt32  spatial_zc_apply:1;
        RBus_UInt32  apf_en:1;
        RBus_UInt32  psb_en:1;
        RBus_UInt32  seb_en:1;
        RBus_UInt32  spatial_in_l_sel:1;
        RBus_UInt32  spatial_in_r_sel:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  f_coef:9;
    };
}audio_spatial_effect_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  depth1:9;
        RBus_UInt32  res2:7;
        RBus_UInt32  depth2:9;
    };
}audio_spatial_effect_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:15;
        RBus_UInt32  eq_hp_slope:1;
        RBus_UInt32  eq_hp_a1:16;
    };
}audio_eq_hp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_lp_a1:16;
        RBus_UInt32  eq_lp_h0:16;
    };
}audio_eq_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp1_a1:16;
        RBus_UInt32  eq_bp1_a2:16;
    };
}audio_eq_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_bp1_h0:16;
    };
}audio_eq_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp2_a1:16;
        RBus_UInt32  eq_bp2_a2:16;
    };
}audio_eq_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_bp2_h0:16;
    };
}audio_eq_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp3_a1:16;
        RBus_UInt32  eq_bp3_a2:16;
    };
}audio_eq_bp3_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_bp3_h0:16;
    };
}audio_eq_bp3_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp4_a1:16;
        RBus_UInt32  eq_bp4_a2:16;
    };
}audio_eq_bp4_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_bp4_h0:16;
    };
}audio_eq_bp4_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp5_a1:16;
        RBus_UInt32  eq_bp5_a2:16;
    };
}audio_eq_bp5_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_bp5_h0:16;
    };
}audio_eq_bp5_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp6_a1:16;
        RBus_UInt32  eq_bp6_a2:16;
    };
}audio_eq_bp6_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_bp6_h0:16;
    };
}audio_eq_bp6_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp7_a1:16;
        RBus_UInt32  eq_bp7_a2:16;
    };
}audio_eq_bp7_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_bp7_h0:16;
    };
}audio_eq_bp7_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp8_a1:16;
        RBus_UInt32  eq_bp8_a2:16;
    };
}audio_eq_bp8_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_bp8_h0:16;
    };
}audio_eq_bp8_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp9_a1:16;
        RBus_UInt32  eq_bp9_a2:16;
    };
}audio_eq_bp9_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  eq_bp9_h0:16;
    };
}audio_eq_bp9_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  eq_band9_enable:1;
        RBus_UInt32  eq_band8_enable:1;
        RBus_UInt32  eq_band7_enable:1;
        RBus_UInt32  eq_band6_enable:1;
        RBus_UInt32  eq_band5_enable:1;
        RBus_UInt32  eq_band4_enable:1;
        RBus_UInt32  eq_band3_enable:1;
        RBus_UInt32  eq_band2_enable:1;
        RBus_UInt32  eq_band1_enable:1;
        RBus_UInt32  eq_lp_enable:1;
        RBus_UInt32  eq_hp_enable:1;
    };
}audio_eq_control_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  reg_change_flag:1;
        RBus_UInt32  reg_time_out_flag_r:1;
        RBus_UInt32  reg_time_out_flag_l:1;
        RBus_UInt32  reg_detect_win:10;
        RBus_UInt32  reg_wait_ctrl:4;
        RBus_UInt32  res2:3;
        RBus_UInt32  reg_cross_compare_ctrl:2;
        RBus_UInt32  reg_zc_cross_mux:1;
        RBus_UInt32  reg_eq_force_zero:1;
        RBus_UInt32  reg_bypass_protect_en:1;
        RBus_UInt32  reg_eq_bypass_en:1;
    };
}audio_eq_bypass_control_register_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:17;
        RBus_UInt32  reg_eq_path_threshold:15;
    };
}audio_eq_bypass_control_register_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  eq_band9_of:1;
        RBus_UInt32  eq_band8_of:1;
        RBus_UInt32  eq_band7_of:1;
        RBus_UInt32  eq_band6_of:1;
        RBus_UInt32  eq_band5_of:1;
        RBus_UInt32  eq_band4_of:1;
        RBus_UInt32  eq_band3_of:1;
        RBus_UInt32  eq_band2_of:1;
        RBus_UInt32  eq_band1_of:1;
        RBus_UInt32  eq_lp_of:1;
        RBus_UInt32  eq_hp_of:1;
    };
}audio_eq_status_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lr_loud_lp0_a1:16;
        RBus_UInt32  lr_loud_lp0_h0:16;
    };
}audio_lr_loud_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lr_loud_bp1_a1:16;
        RBus_UInt32  lr_loud_bp1_a2:16;
    };
}audio_lr_loud_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  lr_loud_bp1_h0:16;
    };
}audio_lr_loud_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lr_loud_bp2_a1:16;
        RBus_UInt32  lr_loud_bp2_a2:16;
    };
}audio_lr_loud_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  lr_loud_bp2_h0:16;
    };
}audio_lr_loud_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  csw_loud_lp0_a1:16;
        RBus_UInt32  csw_loud_lp0_h0:16;
    };
}audio_csw_loud_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  csw_loud_bp1_a1:16;
        RBus_UInt32  csw_loud_bp1_a2:16;
    };
}audio_csw_loud_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  csw_loud_bp1_h0:16;
    };
}audio_csw_loud_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  csw_loud_bp2_a1:16;
        RBus_UInt32  csw_loud_bp2_a2:16;
    };
}audio_csw_loud_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  csw_loud_bp2_h0:16;
    };
}audio_csw_loud_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsrs_loud_lp0_a1:16;
        RBus_UInt32  lsrs_loud_lp0_h0:16;
    };
}audio_lsrs_loud_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsrs_loud_bp1_a1:16;
        RBus_UInt32  lsrs_loud_bp1_a2:16;
    };
}audio_lsrs_loud_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  lsrs_loud_bp1_h0:16;
    };
}audio_lsrs_loud_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsrs_loud_bp2_a1:16;
        RBus_UInt32  lsrs_loud_bp2_a2:16;
    };
}audio_lsrs_loud_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  lsrs_loud_bp2_h0:16;
    };
}audio_lsrs_loud_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:23;
        RBus_UInt32  ld_lpf_en_lsrs:1;
        RBus_UInt32  ld_bpf1_en_lsrs:1;
        RBus_UInt32  ld_bpf2_en_lsrs:1;
        RBus_UInt32  ld_lpf_en_csw:1;
        RBus_UInt32  ld_bpf1_en_csw:1;
        RBus_UInt32  ld_bpf2_en_csw:1;
        RBus_UInt32  ld_lpf_en_lr:1;
        RBus_UInt32  ld_bpf1_en_lr:1;
        RBus_UInt32  ld_bpf2_en_lr:1;
    };
}audio_loudness_control_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:23;
        RBus_UInt32  ld_lpf_of_lsrs:1;
        RBus_UInt32  ld_bpf1_of_lsrs:1;
        RBus_UInt32  ld_bpf2_of_lsrs:1;
        RBus_UInt32  ld_lpf_of_csw:1;
        RBus_UInt32  ld_bpf1_of_csw:1;
        RBus_UInt32  ld_bpf2_of_csw:1;
        RBus_UInt32  ld_lpf_of_lr:1;
        RBus_UInt32  ld_bpf1_of_lr:1;
        RBus_UInt32  ld_bpf2_of_lr:1;
    };
}audio_loudness_status_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  reg_in_thre:5;
        RBus_UInt32  reg_zero_in_en:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  zcth:5;
        RBus_UInt32  res3:2;
        RBus_UInt32  dvcm:2;
    };
}audio_digital_volume_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dvol_apply:1;
        RBus_UInt32  zcto:3;
        RBus_UInt32  ramp_step:2;
        RBus_UInt32  delay_ctrl:10;
        RBus_UInt32  mute_apply:1;
        RBus_UInt32  zcto_mute:3;
        RBus_UInt32  ramp_step_mute:2;
        RBus_UInt32  delay_ctrl_mute:10;
    };
}audio_digital_volume_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mute_l:1;
        RBus_UInt32  rep_l_status:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  hpf_l_enable:1;
        RBus_UInt32  vol_l_ready:1;
        RBus_UInt32  vol_l_a:5;
        RBus_UInt32  vol_l_b:6;
        RBus_UInt32  mute_r:1;
        RBus_UInt32  rep_r_status:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  hpf_r_enable:1;
        RBus_UInt32  vol_r_ready:1;
        RBus_UInt32  vol_r_a:5;
        RBus_UInt32  vol_r_b:6;
    };
}audio_lr_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mute_ls:1;
        RBus_UInt32  rep_ls_status:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  hpf_ls_enable:1;
        RBus_UInt32  vol_ls_ready:1;
        RBus_UInt32  vol_ls_a:5;
        RBus_UInt32  vol_ls_b:6;
        RBus_UInt32  mute_rs:1;
        RBus_UInt32  rep_rs_status:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  hpf_rs_enable:1;
        RBus_UInt32  vol_rs_ready:1;
        RBus_UInt32  vol_rs_a:5;
        RBus_UInt32  vol_rs_b:6;
    };
}audio_lsrs_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mute_c:1;
        RBus_UInt32  rep_c_status:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  hpf_c_enable:1;
        RBus_UInt32  vol_c_ready:1;
        RBus_UInt32  vol_c_a:5;
        RBus_UInt32  vol_c_b:6;
        RBus_UInt32  mute_sw:1;
        RBus_UInt32  rep_sw_status:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  hpf_sw_enable:1;
        RBus_UInt32  vol_sw_ready:1;
        RBus_UInt32  vol_sw_a:5;
        RBus_UInt32  vol_sw_b:6;
    };
}audio_csw_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:30;
        RBus_UInt32  zcto_status:1;
        RBus_UInt32  double_buffer_ack:1;
    };
}audio_double_buffer_ack_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_nr_det_only:1;
        RBus_UInt32  avc2_vol_amplif_enable:1;
        RBus_UInt32  avc2_lpf_coef:3;
        RBus_UInt32  avc2_vol_detect:2;
        RBus_UInt32  fast_recov_ctrl:1;
        RBus_UInt32  slow_up_db:2;
        RBus_UInt32  fast_up_db:2;
        RBus_UInt32  down_db:2;
        RBus_UInt32  avc2_noise_gain:2;
        RBus_UInt32  avc2_noise_thre:16;
    };
}audio_avc2_control_1_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_nr_mute:1;
        RBus_UInt32  avc2_nr_flag:1;
        RBus_UInt32  avc2_cnt_thre:10;
        RBus_UInt32  avc2_zc_win:10;
        RBus_UInt32  avc2_mon_win:10;
    };
}audio_avc2_control_2_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_noise_thre_hi:16;
        RBus_UInt32  recov_win_max:8;
        RBus_UInt32  recov_win_min:8;
    };
}audio_avc2_control_3_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_level_max:16;
        RBus_UInt32  avc2_level_min:16;
    };
}audio_avc2_control_4_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  avc2_small_up_db:2;
        RBus_UInt32  avc2_small_down_db:2;
        RBus_UInt32  avc2_small_cnt_thre:8;
    };
}audio_avc2_control_5_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_small_level_max:16;
        RBus_UInt32  avc2_small_level_min:16;
    };
}audio_avc2_control_6_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  avc2_small_level:31;
    };
}audio_avc2_control_7_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_nr_det_only_lsrs:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  avc2_lpf_coef_lsrs:3;
        RBus_UInt32  avc2_vol_detect_lsrs:2;
        RBus_UInt32  fast_recov_ctrl_lsrs:1;
        RBus_UInt32  slow_up_db_lsrs:2;
        RBus_UInt32  fast_up_db_lsrs:2;
        RBus_UInt32  down_db_lsrs:2;
        RBus_UInt32  avc2_noise_gain_lsrs:2;
        RBus_UInt32  avc2_noise_thre_lsrs:16;
    };
}audio_avc2_control_1_ch23_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_nr_mute_lsrs:1;
        RBus_UInt32  avc2_nr_flag_lsrs:1;
        RBus_UInt32  avc2_cnt_thre_lsrs:10;
        RBus_UInt32  avc2_zc_win_lsrs:10;
        RBus_UInt32  avc2_mon_win_lsrs:10;
    };
}audio_avc2_control_2_ch23_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_noise_thre_hi_lsrs:16;
        RBus_UInt32  recov_win_max_lsrs:8;
        RBus_UInt32  recov_win_min_lsrs:8;
    };
}audio_avc2_control_3_ch23_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_level_max_lsrs:16;
        RBus_UInt32  avc2_level_min_lsrs:16;
    };
}audio_avc2_control_4_ch23_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_nr_det_only_csw:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  avc2_lpf_coef_csw:3;
        RBus_UInt32  avc2_vol_detect_csw:2;
        RBus_UInt32  fast_recov_ctrl_csw:1;
        RBus_UInt32  slow_up_db_csw:2;
        RBus_UInt32  fast_up_db_csw:2;
        RBus_UInt32  down_db_csw:2;
        RBus_UInt32  avc2_noise_gain_csw:2;
        RBus_UInt32  avc2_noise_thre_csw:16;
    };
}audio_avc2_control_1_ch45_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_nr_mute_csw:1;
        RBus_UInt32  avc2_nr_flag_csw:1;
        RBus_UInt32  avc2_cnt_thre_csw:10;
        RBus_UInt32  avc2_zc_win_csw:10;
        RBus_UInt32  avc2_mon_win_csw:10;
    };
}audio_avc2_control_2_ch45_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_noise_thre_hi_csw:16;
        RBus_UInt32  recov_win_max_csw:8;
        RBus_UInt32  recov_win_min_csw:8;
    };
}audio_avc2_control_3_ch45_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_level_max_csw:16;
        RBus_UInt32  avc2_level_min_csw:16;
    };
}audio_avc2_control_4_ch45_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_nr_det_only_ch67:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  avc2_lpf_coef_ch67:3;
        RBus_UInt32  avc2_vol_detect_ch67:2;
        RBus_UInt32  fast_recov_ctrl_ch67:1;
        RBus_UInt32  slow_up_db_ch67:2;
        RBus_UInt32  fast_up_db_ch67:2;
        RBus_UInt32  down_db_ch67:2;
        RBus_UInt32  avc2_noise_gain_ch67:2;
        RBus_UInt32  avc2_noise_thre_ch67:16;
    };
}audio_avc2_control_1_ch67_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_nr_mute_ch67:1;
        RBus_UInt32  avc2_nr_flag_ch67:1;
        RBus_UInt32  avc2_cnt_thre_ch67:10;
        RBus_UInt32  avc2_zc_win_ch67:10;
        RBus_UInt32  avc2_mon_win_ch67:10;
    };
}audio_avc2_control_2_ch67_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_noise_thre_hi_ch67:16;
        RBus_UInt32  recov_win_max_ch67:8;
        RBus_UInt32  recov_win_min_ch67:8;
    };
}audio_avc2_control_3_ch67_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_level_max_ch67:16;
        RBus_UInt32  avc2_level_min_ch67:16;
    };
}audio_avc2_control_4_ch67_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  hw_mixing_sel:2;
        RBus_UInt32  w_ch_01_factor:2;
        RBus_UInt32  w_ch_mix_factor:2;
    };
}audio_hw_out_trans_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  eq_ovf_en:1;
        RBus_UInt32  loudness_ovf_en:1;
        RBus_UInt32  dvol_int_en:1;
        RBus_UInt32  res2:12;
        RBus_UInt32  dvol_done:1;
        RBus_UInt32  eq_ovf:1;
        RBus_UInt32  loudness_ovf:1;
    };
}audio_system_int_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  avc_lp_out:24;
    };
}audio_avc_lp_out_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006818_31_0:32;
    };
}audio_dummy_6718_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy1800681c_31_0:32;
    };
}audio_dummy_671c_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ch67_scale_a:4;
        RBus_UInt32  res1:1;
        RBus_UInt32  ch67_scale_b:3;
        RBus_UInt32  ch45_scale_a:4;
        RBus_UInt32  res2:1;
        RBus_UInt32  ch45_scale_b:3;
        RBus_UInt32  ch23_scale_a:4;
        RBus_UInt32  res3:1;
        RBus_UInt32  ch23_scale_b:3;
        RBus_UInt32  ch01_scale_a:4;
        RBus_UInt32  res4:1;
        RBus_UInt32  ch01_scale_b:3;
    };
}audio_hw_in_pre_scale_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dist_vol_detect:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  dist_down_db_fine:2;
        RBus_UInt32  dist_down_db:2;
        RBus_UInt32  res2:1;
        RBus_UInt32  dist_coef:3;
        RBus_UInt32  dist_high_thre:8;
        RBus_UInt32  dist_low_thre:8;
        RBus_UInt32  dist_up_db_fine:2;
        RBus_UInt32  dist_up_db:2;
    };
}audio_hw_distortion_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  dist_cnt_thre:10;
        RBus_UInt32  dist_zc_win:10;
        RBus_UInt32  dist_mon_win:10;
    };
}audio_hw_distortion_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_count_reset:1;
        RBus_UInt32  avc2_detect_samples:15;
        RBus_UInt32  avc2_hi_threshold:16;
    };
}audio_avc2_distortion_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  avc2_count_l:15;
        RBus_UInt32  avc2_max_energy_l:16;
    };
}audio_avc2_distortion_status_l_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  avc2_count_r:15;
        RBus_UInt32  avc2_max_energy_r:16;
    };
}audio_avc2_distortion_status_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  step_mag_thre:8;
        RBus_UInt32  step_cnt_high_thre:8;
        RBus_UInt32  step_cnt_low_thre:8;
    };
}audio_hw_distortion_control_gain_step_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lrrr_dvol_apply:1;
        RBus_UInt32  lrrr_zcto:3;
        RBus_UInt32  lrrr_ramp_step:2;
        RBus_UInt32  lrrr_delay_ctrl:10;
        RBus_UInt32  lrrr_mute_apply:1;
        RBus_UInt32  lrrr_zcto_mute:3;
        RBus_UInt32  lrrr_ramp_step_mute:2;
        RBus_UInt32  lrrr_delay_ctrl_mute:10;
    };
}audio_lrrr_digital_volume_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  lrrr_dvol_enable:1;
        RBus_UInt32  lrrr_zcto_status:1;
        RBus_UInt32  lrrr_zcth:5;
        RBus_UInt32  res2:2;
        RBus_UInt32  lrrr_dvcm:2;
    };
}audio_lrrr_digital_volume_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mute_lr:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  hpf_lr_enable:1;
        RBus_UInt32  vol_lr_ready:1;
        RBus_UInt32  vol_lr_a:5;
        RBus_UInt32  vol_lr_b:6;
        RBus_UInt32  mute_rr:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  hpf_rr_enable:1;
        RBus_UInt32  vol_rr_ready:1;
        RBus_UInt32  vol_rr_a:5;
        RBus_UInt32  vol_rr_b:6;
    };
}audio_lrrr_digital_volume_control_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy1800690c_31_0:32;
    };
}audio_ts_ds_mbist_recoding_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:29;
        RBus_UInt32  down_sample_rate:2;
        RBus_UInt32  vol_source_sel:1;
    };
}audio_dvol_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  sif_adc_in_test_en:1;
        RBus_UInt32  sif_adc_in_test_sel:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  debug_mode_sel:9;
    };
}audio_test_pattern_gen_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  audio_crc_header:24;
    };
}audio_crc_header_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  audio_crc_en:1;
        RBus_UInt32  audio_crc_ch_sel:3;
        RBus_UInt32  audio_crc_frame_length:16;
    };
}audio_crc_contorl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  audio_crc_done:1;
        RBus_UInt32  audio_crc:24;
    };
}audio_crc_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sine_auto_chk_en:1;
        RBus_UInt32  sine_channel_select:3;
        RBus_UInt32  res1:3;
        RBus_UInt32  auto_chk_result:1;
        RBus_UInt32  half_sine_num:2;
        RBus_UInt32  amplitude_low_threshold:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  zc_sample_cnt_threshold:6;
        RBus_UInt32  zc_sample_cnt_golden:12;
    };
}audio_sine_auto_chk_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  sine_amplitude:8;
        RBus_UInt32  zc_sample_cnt:12;
    };
}audio_sine_wave_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006a18_31_0:32;
    };
}audio_pattern_gen_dummy_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  rbus_timeout_thr:10;
        RBus_UInt32  dummy18006a50_3_1:3;
        RBus_UInt32  to_ack_en:1;
    };
}audio_rbus_ack_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:19;
        RBus_UInt32  ack_fail_rw:1;
        RBus_UInt32  ack_fail_addr:12;
    };
}audio_ack_fail_info_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pcr_earc_delta:32;
    };
}audio_aud_90k_cnt_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:15;
        RBus_UInt32  pcr_90k_cnt:17;
    };
}audio_aud_90k_cnt_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pcr_earc_counter_en:1;
        RBus_UInt32  aud_pcr_a_b_sel:1;
        RBus_UInt32  res1:11;
        RBus_UInt32  sw_rate:11;
        RBus_UInt32  res2:1;
        RBus_UInt32  time_interval_sel:3;
        RBus_UInt32  data_rate_sel:4;
    };
}audio_aud_90k_cnt_ctrl3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:28;
        RBus_UInt32  audio_bist_mode_dma:1;
        RBus_UInt32  audio_bist_mode_a2_eiaj:1;
        RBus_UInt32  audio_bist_mode_am:1;
        RBus_UInt32  audio_bist_mode_msd:1;
    };
}audio_audio_bist_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:28;
        RBus_UInt32  audio_bist_done_dma:1;
        RBus_UInt32  audio_bist_done_a2_eiaj:1;
        RBus_UInt32  audio_bist_done_am:1;
        RBus_UInt32  audio_bist_done_msd:1;
    };
}audio_audio_bist_done_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:8;
        RBus_UInt32  audio_bist_fail_group_dma:1;
        RBus_UInt32  audio_bist_fail_group_a2_eiaj:1;
        RBus_UInt32  audio_bist_fail_group_am:1;
        RBus_UInt32  audio_bist_fail_group_msd:1;
    };
}audio_audio_bist_fail_group_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:17;
        RBus_UInt32  audio_bist_dma_fail_5:1;
        RBus_UInt32  audio_bist_dma_fail_4:1;
        RBus_UInt32  audio_bist_dma_fail_3:1;
        RBus_UInt32  audio_bist_dma_fail_2:1;
        RBus_UInt32  audio_bist_dma_fail_1:1;
        RBus_UInt32  audio_bist_dma_fail_0:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_8:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_7:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_6:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_5:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_4:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_3:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_2:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_1:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_0:1;
    };
}audio_audio_bist_a2_eiaj_fail_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:8;
        RBus_UInt32  audio_drf_mode_dma:1;
        RBus_UInt32  audio_drf_mode_a2_eiaj:1;
        RBus_UInt32  audio_drf_mode_am:1;
        RBus_UInt32  audio_drf_mode_msd:1;
    };
}audio_audio_drf_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:8;
        RBus_UInt32  audio_drf_resume_dma:1;
        RBus_UInt32  audio_drf_resume_a2_eiaj:1;
        RBus_UInt32  audio_drf_resume_am:1;
        RBus_UInt32  audio_drf_resume_msd:1;
    };
}audio_audio_drf_resume_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:8;
        RBus_UInt32  audio_drf_done_dma:1;
        RBus_UInt32  audio_drf_done_a2_eiaj:1;
        RBus_UInt32  audio_drf_done_am:1;
        RBus_UInt32  audio_drf_done_msd:1;
    };
}audio_audio_drf_done_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:8;
        RBus_UInt32  audio_drf_pause_dma:1;
        RBus_UInt32  audio_drf_pause_a2_eiaj:1;
        RBus_UInt32  audio_drf_pause_am:1;
        RBus_UInt32  audio_drf_pause_msd:1;
    };
}audio_audio_drf_pause_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:8;
        RBus_UInt32  audio_drf_fail_group_dma:1;
        RBus_UInt32  audio_drf_fail_group_a2_eiaj:1;
        RBus_UInt32  audio_drf_fail_group_am:1;
        RBus_UInt32  audio_drf_fail_group_msd:1;
    };
}audio_audio_drf_fail_group_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:17;
        RBus_UInt32  audio_drf_dma_fail_5:1;
        RBus_UInt32  audio_drf_dma_fail_4:1;
        RBus_UInt32  audio_drf_dma_fail_3:1;
        RBus_UInt32  audio_drf_dma_fail_2:1;
        RBus_UInt32  audio_drf_dma_fail_1:1;
        RBus_UInt32  audio_drf_dma_fail_0:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_8:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_7:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_6:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_5:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_4:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_3:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_2:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_1:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_0:1;
    };
}audio_audio_drf_a2_eiaj_fail_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_vr_adc2_dmicl_ri_fa_sel:1;
        RBus_UInt32  reg_vr_adc2_dmicr_ri_fa_sel:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  reg_vr_adc2_dmic_lpf2nd_fc_sel:1;
        RBus_UInt32  reg_vr_adc2_ad_hpf_en:1;
        RBus_UInt32  reg_vr_adc2_ad_comp_gain:2;
        RBus_UInt32  reg_vr_adc2_ad_gain_l:7;
        RBus_UInt32  reg_vr_adc2_ad_gain_r:7;
        RBus_UInt32  reg_vr_adc2_ad_mute_l:1;
        RBus_UInt32  reg_vr_adc2_ad_mute_r:1;
        RBus_UInt32  reg_vr_adc2_ad_zdet_tout:2;
        RBus_UInt32  reg_vr_adc2_ad_zdet_func:2;
        RBus_UInt32  reg_vr_adc2_dmic_boost_gain_l:2;
        RBus_UInt32  reg_vr_adc2_dmic_boost_gain_r:2;
    };
}audio_vr_adfilter_ctrl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_vr_adc3_dmicl_ri_fa_sel:1;
        RBus_UInt32  reg_vr_adc3_dmicr_ri_fa_sel:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  reg_vr_adc3_dmic_lpf2nd_fc_sel:1;
        RBus_UInt32  reg_vr_adc3_ad_hpf_en:1;
        RBus_UInt32  reg_vr_adc3_ad_comp_gain:2;
        RBus_UInt32  reg_vr_adc3_ad_gain_l:7;
        RBus_UInt32  reg_vr_adc3_ad_gain_r:7;
        RBus_UInt32  reg_vr_adc3_ad_mute_l:1;
        RBus_UInt32  reg_vr_adc3_ad_mute_r:1;
        RBus_UInt32  reg_vr_adc3_ad_zdet_tout:2;
        RBus_UInt32  reg_vr_adc3_ad_zdet_func:2;
        RBus_UInt32  reg_vr_adc3_dmic_boost_gain_l:2;
        RBus_UInt32  reg_vr_adc3_dmic_boost_gain_r:2;
    };
}audio_adfilter_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hw2asrc_en:1;
        RBus_UInt32  hw2asrc_underflow:1;
        RBus_UInt32  hw2asrc_overflow:1;
        RBus_UInt32  hw2asrc_empty:1;
        RBus_UInt32  hw2asrc_full:1;
        RBus_UInt32  reg_asrc_fifo_in_sel:2;
        RBus_UInt32  res1:14;
        RBus_UInt32  vr_out_lr_sync:1;
        RBus_UInt32  reg_vr_srcin_dahpf_en:1;
        RBus_UInt32  reg_vr_srcin_fb_ad_hpf_en:1;
        RBus_UInt32  reg_vr_srcin_out_ad_hpf_en:1;
        RBus_UInt32  reg_vr_srcin_dither_sel:3;
        RBus_UInt32  reg_vr_srcin_fb_ad_comp_gain:2;
        RBus_UInt32  reg_vr_srcin_out_ad_comp_gain:2;
    };
}audio_adfilter_ctrl_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_vr_adc2_dmic_lpf1st_en:1;
        RBus_UInt32  reg_vr_adc3_dmic_lpf1st_en:1;
        RBus_UInt32  reg_vr_adc2_src_en:1;
        RBus_UInt32  reg_vr_adc3_src_en:1;
        RBus_UInt32  reg_vr_adc2_dmic_lpf1st_fc_sel:3;
        RBus_UInt32  reg_vr_adc3_dmic_lpf1st_fc_sel:3;
        RBus_UInt32  adc4_dmic_lpf1st_fc_sel:3;
        RBus_UInt32  adc4_in_sel:1;
        RBus_UInt32  adc4_lr_sel:2;
    };
}audio_adfilter_dmic_src_reg_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc4_ad_comp_gain:2;
        RBus_UInt32  adc4_ad_gain_l:7;
        RBus_UInt32  adc4_ad_gain_r:7;
        RBus_UInt32  adc4_ad_hpf_en:1;
        RBus_UInt32  adc4_ad_mute_l:1;
        RBus_UInt32  adc4_ad_mute_r:1;
        RBus_UInt32  adc4_src_en:1;
        RBus_UInt32  adc4_ad_zdet_tout:2;
        RBus_UInt32  adc4_ad_zdet_func:2;
        RBus_UInt32  adc4_dmic_boost_gain_l:2;
        RBus_UInt32  adc4_dmic_boost_gain_r:2;
        RBus_UInt32  adc4_dmic_lpf1st_en:1;
        RBus_UInt32  adc4_dmic_lpf2nd_fc_sel:1;
        RBus_UInt32  adc4_dmicl_ri_fa_sel:1;
        RBus_UInt32  adc4_dmicr_ri_fa_sel:1;
    };
}audio_adfilter_src_4_reg_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dac0_gain_l:8;
        RBus_UInt32  dac0_gain_r:8;
        RBus_UInt32  dac1_gain_l:8;
        RBus_UInt32  dac1_gain_r:8;
    };
}audio_dafilter_src_reg_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:9;
        RBus_UInt32  da1_fifo_empty:1;
        RBus_UInt32  da1_fifo_full:1;
        RBus_UInt32  da1_fifo_empty_pending:1;
        RBus_UInt32  da1_fifo_full_pending:1;
        RBus_UInt32  da0_fifo_empty:1;
        RBus_UInt32  da0_fifo_full:1;
        RBus_UInt32  da0_fifo_empty_pending:1;
        RBus_UInt32  da0_fifo_full_pending:1;
        RBus_UInt32  daad_lp_en:1;
        RBus_UInt32  dac0_dither_sel:2;
        RBus_UInt32  dac0_hpf_en:1;
        RBus_UInt32  dac0_mute_l:1;
        RBus_UInt32  dac0_mute_r:1;
        RBus_UInt32  dac1_dither_sel:2;
        RBus_UInt32  dac1_hpf_en:1;
        RBus_UInt32  dac1_mute_l:1;
        RBus_UInt32  dac1_mute_r:1;
        RBus_UInt32  dac_zdet_tout:2;
        RBus_UInt32  dac_zdet_func:2;
    };
}audio_dafilter_src_reg_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dac1_hw_l_inverter_en:1;
        RBus_UInt32  dac1_hw_r_inverter_en:1;
        RBus_UInt32  dac1_hw_out_limiter_en:1;
        RBus_UInt32  dac1_hw_out_limiter:7;
        RBus_UInt32  dac1_pcm_source_sel:4;
        RBus_UInt32  dac0_swap_sel:2;
        RBus_UInt32  dac1_swap_sel:2;
        RBus_UInt32  dac0_hw_l_inverter_en:1;
        RBus_UInt32  dac0_hw_r_inverter_en:1;
        RBus_UInt32  dac0_hw_out_limiter_en:1;
        RBus_UInt32  dac0_hw_out_limiter:7;
        RBus_UInt32  dac0_pcm_source_sel:4;
    };
}audio_dac0_1_src_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_dvol_enable:1;
        RBus_UInt32  res1:13;
        RBus_UInt32  reg_in_thre:5;
        RBus_UInt32  reg_zero_in_en:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  zcth:5;
        RBus_UInt32  adc4_l_inverter_en:1;
        RBus_UInt32  adc4_r_inverter_en:1;
        RBus_UInt32  dvcm:2;
    };
}audio_adc_digital_volume_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dvol_apply:1;
        RBus_UInt32  zcto:3;
        RBus_UInt32  ramp_step:2;
        RBus_UInt32  delay_ctrl:10;
        RBus_UInt32  mute_apply:1;
        RBus_UInt32  zcto_mute:3;
        RBus_UInt32  ramp_step_mute:2;
        RBus_UInt32  delay_ctrl_mute:10;
    };
}audio_adc_digital_volume_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mute_l:1;
        RBus_UInt32  rep_l_status:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  hpf_l_enable:1;
        RBus_UInt32  vol_l_ready:1;
        RBus_UInt32  vol_l_a:5;
        RBus_UInt32  vol_l_b:6;
        RBus_UInt32  mute_r:1;
        RBus_UInt32  rep_r_status:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  hpf_r_enable:1;
        RBus_UInt32  vol_r_ready:1;
        RBus_UInt32  vol_r_a:5;
        RBus_UInt32  vol_r_b:6;
    };
}audio_adc_lr_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:30;
        RBus_UInt32  zcto_status:1;
        RBus_UInt32  double_buffer_ack:1;
    };
}audio_adc_double_buffer_ack_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  reg_bb_adcfe_muter:7;
        RBus_UInt32  res2:11;
        RBus_UInt32  reg_bb_adcfe_mutel:7;
    };
}audio_analog_frontend1_mute_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  reg_bb_adcfe2_muter:7;
        RBus_UInt32  res2:11;
        RBus_UInt32  reg_bb_adcfe2_mutel:7;
    };
}audio_analog_frontend2_mute_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_hpo_bias_sel:1;
        RBus_UInt32  res1:6;
        RBus_UInt32  reg_bb_hpo_mutel:7;
        RBus_UInt32  res2:6;
        RBus_UInt32  reg_bb_aio2_mutel:6;
        RBus_UInt32  reg_bb_aio1_mutel:6;
    };
}audio_analog_aio_hpout_lineout_l_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  reg_bb_hpo_muter:7;
        RBus_UInt32  res2:6;
        RBus_UInt32  reg_bb_aio2_muter:6;
        RBus_UInt32  reg_bb_aio1_muter:6;
    };
}audio_analog_aio_hpout_lineout_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  reg_bb_adcfe2_gsell:2;
        RBus_UInt32  reg_bb_adcfe2_gselr:2;
        RBus_UInt32  reg_bb_adcfe_gsell:2;
        RBus_UInt32  reg_bb_adcfe_gselr:2;
    };
}audio_adc_volume_gain_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  reg_bb_adcfe2_pow:1;
        RBus_UInt32  reg_bb_adc2_pow:1;
        RBus_UInt32  reg_bb_adcfe_pow:1;
        RBus_UInt32  reg_bb_adc_pow:1;
        RBus_UInt32  reg_bb_dac_pow:2;
        RBus_UInt32  reg_bb_mbias_pow:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:2;
        RBus_UInt32  reg_bb_hpo_pow:1;
        RBus_UInt32  reg_bb_aio1_pow:1;
        RBus_UInt32  reg_bb_aio2_pow:1;
        RBus_UInt32  res4:1;
    };
}audio_analog_power_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  reg_bb_hpo_hpmode:1;
        RBus_UInt32  reg_bb_adcfe_input_20k:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  option_gain:1;
        RBus_UInt32  fix_gain:4;
        RBus_UInt32  afe_pga_vol:9;
    };
}audio_analog_pga_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_isel_adc_vcm:2;
        RBus_UInt32  reg_bb_isel_vref:2;
        RBus_UInt32  reg_bb_isel_aio1:2;
        RBus_UInt32  reg_bb_isel_aio2:2;
        RBus_UInt32  reg_bb_isel_hpo:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  reg_bb_isel_depop:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  res3:2;
        RBus_UInt32  reg_bb_isel_dac:2;
        RBus_UInt32  res4:4;
        RBus_UInt32  res5:2;
        RBus_UInt32  reg_bb_isel_adcfe:2;
        RBus_UInt32  res6:2;
        RBus_UInt32  reg_bb_isel_adc_aa:2;
    };
}audio_analog_ci01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_isel_micbias:2;
        RBus_UInt32  reg_bb_isel_micbst:2;
        RBus_UInt32  res1:16;
        RBus_UInt32  reg_bb_adc2_ossel:2;
        RBus_UInt32  reg_bb_adc_ossel:2;
        RBus_UInt32  reg_bb_adc2_ckxen:1;
        RBus_UInt32  reg_bb_adc2_fset:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  reg_bb_adc_ckxen:1;
        RBus_UInt32  reg_bb_adc_fset:2;
        RBus_UInt32  res3:2;
    };
}audio_analog_ci02_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_isel_adc2_vcm:2;
        RBus_UInt32  res1:18;
        RBus_UInt32  reg_bb_isel_adc2_st2:2;
        RBus_UInt32  reg_bb_isel_adc2_st1:2;
        RBus_UInt32  reg_bb_isel_adc2_ref:2;
        RBus_UInt32  reg_bb_isel_adcfe2:2;
        RBus_UInt32  reg_bb_isel_adc2_comp:2;
        RBus_UInt32  reg_bb_isel_adc2_aa:2;
    };
}audio_analog_ci03_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:13;
        RBus_UInt32  reg_bb_refgen_vref_bypass:1;
        RBus_UInt32  reg_bb_refgen_vref_pow:1;
        RBus_UInt32  reg_bb_refgen_vrp_pow:1;
        RBus_UInt32  reg_bb_isel_refgen:2;
        RBus_UInt32  reg_bb_refgen_vref_vrefsel:2;
        RBus_UInt32  reg_bb_isel_adc_core:2;
        RBus_UInt32  reg_bb_hpo_endp:1;
        RBus_UInt32  reg_bb_aio_endp:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  reg_bb_dpramp_enramp:1;
        RBus_UInt32  bb_ck_depop_en:1;
        RBus_UInt32  sel_bb_ck_depop:3;
    };
}audio_analog_depop1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  reg_bb_dpramp_pow:1;
        RBus_UInt32  reg_bb_dpramp_csel:2;
        RBus_UInt32  reg_bb_hpo_normal:1;
        RBus_UInt32  reg_bb_aio1_normal:1;
        RBus_UInt32  reg_bb_aio2_normal:1;
        RBus_UInt32  res2:1;
    };
}audio_analog_depop2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  reg_bb_hpo_engl:1;
        RBus_UInt32  reg_bb_hpo_engr:1;
        RBus_UInt32  res2:20;
        RBus_UInt32  reg_bb_hpo_gsell:2;
        RBus_UInt32  reg_bb_hpo_gselr:2;
    };
}audio_analog_post_gain_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:32;
    };
}audio_analog_out_copy_swap_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_micbst_endfl:1;
        RBus_UInt32  reg_bb_micbst_endfr:1;
        RBus_UInt32  reg_bb_micbst_gsell:2;
        RBus_UInt32  reg_bb_micbst_gselr:2;
        RBus_UInt32  reg_bb_micbias_vset:1;
        RBus_UInt32  reg_bb_micbias_ocsel:2;
        RBus_UInt32  reg_bb_micbias_powshdt:1;
        RBus_UInt32  reg_bb_micbias_pow:1;
        RBus_UInt32  reg_bb_micbst_pow:2;
        RBus_UInt32  mic_short_det_conf:1;
        RBus_UInt32  mic_short_det_polarity:1;
        RBus_UInt32  mic_short_det_sticky_en:1;
        RBus_UInt32  mic_short_det_status:1;
        RBus_UInt32  reg_bb_micbias_oc:1;
        RBus_UInt32  reg_bb_micbias_enchx:1;
        RBus_UInt32  res1:13;
    };
}audio_amic1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:32;
    };
}audio_analog_gpio_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  reg_bb_micbst_enpdrl:1;
        RBus_UInt32  reg_bb_micbst_enpdrr:1;
        RBus_UInt32  res2:8;
        RBus_UInt32  res3:8;
        RBus_UInt32  res4:8;
    };
}audio_analog_reserved_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006b78_31_0:32;
    };
}audio_analog_dummy2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:19;
        RBus_UInt32  data_type:1;
        RBus_UInt32  data_type_chk_sel:2;
        RBus_UInt32  u_mode_sel:1;
        RBus_UInt32  hdmi_to_aud_testmode:2;
        RBus_UInt32  testmode_enable:1;
        RBus_UInt32  u_bit_prepare:1;
        RBus_UInt32  valid_flag:1;
        RBus_UInt32  hdmi_to_aud_ch_mode:3;
        RBus_UInt32  hdmi_to_aud_enable:1;
    };
}audio_hdmi_to_audio_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:28;
        RBus_UInt32  b_bit_err_flag:1;
        RBus_UInt32  hdmi_to_aud_ch_num:3;
    };
}audio_hdmi_to_audio_debug_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_lb3_31_30:2;
        RBus_UInt32  clock_accuracy:2;
        RBus_UInt32  sampling_freq:4;
        RBus_UInt32  channel_number:4;
        RBus_UInt32  source_number:4;
        RBus_UInt32  category_code:8;
        RBus_UInt32  mode:2;
        RBus_UInt32  pre_emphasis:3;
        RBus_UInt32  copyright:1;
        RBus_UInt32  data_type_l:1;
        RBus_UInt32  professional:1;
    };
}audio_hdmi_to_audio_cs_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  layout_channel_num:4;
        RBus_UInt32  cs_lb5_43:1;
        RBus_UInt32  cs_lb5_42:1;
        RBus_UInt32  cgms_a:2;
        RBus_UInt32  original_sampling_freq:4;
        RBus_UInt32  cs_lb4_35_32:4;
    };
}audio_hdmi_to_audio_cs_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  cs_byte_7_6_l:16;
    };
}audio_hdmi_to_audio_cs_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_l:32;
    };
}audio_hdmi_to_audio_cs_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_l:32;
    };
}audio_hdmi_to_audio_cs_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_l:32;
    };
}audio_hdmi_to_audio_cs_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_l:32;
    };
}audio_hdmi_to_audio_cs_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_rb3_31_30:2;
        RBus_UInt32  clock_accuracy_r:2;
        RBus_UInt32  sampling_freq_r:4;
        RBus_UInt32  channel_number_r:4;
        RBus_UInt32  source_number_r:4;
        RBus_UInt32  category_code_r:8;
        RBus_UInt32  mode_r:2;
        RBus_UInt32  pre_emphasis_r:3;
        RBus_UInt32  copyright_r:1;
        RBus_UInt32  data_type_r:1;
        RBus_UInt32  professional_r:1;
    };
}audio_hdmi_to_audio_cs_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  layout_channel_num_r:4;
        RBus_UInt32  cs_rb5_43:1;
        RBus_UInt32  cs_rb5_42:1;
        RBus_UInt32  cgms_a_r:2;
        RBus_UInt32  original_sampling_freq_r:4;
        RBus_UInt32  cs_rb4_35_32:4;
    };
}audio_hdmi_to_audio_cs_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  cs_byte_7_6_r:16;
    };
}audio_hdmi_to_audio_cs_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_r:32;
    };
}audio_hdmi_to_audio_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_r:32;
    };
}audio_hdmi_to_audio_cs_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_r:32;
    };
}audio_hdmi_to_audio_cs_13_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_r:32;
    };
}audio_hdmi_to_audio_cs_14_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_3_0:32;
    };
}audio_hdmi_to_audio_u_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_7_4:32;
    };
}audio_hdmi_to_audio_u_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_11_8:32;
    };
}audio_hdmi_to_audio_u_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_15_12:32;
    };
}audio_hdmi_to_audio_u_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_19_16:32;
    };
}audio_hdmi_to_audio_u_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_23_20:32;
    };
}audio_hdmi_to_audio_u_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_27_24:32;
    };
}audio_hdmi_to_audio_u_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_31_28:32;
    };
}audio_hdmi_to_audio_u_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_35_32:32;
    };
}audio_hdmi_to_audio_u_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_39_36:32;
    };
}audio_hdmi_to_audio_u_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_43_40:32;
    };
}audio_hdmi_to_audio_u_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  iu_byte_46_44:24;
    };
}audio_hdmi_to_audio_u_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdmi2aud_lock:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  aud_golden_mode:4;
        RBus_UInt32  detect_status:3;
        RBus_UInt32  hdmi2aud_dnum:16;
        RBus_UInt32  hw_lock_variation_en:1;
        RBus_UInt32  hw_lock_position:2;
        RBus_UInt32  debounce_en:1;
        RBus_UInt32  lock_mode:1;
    };
}audio_hdmi_to_audio_lock_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  fw_10ms_min:14;
        RBus_UInt32  res2:2;
        RBus_UInt32  fw_10ms_max:14;
    };
}audio_hdmi_to_audio_lock_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pattern_search_enable1:1;
        RBus_UInt32  pattern_search_catch1:1;
        RBus_UInt32  res1:15;
        RBus_UInt32  pattern_search_length1:15;
    };
}audio_hdmi_in_pattern_search1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  specific_pattern1:32;
    };
}audio_hdmi_in_pattern_set1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pattern_search_enable2:1;
        RBus_UInt32  pattern_search_catch2:1;
        RBus_UInt32  res1:15;
        RBus_UInt32  pattern_search_length2:15;
    };
}audio_hdmi_in_pattern_search2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  specific_pattern2:32;
    };
}audio_hdmi_in_pattern_set2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  papb_search_enable:1;
        RBus_UInt32  papb_search_catch:1;
        RBus_UInt32  res1:9;
        RBus_UInt32  papb_04_flag:1;
        RBus_UInt32  hbr_i2s_ch_no:3;
        RBus_UInt32  det_path_sel:1;
        RBus_UInt32  res2:16;
    };
}audio_hdmi_in_papb_search_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pd_val:16;
        RBus_UInt32  pc_val:16;
    };
}audio_hdmi_in_papb_val_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pb_val:16;
        RBus_UInt32  pa_val:16;
    };
}audio_hdmi_in_papb_val2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pc_val_buf:32;
    };
}audio_hdmi_in_papb_val3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pd_val_pat1:16;
        RBus_UInt32  pc_val_pat1:16;
    };
}audio_hdmi_in_pattern1_val_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pd_val_pat2:16;
        RBus_UInt32  pc_val_pat2:16;
    };
}audio_hdmi_in_pattern2_val_RBUS;

#else //apply LITTLE_ENDIAN

//======AUDIO register structure define==========

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sel_clk_dac1_fsi:2;
        RBus_UInt32  sel_clk_dac0_fsi:2;
        RBus_UInt32  sel_clk_adc_fsi:2;
        RBus_UInt32  play_r_adc_512fs_sel_arc:2;
        RBus_UInt32  div_arcdma_r_512fs:2;
        RBus_UInt32  sel_64fs:3;
        RBus_UInt32  sel_64fs_ts:3;
        RBus_UInt32  play_r_adc_512fs_sel_ts:2;
        RBus_UInt32  play_r_adc_512fs_sel:2;
        RBus_UInt32  div_tsdma_r_512fs:2;
        RBus_UInt32  div_dma_r_512fs:2;
        RBus_UInt32  sel_clk_vrloop_fsi:1;
        RBus_UInt32  frontend_clkgate_enable:1;
        RBus_UInt32  div_pre_512fs_ts:2;
        RBus_UInt32  dmic_clk_sel:2;
        RBus_UInt32  inv_ad_128fs:1;
        RBus_UInt32  inv_ad1_128fs:1;
    };
}audio_global_ctrl_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sel_clk_spdif_out_1:2;
        RBus_UInt32  sel_clk_spdif_out:2;
        RBus_UInt32  spdif_in_en:1;
        RBus_UInt32  spdif_out_en:1;
        RBus_UInt32  i2s_in_en:1;
        RBus_UInt32  i2s_out_en:1;
        RBus_UInt32  tv_demod_en:1;
        RBus_UInt32  div_earc_tx_512fs:2;
        RBus_UInt32  res1:1;
        RBus_UInt32  reg_pcr_clk_0_sel:2;
        RBus_UInt32  reg_pcr_clk_1_sel:2;
        RBus_UInt32  sel_clk_aud_mclk:2;
        RBus_UInt32  div_aud_mclk_512fs:2;
        RBus_UInt32  sel_aud_mclk_post:2;
        RBus_UInt32  aud_mclk_enable:1;
        RBus_UInt32  normal_psaud:1;
        RBus_UInt32  psaud_div_s1:1;
        RBus_UInt32  psaud_s2_sel:2;
        RBus_UInt32  sel_clk_earc_tx:2;
        RBus_UInt32  sel_clk_i2s_out:3;
    };
}audio_global_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sel_play_r_ck_source:2;
        RBus_UInt32  back_end_play_sample_rate:2;
        RBus_UInt32  sel_play_ck_source:2;
        RBus_UInt32  adc_512fs_sel:2;
        RBus_UInt32  sel_play_r_ck_source_ts:2;
        RBus_UInt32  back_end_ts_sample_rate:2;
        RBus_UInt32  sel_ts_ck_source:2;
        RBus_UInt32  adc_512fs_sel_ts:2;
        RBus_UInt32  spdif_nicam:1;
        RBus_UInt32  sel_play_r_ck_source_arc:2;
        RBus_UInt32  res1:1;
        RBus_UInt32  sif_adc_clk_en:1;
        RBus_UInt32  sif_adc_clk_sel:2;
        RBus_UInt32  hdv_mode_sel:1;
        RBus_UInt32  src_da_128fs_ts:1;
        RBus_UInt32  src_da_128fs:1;
        RBus_UInt32  inv_da_128fs_ts:1;
        RBus_UInt32  inv_da_128fs:1;
        RBus_UInt32  a2_eiaj_sram_on:1;
        RBus_UInt32  am_sram_on:1;
        RBus_UInt32  dac_sram_on:1;
        RBus_UInt32  adc_sram_on:1;
    };
}audio_global_ctrl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_para_a:6;
        RBus_UInt32  reg_para_b:7;
        RBus_UInt32  reg_para_d:5;
        RBus_UInt32  mod_acc_rst:1;
        RBus_UInt32  pll_spdif_auto_mode:1;
        RBus_UInt32  reg_smooth_en:1;
        RBus_UInt32  pll_spdif_dtrack_en:1;
        RBus_UInt32  ps_testmode:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  reg_para_e:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  div_2fs:2;
        RBus_UInt32  res3:1;
        RBus_UInt32  contword_inv:1;
    };
}audio_pllcg_spdif_gain_cr0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  p_gain_set2:10;
        RBus_UInt32  p_gain_set:10;
        RBus_UInt32  asrcin3_div_fsi:2;
        RBus_UInt32  asrcin2_div_fsi:2;
        RBus_UInt32  asrcin1_div_fsi:2;
        RBus_UInt32  asrcin0_div_fsi:2;
        RBus_UInt32  res1:4;
    };
}audio_pllcg_spdif_gain_cr1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  i_gain_set:10;
        RBus_UInt32  res1:22;
    };
}audio_pllcg_spdif_gain_cr2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  max_correct_range:4;
        RBus_UInt32  reach_time_num:3;
        RBus_UInt32  res1:25;
    };
}audio_pllcg_spdif_number_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  low_bound2:8;
        RBus_UInt32  high_bound2:8;
        RBus_UInt32  low_bound1:8;
        RBus_UInt32  high_bound1:8;
    };
}audio_pllcg_spdif_bound_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  freq_sel:2;
        RBus_UInt32  wdog_switch_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  freq_sel_1:2;
        RBus_UInt32  wdog_switch_en_1:1;
        RBus_UInt32  phase_contword:5;
        RBus_UInt32  res2:4;
        RBus_UInt32  inv_ck512fs_pll_spdif:1;
        RBus_UInt32  res3:2;
        RBus_UInt32  dummy18006024_31_19:13;
    };
}audio_global_dummy_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vr_asrcin_ftk_sdm_ini1:24;
        RBus_UInt32  vr_asrcin_ftk_loop_gain_sel1:2;
        RBus_UInt32  vr_asrcin_div_fsi:2;
        RBus_UInt32  vr_tcon_rst_n:1;
        RBus_UInt32  vr_tcon_clken:1;
        RBus_UInt32  res1:2;
    };
}audio_vr_ctrl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vr_dmic_1_en:1;
        RBus_UInt32  vr_dmic_1_clk_sel:4;
        RBus_UInt32  vr_srcin_out_sample_rate:4;
        RBus_UInt32  vr_srcin_fb_sample_rate:4;
        RBus_UInt32  vr_adc_3_sample_rate:4;
        RBus_UInt32  vr_adc_2_sample_rate:4;
        RBus_UInt32  vr_asrcin_ftk_n1:2;
        RBus_UInt32  vr_asrcin_ftk_m1:3;
        RBus_UInt32  vr_adc_2_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  vr_asrcin_fsi1_gating_en:1;
        RBus_UInt32  vr_asrcin_tcon_en1:1;
        RBus_UInt32  vr_srcin_en:1;
        RBus_UInt32  vr_adc_3_en:1;
    };
}audio_vr_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  average_value_1:7;
        RBus_UInt32  res1:1;
        RBus_UInt32  deta_1:7;
        RBus_UInt32  res2:1;
        RBus_UInt32  pll_64512_1_detect_en:1;
        RBus_UInt32  pll_64512fs_1_unstable:1;
        RBus_UInt32  cnt_debug_1:8;
        RBus_UInt32  res3:6;
    };
}audio_pll_64512_1_detect_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vr_dac_ana_1_en:1;
        RBus_UInt32  vr_dac_ana_0_en:1;
        RBus_UInt32  vr_dac_1_sample_rate:4;
        RBus_UInt32  vr_dac_0_sample_rate:4;
        RBus_UInt32  vr_dac_1_clk_gate_en:1;
        RBus_UInt32  vr_dac_0_clk_gate_en:1;
        RBus_UInt32  vr_dac_1_en:1;
        RBus_UInt32  vr_dac_0_en:1;
        RBus_UInt32  vr_osr_adc_sel:1;
        RBus_UInt32  vr_adc_ana_0_en:1;
        RBus_UInt32  vr_adc_4_sample_rate:4;
        RBus_UInt32  res1:8;
        RBus_UInt32  vr_adc_4_clk_gate_en:1;
        RBus_UInt32  vr_adc_4_en:1;
        RBus_UInt32  res2:2;
    };
}audio_tcon_reg_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  vr_asrcin_ftk_loop_gain_sel0:2;
        RBus_UInt32  vr_asrcin_fsi3_gating_en:1;
        RBus_UInt32  vr_asrcin_fsi2_gating_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  vr_asrcin_fsi0_gating_en:1;
        RBus_UInt32  vr_asrcin_tcon_en3:1;
        RBus_UInt32  vr_asrcin_tcon_en2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  vr_asrcin_tcon_en0:1;
        RBus_UInt32  res4:5;
        RBus_UInt32  vr_damod_1_en:1;
        RBus_UInt32  vr_damod_0_en:1;
        RBus_UInt32  vr_osr_dac_sel:1;
        RBus_UInt32  res5:12;
    };
}audio_tcon_reg_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  vr_asrcin_ftk_n3:2;
        RBus_UInt32  vr_asrcin_ftk_n2:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  vr_asrcin_ftk_n0:2;
        RBus_UInt32  vr_asrcin_ftk_m3:3;
        RBus_UInt32  vr_asrcin_ftk_m2:3;
        RBus_UInt32  res3:3;
        RBus_UInt32  vr_asrcin_ftk_m0:3;
        RBus_UInt32  vr_asrcin_ftk_loop_gain_sel3:2;
        RBus_UInt32  vr_asrcin_ftk_loop_gain_sel2:2;
    };
}audio_tcon_reg_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vr_asrcin_ftk_sdm_ini0:24;
        RBus_UInt32  res1:8;
    };
}audio_tcon_reg_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vr_asrcin_ftk_sdm_ini2:24;
        RBus_UInt32  res1:8;
    };
}audio_tcon_reg_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vr_asrcin_ftk_sdm_ini3:24;
        RBus_UInt32  res1:8;
    };
}audio_con_reg_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  int_sif_ovf_en:1;
        RBus_UInt32  int_mode_det_status_change_en:1;
        RBus_UInt32  int_msd_timeout_en:1;
        RBus_UInt32  int_msd_change_en:1;
        RBus_UInt32  int_sif_nopt_en:1;
        RBus_UInt32  int_pll64512_wd_en_1:1;
        RBus_UInt32  int_i2s_pri_word_length_change_en:1;
        RBus_UInt32  int_spi_sample_rate_chg_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  int_i2s_pri_sample_rate_chg_en:1;
        RBus_UInt32  int_nicam_hierr_change_en:1;
        RBus_UInt32  int_spi_in_lock_change_en:1;
        RBus_UInt32  int_spi_in_datatype_change_en:1;
        RBus_UInt32  int_aout_timer_en:1;
        RBus_UInt32  int_ain_timer_en:1;
        RBus_UInt32  int_nicam_level_status_en:1;
        RBus_UInt32  int_fifo0_empty_en:1;
        RBus_UInt32  int_fifo1_empty_en:1;
        RBus_UInt32  int_fifo2_empty_en:1;
        RBus_UInt32  int_fifo3_empty_en:1;
        RBus_UInt32  int_fifo0_full_en:1;
        RBus_UInt32  int_fifo1_full_en:1;
        RBus_UInt32  int_fifo2_full_en:1;
        RBus_UInt32  int_fifo3_full_en:1;
        RBus_UInt32  int_btsc_mode_chg_en:1;
        RBus_UInt32  int_rbus_timeout_en:1;
        RBus_UInt32  int_msd_fw_scan_done_en:1;
        RBus_UInt32  int_msd_decision_done_en:1;
        RBus_UInt32  int_pll64512_wd_en:1;
        RBus_UInt32  int_fifo0_ts_empty_en:1;
        RBus_UInt32  int_fifo0_ts_full_en:1;
        RBus_UInt32  int_nicam_true_detect_en:1;
    };
}audio_interrupt_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  int_sif_ovf:1;
        RBus_UInt32  int_mode_det_status_change:1;
        RBus_UInt32  int_msd_timeout:1;
        RBus_UInt32  int_msd_change:1;
        RBus_UInt32  int_sif_nopt:1;
        RBus_UInt32  int_pll64512_wd_1:1;
        RBus_UInt32  int_i2s_pri_word_length_change:1;
        RBus_UInt32  int_spi_sample_rate_chg:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  int_i2s_pri_sample_rate_chg:1;
        RBus_UInt32  int_nicam_hierr_change:1;
        RBus_UInt32  int_spi_in_lock_change:1;
        RBus_UInt32  int_spi_in_datatype_change:1;
        RBus_UInt32  int_aout_timer:1;
        RBus_UInt32  int_ain_timer:1;
        RBus_UInt32  int_nicam_level_status:1;
        RBus_UInt32  int_fifo0_empty:1;
        RBus_UInt32  int_fifo1_empty:1;
        RBus_UInt32  int_fifo2_empty:1;
        RBus_UInt32  int_fifo3_empty:1;
        RBus_UInt32  int_fifo0_full:1;
        RBus_UInt32  int_fifo1_full:1;
        RBus_UInt32  int_fifo2_full:1;
        RBus_UInt32  int_fifo3_full:1;
        RBus_UInt32  int_btsc_mode_chg:1;
        RBus_UInt32  int_rbus_timeout:1;
        RBus_UInt32  int_msd_fw_scan_done:1;
        RBus_UInt32  int_msd_decision_done:1;
        RBus_UInt32  int_pll64512_wd:1;
        RBus_UInt32  int_fifo0_ts_empty:1;
        RBus_UInt32  int_fifo0_ts_full:1;
        RBus_UInt32  int_nicam_true_detect:1;
    };
}audio_interrupt_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  aout_timer_en:1;
        RBus_UInt32  ain_timer_en:1;
        RBus_UInt32  aout_timer_src:2;
        RBus_UInt32  ain_timer_src:2;
        RBus_UInt32  timer_div:3;
        RBus_UInt32  timer_clr_mode_sel:1;
        RBus_UInt32  res1:22;
    };
}audio_aio_timer_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ain_timer:32;
    };
}audio_ain_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ain_compare:32;
    };
}audio_ain_compare_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  aout_timer:32;
    };
}audio_aout_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  aout_compare:32;
    };
}audio_aout_compare_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sw_dbg_reg_0:32;
    };
}audio_sw_dbg_reg_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sw_dbg_reg_1:32;
    };
}audio_sw_dbg_reg_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sw_dbg_reg_2:32;
    };
}audio_sw_dbg_reg_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sw_dbg_reg_3:32;
    };
}audio_sw_dbg_reg_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  int_64512fs_unstable:1;
        RBus_UInt32  int_64512fs_unstable_1:1;
        RBus_UInt32  res1:14;
        RBus_UInt32  int_64512_unstable_en:1;
        RBus_UInt32  int_64512_unstable_1_en:1;
        RBus_UInt32  res2:14;
    };
}audio_int_en_states_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  int_hdmi_in_lock_change_en:1;
        RBus_UInt32  int_hdmi_in_channel_change_en:1;
        RBus_UInt32  int_hdmi_in_datarate_change_en:1;
        RBus_UInt32  int_hdmi_in_datatype_change_en:1;
        RBus_UInt32  int_fifo1_ts_empty_en:1;
        RBus_UInt32  int_fifo1_ts_full_en:1;
        RBus_UInt32  int_fifo2_ts_empty_en:1;
        RBus_UInt32  int_fifo2_ts_full_en:1;
        RBus_UInt32  int_fifo0_arc_empty_en:1;
        RBus_UInt32  int_fifo0_arc_full_en:1;
        RBus_UInt32  hw2asrc_int_en:1;
        RBus_UInt32  res1:21;
    };
}audio_interrupt_en_earc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  int_hdmi_in_lock_change:1;
        RBus_UInt32  int_hdmi_in_channel_change:1;
        RBus_UInt32  int_hdmi_in_datarate_change:1;
        RBus_UInt32  int_hdmi_in_datatype_change:1;
        RBus_UInt32  int_fifo1_ts_empty:1;
        RBus_UInt32  int_fifo1_ts_full:1;
        RBus_UInt32  int_fifo2_ts_empty:1;
        RBus_UInt32  int_fifo2_ts_full:1;
        RBus_UInt32  int_fifo0_arc_empty:1;
        RBus_UInt32  int_fifo0_arc_full:1;
        RBus_UInt32  hw2asrc_int:1;
        RBus_UInt32  res1:21;
    };
}audio_interrupt_status_earc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pcm_width:7;
        RBus_UInt32  res1:1;
        RBus_UInt32  sampling_rate:4;
        RBus_UInt32  res2:4;
        RBus_UInt32  dummy18006100_24_16:9;
        RBus_UInt32  sclk_inv:1;
        RBus_UInt32  debounce_en:1;
        RBus_UInt32  mode_sel:1;
        RBus_UInt32  left_right:2;
        RBus_UInt32  source_sel:2;
    };
}audio_i2s_in_primary_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sampling_rate:4;
        RBus_UInt32  spdif_in_2fs_sel:1;
        RBus_UInt32  dummy18006130_15_5:11;
        RBus_UInt32  res1:11;
        RBus_UInt32  source_sel_spdif_out:1;
        RBus_UInt32  debounce_en:1;
        RBus_UInt32  req_after_lock:1;
        RBus_UInt32  source_sel:2;
    };
}audio_spdif_in_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  professional_r:1;
        RBus_UInt32  data_type_r:1;
        RBus_UInt32  copyright_r:1;
        RBus_UInt32  pre_emphasis_r:3;
        RBus_UInt32  mode_r:2;
        RBus_UInt32  category_code_r:8;
        RBus_UInt32  source_number_r:4;
        RBus_UInt32  channel_number_r:4;
        RBus_UInt32  sampling_freq_r:4;
        RBus_UInt32  clock_accuracy_r:2;
        RBus_UInt32  invalid_bit:1;
        RBus_UInt32  hw_locked:1;
    };
}audio_spdif_in_cs_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  word_length_r:4;
        RBus_UInt32  original_sampling_freq_r:4;
        RBus_UInt32  cgms_a_r:2;
        RBus_UInt32  cgms_a_l:2;
        RBus_UInt32  professional_l:1;
        RBus_UInt32  data_type_l:1;
        RBus_UInt32  copyright_l:1;
        RBus_UInt32  pre_emphasis_l:3;
        RBus_UInt32  cs_lb3_31_30:2;
        RBus_UInt32  cs_rb3_31_30:2;
        RBus_UInt32  res1:10;
    };
}audio_spdif_in_cs_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mode_l:2;
        RBus_UInt32  category_code_l:8;
        RBus_UInt32  source_number_l:4;
        RBus_UInt32  channel_number_l:4;
        RBus_UInt32  sampling_freq_l:4;
        RBus_UInt32  clock_accuracy_l:2;
        RBus_UInt32  word_length_l:4;
        RBus_UInt32  original_sampling_freq_l:4;
    };
}audio_spdif_in_cs_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_7_5_r:22;
        RBus_UInt32  res1:10;
    };
}audio_spdif_in_cs_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_r:32;
    };
}audio_spdif_in_cs_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_r:32;
    };
}audio_spdif_in_cs_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_r:32;
    };
}audio_spdif_in_cs_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_r:32;
    };
}audio_spdif_in_cs_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_7_5_l:22;
        RBus_UInt32  res1:10;
    };
}audio_spdif_in_cs_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_l:32;
    };
}audio_spdif_in_cs_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_l:32;
    };
}audio_spdif_in_cs_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_l:32;
    };
}audio_spdif_in_cs_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_l:32;
    };
}audio_spdif_in_cs_13_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  dmic_0_l_sel:1;
        RBus_UInt32  dmic_0_r_sel:1;
        RBus_UInt32  dmic_0_adc_l_mute_ctrl:1;
        RBus_UInt32  dmic_0_adc_r_mute_ctrl:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  digital_0_boost_ctrl:3;
        RBus_UInt32  dmic_0_enable:1;
        RBus_UInt32  res3:20;
    };
}audio_digital_mic_0_in_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  dmic_1_l_sel:1;
        RBus_UInt32  dmic_1_r_sel:1;
        RBus_UInt32  dmic_1_adc_l_mute_ctrl:1;
        RBus_UInt32  dmic_1_adc_r_mute_ctrl:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  digital_1_boost_ctrl:3;
        RBus_UInt32  dmic_1_enable:1;
        RBus_UInt32  res3:20;
    };
}audio_digital_mic_1_in_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006150_7_0:8;
        RBus_UInt32  output_pad4_sel:2;
        RBus_UInt32  output_pad3_sel:2;
        RBus_UInt32  output_pad2_sel:2;
        RBus_UInt32  output_pad1_sel:2;
        RBus_UInt32  sclk_inv:1;
        RBus_UInt32  wclk_inv:1;
        RBus_UInt32  res1:6;
        RBus_UInt32  mclk_sel:2;
        RBus_UInt32  vr_o_clk_sel:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  output_sel:3;
        RBus_UInt32  output_swap_sel:1;
    };
}audio_i2s_out_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  i2s_pb_vr_sel_ch01:2;
        RBus_UInt32  i2s_pb_vr_sel_ch23:2;
        RBus_UInt32  i2s_pb_vr_sel_ch45:2;
        RBus_UInt32  i2s_pb_vr_sel_ch67:2;
        RBus_UInt32  swap_sel_ch67:2;
        RBus_UInt32  swap_sel_ch45:2;
        RBus_UInt32  swap_sel_ch23:2;
        RBus_UInt32  swap_sel_ch01:2;
        RBus_UInt32  pcm_source_sel_ch67:4;
        RBus_UInt32  pcm_source_sel_ch45:4;
        RBus_UInt32  pcm_source_sel_ch23:4;
        RBus_UInt32  pcm_source_sel_ch01:4;
    };
}audio_i2s_out_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hw_limit_ch01:7;
        RBus_UInt32  hw_limit_en_ch01:1;
        RBus_UInt32  hw_limit_ch23:7;
        RBus_UInt32  hw_limit_en_ch23:1;
        RBus_UInt32  hw_limit_ch45:7;
        RBus_UInt32  hw_limit_en_ch45:1;
        RBus_UInt32  hw_limit_ch67:7;
        RBus_UInt32  hw_limit_en_ch67:1;
    };
}audio_i2s_out_sel_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006170_15_0:16;
        RBus_UInt32  swap_sel:2;
        RBus_UInt32  spo_pb_vr_sel:2;
        RBus_UInt32  spdif_output_mux:1;
        RBus_UInt32  spdif_output_ch_sel:2;
        RBus_UInt32  pcm_source_sel:4;
        RBus_UInt32  spdif_out_null_burst:1;
        RBus_UInt32  validity_ctrl:1;
        RBus_UInt32  wait_en:1;
        RBus_UInt32  output_sel:2;
    };
}audio_spdif_out_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  professional:1;
        RBus_UInt32  data_type:1;
        RBus_UInt32  copyright:1;
        RBus_UInt32  pre_emphasis:3;
        RBus_UInt32  mode:2;
        RBus_UInt32  category_code:8;
        RBus_UInt32  source_number:4;
        RBus_UInt32  channel_number:4;
        RBus_UInt32  sampling_freq:4;
        RBus_UInt32  clock_accuracy:2;
        RBus_UInt32  cs_lb3_31_30:2;
    };
}audio_spdif_out_cs_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  word_length:4;
        RBus_UInt32  original_sampling_freq:4;
        RBus_UInt32  cgms_a:2;
        RBus_UInt32  res1:22;
    };
}audio_spdif_out_cs_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hw_limit:7;
        RBus_UInt32  hw_limit_en:1;
        RBus_UInt32  res1:24;
    };
}audio_spdif_out_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  professional_r:1;
        RBus_UInt32  data_type_r:1;
        RBus_UInt32  copyright_r:1;
        RBus_UInt32  pre_emphasis_r:3;
        RBus_UInt32  mode_r:2;
        RBus_UInt32  category_code_r:8;
        RBus_UInt32  source_number_r:4;
        RBus_UInt32  channel_number_r:4;
        RBus_UInt32  sampling_freq_r:4;
        RBus_UInt32  clock_accuracy_r:2;
        RBus_UInt32  cs_rb3_31_30:2;
    };
}audio_spdif_out_cs_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  word_length_r:4;
        RBus_UInt32  original_sampling_freq_r:4;
        RBus_UInt32  cgms_a_r:2;
        RBus_UInt32  res1:22;
    };
}audio_spdif_out_cs_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_7_5_l:22;
        RBus_UInt32  res1:10;
    };
}audio_spdif_out_cs_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_l:32;
    };
}audio_spdif_out_cs_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_l:32;
    };
}audio_spdif_out_cs_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_l:32;
    };
}audio_spdif_out_cs_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_l:32;
    };
}audio_spdif_out_cs_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_7_5_r:22;
        RBus_UInt32  res1:10;
    };
}audio_spdif_out_cs_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_r:32;
    };
}audio_spdif_out_cs_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_r:32;
    };
}audio_spdif_out_cs_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_r:32;
    };
}audio_spdif_out_cs_13_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_r:32;
    };
}audio_spdif_out_cs_14_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006e60_15_0:16;
        RBus_UInt32  swap_sel:2;
        RBus_UInt32  spo_pb_vr_sel:2;
        RBus_UInt32  spdif_output_mux:1;
        RBus_UInt32  spdif_output_ch_sel:2;
        RBus_UInt32  pcm_source_sel:4;
        RBus_UInt32  spdif_out_null_burst:1;
        RBus_UInt32  validity_ctrl:1;
        RBus_UInt32  wait_en:1;
        RBus_UInt32  output_sel:2;
    };
}audio_spdif_out_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  professional:1;
        RBus_UInt32  data_type:1;
        RBus_UInt32  copyright:1;
        RBus_UInt32  pre_emphasis:3;
        RBus_UInt32  mode:2;
        RBus_UInt32  category_code:8;
        RBus_UInt32  source_number:4;
        RBus_UInt32  channel_number:4;
        RBus_UInt32  sampling_freq:4;
        RBus_UInt32  clock_accuracy:2;
        RBus_UInt32  cs_lb3_31_30:2;
    };
}audio_spdif_out_1_cs_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  word_length:4;
        RBus_UInt32  original_sampling_freq:4;
        RBus_UInt32  cgms_a:2;
        RBus_UInt32  res1:22;
    };
}audio_spdif_out_1_cs_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hw_limit:7;
        RBus_UInt32  hw_limit_en:1;
        RBus_UInt32  res1:24;
    };
}audio_spdif_out_1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  professional_r:1;
        RBus_UInt32  data_type_r:1;
        RBus_UInt32  copyright_r:1;
        RBus_UInt32  pre_emphasis_r:3;
        RBus_UInt32  mode_r:2;
        RBus_UInt32  category_code_r:8;
        RBus_UInt32  source_number_r:4;
        RBus_UInt32  channel_number_r:4;
        RBus_UInt32  sampling_freq_r:4;
        RBus_UInt32  clock_accuracy_r:2;
        RBus_UInt32  cs_rb3_31_30:2;
    };
}audio_spdif_out_1_cs_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  word_length_r:4;
        RBus_UInt32  original_sampling_freq_r:4;
        RBus_UInt32  cgms_a_r:2;
        RBus_UInt32  res1:22;
    };
}audio_spdif_out_1_cs_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_7_5_l:22;
        RBus_UInt32  res1:10;
    };
}audio_spdif_out_1_cs_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_l:32;
    };
}audio_spdif_out_1_cs_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_l:32;
    };
}audio_spdif_out_1_cs_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_l:32;
    };
}audio_spdif_out_1_cs_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_l:32;
    };
}audio_spdif_out_1_cs_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_7_5_r:22;
        RBus_UInt32  res1:10;
    };
}audio_spdif_out_1_cs_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_r:32;
    };
}audio_spdif_out_1_cs_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_r:32;
    };
}audio_spdif_out_1_cs_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_r:32;
    };
}audio_spdif_out_1_cs_13_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_r:32;
    };
}audio_spdif_out_1_cs_14_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ob_time:16;
        RBus_UInt32  hw_agc_en:1;
        RBus_UInt32  dummy18006180_19_17:3;
        RBus_UInt32  res1:12;
    };
}audio_sif_agc_eval_cnt_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  non_opt_cnt_ovf:8;
        RBus_UInt32  non_opt_cnt_under:8;
        RBus_UInt32  non_opt_cnt_th:3;
        RBus_UInt32  res1:13;
    };
}audio_sif_agc_optimal_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  opt_th:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  ovf_th:10;
        RBus_UInt32  res2:6;
    };
}audio_sif_agc_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  abs_peak:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  opt:1;
        RBus_UInt32  ovf:1;
        RBus_UInt32  res2:18;
    };
}audio_sif_agc_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc2_obtime:16;
        RBus_UInt32  agc2_gain_b:6;
        RBus_UInt32  res1:2;
        RBus_UInt32  agc2_gain_a:2;
        RBus_UInt32  agc2_stepsize:2;
        RBus_UInt32  agc2_debounce_cnt:3;
        RBus_UInt32  res2:1;
    };
}audio_sif_agc2_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc2_sif_mag:10;
        RBus_UInt32  res1:18;
        RBus_UInt32  agc2_underflow:1;
        RBus_UInt32  agc2_overflow:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  agc2_en:1;
    };
}audio_sif_agc2_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_upsample_lp_sel:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  audio_bp_sel:8;
        RBus_UInt32  output_bpf_input_div2:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  audio_gain_manual:9;
        RBus_UInt32  res3:3;
        RBus_UInt32  aagc_en:1;
        RBus_UInt32  sif_sel:1;
        RBus_UInt32  res4:2;
    };
}audio_sif_agc3_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  debug_mode2:2;
        RBus_UInt32  audiodbg_fifo_empty:1;
        RBus_UInt32  audiodbg_fifo_full:1;
        RBus_UInt32  audiodbg_fifo_clr:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  audiodn_fifo_empty:1;
        RBus_UInt32  audiodn_fifo_full:1;
        RBus_UInt32  res3:2;
        RBus_UInt32  audiodn_fifo_clr:1;
        RBus_UInt32  res4:3;
        RBus_UInt32  soft_reset:1;
        RBus_UInt32  res5:3;
    };
}audio_sif_agc3_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  detect_source_sel:4;
        RBus_UInt32  pdetect_enable:1;
        RBus_UInt32  res1:27;
    };
}audio_peak_contorl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ovf_th_l:16;
        RBus_UInt32  opt_th_l:16;
    };
}audio_peak_contorl_l_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vpp_eval_cnt_l:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  nonopt_cnt_tr_l:3;
        RBus_UInt32  dummy180061b4_31_19:13;
    };
}audio_peak_control_l_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  magnitude_l:16;
        RBus_UInt32  pk_adj_l:6;
        RBus_UInt32  overflow_l:1;
        RBus_UInt32  optimize_l:1;
        RBus_UInt32  res1:6;
        RBus_UInt32  overflow_l_irq_en:1;
        RBus_UInt32  optimize_l_irq_en:1;
    };
}audio_peak_status_l_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pcm_l_monitor:24;
        RBus_UInt32  toggle_cnt:8;
    };
}audio_peak_status_l_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ovf_th_r:16;
        RBus_UInt32  opt_th_r:16;
    };
}audio_peak_contorl_r_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vpp_eval_cnt_r:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  nonopt_cnt_tr_r:3;
        RBus_UInt32  dummy180061c4_31_19:13;
    };
}audio_peak_contorl_r_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  magnitude_r:16;
        RBus_UInt32  pk_adj_r:6;
        RBus_UInt32  overflow_r:1;
        RBus_UInt32  optimize_r:1;
        RBus_UInt32  res1:6;
        RBus_UInt32  overflow_r_irq_en:1;
        RBus_UInt32  optimize_r_irq_en:1;
    };
}audio_peak_status_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pcm_r_monitor:24;
        RBus_UInt32  res1:8;
    };
}audio_peak_status_r_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_scan_freq:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  sound_select:2;
        RBus_UInt32  calc_time_sel:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  dkl_priority:1;
        RBus_UInt32  mn_priority:2;
        RBus_UInt32  res3:1;
        RBus_UInt32  reg_scan_cnt:8;
        RBus_UInt32  msd_debounce_cnt:3;
        RBus_UInt32  msd_reset_n:1;
        RBus_UInt32  carrier_phase_delta:3;
        RBus_UInt32  carrier_shift_scan_en:1;
        RBus_UInt32  update_en:1;
        RBus_UInt32  msd_en:1;
        RBus_UInt32  res4:2;
    };
}audio_msd_crtl_word_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_std:5;
        RBus_UInt32  res1:3;
        RBus_UInt32  hw_detected_std:5;
        RBus_UInt32  res2:3;
        RBus_UInt32  h_dv_th_sel:1;
        RBus_UInt32  flag_subtomain:1;
        RBus_UInt32  flag_unnormal:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  case_subtomain:4;
        RBus_UInt32  deviation_unnormal:2;
        RBus_UInt32  res4:6;
    };
}audio_msd_result_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  deviation:4;
        RBus_UInt32  main_cari_idx:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  shift_value:4;
        RBus_UInt32  res2:4;
        RBus_UInt32  bw_cnt_min:5;
        RBus_UInt32  res3:3;
        RBus_UInt32  bw_cnt_max:5;
        RBus_UInt32  res4:3;
    };
}audio_msd_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  main_thresh_low:16;
        RBus_UInt32  main_thresh:16;
    };
}audio_main_tone_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  main_thresh_hd_low:16;
        RBus_UInt32  main_thresh_hd:16;
    };
}audio_main_tone_threshold_hd_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bw_dev_thresh:16;
        RBus_UInt32  bw_dev_thresh_hd:16;
    };
}audio_bw_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  main_sub_ratio:16;
        RBus_UInt32  bw_dev_thresh_low:16;
    };
}audio_main_sub_ratio_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_4_5:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_mag_4_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_4_28:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_mag_4_28_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_4_72:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_mag_4_72_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_5_5:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_mag_5_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_5_25:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_mag_5_25_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_5_74:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_mag_5_74_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_5_85:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_carrier_5_85_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_5_95:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_carrier_5_95_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_6:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_mag_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_6_25:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_mag_6_25_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_6_5:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_carrier_6_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_6_552:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_mag_6_552_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_6_74:16;
        RBus_UInt32  res1:16;
    };
}audio_msd_carrier_6_74_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  flag_6_74:1;
        RBus_UInt32  flag_6_552:1;
        RBus_UInt32  flag_6_25:1;
        RBus_UInt32  flag_5_85:1;
        RBus_UInt32  flag_5_74:1;
        RBus_UInt32  flag_4_72:1;
        RBus_UInt32  flag_6_5:1;
        RBus_UInt32  flag_6:1;
        RBus_UInt32  flag_5_5:1;
        RBus_UInt32  flag_4_5:1;
        RBus_UInt32  flag_fw:1;
        RBus_UInt32  flag_fw_1:1;
        RBus_UInt32  flag_fw_2:1;
        RBus_UInt32  flag_fw_3:1;
        RBus_UInt32  flag_fw_4:1;
        RBus_UInt32  res1:17;
    };
}audio_msd_flags_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_fw:16;
        RBus_UInt32  fw_phase_delta:14;
        RBus_UInt32  res1:2;
    };
}audio_msd_programmable_freq_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh_low:16;
        RBus_UInt32  fw_thresh:16;
    };
}audio_threshold_msd_carrier_fw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_fw_1:16;
        RBus_UInt32  fw_phase_delta_1:14;
        RBus_UInt32  res1:2;
    };
}audio_msd_programmable_freq_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh_1_low:16;
        RBus_UInt32  fw_thresh_1:16;
    };
}audio_threshold_msd_carrier_fw_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_fw_2:16;
        RBus_UInt32  fw_phase_delta_2:14;
        RBus_UInt32  res1:2;
    };
}audio_msd_programmable_freq_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh_2_low:16;
        RBus_UInt32  fw_thresh_2:16;
    };
}audio_threshold_msd_carrier_fw_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_fw_3:16;
        RBus_UInt32  fw_phase_delta_3:14;
        RBus_UInt32  res1:2;
    };
}audio_msd_programmable_freq_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh_3_low:16;
        RBus_UInt32  fw_thresh_3:16;
    };
}audio_threshold_msd_carrier_fw_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_fw_4:16;
        RBus_UInt32  fw_phase_delta_4:14;
        RBus_UInt32  res1:2;
    };
}audio_msd_programmable_freq_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_thresh_4_low:16;
        RBus_UInt32  fw_thresh_4:16;
    };
}audio_threshold_msd_carrier_fw_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_reg_std:5;
        RBus_UInt32  res1:3;
        RBus_UInt32  mono_std_sel:1;
        RBus_UInt32  reg_bw_detect_en:1;
        RBus_UInt32  reg_cari_sft_detect_en:1;
        RBus_UInt32  res2:21;
    };
}audio_msd_second_reg_std_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sec_thresh_low:16;
        RBus_UInt32  sec_thresh:16;
    };
}audio_second_main_tone_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_0:4;
        RBus_UInt32  rme_0:1;
        RBus_UInt32  res1:27;
    };
}audio_msd_bist_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_55_fix:16;
        RBus_UInt32  reg_mag_45_fix:16;
    };
}audio_msd_main_mag_ori1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_mag_65_fix:16;
        RBus_UInt32  reg_mag_60_fix:16;
    };
}audio_msd_main_mag_ori2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  msd_gain_result:4;
        RBus_UInt32  msd_gain_en:1;
        RBus_UInt32  res1:27;
    };
}audio_msd_gain_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  msd_update_count:16;
        RBus_UInt32  fw_update_count:16;
    };
}audio_msd_update_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mode_result:2;
        RBus_UInt32  hw_mode_en:1;
        RBus_UInt32  res1:13;
        RBus_UInt32  md_update_count:16;
    };
}audio_mode_detect_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  max_threshold:24;
        RBus_UInt32  auto_gain_ctrl_en:1;
        RBus_UInt32  auto_pre_gain_ctrl_en:1;
        RBus_UInt32  low_threshold:2;
        RBus_UInt32  high_threshold:2;
        RBus_UInt32  bpf_sel:1;
        RBus_UInt32  enable:1;
    };
}audio_md_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  max_other:24;
        RBus_UInt32  gain_result:4;
        RBus_UInt32  gain_result_pre:4;
    };
}audio_md_status_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  max_dual:24;
        RBus_UInt32  mode_result:2;
        RBus_UInt32  lpf_coef_sel_lock:2;
        RBus_UInt32  lpf_coef_sel:2;
        RBus_UInt32  res1:2;
    };
}audio_md_status_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  max_stereo:24;
        RBus_UInt32  debounce_time:3;
        RBus_UInt32  dummy1800631c_31_27:5;
    };
}audio_md_status_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pre_gain_win:16;
        RBus_UInt32  gain_win:16;
    };
}audio_md_gain_window_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  md_limit_thre:24;
        RBus_UInt32  res1:8;
    };
}audio_md_limit_thre_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  phase_3rd_delta:14;
        RBus_UInt32  res1:10;
        RBus_UInt32  freq_manual_en:1;
        RBus_UInt32  force_a2_dk_sel:2;
        RBus_UInt32  tone_det_en:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  nicam_play_ana_sel:1;
        RBus_UInt32  sif_data_source:1;
    };
}audio_carrier_freq_deviation_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sub_phase_delta:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  main_phase_delta:14;
        RBus_UInt32  res2:2;
    };
}audio_carrier_phase_delta_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006358_15_0:16;
        RBus_UInt32  fm_magnitude:16;
    };
}audio_a2_eiaj_dc_filter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  delay_ctrl_tvd:10;
        RBus_UInt32  ramp_step_mute_tvd:2;
        RBus_UInt32  zcto_mute_tvd:3;
        RBus_UInt32  dvcm_tvd:2;
        RBus_UInt32  zcth_tvd:5;
        RBus_UInt32  zcto_status_tvd:1;
        RBus_UInt32  switch_status_tvd:2;
        RBus_UInt32  force_mute_tvd:1;
        RBus_UInt32  mode_sel_tvd:1;
        RBus_UInt32  dvol_enable_tvd:1;
        RBus_UInt32  dvol_apply_tvd:1;
        RBus_UInt32  res1:3;
    };
}audio_tvdemod_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  delay_ctrl_mute_tvd:10;
        RBus_UInt32  vol_b_tvd:6;
        RBus_UInt32  delay_ctrl_unmute_tvd:10;
        RBus_UInt32  vol_a_tvd:5;
        RBus_UInt32  res1:1;
    };
}audio_tvdemod_digital_volume_control_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_bp1_a2:16;
        RBus_UInt32  eq_tvd_bp1_a1:16;
    };
}audio_eq_tvd_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_bp1_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_tvd_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_bp2_a2:16;
        RBus_UInt32  eq_tvd_bp2_a1:16;
    };
}audio_eq_tvd_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_bp2_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_tvd_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_band1_enable:1;
        RBus_UInt32  eq_tvd_band2_enable:1;
        RBus_UInt32  eq_tvd_lp_enable:1;
        RBus_UInt32  eq_tvd_deq_enable:1;
        RBus_UInt32  res1:28;
    };
}audio_eq_tvd_bp_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_band1_of:1;
        RBus_UInt32  eq_tvd_band2_of:1;
        RBus_UInt32  eq_tvd_lp_of:1;
        RBus_UInt32  res1:29;
    };
}audio_eq_tvd_bp_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_tvd_lp_h0:16;
        RBus_UInt32  eq_tvd_lp_a1:16;
    };
}audio_eq_tvd_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hw_am_prescale:2;
        RBus_UInt32  am_path_sel:1;
        RBus_UInt32  am_bpf_bw:1;
        RBus_UInt32  dummy18006360_7_4:4;
        RBus_UInt32  res1:24;
    };
}audio_am_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_0:4;
        RBus_UInt32  rme_0:1;
        RBus_UInt32  res1:27;
    };
}audio_bist_am_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage1_b1:16;
        RBus_UInt32  sap_bpf_stage1_b0:16;
    };
}audio_sap_bpf_stage1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage1_b2:16;
        RBus_UInt32  res1:16;
    };
}audio_sap_bpf_stage1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage1_a2:16;
        RBus_UInt32  sap_bpf_stage1_a1:16;
    };
}audio_sap_bpf_stage1_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage2_b1:16;
        RBus_UInt32  sap_bpf_stage2_b0:16;
    };
}audio_sap_bpf_stage2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage2_b2:16;
        RBus_UInt32  res1:16;
    };
}audio_sap_bpf_stage2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage2_a2:16;
        RBus_UInt32  sap_bpf_stage2_a1:16;
    };
}audio_sap_bpf_stage2_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage3_b1:16;
        RBus_UInt32  sap_bpf_stage3_b0:16;
    };
}audio_sap_bpf_stage3_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage3_b2:16;
        RBus_UInt32  res1:16;
    };
}audio_sap_bpf_stage3_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_bpf_stage3_a2:16;
        RBus_UInt32  sap_bpf_stage3_a1:16;
    };
}audio_sap_bpf_stage3_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pilot_lothresh:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  pilot_hithresh:10;
        RBus_UInt32  bypass_com_bpf:1;
        RBus_UInt32  bypass_com_hpf:1;
        RBus_UInt32  fm_radio_deem_bypass:1;
        RBus_UInt32  fm_radio_deem_sel:1;
        RBus_UInt32  fm_radio_en:1;
        RBus_UInt32  lock_reference:1;
    };
}audio_btsc_pilot_thres_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  w10pilotmagnitude:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  pilot_lo_refuse:1;
        RBus_UInt32  pilot_hi_pass:1;
        RBus_UInt32  pilot_level_pass:1;
        RBus_UInt32  w1pilotlocked:1;
        RBus_UInt32  w1pilotpresent:1;
        RBus_UInt32  out_hpf_en:1;
        RBus_UInt32  pilot_lock_reset:1;
        RBus_UInt32  res2:13;
    };
}audio_btsc_pilot_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_lothresh:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  sap_hithresh:10;
        RBus_UInt32  res2:6;
    };
}audio_btsc_sap_thresh_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_noise_lo_thresh:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  sap_noise_hi_thresh:10;
        RBus_UInt32  res2:6;
    };
}audio_btsc_sap_noise_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  w10sapnoise:10;
        RBus_UInt32  res1:22;
    };
}audio_btsc_sap_noise_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  w10sapmagnitude:10;
        RBus_UInt32  sap_compen_en:1;
        RBus_UInt32  sap_noise_flag:1;
        RBus_UInt32  sap_lo_refuse:1;
        RBus_UInt32  sap_hi_pass:1;
        RBus_UInt32  w1sapqualitygood:1;
        RBus_UInt32  res1:17;
    };
}audio_btsc_sap_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sap_debounce:4;
        RBus_UInt32  sap_debounce_en:1;
        RBus_UInt32  res1:27;
    };
}audio_btsc_sap_debounce_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  w10fmmagnitude:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  fm_mag_optimize:1;
        RBus_UInt32  fm_mag_overflow:1;
        RBus_UInt32  res2:18;
    };
}audio_btsc_sif_fm_magnitude_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  testoutputselect:4;
        RBus_UInt32  res1:28;
    };
}audio_btsc_test_mux_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy_6424:16;
        RBus_UInt32  res1:16;
    };
}audio_btsc_dummy_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pilot_phase_delta:32;
    };
}audio_btsc_pilot_phase_delta_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  locked_i_gain:4;
        RBus_UInt32  locked_p_gain:4;
        RBus_UInt32  unlock_i_gain:4;
        RBus_UInt32  unlock_p_gain:4;
        RBus_UInt32  res1:16;
    };
}audio_phase_error_pi_gain_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  phase_err_threshold:24;
        RBus_UInt32  res1:5;
        RBus_UInt32  stereo_lpf_sel:1;
        RBus_UInt32  mono_lpf_sel:1;
        RBus_UInt32  sap_hpf_en:1;
    };
}audio_phase_err_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  phase_err_high_threshold:24;
        RBus_UInt32  res1:8;
    };
}audio_phase_err_threshold2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  freq_correction:22;
        RBus_UInt32  res1:10;
    };
}audio_freq_correction_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  average_movement:24;
        RBus_UInt32  res1:8;
    };
}audio_phase_error_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  fm2_deviation_gain:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  fm1_deviation_gain:3;
        RBus_UInt32  res3:1;
        RBus_UInt32  a2_sub_bw_sel:2;
        RBus_UInt32  res4:10;
        RBus_UInt32  down_6db:1;
        RBus_UInt32  hdv_compen_en:1;
        RBus_UInt32  res5:2;
        RBus_UInt32  de_emphasis_time:2;
        RBus_UInt32  a2_bw_sel:2;
    };
}audio_a2_eiaj_demod_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  noise_sub:10;
        RBus_UInt32  magnitude_sub:10;
        RBus_UInt32  res1:12;
    };
}audio_a2_eiaj_mag_noise_sub_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  noise:10;
        RBus_UInt32  magnitude:10;
        RBus_UInt32  res1:12;
    };
}audio_a2_eiaj_mag_noise_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_0:4;
        RBus_UInt32  rm_1:4;
        RBus_UInt32  rm_2:4;
        RBus_UInt32  rm_3:4;
        RBus_UInt32  rm_4:4;
        RBus_UInt32  rm_5:4;
        RBus_UInt32  rm_6:4;
        RBus_UInt32  rm_7:4;
    };
}audio_mbist_a2_eiaj_demod_rm_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_8:4;
        RBus_UInt32  res1:28;
    };
}audio_mbist_a2_eiaj_demod_rm_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rme_0:1;
        RBus_UInt32  rme_1:1;
        RBus_UInt32  rme_2:1;
        RBus_UInt32  rme_3:1;
        RBus_UInt32  rme_4:1;
        RBus_UInt32  rme_5:1;
        RBus_UInt32  rme_6:1;
        RBus_UInt32  rme_7:1;
        RBus_UInt32  rme_8:1;
        RBus_UInt32  res1:23;
    };
}audio_mbist_a2_eiaj_demod_rme_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  tr_timing_step:20;
        RBus_UInt32  cr_lpf_ki:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  cr_lpf_kp:3;
        RBus_UInt32  psf_bg_sel:1;
        RBus_UInt32  tr_lpf_kp:3;
        RBus_UInt32  psf_sel:1;
    };
}audio_nicam_demod_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gain_adjust:6;
        RBus_UInt32  res1:10;
        RBus_UInt32  window_size:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  debounce_cnt:3;
        RBus_UInt32  enable:1;
    };
}audio_nicam_dagc_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  low:16;
        RBus_UInt32  high:16;
    };
}audio_nicam_dagc_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  magnitude:16;
        RBus_UInt32  res1:16;
    };
}audio_nicam_dagc_mag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  nicam_to_mono_clk_sel:1;
        RBus_UInt32  nicam_to_mute_clk_sel:1;
        RBus_UInt32  dummy18006510_13_2:12;
        RBus_UInt32  level_sel:2;
        RBus_UInt32  dummy_0:1;
        RBus_UInt32  de_em_by_pass:1;
        RBus_UInt32  sat_en:1;
        RBus_UInt32  bypass_interpol:1;
        RBus_UInt32  status_debounce_cnt:4;
        RBus_UInt32  res1:1;
        RBus_UInt32  cib_mask:1;
        RBus_UInt32  cib_0:1;
        RBus_UInt32  cib_1:1;
        RBus_UInt32  pcm_r_out_sel:1;
        RBus_UInt32  pcm_l_out_sel:1;
        RBus_UInt32  data_channel_sel:1;
        RBus_UInt32  res2:1;
    };
}audio_nicam_decode_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bit_error_rate:12;
        RBus_UInt32  true_detect:1;
        RBus_UInt32  bit_cnt_sync:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  additional_data:11;
        RBus_UInt32  c4:1;
        RBus_UInt32  c1c2c3:3;
        RBus_UInt32  c0:1;
    };
}audio_nicam_decode_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  low_threshold:12;
        RBus_UInt32  high_threshold:12;
        RBus_UInt32  hi_ber_debounce:3;
        RBus_UInt32  analog_flag:1;
        RBus_UInt32  c4_hi_ber:2;
        RBus_UInt32  res1:1;
        RBus_UInt32  enable:1;
    };
}audio_nicam_auto_switch_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ted_error:18;
        RBus_UInt32  res1:2;
        RBus_UInt32  ted_error_threshold:3;
        RBus_UInt32  res2:5;
        RBus_UInt32  duration:2;
        RBus_UInt32  dur_rand_en:1;
        RBus_UInt32  enable:1;
    };
}audio_nicam_demod_auto_recovery_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bit_error_rate_r:12;
        RBus_UInt32  bit_error_rate_l:12;
        RBus_UInt32  res1:8;
    };
}audio_nicam_bit_error_rate_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  r_end:6;
        RBus_UInt32  r_start:6;
        RBus_UInt32  l_end:6;
        RBus_UInt32  l_start:6;
        RBus_UInt32  window_en:1;
        RBus_UInt32  res1:7;
    };
}audio_nicam_ber_window_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  down_rate:1;
        RBus_UInt32  downsample_en:1;
        RBus_UInt32  backend_play_en:1;
        RBus_UInt32  output_hold_zero:1;
        RBus_UInt32  res1:12;
        RBus_UInt32  fifo_ch0_source:2;
        RBus_UInt32  fifo_ch1_source:2;
        RBus_UInt32  fifo_ch2_source:2;
        RBus_UInt32  fifo_ch3_source:2;
        RBus_UInt32  fifo_ch4_source:2;
        RBus_UInt32  fifo_ch5_source:2;
        RBus_UInt32  fifo_ch6_source:2;
        RBus_UInt32  fifo_ch7_source:2;
    };
}audio_down_sample_control_for_playback_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_ch01_sel:4;
        RBus_UInt32  fifo_ch23_sel:4;
        RBus_UInt32  fifo_ch45_sel:4;
        RBus_UInt32  fifo_ch67_sel:4;
        RBus_UInt32  res1:16;
    };
}audio_down_sample_fifo_source_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  dummy18006558_31_14:18;
    };
}audio_down_sample_mbist_recoding_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:32;
    };
}audio_down_sample_fifo_pre_scale_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_0:4;
        RBus_UInt32  rm_1:4;
        RBus_UInt32  rm_2:4;
        RBus_UInt32  rm_3:4;
        RBus_UInt32  rm_4:4;
        RBus_UInt32  rm_5:4;
        RBus_UInt32  rm_6:4;
        RBus_UInt32  rm_7:4;
    };
}audio_down_sample_mbist_rm_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_8:4;
        RBus_UInt32  rm_9:4;
        RBus_UInt32  rm_10:4;
        RBus_UInt32  rm_11:4;
        RBus_UInt32  rm_12:4;
        RBus_UInt32  rm_13:4;
        RBus_UInt32  rm_14:4;
        RBus_UInt32  rm_15:4;
    };
}audio_down_sample_mbist_rm_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rme_0:1;
        RBus_UInt32  rme_1:1;
        RBus_UInt32  rme_2:1;
        RBus_UInt32  rme_3:1;
        RBus_UInt32  rme_4:1;
        RBus_UInt32  rme_5:1;
        RBus_UInt32  rme_6:1;
        RBus_UInt32  rme_7:1;
        RBus_UInt32  rme_8:1;
        RBus_UInt32  rme_9:1;
        RBus_UInt32  rme_10:1;
        RBus_UInt32  rme_11:1;
        RBus_UInt32  rme_12:1;
        RBus_UInt32  rme_13:1;
        RBus_UInt32  rme_14:1;
        RBus_UInt32  rme_15:1;
        RBus_UInt32  res1:16;
    };
}audio_down_sample_mbist_rme_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  down_rate:1;
        RBus_UInt32  downsample_en:1;
        RBus_UInt32  backend_play_en:1;
        RBus_UInt32  output_hold_zero:1;
        RBus_UInt32  fifo_ch45_sel:4;
        RBus_UInt32  fifo_ch5_source:2;
        RBus_UInt32  fifo_ch4_source:2;
        RBus_UInt32  fifo_ch01_sel:4;
        RBus_UInt32  fifo_ch1_source:2;
        RBus_UInt32  fifo_ch0_source:2;
        RBus_UInt32  fifo_ch23_sel:4;
        RBus_UInt32  fifo_ch3_source:2;
        RBus_UInt32  fifo_ch2_source:2;
        RBus_UInt32  catch_data_mode:1;
        RBus_UInt32  res1:3;
    };
}audio_down_sample_control_for_ts_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_0:4;
        RBus_UInt32  rm_1:4;
        RBus_UInt32  rm_2:4;
        RBus_UInt32  rm_3:4;
        RBus_UInt32  dummy180065a4_31_16:16;
    };
}audio_ts_ds_fifo_mbist_rm_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rme_0:1;
        RBus_UInt32  rme_1:1;
        RBus_UInt32  rme_2:1;
        RBus_UInt32  rme_3:1;
        RBus_UInt32  res1:28;
    };
}audio_ts_ds_fifo_mbist_rme_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  backend_play_en:1;
        RBus_UInt32  output_hold_zero:1;
        RBus_UInt32  res3:8;
        RBus_UInt32  fifo_ch01_sel:4;
        RBus_UInt32  fifo_ch1_source:2;
        RBus_UInt32  fifo_ch0_source:2;
        RBus_UInt32  res4:12;
    };
}audio_fifo_control_for_arc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  wr_intr_dma_status:1;
        RBus_UInt32  overflow_dma_status:1;
        RBus_UInt32  dma_write_enable:1;
        RBus_UInt32  dma_soft_wr_rst:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  int_wr_en:1;
        RBus_UInt32  aidmatype:1;
        RBus_UInt32  wr_channel_no:3;
        RBus_UInt32  pcm_random:1;
        RBus_UInt32  pre_fifo_en:1;
        RBus_UInt32  hbr_nonpcm:1;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  res2:10;
        RBus_UInt32  arb_req_1:1;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  dma_w_format:2;
        RBus_UInt32  dma_wr_src_sel:2;
    };
}audio_adma_csr_pbw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wr_intr_point:15;
        RBus_UInt32  res1:1;
        RBus_UInt32  write_len:15;
        RBus_UInt32  res2:1;
    };
}audio_adma_wconf_pbw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avail_length:15;
        RBus_UInt32  load_wr:1;
        RBus_UInt32  wr_buffer_length:15;
        RBus_UInt32  res1:1;
    };
}audio_adma_wrconf_pbw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ch_sel:3;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  wr_start_addr:26;
    };
}audio_adma_wsadr_pbw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  wr_intr_dma_status:1;
        RBus_UInt32  overflow_dma_status:1;
        RBus_UInt32  dma_write_enable:1;
        RBus_UInt32  dma_soft_wr_rst:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  int_wr_en:1;
        RBus_UInt32  aidmatype:1;
        RBus_UInt32  wr_channel_no:3;
        RBus_UInt32  pcm_random:1;
        RBus_UInt32  pre_fifo_en:1;
        RBus_UInt32  hbr_nonpcm:1;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  res2:10;
        RBus_UInt32  arb_req_3:1;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  dma_w_format:2;
        RBus_UInt32  dma_wr_src_sel:2;
    };
}audio_adma_csr_tsw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wr_intr_point:15;
        RBus_UInt32  res1:1;
        RBus_UInt32  write_len:15;
        RBus_UInt32  res2:1;
    };
}audio_adma_wconf_tsw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avail_length:15;
        RBus_UInt32  load_wr:1;
        RBus_UInt32  wr_buffer_length:15;
        RBus_UInt32  res1:1;
    };
}audio_adma_wrconf_tsw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ch_sel:3;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  wr_start_addr:26;
    };
}audio_adma_wsadr_tsw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  wr_intr_dma_status:1;
        RBus_UInt32  overflow_dma_status:1;
        RBus_UInt32  dma_write_enable:1;
        RBus_UInt32  dma_soft_wr_rst:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  int_wr_en:1;
        RBus_UInt32  aidmatype:1;
        RBus_UInt32  wr_channel_no:3;
        RBus_UInt32  pcm_random:1;
        RBus_UInt32  pre_fifo_en:1;
        RBus_UInt32  hbr_nonpcm:1;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  res2:10;
        RBus_UInt32  arb_req_5:1;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  dma_w_format:2;
        RBus_UInt32  dma_wr_src_sel:2;
    };
}audio_adma_csr_arcw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wr_intr_point:15;
        RBus_UInt32  res1:1;
        RBus_UInt32  write_len:15;
        RBus_UInt32  res2:1;
    };
}audio_adma_wconf_arcw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avail_length:15;
        RBus_UInt32  load_wr:1;
        RBus_UInt32  wr_buffer_length:15;
        RBus_UInt32  res1:1;
    };
}audio_adma_wrconf_arcw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ch_sel:3;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  wr_start_addr:26;
    };
}audio_adma_wsadr_arcw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  rd_intr_dma_status:1;
        RBus_UInt32  unflow_dma_status:1;
        RBus_UInt32  dma_read_enable:1;
        RBus_UInt32  dma_soft_rd_rst:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  int_rd_en:1;
        RBus_UInt32  aodmatype:1;
        RBus_UInt32  rd_channel_no:3;
        RBus_UInt32  nonpcm_1_buf_en:1;
        RBus_UInt32  rdma_to_en:1;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  res2:8;
        RBus_UInt32  arb_req_1:1;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  empty_gnt:1;
        RBus_UInt32  cur_st:2;
        RBus_UInt32  output_hold_en:1;
        RBus_UInt32  dma_r_format:1;
        RBus_UInt32  dma_output_src_sel:2;
    };
}audio_adma_csr_pbr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  read_intr_point:15;
        RBus_UInt32  res1:1;
        RBus_UInt32  read_len:15;
        RBus_UInt32  res2:1;
    };
}audio_adma_rconf_pbr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  read_length:15;
        RBus_UInt32  load_rd:1;
        RBus_UInt32  rd_buffer_length:15;
        RBus_UInt32  res1:1;
    };
}audio_adma_wrconf_pbr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ch_sel:3;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  rd_start_addr:26;
    };
}audio_adma_rsadr_pbr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  rd_intr_dma_status:1;
        RBus_UInt32  unflow_dma_status:1;
        RBus_UInt32  dma_read_enable:1;
        RBus_UInt32  dma_soft_rd_rst:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  int_rd_en:1;
        RBus_UInt32  aodmatype:1;
        RBus_UInt32  rd_channel_no:3;
        RBus_UInt32  nonpcm_1_buf_en:1;
        RBus_UInt32  rdma_to_en:1;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  res2:8;
        RBus_UInt32  arb_req_3:1;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  empty_gnt:1;
        RBus_UInt32  cur_st:2;
        RBus_UInt32  output_hold_en:1;
        RBus_UInt32  dma_r_format:1;
        RBus_UInt32  dma_output_src_sel:2;
    };
}audio_adma_csr_tsr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  read_intr_point:15;
        RBus_UInt32  res1:1;
        RBus_UInt32  read_len:15;
        RBus_UInt32  res2:1;
    };
}audio_adma_rconf_tsr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  read_length:15;
        RBus_UInt32  load_rd:1;
        RBus_UInt32  rd_buffer_length:15;
        RBus_UInt32  res1:1;
    };
}audio_adma_wrconf_tsr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ch_sel:3;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  rd_start_addr:26;
    };
}audio_adma_rsadr_tsr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  start_to_status:1;
        RBus_UInt32  rd_intr_dma_status:1;
        RBus_UInt32  unflow_dma_status:1;
        RBus_UInt32  dma_read_enable:1;
        RBus_UInt32  dma_soft_rd_rst:1;
        RBus_UInt32  dma_int_en:1;
        RBus_UInt32  int_rd_en:1;
        RBus_UInt32  aodmatype:1;
        RBus_UInt32  rd_channel_no:3;
        RBus_UInt32  nonpcm_1_buf_en:1;
        RBus_UInt32  rdma_to_en:1;
        RBus_UInt32  burst_to_en:1;
        RBus_UInt32  res2:8;
        RBus_UInt32  arb_req_5:1;
        RBus_UInt32  req_force0:1;
        RBus_UInt32  empty_gnt:1;
        RBus_UInt32  cur_st:2;
        RBus_UInt32  output_hold_en:1;
        RBus_UInt32  dma_r_format:1;
        RBus_UInt32  dma_output_src_sel:2;
    };
}audio_adma_csr_arcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  read_intr_point:15;
        RBus_UInt32  res1:1;
        RBus_UInt32  read_len:15;
        RBus_UInt32  res2:1;
    };
}audio_adma_rconf_arcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  read_length:15;
        RBus_UInt32  load_rd:1;
        RBus_UInt32  rd_buffer_length:15;
        RBus_UInt32  res1:1;
    };
}audio_adma_wrconf_arcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ch_sel:3;
        RBus_UInt32  get_adr:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  rd_start_addr:26;
    };
}audio_adma_rsadr_arcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  dma_up_limit:29;
    };
}audio_awdma_rule_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  dma_low_limit:29;
    };
}audio_awdma_rule1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_enable:1;
        RBus_UInt32  force_all_rst:1;
        RBus_UInt32  rtk_wr_soft_rst:1;
        RBus_UInt32  dummy18006668_7_3:5;
        RBus_UInt32  max_outstanding:2;
        RBus_UInt32  dummy18006668_31_10:22;
    };
}audio_awdma_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  zero_length_err:1;
        RBus_UInt32  exceed_range_err:1;
        RBus_UInt32  data_fifo_underflow_err:1;
        RBus_UInt32  soft_rst_with_data_left:1;
        RBus_UInt32  soft_rst_before_cmd_finish:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  cur_outstanding:3;
        RBus_UInt32  res2:5;
        RBus_UInt32  dma_data_water:4;
        RBus_UInt32  res3:8;
        RBus_UInt32  dma_cmd_water:3;
        RBus_UInt32  res4:1;
    };
}audio_awdma_status0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  selected_bl:8;
        RBus_UInt32  last_ack_num:8;
        RBus_UInt32  target_ack_num:8;
        RBus_UInt32  res1:6;
        RBus_UInt32  last_no_ack_error:1;
        RBus_UInt32  ack_num_error:1;
    };
}audio_awdma_status1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  addr_bl_sel:2;
        RBus_UInt32  res1:1;
        RBus_UInt32  selected_addr:29;
    };
}audio_awdma_status2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  highest_water_level:4;
        RBus_UInt32  res1:12;
        RBus_UInt32  monitor_thd:4;
        RBus_UInt32  res2:4;
        RBus_UInt32  reach_thd:1;
        RBus_UInt32  res3:5;
        RBus_UInt32  monitor_conti:1;
        RBus_UInt32  monitor_en:1;
    };
}audio_awdma_monitor_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  dma_up_limit:29;
    };
}audio_ardma_rule0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  dma_low_limit:29;
    };
}audio_ardma_rule1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dma_enable:1;
        RBus_UInt32  force_all_rst:1;
        RBus_UInt32  rtk_rd_soft_rst:1;
        RBus_UInt32  arb_rst_dly:5;
        RBus_UInt32  max_outstanding:2;
        RBus_UInt32  rdma_to_dly:4;
        RBus_UInt32  dummy18006684_31_14:18;
    };
}audio_ardma_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  zero_length_err:1;
        RBus_UInt32  exceed_range_err:1;
        RBus_UInt32  data_fifo_overflow_err:1;
        RBus_UInt32  soft_rst_with_data_left:1;
        RBus_UInt32  soft_rst_before_cmd_finish:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  cur_outstanding:3;
        RBus_UInt32  res2:5;
        RBus_UInt32  dma_data_water:4;
        RBus_UInt32  res3:8;
        RBus_UInt32  dma_cmd_water:3;
        RBus_UInt32  res4:1;
    };
}audio_ardma_status0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  selected_bl:8;
        RBus_UInt32  last_ack_num:8;
        RBus_UInt32  target_ack_num:8;
        RBus_UInt32  res1:6;
        RBus_UInt32  last_no_ack_error:1;
        RBus_UInt32  ack_num_error:1;
    };
}audio_ardma_status1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  addr_bl_sel:2;
        RBus_UInt32  res1:1;
        RBus_UInt32  selected_addr:29;
    };
}audio_ardma_status2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lowest_water_level:4;
        RBus_UInt32  res1:12;
        RBus_UInt32  monitor_thd:4;
        RBus_UInt32  res2:4;
        RBus_UInt32  reach_thd:1;
        RBus_UInt32  res3:5;
        RBus_UInt32  monitor_conti:1;
        RBus_UInt32  monitor_en:1;
    };
}audio_ardma_monitor_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  arc_wr_ena_sel:1;
        RBus_UInt32  ts_wr_ena_sel:1;
        RBus_UInt32  pb_wr_ena_sel:1;
        RBus_UInt32  test5:1;
        RBus_UInt32  test4:1;
        RBus_UInt32  test3:1;
        RBus_UInt32  test2:1;
        RBus_UInt32  test1:1;
        RBus_UInt32  test0:1;
        RBus_UInt32  ls_on:1;
    };
}audio_audio_dma_bist_control_indicate_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rm_0:4;
        RBus_UInt32  rme_0:1;
        RBus_UInt32  rm_1:4;
        RBus_UInt32  rme_1:1;
        RBus_UInt32  rm_2:4;
        RBus_UInt32  rme_2:1;
        RBus_UInt32  rm_3:4;
        RBus_UInt32  rme_3:1;
        RBus_UInt32  rm_4:4;
        RBus_UInt32  rme_4:1;
        RBus_UInt32  rm_5:4;
        RBus_UInt32  rme_5:1;
        RBus_UInt32  res1:2;
    };
}audio_audio_dma_bist_control_indicate2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eco_ifd_inv:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  test_dma_in_sel:3;
        RBus_UInt32  res2:24;
        RBus_UInt32  test_dma_en:1;
    };
}audio_test_dma_control_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  auto_volenable:1;
        RBus_UInt32  spatial_ctrlenable:1;
        RBus_UInt32  deq_enable:1;
        RBus_UInt32  loud_enable:1;
        RBus_UInt32  dvol_enable:1;
        RBus_UInt32  basic_premium_sel:1;
        RBus_UInt32  avc2_enable:1;
        RBus_UInt32  distortion_enable:1;
        RBus_UInt32  reg_pb_protect:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  res2:22;
    };
}audio_hw_process_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc_up_db:2;
        RBus_UInt32  avc_down_db:2;
        RBus_UInt32  avc_level_min:8;
        RBus_UInt32  avc_level_max:8;
        RBus_UInt32  avc_noise_thre:8;
        RBus_UInt32  avc_noise_gain:2;
        RBus_UInt32  avc_vol_detect:2;
    };
}audio_auto_volume_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc_mon_win:10;
        RBus_UInt32  avc_zc_win:10;
        RBus_UInt32  avc_cnt_thre:10;
        RBus_UInt32  res1:2;
    };
}audio_avc_volume_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc_small_cnt_thre:8;
        RBus_UInt32  avc_small_up_db:2;
        RBus_UInt32  avc_small_down_db:2;
        RBus_UInt32  avc_small_level_min:8;
        RBus_UInt32  avc_small_level_max:8;
        RBus_UInt32  avc1_coef:3;
        RBus_UInt32  avc_vol_amplif_enable:1;
    };
}audio_avc_volume_control_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc_small_level:16;
        RBus_UInt32  res1:16;
    };
}audio_avc_volume_control_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  f_coef:9;
        RBus_UInt32  res1:1;
        RBus_UInt32  spatial_in_r_sel:1;
        RBus_UInt32  spatial_in_l_sel:1;
        RBus_UInt32  seb_en:1;
        RBus_UInt32  psb_en:1;
        RBus_UInt32  apf_en:1;
        RBus_UInt32  spatial_zc_apply:1;
        RBus_UInt32  spatial_zc_win:12;
        RBus_UInt32  res2:4;
    };
}audio_spatial_effect_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  depth2:9;
        RBus_UInt32  res1:7;
        RBus_UInt32  depth1:9;
        RBus_UInt32  res2:7;
    };
}audio_spatial_effect_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_hp_a1:16;
        RBus_UInt32  eq_hp_slope:1;
        RBus_UInt32  res1:15;
    };
}audio_eq_hp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_lp_h0:16;
        RBus_UInt32  eq_lp_a1:16;
    };
}audio_eq_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp1_a2:16;
        RBus_UInt32  eq_bp1_a1:16;
    };
}audio_eq_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp1_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp2_a2:16;
        RBus_UInt32  eq_bp2_a1:16;
    };
}audio_eq_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp2_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp3_a2:16;
        RBus_UInt32  eq_bp3_a1:16;
    };
}audio_eq_bp3_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp3_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_bp3_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp4_a2:16;
        RBus_UInt32  eq_bp4_a1:16;
    };
}audio_eq_bp4_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp4_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_bp4_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp5_a2:16;
        RBus_UInt32  eq_bp5_a1:16;
    };
}audio_eq_bp5_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp5_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_bp5_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp6_a2:16;
        RBus_UInt32  eq_bp6_a1:16;
    };
}audio_eq_bp6_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp6_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_bp6_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp7_a2:16;
        RBus_UInt32  eq_bp7_a1:16;
    };
}audio_eq_bp7_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp7_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_bp7_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp8_a2:16;
        RBus_UInt32  eq_bp8_a1:16;
    };
}audio_eq_bp8_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp8_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_bp8_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp9_a2:16;
        RBus_UInt32  eq_bp9_a1:16;
    };
}audio_eq_bp9_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_bp9_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_eq_bp9_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_hp_enable:1;
        RBus_UInt32  eq_lp_enable:1;
        RBus_UInt32  eq_band1_enable:1;
        RBus_UInt32  eq_band2_enable:1;
        RBus_UInt32  eq_band3_enable:1;
        RBus_UInt32  eq_band4_enable:1;
        RBus_UInt32  eq_band5_enable:1;
        RBus_UInt32  eq_band6_enable:1;
        RBus_UInt32  eq_band7_enable:1;
        RBus_UInt32  eq_band8_enable:1;
        RBus_UInt32  eq_band9_enable:1;
        RBus_UInt32  res1:21;
    };
}audio_eq_control_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_eq_bypass_en:1;
        RBus_UInt32  reg_bypass_protect_en:1;
        RBus_UInt32  reg_eq_force_zero:1;
        RBus_UInt32  reg_zc_cross_mux:1;
        RBus_UInt32  reg_cross_compare_ctrl:2;
        RBus_UInt32  res1:3;
        RBus_UInt32  reg_wait_ctrl:4;
        RBus_UInt32  reg_detect_win:10;
        RBus_UInt32  reg_time_out_flag_l:1;
        RBus_UInt32  reg_time_out_flag_r:1;
        RBus_UInt32  reg_change_flag:1;
        RBus_UInt32  res2:6;
    };
}audio_eq_bypass_control_register_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_eq_path_threshold:15;
        RBus_UInt32  res1:17;
    };
}audio_eq_bypass_control_register_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  eq_hp_of:1;
        RBus_UInt32  eq_lp_of:1;
        RBus_UInt32  eq_band1_of:1;
        RBus_UInt32  eq_band2_of:1;
        RBus_UInt32  eq_band3_of:1;
        RBus_UInt32  eq_band4_of:1;
        RBus_UInt32  eq_band5_of:1;
        RBus_UInt32  eq_band6_of:1;
        RBus_UInt32  eq_band7_of:1;
        RBus_UInt32  eq_band8_of:1;
        RBus_UInt32  eq_band9_of:1;
        RBus_UInt32  res1:21;
    };
}audio_eq_status_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lr_loud_lp0_h0:16;
        RBus_UInt32  lr_loud_lp0_a1:16;
    };
}audio_lr_loud_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lr_loud_bp1_a2:16;
        RBus_UInt32  lr_loud_bp1_a1:16;
    };
}audio_lr_loud_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lr_loud_bp1_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_lr_loud_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lr_loud_bp2_a2:16;
        RBus_UInt32  lr_loud_bp2_a1:16;
    };
}audio_lr_loud_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lr_loud_bp2_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_lr_loud_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  csw_loud_lp0_h0:16;
        RBus_UInt32  csw_loud_lp0_a1:16;
    };
}audio_csw_loud_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  csw_loud_bp1_a2:16;
        RBus_UInt32  csw_loud_bp1_a1:16;
    };
}audio_csw_loud_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  csw_loud_bp1_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_csw_loud_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  csw_loud_bp2_a2:16;
        RBus_UInt32  csw_loud_bp2_a1:16;
    };
}audio_csw_loud_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  csw_loud_bp2_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_csw_loud_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsrs_loud_lp0_h0:16;
        RBus_UInt32  lsrs_loud_lp0_a1:16;
    };
}audio_lsrs_loud_lp_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsrs_loud_bp1_a2:16;
        RBus_UInt32  lsrs_loud_bp1_a1:16;
    };
}audio_lsrs_loud_bp1_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsrs_loud_bp1_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_lsrs_loud_bp1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsrs_loud_bp2_a2:16;
        RBus_UInt32  lsrs_loud_bp2_a1:16;
    };
}audio_lsrs_loud_bp2_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsrs_loud_bp2_h0:16;
        RBus_UInt32  res1:16;
    };
}audio_lsrs_loud_bp2_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ld_bpf2_en_lr:1;
        RBus_UInt32  ld_bpf1_en_lr:1;
        RBus_UInt32  ld_lpf_en_lr:1;
        RBus_UInt32  ld_bpf2_en_csw:1;
        RBus_UInt32  ld_bpf1_en_csw:1;
        RBus_UInt32  ld_lpf_en_csw:1;
        RBus_UInt32  ld_bpf2_en_lsrs:1;
        RBus_UInt32  ld_bpf1_en_lsrs:1;
        RBus_UInt32  ld_lpf_en_lsrs:1;
        RBus_UInt32  res1:23;
    };
}audio_loudness_control_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ld_bpf2_of_lr:1;
        RBus_UInt32  ld_bpf1_of_lr:1;
        RBus_UInt32  ld_lpf_of_lr:1;
        RBus_UInt32  ld_bpf2_of_csw:1;
        RBus_UInt32  ld_bpf1_of_csw:1;
        RBus_UInt32  ld_lpf_of_csw:1;
        RBus_UInt32  ld_bpf2_of_lsrs:1;
        RBus_UInt32  ld_bpf1_of_lsrs:1;
        RBus_UInt32  ld_lpf_of_lsrs:1;
        RBus_UInt32  res1:23;
    };
}audio_loudness_status_register_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dvcm:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  zcth:5;
        RBus_UInt32  res2:3;
        RBus_UInt32  reg_zero_in_en:1;
        RBus_UInt32  reg_in_thre:5;
        RBus_UInt32  res3:14;
    };
}audio_digital_volume_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  delay_ctrl_mute:10;
        RBus_UInt32  ramp_step_mute:2;
        RBus_UInt32  zcto_mute:3;
        RBus_UInt32  mute_apply:1;
        RBus_UInt32  delay_ctrl:10;
        RBus_UInt32  ramp_step:2;
        RBus_UInt32  zcto:3;
        RBus_UInt32  dvol_apply:1;
    };
}audio_digital_volume_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vol_r_b:6;
        RBus_UInt32  vol_r_a:5;
        RBus_UInt32  vol_r_ready:1;
        RBus_UInt32  hpf_r_enable:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  rep_r_status:1;
        RBus_UInt32  mute_r:1;
        RBus_UInt32  vol_l_b:6;
        RBus_UInt32  vol_l_a:5;
        RBus_UInt32  vol_l_ready:1;
        RBus_UInt32  hpf_l_enable:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  rep_l_status:1;
        RBus_UInt32  mute_l:1;
    };
}audio_lr_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vol_rs_b:6;
        RBus_UInt32  vol_rs_a:5;
        RBus_UInt32  vol_rs_ready:1;
        RBus_UInt32  hpf_rs_enable:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  rep_rs_status:1;
        RBus_UInt32  mute_rs:1;
        RBus_UInt32  vol_ls_b:6;
        RBus_UInt32  vol_ls_a:5;
        RBus_UInt32  vol_ls_ready:1;
        RBus_UInt32  hpf_ls_enable:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  rep_ls_status:1;
        RBus_UInt32  mute_ls:1;
    };
}audio_lsrs_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vol_sw_b:6;
        RBus_UInt32  vol_sw_a:5;
        RBus_UInt32  vol_sw_ready:1;
        RBus_UInt32  hpf_sw_enable:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  rep_sw_status:1;
        RBus_UInt32  mute_sw:1;
        RBus_UInt32  vol_c_b:6;
        RBus_UInt32  vol_c_a:5;
        RBus_UInt32  vol_c_ready:1;
        RBus_UInt32  hpf_c_enable:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  rep_c_status:1;
        RBus_UInt32  mute_c:1;
    };
}audio_csw_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  double_buffer_ack:1;
        RBus_UInt32  zcto_status:1;
        RBus_UInt32  res1:30;
    };
}audio_double_buffer_ack_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_noise_thre:16;
        RBus_UInt32  avc2_noise_gain:2;
        RBus_UInt32  down_db:2;
        RBus_UInt32  fast_up_db:2;
        RBus_UInt32  slow_up_db:2;
        RBus_UInt32  fast_recov_ctrl:1;
        RBus_UInt32  avc2_vol_detect:2;
        RBus_UInt32  avc2_lpf_coef:3;
        RBus_UInt32  avc2_vol_amplif_enable:1;
        RBus_UInt32  avc2_nr_det_only:1;
    };
}audio_avc2_control_1_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_mon_win:10;
        RBus_UInt32  avc2_zc_win:10;
        RBus_UInt32  avc2_cnt_thre:10;
        RBus_UInt32  avc2_nr_flag:1;
        RBus_UInt32  avc2_nr_mute:1;
    };
}audio_avc2_control_2_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  recov_win_min:8;
        RBus_UInt32  recov_win_max:8;
        RBus_UInt32  avc2_noise_thre_hi:16;
    };
}audio_avc2_control_3_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_level_min:16;
        RBus_UInt32  avc2_level_max:16;
    };
}audio_avc2_control_4_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_small_cnt_thre:8;
        RBus_UInt32  avc2_small_down_db:2;
        RBus_UInt32  avc2_small_up_db:2;
        RBus_UInt32  res1:20;
    };
}audio_avc2_control_5_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_small_level_min:16;
        RBus_UInt32  avc2_small_level_max:16;
    };
}audio_avc2_control_6_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_small_level:31;
        RBus_UInt32  res1:1;
    };
}audio_avc2_control_7_ch01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_noise_thre_lsrs:16;
        RBus_UInt32  avc2_noise_gain_lsrs:2;
        RBus_UInt32  down_db_lsrs:2;
        RBus_UInt32  fast_up_db_lsrs:2;
        RBus_UInt32  slow_up_db_lsrs:2;
        RBus_UInt32  fast_recov_ctrl_lsrs:1;
        RBus_UInt32  avc2_vol_detect_lsrs:2;
        RBus_UInt32  avc2_lpf_coef_lsrs:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  avc2_nr_det_only_lsrs:1;
    };
}audio_avc2_control_1_ch23_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_mon_win_lsrs:10;
        RBus_UInt32  avc2_zc_win_lsrs:10;
        RBus_UInt32  avc2_cnt_thre_lsrs:10;
        RBus_UInt32  avc2_nr_flag_lsrs:1;
        RBus_UInt32  avc2_nr_mute_lsrs:1;
    };
}audio_avc2_control_2_ch23_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  recov_win_min_lsrs:8;
        RBus_UInt32  recov_win_max_lsrs:8;
        RBus_UInt32  avc2_noise_thre_hi_lsrs:16;
    };
}audio_avc2_control_3_ch23_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_level_min_lsrs:16;
        RBus_UInt32  avc2_level_max_lsrs:16;
    };
}audio_avc2_control_4_ch23_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_noise_thre_csw:16;
        RBus_UInt32  avc2_noise_gain_csw:2;
        RBus_UInt32  down_db_csw:2;
        RBus_UInt32  fast_up_db_csw:2;
        RBus_UInt32  slow_up_db_csw:2;
        RBus_UInt32  fast_recov_ctrl_csw:1;
        RBus_UInt32  avc2_vol_detect_csw:2;
        RBus_UInt32  avc2_lpf_coef_csw:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  avc2_nr_det_only_csw:1;
    };
}audio_avc2_control_1_ch45_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_mon_win_csw:10;
        RBus_UInt32  avc2_zc_win_csw:10;
        RBus_UInt32  avc2_cnt_thre_csw:10;
        RBus_UInt32  avc2_nr_flag_csw:1;
        RBus_UInt32  avc2_nr_mute_csw:1;
    };
}audio_avc2_control_2_ch45_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  recov_win_min_csw:8;
        RBus_UInt32  recov_win_max_csw:8;
        RBus_UInt32  avc2_noise_thre_hi_csw:16;
    };
}audio_avc2_control_3_ch45_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_level_min_csw:16;
        RBus_UInt32  avc2_level_max_csw:16;
    };
}audio_avc2_control_4_ch45_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_noise_thre_ch67:16;
        RBus_UInt32  avc2_noise_gain_ch67:2;
        RBus_UInt32  down_db_ch67:2;
        RBus_UInt32  fast_up_db_ch67:2;
        RBus_UInt32  slow_up_db_ch67:2;
        RBus_UInt32  fast_recov_ctrl_ch67:1;
        RBus_UInt32  avc2_vol_detect_ch67:2;
        RBus_UInt32  avc2_lpf_coef_ch67:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  avc2_nr_det_only_ch67:1;
    };
}audio_avc2_control_1_ch67_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_mon_win_ch67:10;
        RBus_UInt32  avc2_zc_win_ch67:10;
        RBus_UInt32  avc2_cnt_thre_ch67:10;
        RBus_UInt32  avc2_nr_flag_ch67:1;
        RBus_UInt32  avc2_nr_mute_ch67:1;
    };
}audio_avc2_control_2_ch67_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  recov_win_min_ch67:8;
        RBus_UInt32  recov_win_max_ch67:8;
        RBus_UInt32  avc2_noise_thre_hi_ch67:16;
    };
}audio_avc2_control_3_ch67_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_level_min_ch67:16;
        RBus_UInt32  avc2_level_max_ch67:16;
    };
}audio_avc2_control_4_ch67_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  w_ch_mix_factor:2;
        RBus_UInt32  w_ch_01_factor:2;
        RBus_UInt32  hw_mixing_sel:2;
        RBus_UInt32  res1:26;
    };
}audio_hw_out_trans_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  loudness_ovf:1;
        RBus_UInt32  eq_ovf:1;
        RBus_UInt32  dvol_done:1;
        RBus_UInt32  res1:12;
        RBus_UInt32  dvol_int_en:1;
        RBus_UInt32  loudness_ovf_en:1;
        RBus_UInt32  eq_ovf_en:1;
        RBus_UInt32  res2:14;
    };
}audio_system_int_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc_lp_out:24;
        RBus_UInt32  res1:8;
    };
}audio_avc_lp_out_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006818_31_0:32;
    };
}audio_dummy_6718_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy1800681c_31_0:32;
    };
}audio_dummy_671c_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ch01_scale_b:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  ch01_scale_a:4;
        RBus_UInt32  ch23_scale_b:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  ch23_scale_a:4;
        RBus_UInt32  ch45_scale_b:3;
        RBus_UInt32  res3:1;
        RBus_UInt32  ch45_scale_a:4;
        RBus_UInt32  ch67_scale_b:3;
        RBus_UInt32  res4:1;
        RBus_UInt32  ch67_scale_a:4;
    };
}audio_hw_in_pre_scale_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dist_up_db:2;
        RBus_UInt32  dist_up_db_fine:2;
        RBus_UInt32  dist_low_thre:8;
        RBus_UInt32  dist_high_thre:8;
        RBus_UInt32  dist_coef:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  dist_down_db:2;
        RBus_UInt32  dist_down_db_fine:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  dist_vol_detect:2;
    };
}audio_hw_distortion_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dist_mon_win:10;
        RBus_UInt32  dist_zc_win:10;
        RBus_UInt32  dist_cnt_thre:10;
        RBus_UInt32  res1:2;
    };
}audio_hw_distortion_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_hi_threshold:16;
        RBus_UInt32  avc2_detect_samples:15;
        RBus_UInt32  avc2_count_reset:1;
    };
}audio_avc2_distortion_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_max_energy_l:16;
        RBus_UInt32  avc2_count_l:15;
        RBus_UInt32  res1:1;
    };
}audio_avc2_distortion_status_l_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avc2_max_energy_r:16;
        RBus_UInt32  avc2_count_r:15;
        RBus_UInt32  res1:1;
    };
}audio_avc2_distortion_status_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  step_cnt_low_thre:8;
        RBus_UInt32  step_cnt_high_thre:8;
        RBus_UInt32  step_mag_thre:8;
        RBus_UInt32  res1:8;
    };
}audio_hw_distortion_control_gain_step_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lrrr_delay_ctrl_mute:10;
        RBus_UInt32  lrrr_ramp_step_mute:2;
        RBus_UInt32  lrrr_zcto_mute:3;
        RBus_UInt32  lrrr_mute_apply:1;
        RBus_UInt32  lrrr_delay_ctrl:10;
        RBus_UInt32  lrrr_ramp_step:2;
        RBus_UInt32  lrrr_zcto:3;
        RBus_UInt32  lrrr_dvol_apply:1;
    };
}audio_lrrr_digital_volume_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lrrr_dvcm:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  lrrr_zcth:5;
        RBus_UInt32  lrrr_zcto_status:1;
        RBus_UInt32  lrrr_dvol_enable:1;
        RBus_UInt32  res2:21;
    };
}audio_lrrr_digital_volume_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vol_rr_b:6;
        RBus_UInt32  vol_rr_a:5;
        RBus_UInt32  vol_rr_ready:1;
        RBus_UInt32  hpf_rr_enable:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  mute_rr:1;
        RBus_UInt32  vol_lr_b:6;
        RBus_UInt32  vol_lr_a:5;
        RBus_UInt32  vol_lr_ready:1;
        RBus_UInt32  hpf_lr_enable:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  mute_lr:1;
    };
}audio_lrrr_digital_volume_control_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy1800690c_31_0:32;
    };
}audio_ts_ds_mbist_recoding_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vol_source_sel:1;
        RBus_UInt32  down_sample_rate:2;
        RBus_UInt32  res1:29;
    };
}audio_dvol_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  debug_mode_sel:9;
        RBus_UInt32  res1:3;
        RBus_UInt32  sif_adc_in_test_sel:1;
        RBus_UInt32  sif_adc_in_test_en:1;
        RBus_UInt32  res2:18;
    };
}audio_test_pattern_gen_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_crc_header:24;
        RBus_UInt32  res1:8;
    };
}audio_crc_header_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_crc_frame_length:16;
        RBus_UInt32  audio_crc_ch_sel:3;
        RBus_UInt32  audio_crc_en:1;
        RBus_UInt32  res1:12;
    };
}audio_crc_contorl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_crc:24;
        RBus_UInt32  audio_crc_done:1;
        RBus_UInt32  res1:7;
    };
}audio_crc_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  zc_sample_cnt_golden:12;
        RBus_UInt32  zc_sample_cnt_threshold:6;
        RBus_UInt32  res1:2;
        RBus_UInt32  amplitude_low_threshold:2;
        RBus_UInt32  half_sine_num:2;
        RBus_UInt32  auto_chk_result:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  sine_channel_select:3;
        RBus_UInt32  sine_auto_chk_en:1;
    };
}audio_sine_auto_chk_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  zc_sample_cnt:12;
        RBus_UInt32  sine_amplitude:8;
        RBus_UInt32  res1:12;
    };
}audio_sine_wave_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006a18_31_0:32;
    };
}audio_pattern_gen_dummy_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  to_ack_en:1;
        RBus_UInt32  dummy18006a50_3_1:3;
        RBus_UInt32  rbus_timeout_thr:10;
        RBus_UInt32  res1:18;
    };
}audio_rbus_ack_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ack_fail_addr:12;
        RBus_UInt32  ack_fail_rw:1;
        RBus_UInt32  res1:19;
    };
}audio_ack_fail_info_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pcr_earc_delta:32;
    };
}audio_aud_90k_cnt_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pcr_90k_cnt:17;
        RBus_UInt32  res1:15;
    };
}audio_aud_90k_cnt_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  data_rate_sel:4;
        RBus_UInt32  time_interval_sel:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  sw_rate:11;
        RBus_UInt32  res2:11;
        RBus_UInt32  aud_pcr_a_b_sel:1;
        RBus_UInt32  pcr_earc_counter_en:1;
    };
}audio_aud_90k_cnt_ctrl3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_bist_mode_msd:1;
        RBus_UInt32  audio_bist_mode_am:1;
        RBus_UInt32  audio_bist_mode_a2_eiaj:1;
        RBus_UInt32  audio_bist_mode_dma:1;
        RBus_UInt32  res1:28;
    };
}audio_audio_bist_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_bist_done_msd:1;
        RBus_UInt32  audio_bist_done_am:1;
        RBus_UInt32  audio_bist_done_a2_eiaj:1;
        RBus_UInt32  audio_bist_done_dma:1;
        RBus_UInt32  res1:28;
    };
}audio_audio_bist_done_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_bist_fail_group_msd:1;
        RBus_UInt32  audio_bist_fail_group_am:1;
        RBus_UInt32  audio_bist_fail_group_a2_eiaj:1;
        RBus_UInt32  audio_bist_fail_group_dma:1;
        RBus_UInt32  res1:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:18;
    };
}audio_audio_bist_fail_group_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_bist_a2_eiaj_fail_0:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_1:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_2:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_3:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_4:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_5:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_6:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_7:1;
        RBus_UInt32  audio_bist_a2_eiaj_fail_8:1;
        RBus_UInt32  audio_bist_dma_fail_0:1;
        RBus_UInt32  audio_bist_dma_fail_1:1;
        RBus_UInt32  audio_bist_dma_fail_2:1;
        RBus_UInt32  audio_bist_dma_fail_3:1;
        RBus_UInt32  audio_bist_dma_fail_4:1;
        RBus_UInt32  audio_bist_dma_fail_5:1;
        RBus_UInt32  res1:17;
    };
}audio_audio_bist_a2_eiaj_fail_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_drf_mode_msd:1;
        RBus_UInt32  audio_drf_mode_am:1;
        RBus_UInt32  audio_drf_mode_a2_eiaj:1;
        RBus_UInt32  audio_drf_mode_dma:1;
        RBus_UInt32  res1:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:18;
    };
}audio_audio_drf_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_drf_resume_msd:1;
        RBus_UInt32  audio_drf_resume_am:1;
        RBus_UInt32  audio_drf_resume_a2_eiaj:1;
        RBus_UInt32  audio_drf_resume_dma:1;
        RBus_UInt32  res1:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:18;
    };
}audio_audio_drf_resume_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_drf_done_msd:1;
        RBus_UInt32  audio_drf_done_am:1;
        RBus_UInt32  audio_drf_done_a2_eiaj:1;
        RBus_UInt32  audio_drf_done_dma:1;
        RBus_UInt32  res1:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:18;
    };
}audio_audio_drf_done_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_drf_pause_msd:1;
        RBus_UInt32  audio_drf_pause_am:1;
        RBus_UInt32  audio_drf_pause_a2_eiaj:1;
        RBus_UInt32  audio_drf_pause_dma:1;
        RBus_UInt32  res1:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:18;
    };
}audio_audio_drf_pause_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_drf_fail_group_msd:1;
        RBus_UInt32  audio_drf_fail_group_am:1;
        RBus_UInt32  audio_drf_fail_group_a2_eiaj:1;
        RBus_UInt32  audio_drf_fail_group_dma:1;
        RBus_UInt32  res1:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  res4:18;
    };
}audio_audio_drf_fail_group_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  audio_drf_a2_eiaj_fail_0:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_1:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_2:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_3:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_4:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_5:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_6:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_7:1;
        RBus_UInt32  audio_drf_a2_eiaj_fail_8:1;
        RBus_UInt32  audio_drf_dma_fail_0:1;
        RBus_UInt32  audio_drf_dma_fail_1:1;
        RBus_UInt32  audio_drf_dma_fail_2:1;
        RBus_UInt32  audio_drf_dma_fail_3:1;
        RBus_UInt32  audio_drf_dma_fail_4:1;
        RBus_UInt32  audio_drf_dma_fail_5:1;
        RBus_UInt32  res1:17;
    };
}audio_audio_drf_a2_eiaj_fail_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_vr_adc2_dmic_boost_gain_r:2;
        RBus_UInt32  reg_vr_adc2_dmic_boost_gain_l:2;
        RBus_UInt32  reg_vr_adc2_ad_zdet_func:2;
        RBus_UInt32  reg_vr_adc2_ad_zdet_tout:2;
        RBus_UInt32  reg_vr_adc2_ad_mute_r:1;
        RBus_UInt32  reg_vr_adc2_ad_mute_l:1;
        RBus_UInt32  reg_vr_adc2_ad_gain_r:7;
        RBus_UInt32  reg_vr_adc2_ad_gain_l:7;
        RBus_UInt32  reg_vr_adc2_ad_comp_gain:2;
        RBus_UInt32  reg_vr_adc2_ad_hpf_en:1;
        RBus_UInt32  reg_vr_adc2_dmic_lpf2nd_fc_sel:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  reg_vr_adc2_dmicr_ri_fa_sel:1;
        RBus_UInt32  reg_vr_adc2_dmicl_ri_fa_sel:1;
    };
}audio_vr_adfilter_ctrl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_vr_adc3_dmic_boost_gain_r:2;
        RBus_UInt32  reg_vr_adc3_dmic_boost_gain_l:2;
        RBus_UInt32  reg_vr_adc3_ad_zdet_func:2;
        RBus_UInt32  reg_vr_adc3_ad_zdet_tout:2;
        RBus_UInt32  reg_vr_adc3_ad_mute_r:1;
        RBus_UInt32  reg_vr_adc3_ad_mute_l:1;
        RBus_UInt32  reg_vr_adc3_ad_gain_r:7;
        RBus_UInt32  reg_vr_adc3_ad_gain_l:7;
        RBus_UInt32  reg_vr_adc3_ad_comp_gain:2;
        RBus_UInt32  reg_vr_adc3_ad_hpf_en:1;
        RBus_UInt32  reg_vr_adc3_dmic_lpf2nd_fc_sel:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  reg_vr_adc3_dmicr_ri_fa_sel:1;
        RBus_UInt32  reg_vr_adc3_dmicl_ri_fa_sel:1;
    };
}audio_adfilter_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_vr_srcin_out_ad_comp_gain:2;
        RBus_UInt32  reg_vr_srcin_fb_ad_comp_gain:2;
        RBus_UInt32  reg_vr_srcin_dither_sel:3;
        RBus_UInt32  reg_vr_srcin_out_ad_hpf_en:1;
        RBus_UInt32  reg_vr_srcin_fb_ad_hpf_en:1;
        RBus_UInt32  reg_vr_srcin_dahpf_en:1;
        RBus_UInt32  vr_out_lr_sync:1;
        RBus_UInt32  res1:14;
        RBus_UInt32  reg_asrc_fifo_in_sel:2;
        RBus_UInt32  hw2asrc_full:1;
        RBus_UInt32  hw2asrc_empty:1;
        RBus_UInt32  hw2asrc_overflow:1;
        RBus_UInt32  hw2asrc_underflow:1;
        RBus_UInt32  hw2asrc_en:1;
    };
}audio_adfilter_ctrl_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc4_lr_sel:2;
        RBus_UInt32  adc4_in_sel:1;
        RBus_UInt32  adc4_dmic_lpf1st_fc_sel:3;
        RBus_UInt32  reg_vr_adc3_dmic_lpf1st_fc_sel:3;
        RBus_UInt32  reg_vr_adc2_dmic_lpf1st_fc_sel:3;
        RBus_UInt32  reg_vr_adc3_src_en:1;
        RBus_UInt32  reg_vr_adc2_src_en:1;
        RBus_UInt32  reg_vr_adc3_dmic_lpf1st_en:1;
        RBus_UInt32  reg_vr_adc2_dmic_lpf1st_en:1;
        RBus_UInt32  res1:16;
    };
}audio_adfilter_dmic_src_reg_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc4_dmicr_ri_fa_sel:1;
        RBus_UInt32  adc4_dmicl_ri_fa_sel:1;
        RBus_UInt32  adc4_dmic_lpf2nd_fc_sel:1;
        RBus_UInt32  adc4_dmic_lpf1st_en:1;
        RBus_UInt32  adc4_dmic_boost_gain_r:2;
        RBus_UInt32  adc4_dmic_boost_gain_l:2;
        RBus_UInt32  adc4_ad_zdet_func:2;
        RBus_UInt32  adc4_ad_zdet_tout:2;
        RBus_UInt32  adc4_src_en:1;
        RBus_UInt32  adc4_ad_mute_r:1;
        RBus_UInt32  adc4_ad_mute_l:1;
        RBus_UInt32  adc4_ad_hpf_en:1;
        RBus_UInt32  adc4_ad_gain_r:7;
        RBus_UInt32  adc4_ad_gain_l:7;
        RBus_UInt32  adc4_ad_comp_gain:2;
    };
}audio_adfilter_src_4_reg_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dac1_gain_r:8;
        RBus_UInt32  dac1_gain_l:8;
        RBus_UInt32  dac0_gain_r:8;
        RBus_UInt32  dac0_gain_l:8;
    };
}audio_dafilter_src_reg_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dac_zdet_func:2;
        RBus_UInt32  dac_zdet_tout:2;
        RBus_UInt32  dac1_mute_r:1;
        RBus_UInt32  dac1_mute_l:1;
        RBus_UInt32  dac1_hpf_en:1;
        RBus_UInt32  dac1_dither_sel:2;
        RBus_UInt32  dac0_mute_r:1;
        RBus_UInt32  dac0_mute_l:1;
        RBus_UInt32  dac0_hpf_en:1;
        RBus_UInt32  dac0_dither_sel:2;
        RBus_UInt32  daad_lp_en:1;
        RBus_UInt32  da0_fifo_full_pending:1;
        RBus_UInt32  da0_fifo_empty_pending:1;
        RBus_UInt32  da0_fifo_full:1;
        RBus_UInt32  da0_fifo_empty:1;
        RBus_UInt32  da1_fifo_full_pending:1;
        RBus_UInt32  da1_fifo_empty_pending:1;
        RBus_UInt32  da1_fifo_full:1;
        RBus_UInt32  da1_fifo_empty:1;
        RBus_UInt32  res1:9;
    };
}audio_dafilter_src_reg_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dac0_pcm_source_sel:4;
        RBus_UInt32  dac0_hw_out_limiter:7;
        RBus_UInt32  dac0_hw_out_limiter_en:1;
        RBus_UInt32  dac0_hw_r_inverter_en:1;
        RBus_UInt32  dac0_hw_l_inverter_en:1;
        RBus_UInt32  dac1_swap_sel:2;
        RBus_UInt32  dac0_swap_sel:2;
        RBus_UInt32  dac1_pcm_source_sel:4;
        RBus_UInt32  dac1_hw_out_limiter:7;
        RBus_UInt32  dac1_hw_out_limiter_en:1;
        RBus_UInt32  dac1_hw_r_inverter_en:1;
        RBus_UInt32  dac1_hw_l_inverter_en:1;
    };
}audio_dac0_1_src_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dvcm:2;
        RBus_UInt32  adc4_r_inverter_en:1;
        RBus_UInt32  adc4_l_inverter_en:1;
        RBus_UInt32  zcth:5;
        RBus_UInt32  res1:3;
        RBus_UInt32  reg_zero_in_en:1;
        RBus_UInt32  reg_in_thre:5;
        RBus_UInt32  res2:13;
        RBus_UInt32  adc_dvol_enable:1;
    };
}audio_adc_digital_volume_control_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  delay_ctrl_mute:10;
        RBus_UInt32  ramp_step_mute:2;
        RBus_UInt32  zcto_mute:3;
        RBus_UInt32  mute_apply:1;
        RBus_UInt32  delay_ctrl:10;
        RBus_UInt32  ramp_step:2;
        RBus_UInt32  zcto:3;
        RBus_UInt32  dvol_apply:1;
    };
}audio_adc_digital_volume_control_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vol_r_b:6;
        RBus_UInt32  vol_r_a:5;
        RBus_UInt32  vol_r_ready:1;
        RBus_UInt32  hpf_r_enable:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  rep_r_status:1;
        RBus_UInt32  mute_r:1;
        RBus_UInt32  vol_l_b:6;
        RBus_UInt32  vol_l_a:5;
        RBus_UInt32  vol_l_ready:1;
        RBus_UInt32  hpf_l_enable:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  rep_l_status:1;
        RBus_UInt32  mute_l:1;
    };
}audio_adc_lr_digital_volume_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  double_buffer_ack:1;
        RBus_UInt32  zcto_status:1;
        RBus_UInt32  res1:30;
    };
}audio_adc_double_buffer_ack_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_adcfe_mutel:7;
        RBus_UInt32  res1:11;
        RBus_UInt32  reg_bb_adcfe_muter:7;
        RBus_UInt32  res2:7;
    };
}audio_analog_frontend1_mute_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_adcfe2_mutel:7;
        RBus_UInt32  res1:11;
        RBus_UInt32  reg_bb_adcfe2_muter:7;
        RBus_UInt32  res2:7;
    };
}audio_analog_frontend2_mute_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_aio1_mutel:6;
        RBus_UInt32  reg_bb_aio2_mutel:6;
        RBus_UInt32  res1:6;
        RBus_UInt32  reg_bb_hpo_mutel:7;
        RBus_UInt32  res2:6;
        RBus_UInt32  reg_bb_hpo_bias_sel:1;
    };
}audio_analog_aio_hpout_lineout_l_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_aio1_muter:6;
        RBus_UInt32  reg_bb_aio2_muter:6;
        RBus_UInt32  res1:6;
        RBus_UInt32  reg_bb_hpo_muter:7;
        RBus_UInt32  res2:7;
    };
}audio_analog_aio_hpout_lineout_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_adcfe_gselr:2;
        RBus_UInt32  reg_bb_adcfe_gsell:2;
        RBus_UInt32  reg_bb_adcfe2_gselr:2;
        RBus_UInt32  reg_bb_adcfe2_gsell:2;
        RBus_UInt32  res1:24;
    };
}audio_adc_volume_gain_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  reg_bb_aio2_pow:1;
        RBus_UInt32  reg_bb_aio1_pow:1;
        RBus_UInt32  reg_bb_hpo_pow:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  res3:1;
        RBus_UInt32  reg_bb_mbias_pow:1;
        RBus_UInt32  reg_bb_dac_pow:2;
        RBus_UInt32  reg_bb_adc_pow:1;
        RBus_UInt32  reg_bb_adcfe_pow:1;
        RBus_UInt32  reg_bb_adc2_pow:1;
        RBus_UInt32  reg_bb_adcfe2_pow:1;
        RBus_UInt32  res4:18;
    };
}audio_analog_power_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  afe_pga_vol:9;
        RBus_UInt32  fix_gain:4;
        RBus_UInt32  option_gain:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  reg_bb_adcfe_input_20k:1;
        RBus_UInt32  reg_bb_hpo_hpmode:1;
        RBus_UInt32  res2:14;
    };
}audio_analog_pga_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_isel_adc_aa:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  reg_bb_isel_adcfe:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  res3:4;
        RBus_UInt32  reg_bb_isel_dac:2;
        RBus_UInt32  res4:2;
        RBus_UInt32  res5:2;
        RBus_UInt32  reg_bb_isel_depop:2;
        RBus_UInt32  res6:2;
        RBus_UInt32  reg_bb_isel_hpo:2;
        RBus_UInt32  reg_bb_isel_aio2:2;
        RBus_UInt32  reg_bb_isel_aio1:2;
        RBus_UInt32  reg_bb_isel_vref:2;
        RBus_UInt32  reg_bb_isel_adc_vcm:2;
    };
}audio_analog_ci01_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  reg_bb_adc_fset:2;
        RBus_UInt32  reg_bb_adc_ckxen:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  reg_bb_adc2_fset:1;
        RBus_UInt32  reg_bb_adc2_ckxen:1;
        RBus_UInt32  reg_bb_adc_ossel:2;
        RBus_UInt32  reg_bb_adc2_ossel:2;
        RBus_UInt32  res3:16;
        RBus_UInt32  reg_bb_isel_micbst:2;
        RBus_UInt32  reg_bb_isel_micbias:2;
    };
}audio_analog_ci02_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_isel_adc2_aa:2;
        RBus_UInt32  reg_bb_isel_adc2_comp:2;
        RBus_UInt32  reg_bb_isel_adcfe2:2;
        RBus_UInt32  reg_bb_isel_adc2_ref:2;
        RBus_UInt32  reg_bb_isel_adc2_st1:2;
        RBus_UInt32  reg_bb_isel_adc2_st2:2;
        RBus_UInt32  res1:18;
        RBus_UInt32  reg_bb_isel_adc2_vcm:2;
    };
}audio_analog_ci03_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sel_bb_ck_depop:3;
        RBus_UInt32  bb_ck_depop_en:1;
        RBus_UInt32  reg_bb_dpramp_enramp:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  reg_bb_aio_endp:1;
        RBus_UInt32  reg_bb_hpo_endp:1;
        RBus_UInt32  reg_bb_isel_adc_core:2;
        RBus_UInt32  reg_bb_refgen_vref_vrefsel:2;
        RBus_UInt32  reg_bb_isel_refgen:2;
        RBus_UInt32  reg_bb_refgen_vrp_pow:1;
        RBus_UInt32  reg_bb_refgen_vref_pow:1;
        RBus_UInt32  reg_bb_refgen_vref_bypass:1;
        RBus_UInt32  res2:13;
    };
}audio_analog_depop1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  reg_bb_aio2_normal:1;
        RBus_UInt32  reg_bb_aio1_normal:1;
        RBus_UInt32  reg_bb_hpo_normal:1;
        RBus_UInt32  reg_bb_dpramp_csel:2;
        RBus_UInt32  reg_bb_dpramp_pow:1;
        RBus_UInt32  res2:25;
    };
}audio_analog_depop2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  reg_bb_hpo_gselr:2;
        RBus_UInt32  reg_bb_hpo_gsell:2;
        RBus_UInt32  res1:20;
        RBus_UInt32  reg_bb_hpo_engr:1;
        RBus_UInt32  reg_bb_hpo_engl:1;
        RBus_UInt32  res2:6;
    };
}audio_analog_post_gain_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:32;
    };
}audio_analog_out_copy_swap_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:13;
        RBus_UInt32  reg_bb_micbias_enchx:1;
        RBus_UInt32  reg_bb_micbias_oc:1;
        RBus_UInt32  mic_short_det_status:1;
        RBus_UInt32  mic_short_det_sticky_en:1;
        RBus_UInt32  mic_short_det_polarity:1;
        RBus_UInt32  mic_short_det_conf:1;
        RBus_UInt32  reg_bb_micbst_pow:2;
        RBus_UInt32  reg_bb_micbias_pow:1;
        RBus_UInt32  reg_bb_micbias_powshdt:1;
        RBus_UInt32  reg_bb_micbias_ocsel:2;
        RBus_UInt32  reg_bb_micbias_vset:1;
        RBus_UInt32  reg_bb_micbst_gselr:2;
        RBus_UInt32  reg_bb_micbst_gsell:2;
        RBus_UInt32  reg_bb_micbst_endfr:1;
        RBus_UInt32  reg_bb_micbst_endfl:1;
    };
}audio_amic1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:32;
    };
}audio_analog_gpio_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  res2:8;
        RBus_UInt32  res3:8;
        RBus_UInt32  reg_bb_micbst_enpdrr:1;
        RBus_UInt32  reg_bb_micbst_enpdrl:1;
        RBus_UInt32  res4:6;
    };
}audio_analog_reserved_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dummy18006b78_31_0:32;
    };
}audio_analog_dummy2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdmi_to_aud_enable:1;
        RBus_UInt32  hdmi_to_aud_ch_mode:3;
        RBus_UInt32  valid_flag:1;
        RBus_UInt32  u_bit_prepare:1;
        RBus_UInt32  testmode_enable:1;
        RBus_UInt32  hdmi_to_aud_testmode:2;
        RBus_UInt32  u_mode_sel:1;
        RBus_UInt32  data_type_chk_sel:2;
        RBus_UInt32  data_type:1;
        RBus_UInt32  res1:19;
    };
}audio_hdmi_to_audio_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdmi_to_aud_ch_num:3;
        RBus_UInt32  b_bit_err_flag:1;
        RBus_UInt32  res1:28;
    };
}audio_hdmi_to_audio_debug_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  professional:1;
        RBus_UInt32  data_type_l:1;
        RBus_UInt32  copyright:1;
        RBus_UInt32  pre_emphasis:3;
        RBus_UInt32  mode:2;
        RBus_UInt32  category_code:8;
        RBus_UInt32  source_number:4;
        RBus_UInt32  channel_number:4;
        RBus_UInt32  sampling_freq:4;
        RBus_UInt32  clock_accuracy:2;
        RBus_UInt32  cs_lb3_31_30:2;
    };
}audio_hdmi_to_audio_cs_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_lb4_35_32:4;
        RBus_UInt32  original_sampling_freq:4;
        RBus_UInt32  cgms_a:2;
        RBus_UInt32  cs_lb5_42:1;
        RBus_UInt32  cs_lb5_43:1;
        RBus_UInt32  layout_channel_num:4;
        RBus_UInt32  res1:16;
    };
}audio_hdmi_to_audio_cs_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_7_6_l:16;
        RBus_UInt32  res1:16;
    };
}audio_hdmi_to_audio_cs_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_l:32;
    };
}audio_hdmi_to_audio_cs_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_l:32;
    };
}audio_hdmi_to_audio_cs_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_l:32;
    };
}audio_hdmi_to_audio_cs_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_l:32;
    };
}audio_hdmi_to_audio_cs_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  professional_r:1;
        RBus_UInt32  data_type_r:1;
        RBus_UInt32  copyright_r:1;
        RBus_UInt32  pre_emphasis_r:3;
        RBus_UInt32  mode_r:2;
        RBus_UInt32  category_code_r:8;
        RBus_UInt32  source_number_r:4;
        RBus_UInt32  channel_number_r:4;
        RBus_UInt32  sampling_freq_r:4;
        RBus_UInt32  clock_accuracy_r:2;
        RBus_UInt32  cs_rb3_31_30:2;
    };
}audio_hdmi_to_audio_cs_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_rb4_35_32:4;
        RBus_UInt32  original_sampling_freq_r:4;
        RBus_UInt32  cgms_a_r:2;
        RBus_UInt32  cs_rb5_42:1;
        RBus_UInt32  cs_rb5_43:1;
        RBus_UInt32  layout_channel_num_r:4;
        RBus_UInt32  res1:16;
    };
}audio_hdmi_to_audio_cs_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_7_6_r:16;
        RBus_UInt32  res1:16;
    };
}audio_hdmi_to_audio_cs_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_11_8_r:32;
    };
}audio_hdmi_to_audio_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_15_12_r:32;
    };
}audio_hdmi_to_audio_cs_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_19_16_r:32;
    };
}audio_hdmi_to_audio_cs_13_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cs_byte_23_20_r:32;
    };
}audio_hdmi_to_audio_cs_14_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_3_0:32;
    };
}audio_hdmi_to_audio_u_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_7_4:32;
    };
}audio_hdmi_to_audio_u_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_11_8:32;
    };
}audio_hdmi_to_audio_u_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_15_12:32;
    };
}audio_hdmi_to_audio_u_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_19_16:32;
    };
}audio_hdmi_to_audio_u_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_23_20:32;
    };
}audio_hdmi_to_audio_u_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_27_24:32;
    };
}audio_hdmi_to_audio_u_7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_31_28:32;
    };
}audio_hdmi_to_audio_u_8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_35_32:32;
    };
}audio_hdmi_to_audio_u_9_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_39_36:32;
    };
}audio_hdmi_to_audio_u_10_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_43_40:32;
    };
}audio_hdmi_to_audio_u_11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iu_byte_46_44:24;
        RBus_UInt32  res1:8;
    };
}audio_hdmi_to_audio_u_12_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lock_mode:1;
        RBus_UInt32  debounce_en:1;
        RBus_UInt32  hw_lock_position:2;
        RBus_UInt32  hw_lock_variation_en:1;
        RBus_UInt32  hdmi2aud_dnum:16;
        RBus_UInt32  detect_status:3;
        RBus_UInt32  aud_golden_mode:4;
        RBus_UInt32  res1:3;
        RBus_UInt32  hdmi2aud_lock:1;
    };
}audio_hdmi_to_audio_lock_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fw_10ms_max:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  fw_10ms_min:14;
        RBus_UInt32  res2:2;
    };
}audio_hdmi_to_audio_lock_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pattern_search_length1:15;
        RBus_UInt32  res1:15;
        RBus_UInt32  pattern_search_catch1:1;
        RBus_UInt32  pattern_search_enable1:1;
    };
}audio_hdmi_in_pattern_search1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  specific_pattern1:32;
    };
}audio_hdmi_in_pattern_set1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pattern_search_length2:15;
        RBus_UInt32  res1:15;
        RBus_UInt32  pattern_search_catch2:1;
        RBus_UInt32  pattern_search_enable2:1;
    };
}audio_hdmi_in_pattern_search2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  specific_pattern2:32;
    };
}audio_hdmi_in_pattern_set2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  det_path_sel:1;
        RBus_UInt32  hbr_i2s_ch_no:3;
        RBus_UInt32  papb_04_flag:1;
        RBus_UInt32  res2:9;
        RBus_UInt32  papb_search_catch:1;
        RBus_UInt32  papb_search_enable:1;
    };
}audio_hdmi_in_papb_search_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pc_val:16;
        RBus_UInt32  pd_val:16;
    };
}audio_hdmi_in_papb_val_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pa_val:16;
        RBus_UInt32  pb_val:16;
    };
}audio_hdmi_in_papb_val2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pc_val_buf:32;
    };
}audio_hdmi_in_papb_val3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pc_val_pat1:16;
        RBus_UInt32  pd_val_pat1:16;
    };
}audio_hdmi_in_pattern1_val_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pc_val_pat2:16;
        RBus_UInt32  pd_val_pat2:16;
    };
}audio_hdmi_in_pattern2_val_RBUS;




#endif 


#endif 
