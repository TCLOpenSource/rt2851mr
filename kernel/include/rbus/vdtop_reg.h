/**
* @file Merlin5-DesignSpec-VideoDecoderTop
* RBus systemc program.
*
* @author RS_MM2_SD
* @email mm_mm2_rd_sw_kernel@realtek.com
* @ingroup model_rbus
 * @version { 1.0 }
 **
 */

#ifndef _RBUS_VDTOP_REG_H_
#define _RBUS_VDTOP_REG_H_

#include "rbus_types.h"



//  VDTOP Register Address
#define  VDTOP_VIDEO_CONTROL0                                                   0x18019000
#define  VDTOP_VIDEO_CONTROL0_reg_addr                                           "0xB8019000"
#define  VDTOP_VIDEO_CONTROL0_reg                                                0xB8019000
#define  VDTOP_VIDEO_CONTROL0_inst_addr                                          "0x0000"
#define  set_VDTOP_VIDEO_CONTROL0_reg(data)                                      (*((volatile unsigned int*)VDTOP_VIDEO_CONTROL0_reg)=data)
#define  get_VDTOP_VIDEO_CONTROL0_reg                                            (*((volatile unsigned int*)VDTOP_VIDEO_CONTROL0_reg))
#define  VDTOP_VIDEO_CONTROL0_phase_108_start_set_shift                          (30)
#define  VDTOP_VIDEO_CONTROL0_secam_eq_share_sel_shift                           (29)
#define  VDTOP_VIDEO_CONTROL0_hv_delay_shift                                     (7)
#define  VDTOP_VIDEO_CONTROL0_hpixel_shift                                       (5)
#define  VDTOP_VIDEO_CONTROL0_vline_625_shift                                    (4)
#define  VDTOP_VIDEO_CONTROL0_colour_mode_shift                                  (1)
#define  VDTOP_VIDEO_CONTROL0_phase_108_start_set_mask                           (0xC0000000)
#define  VDTOP_VIDEO_CONTROL0_secam_eq_share_sel_mask                            (0x20000000)
#define  VDTOP_VIDEO_CONTROL0_hv_delay_mask                                      (0x00000080)
#define  VDTOP_VIDEO_CONTROL0_hpixel_mask                                        (0x00000060)
#define  VDTOP_VIDEO_CONTROL0_vline_625_mask                                     (0x00000010)
#define  VDTOP_VIDEO_CONTROL0_colour_mode_mask                                   (0x0000000E)
#define  VDTOP_VIDEO_CONTROL0_phase_108_start_set(data)                          (0xC0000000&((data)<<30))
#define  VDTOP_VIDEO_CONTROL0_secam_eq_share_sel(data)                           (0x20000000&((data)<<29))
#define  VDTOP_VIDEO_CONTROL0_hv_delay(data)                                     (0x00000080&((data)<<7))
#define  VDTOP_VIDEO_CONTROL0_hpixel(data)                                       (0x00000060&((data)<<5))
#define  VDTOP_VIDEO_CONTROL0_vline_625(data)                                    (0x00000010&((data)<<4))
#define  VDTOP_VIDEO_CONTROL0_colour_mode(data)                                  (0x0000000E&((data)<<1))
#define  VDTOP_VIDEO_CONTROL0_get_phase_108_start_set(data)                      ((0xC0000000&(data))>>30)
#define  VDTOP_VIDEO_CONTROL0_get_secam_eq_share_sel(data)                       ((0x20000000&(data))>>29)
#define  VDTOP_VIDEO_CONTROL0_get_hv_delay(data)                                 ((0x00000080&(data))>>7)
#define  VDTOP_VIDEO_CONTROL0_get_hpixel(data)                                   ((0x00000060&(data))>>5)
#define  VDTOP_VIDEO_CONTROL0_get_vline_625(data)                                ((0x00000010&(data))>>4)
#define  VDTOP_VIDEO_CONTROL0_get_colour_mode(data)                              ((0x0000000E&(data))>>1)

#define  VDTOP_VIDEO_CONTROL1                                                   0x18019004
#define  VDTOP_VIDEO_CONTROL1_reg_addr                                           "0xB8019004"
#define  VDTOP_VIDEO_CONTROL1_reg                                                0xB8019004
#define  VDTOP_VIDEO_CONTROL1_inst_addr                                          "0x0001"
#define  set_VDTOP_VIDEO_CONTROL1_reg(data)                                      (*((volatile unsigned int*)VDTOP_VIDEO_CONTROL1_reg)=data)
#define  get_VDTOP_VIDEO_CONTROL1_reg                                            (*((volatile unsigned int*)VDTOP_VIDEO_CONTROL1_reg))
#define  VDTOP_VIDEO_CONTROL1_ycsep_power_on_shift                               (17)
#define  VDTOP_VIDEO_CONTROL1_smixer_ycadjust_power_on_shift                     (16)
#define  VDTOP_VIDEO_CONTROL1_sv_power_on_en_shift                               (15)
#define  VDTOP_VIDEO_CONTROL1_scart_power_on_en_shift                            (14)
#define  VDTOP_VIDEO_CONTROL1_secam_power_on_en_shift                            (13)
#define  VDTOP_VIDEO_CONTROL1_avout_power_on_en_shift                            (12)
#define  VDTOP_VIDEO_CONTROL1_dark_cpll_power_on_en_shift                        (11)
#define  VDTOP_VIDEO_CONTROL1_patterngen_power_on_en_shift                       (10)
#define  VDTOP_VIDEO_CONTROL1_ycsepdata_burstin_en_shift                         (9)
#define  VDTOP_VIDEO_CONTROL1_vd_pq_bypass_en_shift                              (8)
#define  VDTOP_VIDEO_CONTROL1_cv_inv_shift                                       (7)
#define  VDTOP_VIDEO_CONTROL1_cv_src_shift                                       (6)
#define  VDTOP_VIDEO_CONTROL1_yc_src_shift                                       (5)
#define  VDTOP_VIDEO_CONTROL1_dark_yc_src_shift                                  (4)
#define  VDTOP_VIDEO_CONTROL1_ped_shift                                          (0)
#define  VDTOP_VIDEO_CONTROL1_ycsep_power_on_mask                                (0x00020000)
#define  VDTOP_VIDEO_CONTROL1_smixer_ycadjust_power_on_mask                      (0x00010000)
#define  VDTOP_VIDEO_CONTROL1_sv_power_on_en_mask                                (0x00008000)
#define  VDTOP_VIDEO_CONTROL1_scart_power_on_en_mask                             (0x00004000)
#define  VDTOP_VIDEO_CONTROL1_secam_power_on_en_mask                             (0x00002000)
#define  VDTOP_VIDEO_CONTROL1_avout_power_on_en_mask                             (0x00001000)
#define  VDTOP_VIDEO_CONTROL1_dark_cpll_power_on_en_mask                         (0x00000800)
#define  VDTOP_VIDEO_CONTROL1_patterngen_power_on_en_mask                        (0x00000400)
#define  VDTOP_VIDEO_CONTROL1_ycsepdata_burstin_en_mask                          (0x00000200)
#define  VDTOP_VIDEO_CONTROL1_vd_pq_bypass_en_mask                               (0x00000100)
#define  VDTOP_VIDEO_CONTROL1_cv_inv_mask                                        (0x00000080)
#define  VDTOP_VIDEO_CONTROL1_cv_src_mask                                        (0x00000040)
#define  VDTOP_VIDEO_CONTROL1_yc_src_mask                                        (0x00000020)
#define  VDTOP_VIDEO_CONTROL1_dark_yc_src_mask                                   (0x00000010)
#define  VDTOP_VIDEO_CONTROL1_ped_mask                                           (0x00000001)
#define  VDTOP_VIDEO_CONTROL1_ycsep_power_on(data)                               (0x00020000&((data)<<17))
#define  VDTOP_VIDEO_CONTROL1_smixer_ycadjust_power_on(data)                     (0x00010000&((data)<<16))
#define  VDTOP_VIDEO_CONTROL1_sv_power_on_en(data)                               (0x00008000&((data)<<15))
#define  VDTOP_VIDEO_CONTROL1_scart_power_on_en(data)                            (0x00004000&((data)<<14))
#define  VDTOP_VIDEO_CONTROL1_secam_power_on_en(data)                            (0x00002000&((data)<<13))
#define  VDTOP_VIDEO_CONTROL1_avout_power_on_en(data)                            (0x00001000&((data)<<12))
#define  VDTOP_VIDEO_CONTROL1_dark_cpll_power_on_en(data)                        (0x00000800&((data)<<11))
#define  VDTOP_VIDEO_CONTROL1_patterngen_power_on_en(data)                       (0x00000400&((data)<<10))
#define  VDTOP_VIDEO_CONTROL1_ycsepdata_burstin_en(data)                         (0x00000200&((data)<<9))
#define  VDTOP_VIDEO_CONTROL1_vd_pq_bypass_en(data)                              (0x00000100&((data)<<8))
#define  VDTOP_VIDEO_CONTROL1_cv_inv(data)                                       (0x00000080&((data)<<7))
#define  VDTOP_VIDEO_CONTROL1_cv_src(data)                                       (0x00000040&((data)<<6))
#define  VDTOP_VIDEO_CONTROL1_yc_src(data)                                       (0x00000020&((data)<<5))
#define  VDTOP_VIDEO_CONTROL1_dark_yc_src(data)                                  (0x00000010&((data)<<4))
#define  VDTOP_VIDEO_CONTROL1_ped(data)                                          (0x00000001&(data))
#define  VDTOP_VIDEO_CONTROL1_get_ycsep_power_on(data)                           ((0x00020000&(data))>>17)
#define  VDTOP_VIDEO_CONTROL1_get_smixer_ycadjust_power_on(data)                 ((0x00010000&(data))>>16)
#define  VDTOP_VIDEO_CONTROL1_get_sv_power_on_en(data)                           ((0x00008000&(data))>>15)
#define  VDTOP_VIDEO_CONTROL1_get_scart_power_on_en(data)                        ((0x00004000&(data))>>14)
#define  VDTOP_VIDEO_CONTROL1_get_secam_power_on_en(data)                        ((0x00002000&(data))>>13)
#define  VDTOP_VIDEO_CONTROL1_get_avout_power_on_en(data)                        ((0x00001000&(data))>>12)
#define  VDTOP_VIDEO_CONTROL1_get_dark_cpll_power_on_en(data)                    ((0x00000800&(data))>>11)
#define  VDTOP_VIDEO_CONTROL1_get_patterngen_power_on_en(data)                   ((0x00000400&(data))>>10)
#define  VDTOP_VIDEO_CONTROL1_get_ycsepdata_burstin_en(data)                     ((0x00000200&(data))>>9)
#define  VDTOP_VIDEO_CONTROL1_get_vd_pq_bypass_en(data)                          ((0x00000100&(data))>>8)
#define  VDTOP_VIDEO_CONTROL1_get_cv_inv(data)                                   ((0x00000080&(data))>>7)
#define  VDTOP_VIDEO_CONTROL1_get_cv_src(data)                                   ((0x00000040&(data))>>6)
#define  VDTOP_VIDEO_CONTROL1_get_yc_src(data)                                   ((0x00000020&(data))>>5)
#define  VDTOP_VIDEO_CONTROL1_get_dark_yc_src(data)                              ((0x00000010&(data))>>4)
#define  VDTOP_VIDEO_CONTROL1_get_ped(data)                                      (0x00000001&(data))

#define  VDTOP_VIDEO_STATUS_REG1                                                0x18019008
#define  VDTOP_VIDEO_STATUS_REG1_reg_addr                                        "0xB8019008"
#define  VDTOP_VIDEO_STATUS_REG1_reg                                             0xB8019008
#define  VDTOP_VIDEO_STATUS_REG1_inst_addr                                       "0x0002"
#define  set_VDTOP_VIDEO_STATUS_REG1_reg(data)                                   (*((volatile unsigned int*)VDTOP_VIDEO_STATUS_REG1_reg)=data)
#define  get_VDTOP_VIDEO_STATUS_REG1_reg                                         (*((volatile unsigned int*)VDTOP_VIDEO_STATUS_REG1_reg))
#define  VDTOP_VIDEO_STATUS_REG1_if_cr_lock_shift                                (15)
#define  VDTOP_VIDEO_STATUS_REG1_hvlock_longtime_shift                           (14)
#define  VDTOP_VIDEO_STATUS_REG1_vlock_longtime_shift                            (13)
#define  VDTOP_VIDEO_STATUS_REG1_hlock_longtime_shift                            (12)
#define  VDTOP_VIDEO_STATUS_REG1_chromalock_acc_shift                            (9)
#define  VDTOP_VIDEO_STATUS_REG1_h_fine_lock_shift                               (8)
#define  VDTOP_VIDEO_STATUS_REG1_mov_colour_inverse_shift                        (5)
#define  VDTOP_VIDEO_STATUS_REG1_mov_vbi_detected_shift                          (4)
#define  VDTOP_VIDEO_STATUS_REG1_chomalock_shift                                 (3)
#define  VDTOP_VIDEO_STATUS_REG1_vlock_shift                                     (2)
#define  VDTOP_VIDEO_STATUS_REG1_hlock_shift                                     (1)
#define  VDTOP_VIDEO_STATUS_REG1_no_signal_shift                                 (0)
#define  VDTOP_VIDEO_STATUS_REG1_if_cr_lock_mask                                 (0x00008000)
#define  VDTOP_VIDEO_STATUS_REG1_hvlock_longtime_mask                            (0x00004000)
#define  VDTOP_VIDEO_STATUS_REG1_vlock_longtime_mask                             (0x00002000)
#define  VDTOP_VIDEO_STATUS_REG1_hlock_longtime_mask                             (0x00001000)
#define  VDTOP_VIDEO_STATUS_REG1_chromalock_acc_mask                             (0x00000200)
#define  VDTOP_VIDEO_STATUS_REG1_h_fine_lock_mask                                (0x00000100)
#define  VDTOP_VIDEO_STATUS_REG1_mov_colour_inverse_mask                         (0x000000E0)
#define  VDTOP_VIDEO_STATUS_REG1_mov_vbi_detected_mask                           (0x00000010)
#define  VDTOP_VIDEO_STATUS_REG1_chomalock_mask                                  (0x00000008)
#define  VDTOP_VIDEO_STATUS_REG1_vlock_mask                                      (0x00000004)
#define  VDTOP_VIDEO_STATUS_REG1_hlock_mask                                      (0x00000002)
#define  VDTOP_VIDEO_STATUS_REG1_no_signal_mask                                  (0x00000001)
#define  VDTOP_VIDEO_STATUS_REG1_if_cr_lock(data)                                (0x00008000&((data)<<15))
#define  VDTOP_VIDEO_STATUS_REG1_hvlock_longtime(data)                           (0x00004000&((data)<<14))
#define  VDTOP_VIDEO_STATUS_REG1_vlock_longtime(data)                            (0x00002000&((data)<<13))
#define  VDTOP_VIDEO_STATUS_REG1_hlock_longtime(data)                            (0x00001000&((data)<<12))
#define  VDTOP_VIDEO_STATUS_REG1_chromalock_acc(data)                            (0x00000200&((data)<<9))
#define  VDTOP_VIDEO_STATUS_REG1_h_fine_lock(data)                               (0x00000100&((data)<<8))
#define  VDTOP_VIDEO_STATUS_REG1_mov_colour_inverse(data)                        (0x000000E0&((data)<<5))
#define  VDTOP_VIDEO_STATUS_REG1_mov_vbi_detected(data)                          (0x00000010&((data)<<4))
#define  VDTOP_VIDEO_STATUS_REG1_chomalock(data)                                 (0x00000008&((data)<<3))
#define  VDTOP_VIDEO_STATUS_REG1_vlock(data)                                     (0x00000004&((data)<<2))
#define  VDTOP_VIDEO_STATUS_REG1_hlock(data)                                     (0x00000002&((data)<<1))
#define  VDTOP_VIDEO_STATUS_REG1_no_signal(data)                                 (0x00000001&(data))
#define  VDTOP_VIDEO_STATUS_REG1_get_if_cr_lock(data)                            ((0x00008000&(data))>>15)
#define  VDTOP_VIDEO_STATUS_REG1_get_hvlock_longtime(data)                       ((0x00004000&(data))>>14)
#define  VDTOP_VIDEO_STATUS_REG1_get_vlock_longtime(data)                        ((0x00002000&(data))>>13)
#define  VDTOP_VIDEO_STATUS_REG1_get_hlock_longtime(data)                        ((0x00001000&(data))>>12)
#define  VDTOP_VIDEO_STATUS_REG1_get_chromalock_acc(data)                        ((0x00000200&(data))>>9)
#define  VDTOP_VIDEO_STATUS_REG1_get_h_fine_lock(data)                           ((0x00000100&(data))>>8)
#define  VDTOP_VIDEO_STATUS_REG1_get_mov_colour_inverse(data)                    ((0x000000E0&(data))>>5)
#define  VDTOP_VIDEO_STATUS_REG1_get_mov_vbi_detected(data)                      ((0x00000010&(data))>>4)
#define  VDTOP_VIDEO_STATUS_REG1_get_chomalock(data)                             ((0x00000008&(data))>>3)
#define  VDTOP_VIDEO_STATUS_REG1_get_vlock(data)                                 ((0x00000004&(data))>>2)
#define  VDTOP_VIDEO_STATUS_REG1_get_hlock(data)                                 ((0x00000002&(data))>>1)
#define  VDTOP_VIDEO_STATUS_REG1_get_no_signal(data)                             (0x00000001&(data))

#define  VDTOP_VIDEO_STATUS_REG2                                                0x1801900C
#define  VDTOP_VIDEO_STATUS_REG2_reg_addr                                        "0xB801900C"
#define  VDTOP_VIDEO_STATUS_REG2_reg                                             0xB801900C
#define  VDTOP_VIDEO_STATUS_REG2_inst_addr                                       "0x0003"
#define  set_VDTOP_VIDEO_STATUS_REG2_reg(data)                                   (*((volatile unsigned int*)VDTOP_VIDEO_STATUS_REG2_reg)=data)
#define  get_VDTOP_VIDEO_STATUS_REG2_reg                                         (*((volatile unsigned int*)VDTOP_VIDEO_STATUS_REG2_reg))
#define  VDTOP_VIDEO_STATUS_REG2_new_vdetect_stable_shift                        (11)
#define  VDTOP_VIDEO_STATUS_REG2_old_vdetect_stable_shift                        (10)
#define  VDTOP_VIDEO_STATUS_REG2_firtst_vsync_detected_shift                     (9)
#define  VDTOP_VIDEO_STATUS_REG2_v_detect_flag_shift                             (8)
#define  VDTOP_VIDEO_STATUS_REG2_detect358_flag_shift                            (7)
#define  VDTOP_VIDEO_STATUS_REG2_vlock_new_shift                                 (6)
#define  VDTOP_VIDEO_STATUS_REG2_noisy_vbi_shift                                 (5)
#define  VDTOP_VIDEO_STATUS_REG2_detect443_flag_shift                            (4)
#define  VDTOP_VIDEO_STATUS_REG2_burst_detect_shift                              (3)
#define  VDTOP_VIDEO_STATUS_REG2_palor_flag_shift                                (2)
#define  VDTOP_VIDEO_STATUS_REG2_palm_flag_shift                                 (1)
#define  VDTOP_VIDEO_STATUS_REG2_proscan_detected_shift                          (0)
#define  VDTOP_VIDEO_STATUS_REG2_new_vdetect_stable_mask                         (0x00000800)
#define  VDTOP_VIDEO_STATUS_REG2_old_vdetect_stable_mask                         (0x00000400)
#define  VDTOP_VIDEO_STATUS_REG2_firtst_vsync_detected_mask                      (0x00000200)
#define  VDTOP_VIDEO_STATUS_REG2_v_detect_flag_mask                              (0x00000100)
#define  VDTOP_VIDEO_STATUS_REG2_detect358_flag_mask                             (0x00000080)
#define  VDTOP_VIDEO_STATUS_REG2_vlock_new_mask                                  (0x00000040)
#define  VDTOP_VIDEO_STATUS_REG2_noisy_vbi_mask                                  (0x00000020)
#define  VDTOP_VIDEO_STATUS_REG2_detect443_flag_mask                             (0x00000010)
#define  VDTOP_VIDEO_STATUS_REG2_burst_detect_mask                               (0x00000008)
#define  VDTOP_VIDEO_STATUS_REG2_palor_flag_mask                                 (0x00000004)
#define  VDTOP_VIDEO_STATUS_REG2_palm_flag_mask                                  (0x00000002)
#define  VDTOP_VIDEO_STATUS_REG2_proscan_detected_mask                           (0x00000001)
#define  VDTOP_VIDEO_STATUS_REG2_new_vdetect_stable(data)                        (0x00000800&((data)<<11))
#define  VDTOP_VIDEO_STATUS_REG2_old_vdetect_stable(data)                        (0x00000400&((data)<<10))
#define  VDTOP_VIDEO_STATUS_REG2_firtst_vsync_detected(data)                     (0x00000200&((data)<<9))
#define  VDTOP_VIDEO_STATUS_REG2_v_detect_flag(data)                             (0x00000100&((data)<<8))
#define  VDTOP_VIDEO_STATUS_REG2_detect358_flag(data)                            (0x00000080&((data)<<7))
#define  VDTOP_VIDEO_STATUS_REG2_vlock_new(data)                                 (0x00000040&((data)<<6))
#define  VDTOP_VIDEO_STATUS_REG2_noisy_vbi(data)                                 (0x00000020&((data)<<5))
#define  VDTOP_VIDEO_STATUS_REG2_detect443_flag(data)                            (0x00000010&((data)<<4))
#define  VDTOP_VIDEO_STATUS_REG2_burst_detect(data)                              (0x00000008&((data)<<3))
#define  VDTOP_VIDEO_STATUS_REG2_palor_flag(data)                                (0x00000004&((data)<<2))
#define  VDTOP_VIDEO_STATUS_REG2_palm_flag(data)                                 (0x00000002&((data)<<1))
#define  VDTOP_VIDEO_STATUS_REG2_proscan_detected(data)                          (0x00000001&(data))
#define  VDTOP_VIDEO_STATUS_REG2_get_new_vdetect_stable(data)                    ((0x00000800&(data))>>11)
#define  VDTOP_VIDEO_STATUS_REG2_get_old_vdetect_stable(data)                    ((0x00000400&(data))>>10)
#define  VDTOP_VIDEO_STATUS_REG2_get_firtst_vsync_detected(data)                 ((0x00000200&(data))>>9)
#define  VDTOP_VIDEO_STATUS_REG2_get_v_detect_flag(data)                         ((0x00000100&(data))>>8)
#define  VDTOP_VIDEO_STATUS_REG2_get_detect358_flag(data)                        ((0x00000080&(data))>>7)
#define  VDTOP_VIDEO_STATUS_REG2_get_vlock_new(data)                             ((0x00000040&(data))>>6)
#define  VDTOP_VIDEO_STATUS_REG2_get_noisy_vbi(data)                             ((0x00000020&(data))>>5)
#define  VDTOP_VIDEO_STATUS_REG2_get_detect443_flag(data)                        ((0x00000010&(data))>>4)
#define  VDTOP_VIDEO_STATUS_REG2_get_burst_detect(data)                          ((0x00000008&(data))>>3)
#define  VDTOP_VIDEO_STATUS_REG2_get_palor_flag(data)                            ((0x00000004&(data))>>2)
#define  VDTOP_VIDEO_STATUS_REG2_get_palm_flag(data)                             ((0x00000002&(data))>>1)
#define  VDTOP_VIDEO_STATUS_REG2_get_proscan_detected(data)                      (0x00000001&(data))

#define  VDTOP_VIDEO_STATUS_REG3                                                0x18019010
#define  VDTOP_VIDEO_STATUS_REG3_reg_addr                                        "0xB8019010"
#define  VDTOP_VIDEO_STATUS_REG3_reg                                             0xB8019010
#define  VDTOP_VIDEO_STATUS_REG3_inst_addr                                       "0x0004"
#define  set_VDTOP_VIDEO_STATUS_REG3_reg(data)                                   (*((volatile unsigned int*)VDTOP_VIDEO_STATUS_REG3_reg)=data)
#define  get_VDTOP_VIDEO_STATUS_REG3_reg                                         (*((volatile unsigned int*)VDTOP_VIDEO_STATUS_REG3_reg))
#define  VDTOP_VIDEO_STATUS_REG3_vcr_rew_shift                                   (7)
#define  VDTOP_VIDEO_STATUS_REG3_vcr_ff_shift                                    (6)
#define  VDTOP_VIDEO_STATUS_REG3_vcr_trick_shift                                 (5)
#define  VDTOP_VIDEO_STATUS_REG3_vcr_shift                                       (4)
#define  VDTOP_VIDEO_STATUS_REG3_noisy_shift                                     (3)
#define  VDTOP_VIDEO_STATUS_REG3_lines_625_detected_shift                        (2)
#define  VDTOP_VIDEO_STATUS_REG3_secam_detected_shift                            (1)
#define  VDTOP_VIDEO_STATUS_REG3_pal_detected_shift                              (0)
#define  VDTOP_VIDEO_STATUS_REG3_vcr_rew_mask                                    (0x00000080)
#define  VDTOP_VIDEO_STATUS_REG3_vcr_ff_mask                                     (0x00000040)
#define  VDTOP_VIDEO_STATUS_REG3_vcr_trick_mask                                  (0x00000020)
#define  VDTOP_VIDEO_STATUS_REG3_vcr_mask                                        (0x00000010)
#define  VDTOP_VIDEO_STATUS_REG3_noisy_mask                                      (0x00000008)
#define  VDTOP_VIDEO_STATUS_REG3_lines_625_detected_mask                         (0x00000004)
#define  VDTOP_VIDEO_STATUS_REG3_secam_detected_mask                             (0x00000002)
#define  VDTOP_VIDEO_STATUS_REG3_pal_detected_mask                               (0x00000001)
#define  VDTOP_VIDEO_STATUS_REG3_vcr_rew(data)                                   (0x00000080&((data)<<7))
#define  VDTOP_VIDEO_STATUS_REG3_vcr_ff(data)                                    (0x00000040&((data)<<6))
#define  VDTOP_VIDEO_STATUS_REG3_vcr_trick(data)                                 (0x00000020&((data)<<5))
#define  VDTOP_VIDEO_STATUS_REG3_vcr(data)                                       (0x00000010&((data)<<4))
#define  VDTOP_VIDEO_STATUS_REG3_noisy(data)                                     (0x00000008&((data)<<3))
#define  VDTOP_VIDEO_STATUS_REG3_lines_625_detected(data)                        (0x00000004&((data)<<2))
#define  VDTOP_VIDEO_STATUS_REG3_secam_detected(data)                            (0x00000002&((data)<<1))
#define  VDTOP_VIDEO_STATUS_REG3_pal_detected(data)                              (0x00000001&(data))
#define  VDTOP_VIDEO_STATUS_REG3_get_vcr_rew(data)                               ((0x00000080&(data))>>7)
#define  VDTOP_VIDEO_STATUS_REG3_get_vcr_ff(data)                                ((0x00000040&(data))>>6)
#define  VDTOP_VIDEO_STATUS_REG3_get_vcr_trick(data)                             ((0x00000020&(data))>>5)
#define  VDTOP_VIDEO_STATUS_REG3_get_vcr(data)                                   ((0x00000010&(data))>>4)
#define  VDTOP_VIDEO_STATUS_REG3_get_noisy(data)                                 ((0x00000008&(data))>>3)
#define  VDTOP_VIDEO_STATUS_REG3_get_lines_625_detected(data)                    ((0x00000004&(data))>>2)
#define  VDTOP_VIDEO_STATUS_REG3_get_secam_detected(data)                        ((0x00000002&(data))>>1)
#define  VDTOP_VIDEO_STATUS_REG3_get_pal_detected(data)                          (0x00000001&(data))

#define  VDTOP_HDTO_INC_STATUS                                                  0x18019014
#define  VDTOP_HDTO_INC_STATUS_reg_addr                                          "0xB8019014"
#define  VDTOP_HDTO_INC_STATUS_reg                                               0xB8019014
#define  VDTOP_HDTO_INC_STATUS_inst_addr                                         "0x0005"
#define  set_VDTOP_HDTO_INC_STATUS_reg(data)                                     (*((volatile unsigned int*)VDTOP_HDTO_INC_STATUS_reg)=data)
#define  get_VDTOP_HDTO_INC_STATUS_reg                                           (*((volatile unsigned int*)VDTOP_HDTO_INC_STATUS_reg))
#define  VDTOP_HDTO_INC_STATUS_hdto_inc_status_shift                             (0)
#define  VDTOP_HDTO_INC_STATUS_hdto_inc_status_mask                              (0x3FFFFFFF)
#define  VDTOP_HDTO_INC_STATUS_hdto_inc_status(data)                             (0x3FFFFFFF&(data))
#define  VDTOP_HDTO_INC_STATUS_get_hdto_inc_status(data)                         (0x3FFFFFFF&(data))

#define  VDTOP_CDTO_INC_STATUS                                                  0x18019018
#define  VDTOP_CDTO_INC_STATUS_reg_addr                                          "0xB8019018"
#define  VDTOP_CDTO_INC_STATUS_reg                                               0xB8019018
#define  VDTOP_CDTO_INC_STATUS_inst_addr                                         "0x0006"
#define  set_VDTOP_CDTO_INC_STATUS_reg(data)                                     (*((volatile unsigned int*)VDTOP_CDTO_INC_STATUS_reg)=data)
#define  get_VDTOP_CDTO_INC_STATUS_reg                                           (*((volatile unsigned int*)VDTOP_CDTO_INC_STATUS_reg))
#define  VDTOP_CDTO_INC_STATUS_cdto_inc_status_shift                             (0)
#define  VDTOP_CDTO_INC_STATUS_cdto_inc_status_mask                              (0x3FFFFFFF)
#define  VDTOP_CDTO_INC_STATUS_cdto_inc_status(data)                             (0x3FFFFFFF&(data))
#define  VDTOP_CDTO_INC_STATUS_get_cdto_inc_status(data)                         (0x3FFFFFFF&(data))

#define  VDTOP_AVG_BURST_MAG_STATUS                                             0x1801901C
#define  VDTOP_AVG_BURST_MAG_STATUS_reg_addr                                     "0xB801901C"
#define  VDTOP_AVG_BURST_MAG_STATUS_reg                                          0xB801901C
#define  VDTOP_AVG_BURST_MAG_STATUS_inst_addr                                    "0x0007"
#define  set_VDTOP_AVG_BURST_MAG_STATUS_reg(data)                                (*((volatile unsigned int*)VDTOP_AVG_BURST_MAG_STATUS_reg)=data)
#define  get_VDTOP_AVG_BURST_MAG_STATUS_reg                                      (*((volatile unsigned int*)VDTOP_AVG_BURST_MAG_STATUS_reg))
#define  VDTOP_AVG_BURST_MAG_STATUS_burst_magnitude_shift                        (0)
#define  VDTOP_AVG_BURST_MAG_STATUS_burst_magnitude_mask                         (0x000000FF)
#define  VDTOP_AVG_BURST_MAG_STATUS_burst_magnitude(data)                        (0x000000FF&(data))
#define  VDTOP_AVG_BURST_MAG_STATUS_get_burst_magnitude(data)                    (0x000000FF&(data))

#define  VDTOP_AGC_DGAIN_STATUS                                                 0x18019020
#define  VDTOP_AGC_DGAIN_STATUS_reg_addr                                         "0xB8019020"
#define  VDTOP_AGC_DGAIN_STATUS_reg                                              0xB8019020
#define  VDTOP_AGC_DGAIN_STATUS_inst_addr                                        "0x0008"
#define  set_VDTOP_AGC_DGAIN_STATUS_reg(data)                                    (*((volatile unsigned int*)VDTOP_AGC_DGAIN_STATUS_reg)=data)
#define  get_VDTOP_AGC_DGAIN_STATUS_reg                                          (*((volatile unsigned int*)VDTOP_AGC_DGAIN_STATUS_reg))
#define  VDTOP_AGC_DGAIN_STATUS_agc_dgain_shift                                  (0)
#define  VDTOP_AGC_DGAIN_STATUS_agc_dgain_mask                                   (0x00000FFF)
#define  VDTOP_AGC_DGAIN_STATUS_agc_dgain(data)                                  (0x00000FFF&(data))
#define  VDTOP_AGC_DGAIN_STATUS_get_agc_dgain(data)                              (0x00000FFF&(data))

#define  VDTOP_CMAG_STATUS                                                      0x18019024
#define  VDTOP_CMAG_STATUS_reg_addr                                              "0xB8019024"
#define  VDTOP_CMAG_STATUS_reg                                                   0xB8019024
#define  VDTOP_CMAG_STATUS_inst_addr                                             "0x0009"
#define  set_VDTOP_CMAG_STATUS_reg(data)                                         (*((volatile unsigned int*)VDTOP_CMAG_STATUS_reg)=data)
#define  get_VDTOP_CMAG_STATUS_reg                                               (*((volatile unsigned int*)VDTOP_CMAG_STATUS_reg))
#define  VDTOP_CMAG_STATUS_status_cmag_shift                                     (0)
#define  VDTOP_CMAG_STATUS_status_cmag_mask                                      (0x000000FF)
#define  VDTOP_CMAG_STATUS_status_cmag(data)                                     (0x000000FF&(data))
#define  VDTOP_CMAG_STATUS_get_status_cmag(data)                                 (0x000000FF&(data))

#define  VDTOP_CGAIN_STATUS                                                     0x18019028
#define  VDTOP_CGAIN_STATUS_reg_addr                                             "0xB8019028"
#define  VDTOP_CGAIN_STATUS_reg                                                  0xB8019028
#define  VDTOP_CGAIN_STATUS_inst_addr                                            "0x000A"
#define  set_VDTOP_CGAIN_STATUS_reg(data)                                        (*((volatile unsigned int*)VDTOP_CGAIN_STATUS_reg)=data)
#define  get_VDTOP_CGAIN_STATUS_reg                                              (*((volatile unsigned int*)VDTOP_CGAIN_STATUS_reg))
#define  VDTOP_CGAIN_STATUS_status_cgain_data_shift                              (16)
#define  VDTOP_CGAIN_STATUS_status_cgain_shift                                   (0)
#define  VDTOP_CGAIN_STATUS_status_cgain_data_mask                               (0x3FFF0000)
#define  VDTOP_CGAIN_STATUS_status_cgain_mask                                    (0x00003FFF)
#define  VDTOP_CGAIN_STATUS_status_cgain_data(data)                              (0x3FFF0000&((data)<<16))
#define  VDTOP_CGAIN_STATUS_status_cgain(data)                                   (0x00003FFF&(data))
#define  VDTOP_CGAIN_STATUS_get_status_cgain_data(data)                          ((0x3FFF0000&(data))>>16)
#define  VDTOP_CGAIN_STATUS_get_status_cgain(data)                               (0x00003FFF&(data))

#define  VDTOP_CORDIC_FREQ_STATUS                                               0x1801902C
#define  VDTOP_CORDIC_FREQ_STATUS_reg_addr                                       "0xB801902C"
#define  VDTOP_CORDIC_FREQ_STATUS_reg                                            0xB801902C
#define  VDTOP_CORDIC_FREQ_STATUS_inst_addr                                      "0x000B"
#define  set_VDTOP_CORDIC_FREQ_STATUS_reg(data)                                  (*((volatile unsigned int*)VDTOP_CORDIC_FREQ_STATUS_reg)=data)
#define  get_VDTOP_CORDIC_FREQ_STATUS_reg                                        (*((volatile unsigned int*)VDTOP_CORDIC_FREQ_STATUS_reg))
#define  VDTOP_CORDIC_FREQ_STATUS_status_cordiq_freq_shift                       (0)
#define  VDTOP_CORDIC_FREQ_STATUS_status_cordiq_freq_mask                        (0x000000FF)
#define  VDTOP_CORDIC_FREQ_STATUS_status_cordiq_freq(data)                       (0x000000FF&(data))
#define  VDTOP_CORDIC_FREQ_STATUS_get_status_cordiq_freq(data)                   (0x000000FF&(data))

#define  VDTOP_MEASURE_FIRST_V                                                  0x18019030
#define  VDTOP_MEASURE_FIRST_V_reg_addr                                          "0xB8019030"
#define  VDTOP_MEASURE_FIRST_V_reg                                               0xB8019030
#define  VDTOP_MEASURE_FIRST_V_inst_addr                                         "0x000C"
#define  set_VDTOP_MEASURE_FIRST_V_reg(data)                                     (*((volatile unsigned int*)VDTOP_MEASURE_FIRST_V_reg)=data)
#define  get_VDTOP_MEASURE_FIRST_V_reg                                           (*((volatile unsigned int*)VDTOP_MEASURE_FIRST_V_reg))
#define  VDTOP_MEASURE_FIRST_V_v_1st_line_shift                                  (0)
#define  VDTOP_MEASURE_FIRST_V_v_1st_line_mask                                   (0x000003FF)
#define  VDTOP_MEASURE_FIRST_V_v_1st_line(data)                                  (0x000003FF&(data))
#define  VDTOP_MEASURE_FIRST_V_get_v_1st_line(data)                              (0x000003FF&(data))

#define  VDTOP_MEASURE_SECOND_V                                                 0x18019034
#define  VDTOP_MEASURE_SECOND_V_reg_addr                                         "0xB8019034"
#define  VDTOP_MEASURE_SECOND_V_reg                                              0xB8019034
#define  VDTOP_MEASURE_SECOND_V_inst_addr                                        "0x000D"
#define  set_VDTOP_MEASURE_SECOND_V_reg(data)                                    (*((volatile unsigned int*)VDTOP_MEASURE_SECOND_V_reg)=data)
#define  get_VDTOP_MEASURE_SECOND_V_reg                                          (*((volatile unsigned int*)VDTOP_MEASURE_SECOND_V_reg))
#define  VDTOP_MEASURE_SECOND_V_v_2nd_line_shift                                 (0)
#define  VDTOP_MEASURE_SECOND_V_v_2nd_line_mask                                  (0x000003FF)
#define  VDTOP_MEASURE_SECOND_V_v_2nd_line(data)                                 (0x000003FF&(data))
#define  VDTOP_MEASURE_SECOND_V_get_v_2nd_line(data)                             (0x000003FF&(data))

#define  VDTOP_PORCH_HEIGHT_M                                                   0x18019038
#define  VDTOP_PORCH_HEIGHT_M_reg_addr                                           "0xB8019038"
#define  VDTOP_PORCH_HEIGHT_M_reg                                                0xB8019038
#define  VDTOP_PORCH_HEIGHT_M_inst_addr                                          "0x000E"
#define  set_VDTOP_PORCH_HEIGHT_M_reg(data)                                      (*((volatile unsigned int*)VDTOP_PORCH_HEIGHT_M_reg)=data)
#define  get_VDTOP_PORCH_HEIGHT_M_reg                                            (*((volatile unsigned int*)VDTOP_PORCH_HEIGHT_M_reg))
#define  VDTOP_PORCH_HEIGHT_M_porch_h_shift                                      (0)
#define  VDTOP_PORCH_HEIGHT_M_porch_h_mask                                       (0x00001FFF)
#define  VDTOP_PORCH_HEIGHT_M_porch_h(data)                                      (0x00001FFF&(data))
#define  VDTOP_PORCH_HEIGHT_M_get_porch_h(data)                                  (0x00001FFF&(data))

#define  VDTOP_NOISE_STATUS                                                     0x1801903C
#define  VDTOP_NOISE_STATUS_reg_addr                                             "0xB801903C"
#define  VDTOP_NOISE_STATUS_reg                                                  0xB801903C
#define  VDTOP_NOISE_STATUS_inst_addr                                            "0x000F"
#define  set_VDTOP_NOISE_STATUS_reg(data)                                        (*((volatile unsigned int*)VDTOP_NOISE_STATUS_reg)=data)
#define  get_VDTOP_NOISE_STATUS_reg                                              (*((volatile unsigned int*)VDTOP_NOISE_STATUS_reg))
#define  VDTOP_NOISE_STATUS_status_noise_shift                                   (0)
#define  VDTOP_NOISE_STATUS_status_noise_mask                                    (0x000000FF)
#define  VDTOP_NOISE_STATUS_status_noise(data)                                   (0x000000FF&(data))
#define  VDTOP_NOISE_STATUS_get_status_noise(data)                               (0x000000FF&(data))

#define  VDTOP_NOISE_THRESHOLD                                                  0x18019040
#define  VDTOP_NOISE_THRESHOLD_reg_addr                                          "0xB8019040"
#define  VDTOP_NOISE_THRESHOLD_reg                                               0xB8019040
#define  VDTOP_NOISE_THRESHOLD_inst_addr                                         "0x0010"
#define  set_VDTOP_NOISE_THRESHOLD_reg(data)                                     (*((volatile unsigned int*)VDTOP_NOISE_THRESHOLD_reg)=data)
#define  get_VDTOP_NOISE_THRESHOLD_reg                                           (*((volatile unsigned int*)VDTOP_NOISE_THRESHOLD_reg))
#define  VDTOP_NOISE_THRESHOLD_noise_thresh_shift                                (0)
#define  VDTOP_NOISE_THRESHOLD_noise_thresh_mask                                 (0x000000FF)
#define  VDTOP_NOISE_THRESHOLD_noise_thresh(data)                                (0x000000FF&(data))
#define  VDTOP_NOISE_THRESHOLD_get_noise_thresh(data)                            (0x000000FF&(data))

#define  VDTOP_H_LINE_MEASURE_TH                                                0x18019044
#define  VDTOP_H_LINE_MEASURE_TH_reg_addr                                        "0xB8019044"
#define  VDTOP_H_LINE_MEASURE_TH_reg                                             0xB8019044
#define  VDTOP_H_LINE_MEASURE_TH_inst_addr                                       "0x0011"
#define  set_VDTOP_H_LINE_MEASURE_TH_reg(data)                                   (*((volatile unsigned int*)VDTOP_H_LINE_MEASURE_TH_reg)=data)
#define  get_VDTOP_H_LINE_MEASURE_TH_reg                                         (*((volatile unsigned int*)VDTOP_H_LINE_MEASURE_TH_reg))
#define  VDTOP_H_LINE_MEASURE_TH_line_count_27x_lower_shift                      (16)
#define  VDTOP_H_LINE_MEASURE_TH_line_count_27x_upper_shift                      (0)
#define  VDTOP_H_LINE_MEASURE_TH_line_count_27x_lower_mask                       (0x0FFF0000)
#define  VDTOP_H_LINE_MEASURE_TH_line_count_27x_upper_mask                       (0x00000FFF)
#define  VDTOP_H_LINE_MEASURE_TH_line_count_27x_lower(data)                      (0x0FFF0000&((data)<<16))
#define  VDTOP_H_LINE_MEASURE_TH_line_count_27x_upper(data)                      (0x00000FFF&(data))
#define  VDTOP_H_LINE_MEASURE_TH_get_line_count_27x_lower(data)                  ((0x0FFF0000&(data))>>16)
#define  VDTOP_H_LINE_MEASURE_TH_get_line_count_27x_upper(data)                  (0x00000FFF&(data))

#define  VDTOP_H_LINE_MEASURE_RESULT                                            0x1801904C
#define  VDTOP_H_LINE_MEASURE_RESULT_reg_addr                                    "0xB801904C"
#define  VDTOP_H_LINE_MEASURE_RESULT_reg                                         0xB801904C
#define  VDTOP_H_LINE_MEASURE_RESULT_inst_addr                                   "0x0012"
#define  set_VDTOP_H_LINE_MEASURE_RESULT_reg(data)                               (*((volatile unsigned int*)VDTOP_H_LINE_MEASURE_RESULT_reg)=data)
#define  get_VDTOP_H_LINE_MEASURE_RESULT_reg                                     (*((volatile unsigned int*)VDTOP_H_LINE_MEASURE_RESULT_reg))
#define  VDTOP_H_LINE_MEASURE_RESULT_line_count_27x_avg_shift                    (0)
#define  VDTOP_H_LINE_MEASURE_RESULT_line_count_27x_avg_mask                     (0x00000FFF)
#define  VDTOP_H_LINE_MEASURE_RESULT_line_count_27x_avg(data)                    (0x00000FFF&(data))
#define  VDTOP_H_LINE_MEASURE_RESULT_get_line_count_27x_avg(data)                (0x00000FFF&(data))

#define  VDTOP_HSYNC_DTO_INC                                                    0x18019050
#define  VDTOP_HSYNC_DTO_INC_reg_addr                                            "0xB8019050"
#define  VDTOP_HSYNC_DTO_INC_reg                                                 0xB8019050
#define  VDTOP_HSYNC_DTO_INC_inst_addr                                           "0x0013"
#define  set_VDTOP_HSYNC_DTO_INC_reg(data)                                       (*((volatile unsigned int*)VDTOP_HSYNC_DTO_INC_reg)=data)
#define  get_VDTOP_HSYNC_DTO_INC_reg                                             (*((volatile unsigned int*)VDTOP_HSYNC_DTO_INC_reg))
#define  VDTOP_HSYNC_DTO_INC_hdto_fixed_shift                                    (31)
#define  VDTOP_HSYNC_DTO_INC_hdto_inc_shift                                      (0)
#define  VDTOP_HSYNC_DTO_INC_hdto_fixed_mask                                     (0x80000000)
#define  VDTOP_HSYNC_DTO_INC_hdto_inc_mask                                       (0x3FFFFFFF)
#define  VDTOP_HSYNC_DTO_INC_hdto_fixed(data)                                    (0x80000000&((data)<<31))
#define  VDTOP_HSYNC_DTO_INC_hdto_inc(data)                                      (0x3FFFFFFF&(data))
#define  VDTOP_HSYNC_DTO_INC_get_hdto_fixed(data)                                ((0x80000000&(data))>>31)
#define  VDTOP_HSYNC_DTO_INC_get_hdto_inc(data)                                  (0x3FFFFFFF&(data))

#define  VDTOP_CHROMA_DTO_INC                                                   0x18019054
#define  VDTOP_CHROMA_DTO_INC_reg_addr                                           "0xB8019054"
#define  VDTOP_CHROMA_DTO_INC_reg                                                0xB8019054
#define  VDTOP_CHROMA_DTO_INC_inst_addr                                          "0x0014"
#define  set_VDTOP_CHROMA_DTO_INC_reg(data)                                      (*((volatile unsigned int*)VDTOP_CHROMA_DTO_INC_reg)=data)
#define  get_VDTOP_CHROMA_DTO_INC_reg                                            (*((volatile unsigned int*)VDTOP_CHROMA_DTO_INC_reg))
#define  VDTOP_CHROMA_DTO_INC_cdto_fixed_shift                                   (31)
#define  VDTOP_CHROMA_DTO_INC_cdto_inc_shift                                     (0)
#define  VDTOP_CHROMA_DTO_INC_cdto_fixed_mask                                    (0x80000000)
#define  VDTOP_CHROMA_DTO_INC_cdto_inc_mask                                      (0x3FFFFFFF)
#define  VDTOP_CHROMA_DTO_INC_cdto_fixed(data)                                   (0x80000000&((data)<<31))
#define  VDTOP_CHROMA_DTO_INC_cdto_inc(data)                                     (0x3FFFFFFF&(data))
#define  VDTOP_CHROMA_DTO_INC_get_cdto_fixed(data)                               ((0x80000000&(data))>>31)
#define  VDTOP_CHROMA_DTO_INC_get_cdto_inc(data)                                 (0x3FFFFFFF&(data))

#define  VDTOP_CHIP_VER                                                         0x18019058
#define  VDTOP_CHIP_VER_reg_addr                                                 "0xB8019058"
#define  VDTOP_CHIP_VER_reg                                                      0xB8019058
#define  VDTOP_CHIP_VER_inst_addr                                                "0x0015"
#define  set_VDTOP_CHIP_VER_reg(data)                                            (*((volatile unsigned int*)VDTOP_CHIP_VER_reg)=data)
#define  get_VDTOP_CHIP_VER_reg                                                  (*((volatile unsigned int*)VDTOP_CHIP_VER_reg))
#define  VDTOP_CHIP_VER_chip_ver_shift                                           (0)
#define  VDTOP_CHIP_VER_chip_ver_mask                                            (0x0000FFFF)
#define  VDTOP_CHIP_VER_chip_ver(data)                                           (0x0000FFFF&(data))
#define  VDTOP_CHIP_VER_get_chip_ver(data)                                       (0x0000FFFF&(data))

#define  VDTOP_BLANK_VID_OFFSET_VALUE                                           0x1801905C
#define  VDTOP_BLANK_VID_OFFSET_VALUE_reg_addr                                   "0xB801905C"
#define  VDTOP_BLANK_VID_OFFSET_VALUE_reg                                        0xB801905C
#define  VDTOP_BLANK_VID_OFFSET_VALUE_inst_addr                                  "0x0016"
#define  set_VDTOP_BLANK_VID_OFFSET_VALUE_reg(data)                              (*((volatile unsigned int*)VDTOP_BLANK_VID_OFFSET_VALUE_reg)=data)
#define  get_VDTOP_BLANK_VID_OFFSET_VALUE_reg                                    (*((volatile unsigned int*)VDTOP_BLANK_VID_OFFSET_VALUE_reg))
#define  VDTOP_BLANK_VID_OFFSET_VALUE_blank_vid_offset_manu_en_shift             (12)
#define  VDTOP_BLANK_VID_OFFSET_VALUE_blank_vid_offset_value_shift               (0)
#define  VDTOP_BLANK_VID_OFFSET_VALUE_blank_vid_offset_manu_en_mask              (0x00001000)
#define  VDTOP_BLANK_VID_OFFSET_VALUE_blank_vid_offset_value_mask                (0x000007FF)
#define  VDTOP_BLANK_VID_OFFSET_VALUE_blank_vid_offset_manu_en(data)             (0x00001000&((data)<<12))
#define  VDTOP_BLANK_VID_OFFSET_VALUE_blank_vid_offset_value(data)               (0x000007FF&(data))
#define  VDTOP_BLANK_VID_OFFSET_VALUE_get_blank_vid_offset_manu_en(data)         ((0x00001000&(data))>>12)
#define  VDTOP_BLANK_VID_OFFSET_VALUE_get_blank_vid_offset_value(data)           (0x000007FF&(data))

#define  VDTOP_LUMA_CONTRAST_ADJ                                                0x18019060
#define  VDTOP_LUMA_CONTRAST_ADJ_reg_addr                                        "0xB8019060"
#define  VDTOP_LUMA_CONTRAST_ADJ_reg                                             0xB8019060
#define  VDTOP_LUMA_CONTRAST_ADJ_inst_addr                                       "0x0017"
#define  set_VDTOP_LUMA_CONTRAST_ADJ_reg(data)                                   (*((volatile unsigned int*)VDTOP_LUMA_CONTRAST_ADJ_reg)=data)
#define  get_VDTOP_LUMA_CONTRAST_ADJ_reg                                         (*((volatile unsigned int*)VDTOP_LUMA_CONTRAST_ADJ_reg))
#define  VDTOP_LUMA_CONTRAST_ADJ_contrast_shift                                  (0)
#define  VDTOP_LUMA_CONTRAST_ADJ_contrast_mask                                   (0x000000FF)
#define  VDTOP_LUMA_CONTRAST_ADJ_contrast(data)                                  (0x000000FF&(data))
#define  VDTOP_LUMA_CONTRAST_ADJ_get_contrast(data)                              (0x000000FF&(data))

#define  VDTOP_LUMA_BRIGHTNESS_ADJ                                              0x18019064
#define  VDTOP_LUMA_BRIGHTNESS_ADJ_reg_addr                                      "0xB8019064"
#define  VDTOP_LUMA_BRIGHTNESS_ADJ_reg                                           0xB8019064
#define  VDTOP_LUMA_BRIGHTNESS_ADJ_inst_addr                                     "0x0018"
#define  set_VDTOP_LUMA_BRIGHTNESS_ADJ_reg(data)                                 (*((volatile unsigned int*)VDTOP_LUMA_BRIGHTNESS_ADJ_reg)=data)
#define  get_VDTOP_LUMA_BRIGHTNESS_ADJ_reg                                       (*((volatile unsigned int*)VDTOP_LUMA_BRIGHTNESS_ADJ_reg))
#define  VDTOP_LUMA_BRIGHTNESS_ADJ_brightness_shift                              (0)
#define  VDTOP_LUMA_BRIGHTNESS_ADJ_brightness_mask                               (0x000000FF)
#define  VDTOP_LUMA_BRIGHTNESS_ADJ_brightness(data)                              (0x000000FF&(data))
#define  VDTOP_LUMA_BRIGHTNESS_ADJ_get_brightness(data)                          (0x000000FF&(data))

#define  VDTOP_CHROMA_SATURATION_ADJ                                            0x18019068
#define  VDTOP_CHROMA_SATURATION_ADJ_reg_addr                                    "0xB8019068"
#define  VDTOP_CHROMA_SATURATION_ADJ_reg                                         0xB8019068
#define  VDTOP_CHROMA_SATURATION_ADJ_inst_addr                                   "0x0019"
#define  set_VDTOP_CHROMA_SATURATION_ADJ_reg(data)                               (*((volatile unsigned int*)VDTOP_CHROMA_SATURATION_ADJ_reg)=data)
#define  get_VDTOP_CHROMA_SATURATION_ADJ_reg                                     (*((volatile unsigned int*)VDTOP_CHROMA_SATURATION_ADJ_reg))
#define  VDTOP_CHROMA_SATURATION_ADJ_saturation_shift                            (0)
#define  VDTOP_CHROMA_SATURATION_ADJ_saturation_mask                             (0x000000FF)
#define  VDTOP_CHROMA_SATURATION_ADJ_saturation(data)                            (0x000000FF&(data))
#define  VDTOP_CHROMA_SATURATION_ADJ_get_saturation(data)                        (0x000000FF&(data))

#define  VDTOP_CHROMA_HUE_PHASE_ADJ                                             0x1801906C
#define  VDTOP_CHROMA_HUE_PHASE_ADJ_reg_addr                                     "0xB801906C"
#define  VDTOP_CHROMA_HUE_PHASE_ADJ_reg                                          0xB801906C
#define  VDTOP_CHROMA_HUE_PHASE_ADJ_inst_addr                                    "0x001A"
#define  set_VDTOP_CHROMA_HUE_PHASE_ADJ_reg(data)                                (*((volatile unsigned int*)VDTOP_CHROMA_HUE_PHASE_ADJ_reg)=data)
#define  get_VDTOP_CHROMA_HUE_PHASE_ADJ_reg                                      (*((volatile unsigned int*)VDTOP_CHROMA_HUE_PHASE_ADJ_reg))
#define  VDTOP_CHROMA_HUE_PHASE_ADJ_hue_shift                                    (0)
#define  VDTOP_CHROMA_HUE_PHASE_ADJ_hue_mask                                     (0x000000FF)
#define  VDTOP_CHROMA_HUE_PHASE_ADJ_hue(data)                                    (0x000000FF&(data))
#define  VDTOP_CHROMA_HUE_PHASE_ADJ_get_hue(data)                                (0x000000FF&(data))

#define  VDTOP_BLUE_SCREEN_Y                                                    0x18019070
#define  VDTOP_BLUE_SCREEN_Y_reg_addr                                            "0xB8019070"
#define  VDTOP_BLUE_SCREEN_Y_reg                                                 0xB8019070
#define  VDTOP_BLUE_SCREEN_Y_inst_addr                                           "0x001B"
#define  set_VDTOP_BLUE_SCREEN_Y_reg(data)                                       (*((volatile unsigned int*)VDTOP_BLUE_SCREEN_Y_reg)=data)
#define  get_VDTOP_BLUE_SCREEN_Y_reg                                             (*((volatile unsigned int*)VDTOP_BLUE_SCREEN_Y_reg))
#define  VDTOP_BLUE_SCREEN_Y_blue_screen_y_shift                                 (0)
#define  VDTOP_BLUE_SCREEN_Y_blue_screen_y_mask                                  (0x000000FF)
#define  VDTOP_BLUE_SCREEN_Y_blue_screen_y(data)                                 (0x000000FF&(data))
#define  VDTOP_BLUE_SCREEN_Y_get_blue_screen_y(data)                             (0x000000FF&(data))

#define  VDTOP_BLUE_SCREEN_CB                                                   0x18019074
#define  VDTOP_BLUE_SCREEN_CB_reg_addr                                           "0xB8019074"
#define  VDTOP_BLUE_SCREEN_CB_reg                                                0xB8019074
#define  VDTOP_BLUE_SCREEN_CB_inst_addr                                          "0x001C"
#define  set_VDTOP_BLUE_SCREEN_CB_reg(data)                                      (*((volatile unsigned int*)VDTOP_BLUE_SCREEN_CB_reg)=data)
#define  get_VDTOP_BLUE_SCREEN_CB_reg                                            (*((volatile unsigned int*)VDTOP_BLUE_SCREEN_CB_reg))
#define  VDTOP_BLUE_SCREEN_CB_blue_screen_cb_shift                               (0)
#define  VDTOP_BLUE_SCREEN_CB_blue_screen_cb_mask                                (0x000000FF)
#define  VDTOP_BLUE_SCREEN_CB_blue_screen_cb(data)                               (0x000000FF&(data))
#define  VDTOP_BLUE_SCREEN_CB_get_blue_screen_cb(data)                           (0x000000FF&(data))

#define  VDTOP_BLUE_SCREEN_CR                                                   0x18019078
#define  VDTOP_BLUE_SCREEN_CR_reg_addr                                           "0xB8019078"
#define  VDTOP_BLUE_SCREEN_CR_reg                                                0xB8019078
#define  VDTOP_BLUE_SCREEN_CR_inst_addr                                          "0x001D"
#define  set_VDTOP_BLUE_SCREEN_CR_reg(data)                                      (*((volatile unsigned int*)VDTOP_BLUE_SCREEN_CR_reg)=data)
#define  get_VDTOP_BLUE_SCREEN_CR_reg                                            (*((volatile unsigned int*)VDTOP_BLUE_SCREEN_CR_reg))
#define  VDTOP_BLUE_SCREEN_CR_blue_screen_cr_shift                               (0)
#define  VDTOP_BLUE_SCREEN_CR_blue_screen_cr_mask                                (0x000000FF)
#define  VDTOP_BLUE_SCREEN_CR_blue_screen_cr(data)                               (0x000000FF&(data))
#define  VDTOP_BLUE_SCREEN_CR_get_blue_screen_cr(data)                           (0x000000FF&(data))

#define  VDTOP_OUTPUT_CONTROL                                                   0x1801907C
#define  VDTOP_OUTPUT_CONTROL_reg_addr                                           "0xB801907C"
#define  VDTOP_OUTPUT_CONTROL_reg                                                0xB801907C
#define  VDTOP_OUTPUT_CONTROL_inst_addr                                          "0x001E"
#define  set_VDTOP_OUTPUT_CONTROL_reg(data)                                      (*((volatile unsigned int*)VDTOP_OUTPUT_CONTROL_reg)=data)
#define  get_VDTOP_OUTPUT_CONTROL_reg                                            (*((volatile unsigned int*)VDTOP_OUTPUT_CONTROL_reg))
#define  VDTOP_OUTPUT_CONTROL_motion_delay_shift                                 (8)
#define  VDTOP_OUTPUT_CONTROL_snow_freerun_en_shift                              (7)
#define  VDTOP_OUTPUT_CONTROL_cbcr_swap_shift                                    (6)
#define  VDTOP_OUTPUT_CONTROL_blue_mode_shift                                    (4)
#define  VDTOP_OUTPUT_CONTROL_yc_delay_shift                                     (0)
#define  VDTOP_OUTPUT_CONTROL_motion_delay_mask                                  (0x00000F00)
#define  VDTOP_OUTPUT_CONTROL_snow_freerun_en_mask                               (0x00000080)
#define  VDTOP_OUTPUT_CONTROL_cbcr_swap_mask                                     (0x00000040)
#define  VDTOP_OUTPUT_CONTROL_blue_mode_mask                                     (0x00000030)
#define  VDTOP_OUTPUT_CONTROL_yc_delay_mask                                      (0x0000000F)
#define  VDTOP_OUTPUT_CONTROL_motion_delay(data)                                 (0x00000F00&((data)<<8))
#define  VDTOP_OUTPUT_CONTROL_snow_freerun_en(data)                              (0x00000080&((data)<<7))
#define  VDTOP_OUTPUT_CONTROL_cbcr_swap(data)                                    (0x00000040&((data)<<6))
#define  VDTOP_OUTPUT_CONTROL_blue_mode(data)                                    (0x00000030&((data)<<4))
#define  VDTOP_OUTPUT_CONTROL_yc_delay(data)                                     (0x0000000F&(data))
#define  VDTOP_OUTPUT_CONTROL_get_motion_delay(data)                             ((0x00000F00&(data))>>8)
#define  VDTOP_OUTPUT_CONTROL_get_snow_freerun_en(data)                          ((0x00000080&(data))>>7)
#define  VDTOP_OUTPUT_CONTROL_get_cbcr_swap(data)                                ((0x00000040&(data))>>6)
#define  VDTOP_OUTPUT_CONTROL_get_blue_mode(data)                                ((0x00000030&(data))>>4)
#define  VDTOP_OUTPUT_CONTROL_get_yc_delay(data)                                 (0x0000000F&(data))

#define  VDTOP_INOUT_CTRL                                                       0x18019080
#define  VDTOP_INOUT_CTRL_reg_addr                                               "0xB8019080"
#define  VDTOP_INOUT_CTRL_reg                                                    0xB8019080
#define  VDTOP_INOUT_CTRL_inst_addr                                              "0x001F"
#define  set_VDTOP_INOUT_CTRL_reg(data)                                          (*((volatile unsigned int*)VDTOP_INOUT_CTRL_reg)=data)
#define  get_VDTOP_INOUT_CTRL_reg                                                (*((volatile unsigned int*)VDTOP_INOUT_CTRL_reg))
#define  VDTOP_INOUT_CTRL_avout_hsync_start_shift                                (20)
#define  VDTOP_INOUT_CTRL_avout_hsync_end_shift                                  (8)
#define  VDTOP_INOUT_CTRL_fe_bypass_sel_shift                                    (4)
#define  VDTOP_INOUT_CTRL_sw_tu_cvbs_shift                                       (3)
#define  VDTOP_INOUT_CTRL_clamp_if_up_en_shift                                   (1)
#define  VDTOP_INOUT_CTRL_clamp_if_dn_en_shift                                   (0)
#define  VDTOP_INOUT_CTRL_avout_hsync_start_mask                                 (0x3FF00000)
#define  VDTOP_INOUT_CTRL_avout_hsync_end_mask                                   (0x0003FF00)
#define  VDTOP_INOUT_CTRL_fe_bypass_sel_mask                                     (0x00000010)
#define  VDTOP_INOUT_CTRL_sw_tu_cvbs_mask                                        (0x00000008)
#define  VDTOP_INOUT_CTRL_clamp_if_up_en_mask                                    (0x00000002)
#define  VDTOP_INOUT_CTRL_clamp_if_dn_en_mask                                    (0x00000001)
#define  VDTOP_INOUT_CTRL_avout_hsync_start(data)                                (0x3FF00000&((data)<<20))
#define  VDTOP_INOUT_CTRL_avout_hsync_end(data)                                  (0x0003FF00&((data)<<8))
#define  VDTOP_INOUT_CTRL_fe_bypass_sel(data)                                    (0x00000010&((data)<<4))
#define  VDTOP_INOUT_CTRL_sw_tu_cvbs(data)                                       (0x00000008&((data)<<3))
#define  VDTOP_INOUT_CTRL_clamp_if_up_en(data)                                   (0x00000002&((data)<<1))
#define  VDTOP_INOUT_CTRL_clamp_if_dn_en(data)                                   (0x00000001&(data))
#define  VDTOP_INOUT_CTRL_get_avout_hsync_start(data)                            ((0x3FF00000&(data))>>20)
#define  VDTOP_INOUT_CTRL_get_avout_hsync_end(data)                              ((0x0003FF00&(data))>>8)
#define  VDTOP_INOUT_CTRL_get_fe_bypass_sel(data)                                ((0x00000010&(data))>>4)
#define  VDTOP_INOUT_CTRL_get_sw_tu_cvbs(data)                                   ((0x00000008&(data))>>3)
#define  VDTOP_INOUT_CTRL_get_clamp_if_up_en(data)                               ((0x00000002&(data))>>1)
#define  VDTOP_INOUT_CTRL_get_clamp_if_dn_en(data)                               (0x00000001&(data))

#define  VDTOP_AVOUT_FIFO_STATUS                                                0x18019084
#define  VDTOP_AVOUT_FIFO_STATUS_reg_addr                                        "0xB8019084"
#define  VDTOP_AVOUT_FIFO_STATUS_reg                                             0xB8019084
#define  VDTOP_AVOUT_FIFO_STATUS_inst_addr                                       "0x0020"
#define  set_VDTOP_AVOUT_FIFO_STATUS_reg(data)                                   (*((volatile unsigned int*)VDTOP_AVOUT_FIFO_STATUS_reg)=data)
#define  get_VDTOP_AVOUT_FIFO_STATUS_reg                                         (*((volatile unsigned int*)VDTOP_AVOUT_FIFO_STATUS_reg))
#define  VDTOP_AVOUT_FIFO_STATUS_output_fifo_full_shift                          (26)
#define  VDTOP_AVOUT_FIFO_STATUS_output_fifo_empty_shift                         (25)
#define  VDTOP_AVOUT_FIFO_STATUS_output_delay_0_180_sw_shift                     (24)
#define  VDTOP_AVOUT_FIFO_STATUS_avout_test_in_shift                             (12)
#define  VDTOP_AVOUT_FIFO_STATUS_avout_mixer_sel_shift                           (5)
#define  VDTOP_AVOUT_FIFO_STATUS_avout_fifo_status_full_shift                    (1)
#define  VDTOP_AVOUT_FIFO_STATUS_avout_fifo_status_empty_shift                   (0)
#define  VDTOP_AVOUT_FIFO_STATUS_output_fifo_full_mask                           (0x04000000)
#define  VDTOP_AVOUT_FIFO_STATUS_output_fifo_empty_mask                          (0x02000000)
#define  VDTOP_AVOUT_FIFO_STATUS_output_delay_0_180_sw_mask                      (0x01000000)
#define  VDTOP_AVOUT_FIFO_STATUS_avout_test_in_mask                              (0x00FFF000)
#define  VDTOP_AVOUT_FIFO_STATUS_avout_mixer_sel_mask                            (0x000001E0)
#define  VDTOP_AVOUT_FIFO_STATUS_avout_fifo_status_full_mask                     (0x00000002)
#define  VDTOP_AVOUT_FIFO_STATUS_avout_fifo_status_empty_mask                    (0x00000001)
#define  VDTOP_AVOUT_FIFO_STATUS_output_fifo_full(data)                          (0x04000000&((data)<<26))
#define  VDTOP_AVOUT_FIFO_STATUS_output_fifo_empty(data)                         (0x02000000&((data)<<25))
#define  VDTOP_AVOUT_FIFO_STATUS_output_delay_0_180_sw(data)                     (0x01000000&((data)<<24))
#define  VDTOP_AVOUT_FIFO_STATUS_avout_test_in(data)                             (0x00FFF000&((data)<<12))
#define  VDTOP_AVOUT_FIFO_STATUS_avout_mixer_sel(data)                           (0x000001E0&((data)<<5))
#define  VDTOP_AVOUT_FIFO_STATUS_avout_fifo_status_full(data)                    (0x00000002&((data)<<1))
#define  VDTOP_AVOUT_FIFO_STATUS_avout_fifo_status_empty(data)                   (0x00000001&(data))
#define  VDTOP_AVOUT_FIFO_STATUS_get_output_fifo_full(data)                      ((0x04000000&(data))>>26)
#define  VDTOP_AVOUT_FIFO_STATUS_get_output_fifo_empty(data)                     ((0x02000000&(data))>>25)
#define  VDTOP_AVOUT_FIFO_STATUS_get_output_delay_0_180_sw(data)                 ((0x01000000&(data))>>24)
#define  VDTOP_AVOUT_FIFO_STATUS_get_avout_test_in(data)                         ((0x00FFF000&(data))>>12)
#define  VDTOP_AVOUT_FIFO_STATUS_get_avout_mixer_sel(data)                       ((0x000001E0&(data))>>5)
#define  VDTOP_AVOUT_FIFO_STATUS_get_avout_fifo_status_full(data)                ((0x00000002&(data))>>1)
#define  VDTOP_AVOUT_FIFO_STATUS_get_avout_fifo_status_empty(data)               (0x00000001&(data))

#define  VDTOP_AVOUT_IFDEBUG                                                    0x18019088
#define  VDTOP_AVOUT_IFDEBUG_reg_addr                                            "0xB8019088"
#define  VDTOP_AVOUT_IFDEBUG_reg                                                 0xB8019088
#define  VDTOP_AVOUT_IFDEBUG_inst_addr                                           "0x0021"
#define  set_VDTOP_AVOUT_IFDEBUG_reg(data)                                       (*((volatile unsigned int*)VDTOP_AVOUT_IFDEBUG_reg)=data)
#define  get_VDTOP_AVOUT_IFDEBUG_reg                                             (*((volatile unsigned int*)VDTOP_AVOUT_IFDEBUG_reg))
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_inv_shift                             (20)
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_mask_shift                            (8)
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_shift_shift                           (4)
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_sel_shift                             (0)
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_inv_mask                              (0xFFF00000)
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_mask_mask                             (0x000FFF00)
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_shift_mask                            (0x000000F0)
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_sel_mask                              (0x00000001)
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_inv(data)                             (0xFFF00000&((data)<<20))
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_mask(data)                            (0x000FFF00&((data)<<8))
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_shift(data)                           (0x000000F0&((data)<<4))
#define  VDTOP_AVOUT_IFDEBUG_avout_ifdebug_sel(data)                             (0x00000001&(data))
#define  VDTOP_AVOUT_IFDEBUG_get_avout_ifdebug_inv(data)                         ((0xFFF00000&(data))>>20)
#define  VDTOP_AVOUT_IFDEBUG_get_avout_ifdebug_mask(data)                        ((0x000FFF00&(data))>>8)
#define  VDTOP_AVOUT_IFDEBUG_get_avout_ifdebug_shift(data)                       ((0x000000F0&(data))>>4)
#define  VDTOP_AVOUT_IFDEBUG_get_avout_ifdebug_sel(data)                         (0x00000001&(data))

#define  VDTOP_AVOUT1_IFDEBUG_1                                                 0x1801908C
#define  VDTOP_AVOUT1_IFDEBUG_1_reg_addr                                         "0xB801908C"
#define  VDTOP_AVOUT1_IFDEBUG_1_reg                                              0xB801908C
#define  VDTOP_AVOUT1_IFDEBUG_1_inst_addr                                        "0x0022"
#define  set_VDTOP_AVOUT1_IFDEBUG_1_reg(data)                                    (*((volatile unsigned int*)VDTOP_AVOUT1_IFDEBUG_1_reg)=data)
#define  get_VDTOP_AVOUT1_IFDEBUG_1_reg                                          (*((volatile unsigned int*)VDTOP_AVOUT1_IFDEBUG_1_reg))
#define  VDTOP_AVOUT1_IFDEBUG_1_ramp_en_shift                                    (25)
#define  VDTOP_AVOUT1_IFDEBUG_1_ramp_updn_sel_shift                              (24)
#define  VDTOP_AVOUT1_IFDEBUG_1_ramp_counter_num_shift                           (0)
#define  VDTOP_AVOUT1_IFDEBUG_1_ramp_en_mask                                     (0x02000000)
#define  VDTOP_AVOUT1_IFDEBUG_1_ramp_updn_sel_mask                               (0x01000000)
#define  VDTOP_AVOUT1_IFDEBUG_1_ramp_counter_num_mask                            (0x00FFFFFF)
#define  VDTOP_AVOUT1_IFDEBUG_1_ramp_en(data)                                    (0x02000000&((data)<<25))
#define  VDTOP_AVOUT1_IFDEBUG_1_ramp_updn_sel(data)                              (0x01000000&((data)<<24))
#define  VDTOP_AVOUT1_IFDEBUG_1_ramp_counter_num(data)                           (0x00FFFFFF&(data))
#define  VDTOP_AVOUT1_IFDEBUG_1_get_ramp_en(data)                                ((0x02000000&(data))>>25)
#define  VDTOP_AVOUT1_IFDEBUG_1_get_ramp_updn_sel(data)                          ((0x01000000&(data))>>24)
#define  VDTOP_AVOUT1_IFDEBUG_1_get_ramp_counter_num(data)                       (0x00FFFFFF&(data))

#define  VDTOP_AGC_PEAK_NOMINAL                                                 0x18019090
#define  VDTOP_AGC_PEAK_NOMINAL_reg_addr                                         "0xB8019090"
#define  VDTOP_AGC_PEAK_NOMINAL_reg                                              0xB8019090
#define  VDTOP_AGC_PEAK_NOMINAL_inst_addr                                        "0x0023"
#define  set_VDTOP_AGC_PEAK_NOMINAL_reg(data)                                    (*((volatile unsigned int*)VDTOP_AGC_PEAK_NOMINAL_reg)=data)
#define  get_VDTOP_AGC_PEAK_NOMINAL_reg                                          (*((volatile unsigned int*)VDTOP_AGC_PEAK_NOMINAL_reg))
#define  VDTOP_AGC_PEAK_NOMINAL_peak_deb_en_shift                                (31)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_diff_sel_shift                              (28)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_data_sel_shift                              (25)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_deb_limit_shift                             (16)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_deb_thl_shift                               (8)
#define  VDTOP_AGC_PEAK_NOMINAL_hagc_err_coring_en_shift                         (7)
#define  VDTOP_AGC_PEAK_NOMINAL_agc_peak_nominal_shift                           (0)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_deb_en_mask                                 (0x80000000)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_diff_sel_mask                               (0x30000000)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_data_sel_mask                               (0x02000000)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_deb_limit_mask                              (0x01FF0000)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_deb_thl_mask                                (0x0000FF00)
#define  VDTOP_AGC_PEAK_NOMINAL_hagc_err_coring_en_mask                          (0x00000080)
#define  VDTOP_AGC_PEAK_NOMINAL_agc_peak_nominal_mask                            (0x0000007F)
#define  VDTOP_AGC_PEAK_NOMINAL_peak_deb_en(data)                                (0x80000000&((data)<<31))
#define  VDTOP_AGC_PEAK_NOMINAL_peak_diff_sel(data)                              (0x30000000&((data)<<28))
#define  VDTOP_AGC_PEAK_NOMINAL_peak_data_sel(data)                              (0x02000000&((data)<<25))
#define  VDTOP_AGC_PEAK_NOMINAL_peak_deb_limit(data)                             (0x01FF0000&((data)<<16))
#define  VDTOP_AGC_PEAK_NOMINAL_peak_deb_thl(data)                               (0x0000FF00&((data)<<8))
#define  VDTOP_AGC_PEAK_NOMINAL_hagc_err_coring_en(data)                         (0x00000080&((data)<<7))
#define  VDTOP_AGC_PEAK_NOMINAL_agc_peak_nominal(data)                           (0x0000007F&(data))
#define  VDTOP_AGC_PEAK_NOMINAL_get_peak_deb_en(data)                            ((0x80000000&(data))>>31)
#define  VDTOP_AGC_PEAK_NOMINAL_get_peak_diff_sel(data)                          ((0x30000000&(data))>>28)
#define  VDTOP_AGC_PEAK_NOMINAL_get_peak_data_sel(data)                          ((0x02000000&(data))>>25)
#define  VDTOP_AGC_PEAK_NOMINAL_get_peak_deb_limit(data)                         ((0x01FF0000&(data))>>16)
#define  VDTOP_AGC_PEAK_NOMINAL_get_peak_deb_thl(data)                           ((0x0000FF00&(data))>>8)
#define  VDTOP_AGC_PEAK_NOMINAL_get_hagc_err_coring_en(data)                     ((0x00000080&(data))>>7)
#define  VDTOP_AGC_PEAK_NOMINAL_get_agc_peak_nominal(data)                       (0x0000007F&(data))

#define  VDTOP_AGC_PEAK_AND_GATE_CTRL                                           0x18019094
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_reg_addr                                   "0xB8019094"
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_reg                                        0xB8019094
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_inst_addr                                  "0x0024"
#define  set_VDTOP_AGC_PEAK_AND_GATE_CTRL_reg(data)                              (*((volatile unsigned int*)VDTOP_AGC_PEAK_AND_GATE_CTRL_reg)=data)
#define  get_VDTOP_AGC_PEAK_AND_GATE_CTRL_reg                                    (*((volatile unsigned int*)VDTOP_AGC_PEAK_AND_GATE_CTRL_reg))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_dgain_i_cntl_without_trunc_en_shift        (31)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_chroma_path_dgain_after_en_shift           (29)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_ycsep_data_decrease_en_shift               (27)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_ycsep_data_decrease_ratio_shift            (24)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_peak_nominal_ycsep_shift               (12)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_kill_mode_sel_shift               (9)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_kill_w_hlock_shift                (8)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_vsync_coarse_shift                (7)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_vsync_stip_shift                  (6)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_kill_mode_shift                   (4)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_peak_en_shift                          (3)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_peak_cntl_shift                        (0)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_dgain_i_cntl_without_trunc_en_mask         (0x80000000)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_chroma_path_dgain_after_en_mask            (0x20000000)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_ycsep_data_decrease_en_mask                (0x08000000)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_ycsep_data_decrease_ratio_mask             (0x07000000)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_peak_nominal_ycsep_mask                (0x00FFF000)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_kill_mode_sel_mask                (0x00000600)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_kill_w_hlock_mask                 (0x00000100)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_vsync_coarse_mask                 (0x00000080)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_vsync_stip_mask                   (0x00000040)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_kill_mode_mask                    (0x00000030)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_peak_en_mask                           (0x00000008)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_peak_cntl_mask                         (0x00000007)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_dgain_i_cntl_without_trunc_en(data)        (0x80000000&((data)<<31))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_chroma_path_dgain_after_en(data)           (0x20000000&((data)<<29))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_ycsep_data_decrease_en(data)               (0x08000000&((data)<<27))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_ycsep_data_decrease_ratio(data)            (0x07000000&((data)<<24))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_peak_nominal_ycsep(data)               (0x00FFF000&((data)<<12))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_kill_mode_sel(data)               (0x00000600&((data)<<9))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_kill_w_hlock(data)                (0x00000100&((data)<<8))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_vsync_coarse(data)                (0x00000080&((data)<<7))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_vsync_stip(data)                  (0x00000040&((data)<<6))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_gate_kill_mode(data)                   (0x00000030&((data)<<4))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_peak_en(data)                          (0x00000008&((data)<<3))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_agc_peak_cntl(data)                        (0x00000007&(data))
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_dgain_i_cntl_without_trunc_en(data)    ((0x80000000&(data))>>31)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_chroma_path_dgain_after_en(data)       ((0x20000000&(data))>>29)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_ycsep_data_decrease_en(data)           ((0x08000000&(data))>>27)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_ycsep_data_decrease_ratio(data)        ((0x07000000&(data))>>24)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_agc_peak_nominal_ycsep(data)           ((0x00FFF000&(data))>>12)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_agc_gate_kill_mode_sel(data)           ((0x00000600&(data))>>9)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_agc_gate_kill_w_hlock(data)            ((0x00000100&(data))>>8)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_agc_gate_vsync_coarse(data)            ((0x00000080&(data))>>7)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_agc_gate_vsync_stip(data)              ((0x00000040&(data))>>6)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_agc_gate_kill_mode(data)               ((0x00000030&(data))>>4)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_agc_peak_en(data)                      ((0x00000008&(data))>>3)
#define  VDTOP_AGC_PEAK_AND_GATE_CTRL_get_agc_peak_cntl(data)                    (0x00000007&(data))

#define  VDTOP_AGC_PEAK_CTRL                                                    0x18019098
#define  VDTOP_AGC_PEAK_CTRL_reg_addr                                            "0xB8019098"
#define  VDTOP_AGC_PEAK_CTRL_reg                                                 0xB8019098
#define  VDTOP_AGC_PEAK_CTRL_inst_addr                                           "0x0025"
#define  set_VDTOP_AGC_PEAK_CTRL_reg(data)                                       (*((volatile unsigned int*)VDTOP_AGC_PEAK_CTRL_reg)=data)
#define  get_VDTOP_AGC_PEAK_CTRL_reg                                             (*((volatile unsigned int*)VDTOP_AGC_PEAK_CTRL_reg))
#define  VDTOP_AGC_PEAK_CTRL_peak_gain_shift                                     (20)
#define  VDTOP_AGC_PEAK_CTRL_diff_level_shift                                    (8)
#define  VDTOP_AGC_PEAK_CTRL_unlock_peakrst_en_shift                             (7)
#define  VDTOP_AGC_PEAK_CTRL_hagc_err_coring_th_shift                            (2)
#define  VDTOP_AGC_PEAK_CTRL_agc_peak_loop_gain_shift                            (0)
#define  VDTOP_AGC_PEAK_CTRL_peak_gain_mask                                      (0xFFF00000)
#define  VDTOP_AGC_PEAK_CTRL_diff_level_mask                                     (0x000FFF00)
#define  VDTOP_AGC_PEAK_CTRL_unlock_peakrst_en_mask                              (0x00000080)
#define  VDTOP_AGC_PEAK_CTRL_hagc_err_coring_th_mask                             (0x0000007C)
#define  VDTOP_AGC_PEAK_CTRL_agc_peak_loop_gain_mask                             (0x00000003)
#define  VDTOP_AGC_PEAK_CTRL_peak_gain(data)                                     (0xFFF00000&((data)<<20))
#define  VDTOP_AGC_PEAK_CTRL_diff_level(data)                                    (0x000FFF00&((data)<<8))
#define  VDTOP_AGC_PEAK_CTRL_unlock_peakrst_en(data)                             (0x00000080&((data)<<7))
#define  VDTOP_AGC_PEAK_CTRL_hagc_err_coring_th(data)                            (0x0000007C&((data)<<2))
#define  VDTOP_AGC_PEAK_CTRL_agc_peak_loop_gain(data)                            (0x00000003&(data))
#define  VDTOP_AGC_PEAK_CTRL_get_peak_gain(data)                                 ((0xFFF00000&(data))>>20)
#define  VDTOP_AGC_PEAK_CTRL_get_diff_level(data)                                ((0x000FFF00&(data))>>8)
#define  VDTOP_AGC_PEAK_CTRL_get_unlock_peakrst_en(data)                         ((0x00000080&(data))>>7)
#define  VDTOP_AGC_PEAK_CTRL_get_hagc_err_coring_th(data)                        ((0x0000007C&(data))>>2)
#define  VDTOP_AGC_PEAK_CTRL_get_agc_peak_loop_gain(data)                        (0x00000003&(data))

#define  VDTOP_VIDEO_CONTROL2                                                   0x1801909C
#define  VDTOP_VIDEO_CONTROL2_reg_addr                                           "0xB801909C"
#define  VDTOP_VIDEO_CONTROL2_reg                                                0xB801909C
#define  VDTOP_VIDEO_CONTROL2_inst_addr                                          "0x0026"
#define  set_VDTOP_VIDEO_CONTROL2_reg(data)                                      (*((volatile unsigned int*)VDTOP_VIDEO_CONTROL2_reg)=data)
#define  get_VDTOP_VIDEO_CONTROL2_reg                                            (*((volatile unsigned int*)VDTOP_VIDEO_CONTROL2_reg))
#define  VDTOP_VIDEO_CONTROL2_mov_detect_sel_shift                               (29)
#define  VDTOP_VIDEO_CONTROL2_fix_dgain_shift                                    (28)
#define  VDTOP_VIDEO_CONTROL2_dgain_state_shift                                  (20)
#define  VDTOP_VIDEO_CONTROL2_under_gain_shift                                   (8)
#define  VDTOP_VIDEO_CONTROL2_hagc_field_mode_shift                              (7)
#define  VDTOP_VIDEO_CONTROL2_mov_hagc_mode_shift                                (6)
#define  VDTOP_VIDEO_CONTROL2_dc_clamp_mode_shift                                (4)
#define  VDTOP_VIDEO_CONTROL2_vclamp_n_gate_sel_shift                            (3)
#define  VDTOP_VIDEO_CONTROL2_bgate_raw_sel_shift                                (2)
#define  VDTOP_VIDEO_CONTROL2_cagc_en_shift                                      (1)
#define  VDTOP_VIDEO_CONTROL2_hagc_en_shift                                      (0)
#define  VDTOP_VIDEO_CONTROL2_mov_detect_sel_mask                                (0x20000000)
#define  VDTOP_VIDEO_CONTROL2_fix_dgain_mask                                     (0x10000000)
#define  VDTOP_VIDEO_CONTROL2_dgain_state_mask                                   (0x00300000)
#define  VDTOP_VIDEO_CONTROL2_under_gain_mask                                    (0x000FFF00)
#define  VDTOP_VIDEO_CONTROL2_hagc_field_mode_mask                               (0x00000080)
#define  VDTOP_VIDEO_CONTROL2_mov_hagc_mode_mask                                 (0x00000040)
#define  VDTOP_VIDEO_CONTROL2_dc_clamp_mode_mask                                 (0x00000030)
#define  VDTOP_VIDEO_CONTROL2_vclamp_n_gate_sel_mask                             (0x00000008)
#define  VDTOP_VIDEO_CONTROL2_bgate_raw_sel_mask                                 (0x00000004)
#define  VDTOP_VIDEO_CONTROL2_cagc_en_mask                                       (0x00000002)
#define  VDTOP_VIDEO_CONTROL2_hagc_en_mask                                       (0x00000001)
#define  VDTOP_VIDEO_CONTROL2_mov_detect_sel(data)                               (0x20000000&((data)<<29))
#define  VDTOP_VIDEO_CONTROL2_fix_dgain(data)                                    (0x10000000&((data)<<28))
#define  VDTOP_VIDEO_CONTROL2_dgain_state(data)                                  (0x00300000&((data)<<20))
#define  VDTOP_VIDEO_CONTROL2_under_gain(data)                                   (0x000FFF00&((data)<<8))
#define  VDTOP_VIDEO_CONTROL2_hagc_field_mode(data)                              (0x00000080&((data)<<7))
#define  VDTOP_VIDEO_CONTROL2_mov_hagc_mode(data)                                (0x00000040&((data)<<6))
#define  VDTOP_VIDEO_CONTROL2_dc_clamp_mode(data)                                (0x00000030&((data)<<4))
#define  VDTOP_VIDEO_CONTROL2_vclamp_n_gate_sel(data)                            (0x00000008&((data)<<3))
#define  VDTOP_VIDEO_CONTROL2_bgate_raw_sel(data)                                (0x00000004&((data)<<2))
#define  VDTOP_VIDEO_CONTROL2_cagc_en(data)                                      (0x00000002&((data)<<1))
#define  VDTOP_VIDEO_CONTROL2_hagc_en(data)                                      (0x00000001&(data))
#define  VDTOP_VIDEO_CONTROL2_get_mov_detect_sel(data)                           ((0x20000000&(data))>>29)
#define  VDTOP_VIDEO_CONTROL2_get_fix_dgain(data)                                ((0x10000000&(data))>>28)
#define  VDTOP_VIDEO_CONTROL2_get_dgain_state(data)                              ((0x00300000&(data))>>20)
#define  VDTOP_VIDEO_CONTROL2_get_under_gain(data)                               ((0x000FFF00&(data))>>8)
#define  VDTOP_VIDEO_CONTROL2_get_hagc_field_mode(data)                          ((0x00000080&(data))>>7)
#define  VDTOP_VIDEO_CONTROL2_get_mov_hagc_mode(data)                            ((0x00000040&(data))>>6)
#define  VDTOP_VIDEO_CONTROL2_get_dc_clamp_mode(data)                            ((0x00000030&(data))>>4)
#define  VDTOP_VIDEO_CONTROL2_get_vclamp_n_gate_sel(data)                        ((0x00000008&(data))>>3)
#define  VDTOP_VIDEO_CONTROL2_get_bgate_raw_sel(data)                            ((0x00000004&(data))>>2)
#define  VDTOP_VIDEO_CONTROL2_get_cagc_en(data)                                  ((0x00000002&(data))>>1)
#define  VDTOP_VIDEO_CONTROL2_get_hagc_en(data)                                  (0x00000001&(data))

#define  VDTOP_LUMA_AGC_VALUE                                                   0x180190A0
#define  VDTOP_LUMA_AGC_VALUE_reg_addr                                           "0xB80190A0"
#define  VDTOP_LUMA_AGC_VALUE_reg                                                0xB80190A0
#define  VDTOP_LUMA_AGC_VALUE_inst_addr                                          "0x0027"
#define  set_VDTOP_LUMA_AGC_VALUE_reg(data)                                      (*((volatile unsigned int*)VDTOP_LUMA_AGC_VALUE_reg)=data)
#define  get_VDTOP_LUMA_AGC_VALUE_reg                                            (*((volatile unsigned int*)VDTOP_LUMA_AGC_VALUE_reg))
#define  VDTOP_LUMA_AGC_VALUE_dgain_status_triger_shift                          (29)
#define  VDTOP_LUMA_AGC_VALUE_peak_under_round_en_shift                          (28)
#define  VDTOP_LUMA_AGC_VALUE_peak_under_round_thl_shift                         (20)
#define  VDTOP_LUMA_AGC_VALUE_dgain_status_counter_shift                         (8)
#define  VDTOP_LUMA_AGC_VALUE_hagc_shift                                         (0)
#define  VDTOP_LUMA_AGC_VALUE_dgain_status_triger_mask                           (0x20000000)
#define  VDTOP_LUMA_AGC_VALUE_peak_under_round_en_mask                           (0x10000000)
#define  VDTOP_LUMA_AGC_VALUE_peak_under_round_thl_mask                          (0x0FF00000)
#define  VDTOP_LUMA_AGC_VALUE_dgain_status_counter_mask                          (0x000FFF00)
#define  VDTOP_LUMA_AGC_VALUE_hagc_mask                                          (0x000000FF)
#define  VDTOP_LUMA_AGC_VALUE_dgain_status_triger(data)                          (0x20000000&((data)<<29))
#define  VDTOP_LUMA_AGC_VALUE_peak_under_round_en(data)                          (0x10000000&((data)<<28))
#define  VDTOP_LUMA_AGC_VALUE_peak_under_round_thl(data)                         (0x0FF00000&((data)<<20))
#define  VDTOP_LUMA_AGC_VALUE_dgain_status_counter(data)                         (0x000FFF00&((data)<<8))
#define  VDTOP_LUMA_AGC_VALUE_hagc(data)                                         (0x000000FF&(data))
#define  VDTOP_LUMA_AGC_VALUE_get_dgain_status_triger(data)                      ((0x20000000&(data))>>29)
#define  VDTOP_LUMA_AGC_VALUE_get_peak_under_round_en(data)                      ((0x10000000&(data))>>28)
#define  VDTOP_LUMA_AGC_VALUE_get_peak_under_round_thl(data)                     ((0x0FF00000&(data))>>20)
#define  VDTOP_LUMA_AGC_VALUE_get_dgain_status_counter(data)                     ((0x000FFF00&(data))>>8)
#define  VDTOP_LUMA_AGC_VALUE_get_hagc(data)                                     (0x000000FF&(data))

#define  VDTOP_AGC_GATE_START                                                   0x180190A4
#define  VDTOP_AGC_GATE_START_reg_addr                                           "0xB80190A4"
#define  VDTOP_AGC_GATE_START_reg                                                0xB80190A4
#define  VDTOP_AGC_GATE_START_inst_addr                                          "0x0028"
#define  set_VDTOP_AGC_GATE_START_reg(data)                                      (*((volatile unsigned int*)VDTOP_AGC_GATE_START_reg)=data)
#define  get_VDTOP_AGC_GATE_START_reg                                            (*((volatile unsigned int*)VDTOP_AGC_GATE_START_reg))
#define  VDTOP_AGC_GATE_START_dgain_kp_shift                                     (20)
#define  VDTOP_AGC_GATE_START_dgain_ki_shift                                     (16)
#define  VDTOP_AGC_GATE_START_diff_gain_sel_shift                                (12)
#define  VDTOP_AGC_GATE_START_agc_gate_start_shift                               (0)
#define  VDTOP_AGC_GATE_START_dgain_kp_mask                                      (0x00700000)
#define  VDTOP_AGC_GATE_START_dgain_ki_mask                                      (0x00070000)
#define  VDTOP_AGC_GATE_START_diff_gain_sel_mask                                 (0x00007000)
#define  VDTOP_AGC_GATE_START_agc_gate_start_mask                                (0x000007FF)
#define  VDTOP_AGC_GATE_START_dgain_kp(data)                                     (0x00700000&((data)<<20))
#define  VDTOP_AGC_GATE_START_dgain_ki(data)                                     (0x00070000&((data)<<16))
#define  VDTOP_AGC_GATE_START_diff_gain_sel(data)                                (0x00007000&((data)<<12))
#define  VDTOP_AGC_GATE_START_agc_gate_start(data)                               (0x000007FF&(data))
#define  VDTOP_AGC_GATE_START_get_dgain_kp(data)                                 ((0x00700000&(data))>>20)
#define  VDTOP_AGC_GATE_START_get_dgain_ki(data)                                 ((0x00070000&(data))>>16)
#define  VDTOP_AGC_GATE_START_get_diff_gain_sel(data)                            ((0x00007000&(data))>>12)
#define  VDTOP_AGC_GATE_START_get_agc_gate_start(data)                           (0x000007FF&(data))

#define  VDTOP_AGC_GATE_WIDTH                                                   0x180190A8
#define  VDTOP_AGC_GATE_WIDTH_reg_addr                                           "0xB80190A8"
#define  VDTOP_AGC_GATE_WIDTH_reg                                                0xB80190A8
#define  VDTOP_AGC_GATE_WIDTH_inst_addr                                          "0x0029"
#define  set_VDTOP_AGC_GATE_WIDTH_reg(data)                                      (*((volatile unsigned int*)VDTOP_AGC_GATE_WIDTH_reg)=data)
#define  get_VDTOP_AGC_GATE_WIDTH_reg                                            (*((volatile unsigned int*)VDTOP_AGC_GATE_WIDTH_reg))
#define  VDTOP_AGC_GATE_WIDTH_data_path_dgain_limit_up_shift                     (20)
#define  VDTOP_AGC_GATE_WIDTH_data_path_dgain_limit_low_shift                    (8)
#define  VDTOP_AGC_GATE_WIDTH_agc_gate_width_shift                               (0)
#define  VDTOP_AGC_GATE_WIDTH_data_path_dgain_limit_up_mask                      (0xFFF00000)
#define  VDTOP_AGC_GATE_WIDTH_data_path_dgain_limit_low_mask                     (0x000FFF00)
#define  VDTOP_AGC_GATE_WIDTH_agc_gate_width_mask                                (0x0000007F)
#define  VDTOP_AGC_GATE_WIDTH_data_path_dgain_limit_up(data)                     (0xFFF00000&((data)<<20))
#define  VDTOP_AGC_GATE_WIDTH_data_path_dgain_limit_low(data)                    (0x000FFF00&((data)<<8))
#define  VDTOP_AGC_GATE_WIDTH_agc_gate_width(data)                               (0x0000007F&(data))
#define  VDTOP_AGC_GATE_WIDTH_get_data_path_dgain_limit_up(data)                 ((0xFFF00000&(data))>>20)
#define  VDTOP_AGC_GATE_WIDTH_get_data_path_dgain_limit_low(data)                ((0x000FFF00&(data))>>8)
#define  VDTOP_AGC_GATE_WIDTH_get_agc_gate_width(data)                           (0x0000007F&(data))

#define  VDTOP_AGC_BP_DELAY                                                     0x180190AC
#define  VDTOP_AGC_BP_DELAY_reg_addr                                             "0xB80190AC"
#define  VDTOP_AGC_BP_DELAY_reg                                                  0xB80190AC
#define  VDTOP_AGC_BP_DELAY_inst_addr                                            "0x002A"
#define  set_VDTOP_AGC_BP_DELAY_reg(data)                                        (*((volatile unsigned int*)VDTOP_AGC_BP_DELAY_reg)=data)
#define  get_VDTOP_AGC_BP_DELAY_reg                                              (*((volatile unsigned int*)VDTOP_AGC_BP_DELAY_reg))
#define  VDTOP_AGC_BP_DELAY_agc_bp_delay_shift                                   (0)
#define  VDTOP_AGC_BP_DELAY_agc_bp_delay_mask                                    (0x000000FF)
#define  VDTOP_AGC_BP_DELAY_agc_bp_delay(data)                                   (0x000000FF&(data))
#define  VDTOP_AGC_BP_DELAY_get_agc_bp_delay(data)                               (0x000000FF&(data))

#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2                                 0x180190B0
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_reg_addr                         "0xB80190B0"
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_reg                              0xB80190B0
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_inst_addr                        "0x002B"
#define  set_VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_reg(data)                    (*((volatile unsigned int*)VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_reg)=data)
#define  get_VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_reg                          (*((volatile unsigned int*)VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_reg))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_clampagc_under_th2_shift         (0)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_clampagc_under_th2_mask          (0x0000003F)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_clampagc_under_th2(data)         (0x0000003F&(data))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD2_get_clampagc_under_th2(data)     (0x0000003F&(data))

#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1                                 0x180190B4
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_reg_addr                         "0xB80190B4"
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_reg                              0xB80190B4
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_inst_addr                        "0x002C"
#define  set_VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_reg(data)                    (*((volatile unsigned int*)VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_reg)=data)
#define  get_VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_reg                          (*((volatile unsigned int*)VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_reg))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_ypeak_wide_iir_in_coef_shift     (16)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_ypeak_wide_iir_en_shift          (13)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_data_path_dgain_div2_en_shift    (12)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_agc_under_loop_gain_shift        (8)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_under_flag_shift                 (7)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_clampagc_under_th1_shift         (0)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_ypeak_wide_iir_in_coef_mask      (0x00FF0000)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_ypeak_wide_iir_en_mask           (0x00002000)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_data_path_dgain_div2_en_mask     (0x00001000)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_agc_under_loop_gain_mask         (0x00000700)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_under_flag_mask                  (0x00000080)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_clampagc_under_th1_mask          (0x0000000F)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_ypeak_wide_iir_in_coef(data)     (0x00FF0000&((data)<<16))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_ypeak_wide_iir_en(data)          (0x00002000&((data)<<13))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_data_path_dgain_div2_en(data)    (0x00001000&((data)<<12))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_agc_under_loop_gain(data)        (0x00000700&((data)<<8))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_under_flag(data)                 (0x00000080&((data)<<7))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_clampagc_under_th1(data)         (0x0000000F&(data))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_get_ypeak_wide_iir_in_coef(data) ((0x00FF0000&(data))>>16)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_get_ypeak_wide_iir_en(data)      ((0x00002000&(data))>>13)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_get_data_path_dgain_div2_en(data) ((0x00001000&(data))>>12)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_get_agc_under_loop_gain(data)    ((0x00000700&(data))>>8)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_get_under_flag(data)             ((0x00000080&(data))>>7)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_THRESHOLD1_get_clampagc_under_th1(data)     (0x0000000F&(data))

#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL                                    0x180190B8
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_reg_addr                            "0xB80190B8"
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_reg                                 0xB80190B8
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_inst_addr                           "0x002D"
#define  set_VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_reg(data)                       (*((volatile unsigned int*)VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_reg)=data)
#define  get_VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_reg                             (*((volatile unsigned int*)VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_reg))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_deb_en_shift                  (31)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_gate_en_shift                 (30)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_diff_sel_shift                (28)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_deb_limit_shift               (16)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_deb_thl_shift                 (8)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_clampagc_under_cntl_shift           (2)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_clampagc_under_en_shift             (1)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_blank_vid_offset_shift              (0)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_deb_en_mask                   (0x80000000)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_gate_en_mask                  (0x40000000)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_diff_sel_mask                 (0x30000000)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_deb_limit_mask                (0x01FF0000)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_deb_thl_mask                  (0x0000FF00)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_clampagc_under_cntl_mask            (0x000000FC)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_clampagc_under_en_mask              (0x00000002)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_blank_vid_offset_mask               (0x00000001)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_deb_en(data)                  (0x80000000&((data)<<31))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_gate_en(data)                 (0x40000000&((data)<<30))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_diff_sel(data)                (0x30000000&((data)<<28))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_deb_limit(data)               (0x01FF0000&((data)<<16))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_under_deb_thl(data)                 (0x0000FF00&((data)<<8))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_clampagc_under_cntl(data)           (0x000000FC&((data)<<2))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_clampagc_under_en(data)             (0x00000002&((data)<<1))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_blank_vid_offset(data)              (0x00000001&(data))
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_get_under_deb_en(data)              ((0x80000000&(data))>>31)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_get_under_gate_en(data)             ((0x40000000&(data))>>30)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_get_under_diff_sel(data)            ((0x30000000&(data))>>28)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_get_under_deb_limit(data)           ((0x01FF0000&(data))>>16)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_get_under_deb_thl(data)             ((0x0000FF00&(data))>>8)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_get_clampagc_under_cntl(data)       ((0x000000FC&(data))>>2)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_get_clampagc_under_en(data)         ((0x00000002&(data))>>1)
#define  VDTOP_CLAMPAGC_COMPLUMA_NEW_CONTROL_get_blank_vid_offset(data)          (0x00000001&(data))

#define  VDTOP_VSYNC_AGC_MIN                                                    0x180190BC
#define  VDTOP_VSYNC_AGC_MIN_reg_addr                                            "0xB80190BC"
#define  VDTOP_VSYNC_AGC_MIN_reg                                                 0xB80190BC
#define  VDTOP_VSYNC_AGC_MIN_inst_addr                                           "0x002E"
#define  set_VDTOP_VSYNC_AGC_MIN_reg(data)                                       (*((volatile unsigned int*)VDTOP_VSYNC_AGC_MIN_reg)=data)
#define  get_VDTOP_VSYNC_AGC_MIN_reg                                             (*((volatile unsigned int*)VDTOP_VSYNC_AGC_MIN_reg))
#define  VDTOP_VSYNC_AGC_MIN_under_gate_end_shift                                (20)
#define  VDTOP_VSYNC_AGC_MIN_under_gate_st_shift                                 (8)
#define  VDTOP_VSYNC_AGC_MIN_vsync_agc_min_shift                                 (0)
#define  VDTOP_VSYNC_AGC_MIN_under_gate_end_mask                                 (0x3FF00000)
#define  VDTOP_VSYNC_AGC_MIN_under_gate_st_mask                                  (0x0003FF00)
#define  VDTOP_VSYNC_AGC_MIN_vsync_agc_min_mask                                  (0x0000007F)
#define  VDTOP_VSYNC_AGC_MIN_under_gate_end(data)                                (0x3FF00000&((data)<<20))
#define  VDTOP_VSYNC_AGC_MIN_under_gate_st(data)                                 (0x0003FF00&((data)<<8))
#define  VDTOP_VSYNC_AGC_MIN_vsync_agc_min(data)                                 (0x0000007F&(data))
#define  VDTOP_VSYNC_AGC_MIN_get_under_gate_end(data)                            ((0x3FF00000&(data))>>20)
#define  VDTOP_VSYNC_AGC_MIN_get_under_gate_st(data)                             ((0x0003FF00&(data))>>8)
#define  VDTOP_VSYNC_AGC_MIN_get_vsync_agc_min(data)                             (0x0000007F&(data))

#define  VDTOP_VSYNC_AGC_LOCKOUT_END                                            0x180190C0
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_reg_addr                                    "0xB80190C0"
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_reg                                         0xB80190C0
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_inst_addr                                   "0x002F"
#define  set_VDTOP_VSYNC_AGC_LOCKOUT_END_reg(data)                               (*((volatile unsigned int*)VDTOP_VSYNC_AGC_LOCKOUT_END_reg)=data)
#define  get_VDTOP_VSYNC_AGC_LOCKOUT_END_reg                                     (*((volatile unsigned int*)VDTOP_VSYNC_AGC_LOCKOUT_END_reg))
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_peak_gate_en_shift                          (31)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_peak_gate_end_shift                         (20)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_peak_gate_st_shift                          (8)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_vsync_clamp_mode_shift                      (6)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_vsync_agc_max_shift                         (0)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_peak_gate_en_mask                           (0x80000000)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_peak_gate_end_mask                          (0x3FF00000)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_peak_gate_st_mask                           (0x0003FF00)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_vsync_clamp_mode_mask                       (0x000000C0)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_vsync_agc_max_mask                          (0x0000003F)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_peak_gate_en(data)                          (0x80000000&((data)<<31))
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_peak_gate_end(data)                         (0x3FF00000&((data)<<20))
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_peak_gate_st(data)                          (0x0003FF00&((data)<<8))
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_vsync_clamp_mode(data)                      (0x000000C0&((data)<<6))
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_vsync_agc_max(data)                         (0x0000003F&(data))
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_get_peak_gate_en(data)                      ((0x80000000&(data))>>31)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_get_peak_gate_end(data)                     ((0x3FF00000&(data))>>20)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_get_peak_gate_st(data)                      ((0x0003FF00&(data))>>8)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_get_vsync_clamp_mode(data)                  ((0x000000C0&(data))>>6)
#define  VDTOP_VSYNC_AGC_LOCKOUT_END_get_vsync_agc_max(data)                     (0x0000003F&(data))

#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL                                        0x180190C4
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_reg_addr                                "0xB80190C4"
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_reg                                     0xB80190C4
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_inst_addr                               "0x0030"
#define  set_VDTOP_CHARGE_PUMP_DELAY_CONTROL_reg(data)                           (*((volatile unsigned int*)VDTOP_CHARGE_PUMP_DELAY_CONTROL_reg)=data)
#define  get_VDTOP_CHARGE_PUMP_DELAY_CONTROL_reg                                 (*((volatile unsigned int*)VDTOP_CHARGE_PUMP_DELAY_CONTROL_reg))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_sel_shift               (16)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_en2_shift               (14)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_en1_shift               (13)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_en0_shift               (12)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad4_updn_shift  (11)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad3_updn_shift  (10)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad2_updn_shift  (9)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad1_updn_shift  (8)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_cpump_adjust_delay_shift                (2)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_cpump_adjust_polarity_shift             (1)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_cpump_delay_en_shift                    (0)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_sel_mask                (0x00070000)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_en2_mask                (0x00004000)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_en1_mask                (0x00002000)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_en0_mask                (0x00001000)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad4_updn_mask   (0x00000800)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad3_updn_mask   (0x00000400)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad2_updn_mask   (0x00000200)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad1_updn_mask   (0x00000100)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_cpump_adjust_delay_mask                 (0x000000FC)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_cpump_adjust_polarity_mask              (0x00000002)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_cpump_delay_en_mask                     (0x00000001)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_sel(data)               (0x00070000&((data)<<16))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_en2(data)               (0x00004000&((data)<<14))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_en1(data)               (0x00002000&((data)<<13))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_en0(data)               (0x00001000&((data)<<12))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad4_updn(data)  (0x00000800&((data)<<11))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad3_updn(data)  (0x00000400&((data)<<10))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad2_updn(data)  (0x00000200&((data)<<9))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_auto_dc_restore_disable_ad1_updn(data)  (0x00000100&((data)<<8))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_cpump_adjust_delay(data)                (0x000000FC&((data)<<2))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_cpump_adjust_polarity(data)             (0x00000002&((data)<<1))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_cpump_delay_en(data)                    (0x00000001&(data))
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_auto_dc_restore_sel(data)           ((0x00070000&(data))>>16)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_auto_dc_restore_en2(data)           ((0x00004000&(data))>>14)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_auto_dc_restore_en1(data)           ((0x00002000&(data))>>13)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_auto_dc_restore_en0(data)           ((0x00001000&(data))>>12)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_auto_dc_restore_disable_ad4_updn(data) ((0x00000800&(data))>>11)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_auto_dc_restore_disable_ad3_updn(data) ((0x00000400&(data))>>10)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_auto_dc_restore_disable_ad2_updn(data) ((0x00000200&(data))>>9)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_auto_dc_restore_disable_ad1_updn(data) ((0x00000100&(data))>>8)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_cpump_adjust_delay(data)            ((0x000000FC&(data))>>2)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_cpump_adjust_polarity(data)         ((0x00000002&(data))>>1)
#define  VDTOP_CHARGE_PUMP_DELAY_CONTROL_get_cpump_delay_en(data)                (0x00000001&(data))

#define  VDTOP_CHARGE_PUMP_ADJUSTMENT                                           0x180190C8
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_reg_addr                                   "0xB80190C8"
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_reg                                        0xB80190C8
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_inst_addr                                  "0x0031"
#define  set_VDTOP_CHARGE_PUMP_ADJUSTMENT_reg(data)                              (*((volatile unsigned int*)VDTOP_CHARGE_PUMP_ADJUSTMENT_reg)=data)
#define  get_VDTOP_CHARGE_PUMP_ADJUSTMENT_reg                                    (*((volatile unsigned int*)VDTOP_CHARGE_PUMP_ADJUSTMENT_reg))
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_bgate_raw_length_shift                     (8)
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_cpump_adjust_shift                         (0)
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_bgate_raw_length_mask                      (0x0000FF00)
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_cpump_adjust_mask                          (0x000000FF)
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_bgate_raw_length(data)                     (0x0000FF00&((data)<<8))
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_cpump_adjust(data)                         (0x000000FF&(data))
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_get_bgate_raw_length(data)                 ((0x0000FF00&(data))>>8)
#define  VDTOP_CHARGE_PUMP_ADJUSTMENT_get_cpump_adjust(data)                     (0x000000FF&(data))

#define  VDTOP_CHARGE_PUMP_DELAY                                                0x180190CC
#define  VDTOP_CHARGE_PUMP_DELAY_reg_addr                                        "0xB80190CC"
#define  VDTOP_CHARGE_PUMP_DELAY_reg                                             0xB80190CC
#define  VDTOP_CHARGE_PUMP_DELAY_inst_addr                                       "0x0032"
#define  set_VDTOP_CHARGE_PUMP_DELAY_reg(data)                                   (*((volatile unsigned int*)VDTOP_CHARGE_PUMP_DELAY_reg)=data)
#define  get_VDTOP_CHARGE_PUMP_DELAY_reg                                         (*((volatile unsigned int*)VDTOP_CHARGE_PUMP_DELAY_reg))
#define  VDTOP_CHARGE_PUMP_DELAY_cpump_delay_shift                               (0)
#define  VDTOP_CHARGE_PUMP_DELAY_cpump_delay_mask                                (0x000000FF)
#define  VDTOP_CHARGE_PUMP_DELAY_cpump_delay(data)                               (0x000000FF&(data))
#define  VDTOP_CHARGE_PUMP_DELAY_get_cpump_delay(data)                           (0x000000FF&(data))

#define  VDTOP_AGC_GATE_TH_SWAP                                                 0x180190D0
#define  VDTOP_AGC_GATE_TH_SWAP_reg_addr                                         "0xB80190D0"
#define  VDTOP_AGC_GATE_TH_SWAP_reg                                              0xB80190D0
#define  VDTOP_AGC_GATE_TH_SWAP_inst_addr                                        "0x0033"
#define  set_VDTOP_AGC_GATE_TH_SWAP_reg(data)                                    (*((volatile unsigned int*)VDTOP_AGC_GATE_TH_SWAP_reg)=data)
#define  get_VDTOP_AGC_GATE_TH_SWAP_reg                                          (*((volatile unsigned int*)VDTOP_AGC_GATE_TH_SWAP_reg))
#define  VDTOP_AGC_GATE_TH_SWAP_sv_rgb_clamp_length_limit_en_shift               (25)
#define  VDTOP_AGC_GATE_TH_SWAP_cvbs_clamp_length_limit_en_shift                 (24)
#define  VDTOP_AGC_GATE_TH_SWAP_sv_rgb_clamp_length_max_shift                    (16)
#define  VDTOP_AGC_GATE_TH_SWAP_cvbs_clamp_length_max_shift                      (8)
#define  VDTOP_AGC_GATE_TH_SWAP_adc_updn_swap_shift                              (7)
#define  VDTOP_AGC_GATE_TH_SWAP_adc_input_swap_shift                             (6)
#define  VDTOP_AGC_GATE_TH_SWAP_adc_cbcr_pump_swap_shift                         (5)
#define  VDTOP_AGC_GATE_TH_SWAP_agc_gate_thresh_shift                            (0)
#define  VDTOP_AGC_GATE_TH_SWAP_sv_rgb_clamp_length_limit_en_mask                (0x02000000)
#define  VDTOP_AGC_GATE_TH_SWAP_cvbs_clamp_length_limit_en_mask                  (0x01000000)
#define  VDTOP_AGC_GATE_TH_SWAP_sv_rgb_clamp_length_max_mask                     (0x007F0000)
#define  VDTOP_AGC_GATE_TH_SWAP_cvbs_clamp_length_max_mask                       (0x00007F00)
#define  VDTOP_AGC_GATE_TH_SWAP_adc_updn_swap_mask                               (0x00000080)
#define  VDTOP_AGC_GATE_TH_SWAP_adc_input_swap_mask                              (0x00000040)
#define  VDTOP_AGC_GATE_TH_SWAP_adc_cbcr_pump_swap_mask                          (0x00000020)
#define  VDTOP_AGC_GATE_TH_SWAP_agc_gate_thresh_mask                             (0x0000001F)
#define  VDTOP_AGC_GATE_TH_SWAP_sv_rgb_clamp_length_limit_en(data)               (0x02000000&((data)<<25))
#define  VDTOP_AGC_GATE_TH_SWAP_cvbs_clamp_length_limit_en(data)                 (0x01000000&((data)<<24))
#define  VDTOP_AGC_GATE_TH_SWAP_sv_rgb_clamp_length_max(data)                    (0x007F0000&((data)<<16))
#define  VDTOP_AGC_GATE_TH_SWAP_cvbs_clamp_length_max(data)                      (0x00007F00&((data)<<8))
#define  VDTOP_AGC_GATE_TH_SWAP_adc_updn_swap(data)                              (0x00000080&((data)<<7))
#define  VDTOP_AGC_GATE_TH_SWAP_adc_input_swap(data)                             (0x00000040&((data)<<6))
#define  VDTOP_AGC_GATE_TH_SWAP_adc_cbcr_pump_swap(data)                         (0x00000020&((data)<<5))
#define  VDTOP_AGC_GATE_TH_SWAP_agc_gate_thresh(data)                            (0x0000001F&(data))
#define  VDTOP_AGC_GATE_TH_SWAP_get_sv_rgb_clamp_length_limit_en(data)           ((0x02000000&(data))>>25)
#define  VDTOP_AGC_GATE_TH_SWAP_get_cvbs_clamp_length_limit_en(data)             ((0x01000000&(data))>>24)
#define  VDTOP_AGC_GATE_TH_SWAP_get_sv_rgb_clamp_length_max(data)                ((0x007F0000&(data))>>16)
#define  VDTOP_AGC_GATE_TH_SWAP_get_cvbs_clamp_length_max(data)                  ((0x00007F00&(data))>>8)
#define  VDTOP_AGC_GATE_TH_SWAP_get_adc_updn_swap(data)                          ((0x00000080&(data))>>7)
#define  VDTOP_AGC_GATE_TH_SWAP_get_adc_input_swap(data)                         ((0x00000040&(data))>>6)
#define  VDTOP_AGC_GATE_TH_SWAP_get_adc_cbcr_pump_swap(data)                     ((0x00000020&(data))>>5)
#define  VDTOP_AGC_GATE_TH_SWAP_get_agc_gate_thresh(data)                        (0x0000001F&(data))

#define  VDTOP_NEW_CLAMPAGC_CTRL                                                0x180190D4
#define  VDTOP_NEW_CLAMPAGC_CTRL_reg_addr                                        "0xB80190D4"
#define  VDTOP_NEW_CLAMPAGC_CTRL_reg                                             0xB80190D4
#define  VDTOP_NEW_CLAMPAGC_CTRL_inst_addr                                       "0x0034"
#define  set_VDTOP_NEW_CLAMPAGC_CTRL_reg(data)                                   (*((volatile unsigned int*)VDTOP_NEW_CLAMPAGC_CTRL_reg)=data)
#define  get_VDTOP_NEW_CLAMPAGC_CTRL_reg                                         (*((volatile unsigned int*)VDTOP_NEW_CLAMPAGC_CTRL_reg))
#define  VDTOP_NEW_CLAMPAGC_CTRL_first_dgain_integral_value_shift                (12)
#define  VDTOP_NEW_CLAMPAGC_CTRL_first_dgain_integral_fw_mode_en_shift           (8)
#define  VDTOP_NEW_CLAMPAGC_CTRL_measure_dc_128_64_sel_shift                     (7)
#define  VDTOP_NEW_CLAMPAGC_CTRL_dgain_ignore_fine_lock_shift                    (6)
#define  VDTOP_NEW_CLAMPAGC_CTRL_measure_dc_rough_shift                          (5)
#define  VDTOP_NEW_CLAMPAGC_CTRL_new_clamp_rc_rate_en_shift                      (4)
#define  VDTOP_NEW_CLAMPAGC_CTRL_clampagc_rc_rate_shift                          (0)
#define  VDTOP_NEW_CLAMPAGC_CTRL_first_dgain_integral_value_mask                 (0xFFFFF000)
#define  VDTOP_NEW_CLAMPAGC_CTRL_first_dgain_integral_fw_mode_en_mask            (0x00000100)
#define  VDTOP_NEW_CLAMPAGC_CTRL_measure_dc_128_64_sel_mask                      (0x00000080)
#define  VDTOP_NEW_CLAMPAGC_CTRL_dgain_ignore_fine_lock_mask                     (0x00000040)
#define  VDTOP_NEW_CLAMPAGC_CTRL_measure_dc_rough_mask                           (0x00000020)
#define  VDTOP_NEW_CLAMPAGC_CTRL_new_clamp_rc_rate_en_mask                       (0x00000010)
#define  VDTOP_NEW_CLAMPAGC_CTRL_clampagc_rc_rate_mask                           (0x0000000F)
#define  VDTOP_NEW_CLAMPAGC_CTRL_first_dgain_integral_value(data)                (0xFFFFF000&((data)<<12))
#define  VDTOP_NEW_CLAMPAGC_CTRL_first_dgain_integral_fw_mode_en(data)           (0x00000100&((data)<<8))
#define  VDTOP_NEW_CLAMPAGC_CTRL_measure_dc_128_64_sel(data)                     (0x00000080&((data)<<7))
#define  VDTOP_NEW_CLAMPAGC_CTRL_dgain_ignore_fine_lock(data)                    (0x00000040&((data)<<6))
#define  VDTOP_NEW_CLAMPAGC_CTRL_measure_dc_rough(data)                          (0x00000020&((data)<<5))
#define  VDTOP_NEW_CLAMPAGC_CTRL_new_clamp_rc_rate_en(data)                      (0x00000010&((data)<<4))
#define  VDTOP_NEW_CLAMPAGC_CTRL_clampagc_rc_rate(data)                          (0x0000000F&(data))
#define  VDTOP_NEW_CLAMPAGC_CTRL_get_first_dgain_integral_value(data)            ((0xFFFFF000&(data))>>12)
#define  VDTOP_NEW_CLAMPAGC_CTRL_get_first_dgain_integral_fw_mode_en(data)       ((0x00000100&(data))>>8)
#define  VDTOP_NEW_CLAMPAGC_CTRL_get_measure_dc_128_64_sel(data)                 ((0x00000080&(data))>>7)
#define  VDTOP_NEW_CLAMPAGC_CTRL_get_dgain_ignore_fine_lock(data)                ((0x00000040&(data))>>6)
#define  VDTOP_NEW_CLAMPAGC_CTRL_get_measure_dc_rough(data)                      ((0x00000020&(data))>>5)
#define  VDTOP_NEW_CLAMPAGC_CTRL_get_new_clamp_rc_rate_en(data)                  ((0x00000010&(data))>>4)
#define  VDTOP_NEW_CLAMPAGC_CTRL_get_clampagc_rc_rate(data)                      (0x0000000F&(data))

#define  VDTOP_MEASURE_DC_ROUGH_DN                                              0x180190D8
#define  VDTOP_MEASURE_DC_ROUGH_DN_reg_addr                                      "0xB80190D8"
#define  VDTOP_MEASURE_DC_ROUGH_DN_reg                                           0xB80190D8
#define  VDTOP_MEASURE_DC_ROUGH_DN_inst_addr                                     "0x0035"
#define  set_VDTOP_MEASURE_DC_ROUGH_DN_reg(data)                                 (*((volatile unsigned int*)VDTOP_MEASURE_DC_ROUGH_DN_reg)=data)
#define  get_VDTOP_MEASURE_DC_ROUGH_DN_reg                                       (*((volatile unsigned int*)VDTOP_MEASURE_DC_ROUGH_DN_reg))
#define  VDTOP_MEASURE_DC_ROUGH_DN_first_dgain_int_value_status_shift            (12)
#define  VDTOP_MEASURE_DC_ROUGH_DN_measure_dc_rough_dn_shift                     (0)
#define  VDTOP_MEASURE_DC_ROUGH_DN_first_dgain_int_value_status_mask             (0xFFFFF000)
#define  VDTOP_MEASURE_DC_ROUGH_DN_measure_dc_rough_dn_mask                      (0x000000FF)
#define  VDTOP_MEASURE_DC_ROUGH_DN_first_dgain_int_value_status(data)            (0xFFFFF000&((data)<<12))
#define  VDTOP_MEASURE_DC_ROUGH_DN_measure_dc_rough_dn(data)                     (0x000000FF&(data))
#define  VDTOP_MEASURE_DC_ROUGH_DN_get_first_dgain_int_value_status(data)        ((0xFFFFF000&(data))>>12)
#define  VDTOP_MEASURE_DC_ROUGH_DN_get_measure_dc_rough_dn(data)                 (0x000000FF&(data))

#define  VDTOP_MEASURE_DC_ROUGH_UP                                              0x180190DC
#define  VDTOP_MEASURE_DC_ROUGH_UP_reg_addr                                      "0xB80190DC"
#define  VDTOP_MEASURE_DC_ROUGH_UP_reg                                           0xB80190DC
#define  VDTOP_MEASURE_DC_ROUGH_UP_inst_addr                                     "0x0036"
#define  set_VDTOP_MEASURE_DC_ROUGH_UP_reg(data)                                 (*((volatile unsigned int*)VDTOP_MEASURE_DC_ROUGH_UP_reg)=data)
#define  get_VDTOP_MEASURE_DC_ROUGH_UP_reg                                       (*((volatile unsigned int*)VDTOP_MEASURE_DC_ROUGH_UP_reg))
#define  VDTOP_MEASURE_DC_ROUGH_UP_second_dgain_integral_value_shift             (12)
#define  VDTOP_MEASURE_DC_ROUGH_UP_second_dgain_integral_fw_mode_en_shift        (8)
#define  VDTOP_MEASURE_DC_ROUGH_UP_measure_dc_rough_up_shift                     (0)
#define  VDTOP_MEASURE_DC_ROUGH_UP_second_dgain_integral_value_mask              (0xFFFFF000)
#define  VDTOP_MEASURE_DC_ROUGH_UP_second_dgain_integral_fw_mode_en_mask         (0x00000100)
#define  VDTOP_MEASURE_DC_ROUGH_UP_measure_dc_rough_up_mask                      (0x000000FF)
#define  VDTOP_MEASURE_DC_ROUGH_UP_second_dgain_integral_value(data)             (0xFFFFF000&((data)<<12))
#define  VDTOP_MEASURE_DC_ROUGH_UP_second_dgain_integral_fw_mode_en(data)        (0x00000100&((data)<<8))
#define  VDTOP_MEASURE_DC_ROUGH_UP_measure_dc_rough_up(data)                     (0x000000FF&(data))
#define  VDTOP_MEASURE_DC_ROUGH_UP_get_second_dgain_integral_value(data)         ((0xFFFFF000&(data))>>12)
#define  VDTOP_MEASURE_DC_ROUGH_UP_get_second_dgain_integral_fw_mode_en(data)    ((0x00000100&(data))>>8)
#define  VDTOP_MEASURE_DC_ROUGH_UP_get_measure_dc_rough_up(data)                 (0x000000FF&(data))

#define  VDTOP_MEASURE_DC_TH_DN                                                 0x180190E0
#define  VDTOP_MEASURE_DC_TH_DN_reg_addr                                         "0xB80190E0"
#define  VDTOP_MEASURE_DC_TH_DN_reg                                              0xB80190E0
#define  VDTOP_MEASURE_DC_TH_DN_inst_addr                                        "0x0037"
#define  set_VDTOP_MEASURE_DC_TH_DN_reg(data)                                    (*((volatile unsigned int*)VDTOP_MEASURE_DC_TH_DN_reg)=data)
#define  get_VDTOP_MEASURE_DC_TH_DN_reg                                          (*((volatile unsigned int*)VDTOP_MEASURE_DC_TH_DN_reg))
#define  VDTOP_MEASURE_DC_TH_DN_second_dgain_int_value_status_shift              (12)
#define  VDTOP_MEASURE_DC_TH_DN_measure_dc_th_dn_shift                           (0)
#define  VDTOP_MEASURE_DC_TH_DN_second_dgain_int_value_status_mask               (0xFFFFF000)
#define  VDTOP_MEASURE_DC_TH_DN_measure_dc_th_dn_mask                            (0x00000FFF)
#define  VDTOP_MEASURE_DC_TH_DN_second_dgain_int_value_status(data)              (0xFFFFF000&((data)<<12))
#define  VDTOP_MEASURE_DC_TH_DN_measure_dc_th_dn(data)                           (0x00000FFF&(data))
#define  VDTOP_MEASURE_DC_TH_DN_get_second_dgain_int_value_status(data)          ((0xFFFFF000&(data))>>12)
#define  VDTOP_MEASURE_DC_TH_DN_get_measure_dc_th_dn(data)                       (0x00000FFF&(data))

#define  VDTOP_MEASURE_DC_TH_UP                                                 0x180190E4
#define  VDTOP_MEASURE_DC_TH_UP_reg_addr                                         "0xB80190E4"
#define  VDTOP_MEASURE_DC_TH_UP_reg                                              0xB80190E4
#define  VDTOP_MEASURE_DC_TH_UP_inst_addr                                        "0x0038"
#define  set_VDTOP_MEASURE_DC_TH_UP_reg(data)                                    (*((volatile unsigned int*)VDTOP_MEASURE_DC_TH_UP_reg)=data)
#define  get_VDTOP_MEASURE_DC_TH_UP_reg                                          (*((volatile unsigned int*)VDTOP_MEASURE_DC_TH_UP_reg))
#define  VDTOP_MEASURE_DC_TH_UP_measure_dc_th_up_shift                           (0)
#define  VDTOP_MEASURE_DC_TH_UP_measure_dc_th_up_mask                            (0x00000FFF)
#define  VDTOP_MEASURE_DC_TH_UP_measure_dc_th_up(data)                           (0x00000FFF&(data))
#define  VDTOP_MEASURE_DC_TH_UP_get_measure_dc_th_up(data)                       (0x00000FFF&(data))

#define  VDTOP_VSAG_CNTL_1                                                      0x180190E8
#define  VDTOP_VSAG_CNTL_1_reg_addr                                              "0xB80190E8"
#define  VDTOP_VSAG_CNTL_1_reg                                                   0xB80190E8
#define  VDTOP_VSAG_CNTL_1_inst_addr                                             "0x0039"
#define  set_VDTOP_VSAG_CNTL_1_reg(data)                                         (*((volatile unsigned int*)VDTOP_VSAG_CNTL_1_reg)=data)
#define  get_VDTOP_VSAG_CNTL_1_reg                                               (*((volatile unsigned int*)VDTOP_VSAG_CNTL_1_reg))
#define  VDTOP_VSAG_CNTL_1_vsag_rc_input_shift                                   (7)
#define  VDTOP_VSAG_CNTL_1_vsag_agc_peak_cntl_shift                              (0)
#define  VDTOP_VSAG_CNTL_1_vsag_rc_input_mask                                    (0x00000080)
#define  VDTOP_VSAG_CNTL_1_vsag_agc_peak_cntl_mask                               (0x0000003F)
#define  VDTOP_VSAG_CNTL_1_vsag_rc_input(data)                                   (0x00000080&((data)<<7))
#define  VDTOP_VSAG_CNTL_1_vsag_agc_peak_cntl(data)                              (0x0000003F&(data))
#define  VDTOP_VSAG_CNTL_1_get_vsag_rc_input(data)                               ((0x00000080&(data))>>7)
#define  VDTOP_VSAG_CNTL_1_get_vsag_agc_peak_cntl(data)                          (0x0000003F&(data))

#define  VDTOP_PEAK_VSAG                                                        0x180190EC
#define  VDTOP_PEAK_VSAG_reg_addr                                                "0xB80190EC"
#define  VDTOP_PEAK_VSAG_reg                                                     0xB80190EC
#define  VDTOP_PEAK_VSAG_inst_addr                                               "0x003A"
#define  set_VDTOP_PEAK_VSAG_reg(data)                                           (*((volatile unsigned int*)VDTOP_PEAK_VSAG_reg)=data)
#define  get_VDTOP_PEAK_VSAG_reg                                                 (*((volatile unsigned int*)VDTOP_PEAK_VSAG_reg))
#define  VDTOP_PEAK_VSAG_peak_vsag_shift                                         (0)
#define  VDTOP_PEAK_VSAG_peak_vsag_mask                                          (0x00001FFF)
#define  VDTOP_PEAK_VSAG_peak_vsag(data)                                         (0x00001FFF&(data))
#define  VDTOP_PEAK_VSAG_get_peak_vsag(data)                                     (0x00001FFF&(data))

#define  VDTOP_KILL_FIELD                                                       0x180190F0
#define  VDTOP_KILL_FIELD_reg_addr                                               "0xB80190F0"
#define  VDTOP_KILL_FIELD_reg                                                    0xB80190F0
#define  VDTOP_KILL_FIELD_inst_addr                                              "0x003B"
#define  set_VDTOP_KILL_FIELD_reg(data)                                          (*((volatile unsigned int*)VDTOP_KILL_FIELD_reg)=data)
#define  get_VDTOP_KILL_FIELD_reg                                                (*((volatile unsigned int*)VDTOP_KILL_FIELD_reg))
#define  VDTOP_KILL_FIELD_new_total_under_en_shift                               (6)
#define  VDTOP_KILL_FIELD_new_under_gain_en_shift                                (5)
#define  VDTOP_KILL_FIELD_new_under_th2_en_shift                                 (4)
#define  VDTOP_KILL_FIELD_lose_sgate_flag_shift                                  (2)
#define  VDTOP_KILL_FIELD_lose_bgate_flag_shift                                  (1)
#define  VDTOP_KILL_FIELD_field_kill_rst_shift                                   (0)
#define  VDTOP_KILL_FIELD_new_total_under_en_mask                                (0x00000040)
#define  VDTOP_KILL_FIELD_new_under_gain_en_mask                                 (0x00000020)
#define  VDTOP_KILL_FIELD_new_under_th2_en_mask                                  (0x00000010)
#define  VDTOP_KILL_FIELD_lose_sgate_flag_mask                                   (0x00000004)
#define  VDTOP_KILL_FIELD_lose_bgate_flag_mask                                   (0x00000002)
#define  VDTOP_KILL_FIELD_field_kill_rst_mask                                    (0x00000001)
#define  VDTOP_KILL_FIELD_new_total_under_en(data)                               (0x00000040&((data)<<6))
#define  VDTOP_KILL_FIELD_new_under_gain_en(data)                                (0x00000020&((data)<<5))
#define  VDTOP_KILL_FIELD_new_under_th2_en(data)                                 (0x00000010&((data)<<4))
#define  VDTOP_KILL_FIELD_lose_sgate_flag(data)                                  (0x00000004&((data)<<2))
#define  VDTOP_KILL_FIELD_lose_bgate_flag(data)                                  (0x00000002&((data)<<1))
#define  VDTOP_KILL_FIELD_field_kill_rst(data)                                   (0x00000001&(data))
#define  VDTOP_KILL_FIELD_get_new_total_under_en(data)                           ((0x00000040&(data))>>6)
#define  VDTOP_KILL_FIELD_get_new_under_gain_en(data)                            ((0x00000020&(data))>>5)
#define  VDTOP_KILL_FIELD_get_new_under_th2_en(data)                             ((0x00000010&(data))>>4)
#define  VDTOP_KILL_FIELD_get_lose_sgate_flag(data)                              ((0x00000004&(data))>>2)
#define  VDTOP_KILL_FIELD_get_lose_bgate_flag(data)                              ((0x00000002&(data))>>1)
#define  VDTOP_KILL_FIELD_get_field_kill_rst(data)                               (0x00000001&(data))

#define  VDTOP_FIELD_KILL_MUN                                                   0x180190F4
#define  VDTOP_FIELD_KILL_MUN_reg_addr                                           "0xB80190F4"
#define  VDTOP_FIELD_KILL_MUN_reg                                                0xB80190F4
#define  VDTOP_FIELD_KILL_MUN_inst_addr                                          "0x003C"
#define  set_VDTOP_FIELD_KILL_MUN_reg(data)                                      (*((volatile unsigned int*)VDTOP_FIELD_KILL_MUN_reg)=data)
#define  get_VDTOP_FIELD_KILL_MUN_reg                                            (*((volatile unsigned int*)VDTOP_FIELD_KILL_MUN_reg))
#define  VDTOP_FIELD_KILL_MUN_field_kill_num_shift                               (0)
#define  VDTOP_FIELD_KILL_MUN_field_kill_num_mask                                (0x000003FF)
#define  VDTOP_FIELD_KILL_MUN_field_kill_num(data)                               (0x000003FF&(data))
#define  VDTOP_FIELD_KILL_MUN_get_field_kill_num(data)                           (0x000003FF&(data))

#define  VDTOP_KILL_GATE_UP                                                     0x180190F8
#define  VDTOP_KILL_GATE_UP_reg_addr                                             "0xB80190F8"
#define  VDTOP_KILL_GATE_UP_reg                                                  0xB80190F8
#define  VDTOP_KILL_GATE_UP_inst_addr                                            "0x003D"
#define  set_VDTOP_KILL_GATE_UP_reg(data)                                        (*((volatile unsigned int*)VDTOP_KILL_GATE_UP_reg)=data)
#define  get_VDTOP_KILL_GATE_UP_reg                                              (*((volatile unsigned int*)VDTOP_KILL_GATE_UP_reg))
#define  VDTOP_KILL_GATE_UP_kill_gate_up_shift                                   (0)
#define  VDTOP_KILL_GATE_UP_kill_gate_up_mask                                    (0x000007FF)
#define  VDTOP_KILL_GATE_UP_kill_gate_up(data)                                   (0x000007FF&(data))
#define  VDTOP_KILL_GATE_UP_get_kill_gate_up(data)                               (0x000007FF&(data))

#define  VDTOP_KILL_GATE_DN                                                     0x180190FC
#define  VDTOP_KILL_GATE_DN_reg_addr                                             "0xB80190FC"
#define  VDTOP_KILL_GATE_DN_reg                                                  0xB80190FC
#define  VDTOP_KILL_GATE_DN_inst_addr                                            "0x003E"
#define  set_VDTOP_KILL_GATE_DN_reg(data)                                        (*((volatile unsigned int*)VDTOP_KILL_GATE_DN_reg)=data)
#define  get_VDTOP_KILL_GATE_DN_reg                                              (*((volatile unsigned int*)VDTOP_KILL_GATE_DN_reg))
#define  VDTOP_KILL_GATE_DN_kill_gate_dn_shift                                   (0)
#define  VDTOP_KILL_GATE_DN_kill_gate_dn_mask                                    (0x000007FF)
#define  VDTOP_KILL_GATE_DN_kill_gate_dn(data)                                   (0x000007FF&(data))
#define  VDTOP_KILL_GATE_DN_get_kill_gate_dn(data)                               (0x000007FF&(data))

#define  VDTOP_syncmidpt                                                        0x18019100
#define  VDTOP_syncmidpt_reg_addr                                                "0xB8019100"
#define  VDTOP_syncmidpt_reg                                                     0xB8019100
#define  VDTOP_syncmidpt_inst_addr                                               "0x003F"
#define  set_VDTOP_syncmidpt_reg(data)                                           (*((volatile unsigned int*)VDTOP_syncmidpt_reg)=data)
#define  get_VDTOP_syncmidpt_reg                                                 (*((volatile unsigned int*)VDTOP_syncmidpt_reg))
#define  VDTOP_syncmidpt_syncmidpt_add_level_h_shift                             (4)
#define  VDTOP_syncmidpt_sync_midpt_lowest_en_shift                              (1)
#define  VDTOP_syncmidpt_syncmidpt_add_level_h_mask                              (0x00000030)
#define  VDTOP_syncmidpt_sync_midpt_lowest_en_mask                               (0x00000002)
#define  VDTOP_syncmidpt_syncmidpt_add_level_h(data)                             (0x00000030&((data)<<4))
#define  VDTOP_syncmidpt_sync_midpt_lowest_en(data)                              (0x00000002&((data)<<1))
#define  VDTOP_syncmidpt_get_syncmidpt_add_level_h(data)                         ((0x00000030&(data))>>4)
#define  VDTOP_syncmidpt_get_sync_midpt_lowest_en(data)                          ((0x00000002&(data))>>1)

#define  VDTOP_syncmidpt_fix_add_value                                          0x18019104
#define  VDTOP_syncmidpt_fix_add_value_reg_addr                                  "0xB8019104"
#define  VDTOP_syncmidpt_fix_add_value_reg                                       0xB8019104
#define  VDTOP_syncmidpt_fix_add_value_inst_addr                                 "0x0040"
#define  set_VDTOP_syncmidpt_fix_add_value_reg(data)                             (*((volatile unsigned int*)VDTOP_syncmidpt_fix_add_value_reg)=data)
#define  get_VDTOP_syncmidpt_fix_add_value_reg                                   (*((volatile unsigned int*)VDTOP_syncmidpt_fix_add_value_reg))
#define  VDTOP_syncmidpt_fix_add_value_syncmidpt_fix_add_value_h_shift           (0)
#define  VDTOP_syncmidpt_fix_add_value_syncmidpt_fix_add_value_h_mask            (0x000000FF)
#define  VDTOP_syncmidpt_fix_add_value_syncmidpt_fix_add_value_h(data)           (0x000000FF&(data))
#define  VDTOP_syncmidpt_fix_add_value_get_syncmidpt_fix_add_value_h(data)       (0x000000FF&(data))

#define  VDTOP_lpfsync                                                          0x18019108
#define  VDTOP_lpfsync_reg_addr                                                  "0xB8019108"
#define  VDTOP_lpfsync_reg                                                       0xB8019108
#define  VDTOP_lpfsync_inst_addr                                                 "0x0041"
#define  set_VDTOP_lpfsync_reg(data)                                             (*((volatile unsigned int*)VDTOP_lpfsync_reg)=data)
#define  get_VDTOP_lpfsync_reg                                                   (*((volatile unsigned int*)VDTOP_lpfsync_reg))
#define  VDTOP_lpfsync_lpfsync_plus_w_hlock_shift                                (8)
#define  VDTOP_lpfsync_lpfsync_plus_rm_shift                                     (7)
#define  VDTOP_lpfsync_lpfsync_plus_diff_shift                                   (0)
#define  VDTOP_lpfsync_lpfsync_plus_w_hlock_mask                                 (0x00000300)
#define  VDTOP_lpfsync_lpfsync_plus_rm_mask                                      (0x00000080)
#define  VDTOP_lpfsync_lpfsync_plus_diff_mask                                    (0x0000003F)
#define  VDTOP_lpfsync_lpfsync_plus_w_hlock(data)                                (0x00000300&((data)<<8))
#define  VDTOP_lpfsync_lpfsync_plus_rm(data)                                     (0x00000080&((data)<<7))
#define  VDTOP_lpfsync_lpfsync_plus_diff(data)                                   (0x0000003F&(data))
#define  VDTOP_lpfsync_get_lpfsync_plus_w_hlock(data)                            ((0x00000300&(data))>>8)
#define  VDTOP_lpfsync_get_lpfsync_plus_rm(data)                                 ((0x00000080&(data))>>7)
#define  VDTOP_lpfsync_get_lpfsync_plus_diff(data)                               (0x0000003F&(data))

#define  VDTOP_spike_min                                                        0x1801910C
#define  VDTOP_spike_min_reg_addr                                                "0xB801910C"
#define  VDTOP_spike_min_reg                                                     0xB801910C
#define  VDTOP_spike_min_inst_addr                                               "0x0042"
#define  set_VDTOP_spike_min_reg(data)                                           (*((volatile unsigned int*)VDTOP_spike_min_reg)=data)
#define  get_VDTOP_spike_min_reg                                                 (*((volatile unsigned int*)VDTOP_spike_min_reg))
#define  VDTOP_spike_min_spike_min_thresh_shift                                  (0)
#define  VDTOP_spike_min_spike_min_thresh_mask                                   (0x000000FF)
#define  VDTOP_spike_min_spike_min_thresh(data)                                  (0x000000FF&(data))
#define  VDTOP_spike_min_get_spike_min_thresh(data)                              (0x000000FF&(data))

#define  VDTOP_spike_max                                                        0x18019110
#define  VDTOP_spike_max_reg_addr                                                "0xB8019110"
#define  VDTOP_spike_max_reg                                                     0xB8019110
#define  VDTOP_spike_max_inst_addr                                               "0x0043"
#define  set_VDTOP_spike_max_reg(data)                                           (*((volatile unsigned int*)VDTOP_spike_max_reg)=data)
#define  get_VDTOP_spike_max_reg                                                 (*((volatile unsigned int*)VDTOP_spike_max_reg))
#define  VDTOP_spike_max_spike_max_thresh_shift                                  (0)
#define  VDTOP_spike_max_spike_max_thresh_mask                                   (0x000000FF)
#define  VDTOP_spike_max_spike_max_thresh(data)                                  (0x000000FF&(data))
#define  VDTOP_spike_max_get_spike_max_thresh(data)                              (0x000000FF&(data))

#define  VDTOP_spike_detected_up                                                0x18019114
#define  VDTOP_spike_detected_up_reg_addr                                        "0xB8019114"
#define  VDTOP_spike_detected_up_reg                                             0xB8019114
#define  VDTOP_spike_detected_up_inst_addr                                       "0x0044"
#define  set_VDTOP_spike_detected_up_reg(data)                                   (*((volatile unsigned int*)VDTOP_spike_detected_up_reg)=data)
#define  get_VDTOP_spike_detected_up_reg                                         (*((volatile unsigned int*)VDTOP_spike_detected_up_reg))
#define  VDTOP_spike_detected_up_spike_detected_shift                            (10)
#define  VDTOP_spike_detected_up_spike_detected_up_shift                         (0)
#define  VDTOP_spike_detected_up_spike_detected_mask                             (0x00000400)
#define  VDTOP_spike_detected_up_spike_detected_up_mask                          (0x000003FF)
#define  VDTOP_spike_detected_up_spike_detected(data)                            (0x00000400&((data)<<10))
#define  VDTOP_spike_detected_up_spike_detected_up(data)                         (0x000003FF&(data))
#define  VDTOP_spike_detected_up_get_spike_detected(data)                        ((0x00000400&(data))>>10)
#define  VDTOP_spike_detected_up_get_spike_detected_up(data)                     (0x000003FF&(data))

#define  VDTOP_spike_detected_dn                                                0x18019118
#define  VDTOP_spike_detected_dn_reg_addr                                        "0xB8019118"
#define  VDTOP_spike_detected_dn_reg                                             0xB8019118
#define  VDTOP_spike_detected_dn_inst_addr                                       "0x0045"
#define  set_VDTOP_spike_detected_dn_reg(data)                                   (*((volatile unsigned int*)VDTOP_spike_detected_dn_reg)=data)
#define  get_VDTOP_spike_detected_dn_reg                                         (*((volatile unsigned int*)VDTOP_spike_detected_dn_reg))
#define  VDTOP_spike_detected_dn_spike_detected_dn_shift                         (0)
#define  VDTOP_spike_detected_dn_spike_detected_dn_mask                          (0x000003FF)
#define  VDTOP_spike_detected_dn_spike_detected_dn(data)                         (0x000003FF&(data))
#define  VDTOP_spike_detected_dn_get_spike_detected_dn(data)                     (0x000003FF&(data))

#define  VDTOP_lpfsync_plus_dc                                                  0x1801911C
#define  VDTOP_lpfsync_plus_dc_reg_addr                                          "0xB801911C"
#define  VDTOP_lpfsync_plus_dc_reg                                               0xB801911C
#define  VDTOP_lpfsync_plus_dc_inst_addr                                         "0x0046"
#define  set_VDTOP_lpfsync_plus_dc_reg(data)                                     (*((volatile unsigned int*)VDTOP_lpfsync_plus_dc_reg)=data)
#define  get_VDTOP_lpfsync_plus_dc_reg                                           (*((volatile unsigned int*)VDTOP_lpfsync_plus_dc_reg))
#define  VDTOP_lpfsync_plus_dc_lpfsync_plus_dc_shift                             (0)
#define  VDTOP_lpfsync_plus_dc_lpfsync_plus_dc_mask                              (0x000000FF)
#define  VDTOP_lpfsync_plus_dc_lpfsync_plus_dc(data)                             (0x000000FF&(data))
#define  VDTOP_lpfsync_plus_dc_get_lpfsync_plus_dc(data)                         (0x000000FF&(data))

#define  VDTOP_HDETECT_ERR_VAR_CTRL                                             0x18019128
#define  VDTOP_HDETECT_ERR_VAR_CTRL_reg_addr                                     "0xB8019128"
#define  VDTOP_HDETECT_ERR_VAR_CTRL_reg                                          0xB8019128
#define  VDTOP_HDETECT_ERR_VAR_CTRL_inst_addr                                    "0x0047"
#define  set_VDTOP_HDETECT_ERR_VAR_CTRL_reg(data)                                (*((volatile unsigned int*)VDTOP_HDETECT_ERR_VAR_CTRL_reg)=data)
#define  get_VDTOP_HDETECT_ERR_VAR_CTRL_reg                                      (*((volatile unsigned int*)VDTOP_HDETECT_ERR_VAR_CTRL_reg))
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hstate_error_thl_shift                       (20)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hstate_error_dn_count_shift                  (12)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hstate_error_rst_shift                       (11)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hdetect_error_avg_interval_shift             (8)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hdetect_error_avg_length_shift               (4)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hdetect_error_avg_sel_shift                  (0)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hstate_error_thl_mask                        (0x0FF00000)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hstate_error_dn_count_mask                   (0x000FF000)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hstate_error_rst_mask                        (0x00000800)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hdetect_error_avg_interval_mask              (0x00000300)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hdetect_error_avg_length_mask                (0x00000070)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hdetect_error_avg_sel_mask                   (0x00000001)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hstate_error_thl(data)                       (0x0FF00000&((data)<<20))
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hstate_error_dn_count(data)                  (0x000FF000&((data)<<12))
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hstate_error_rst(data)                       (0x00000800&((data)<<11))
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hdetect_error_avg_interval(data)             (0x00000300&((data)<<8))
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hdetect_error_avg_length(data)               (0x00000070&((data)<<4))
#define  VDTOP_HDETECT_ERR_VAR_CTRL_hdetect_error_avg_sel(data)                  (0x00000001&(data))
#define  VDTOP_HDETECT_ERR_VAR_CTRL_get_hstate_error_thl(data)                   ((0x0FF00000&(data))>>20)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_get_hstate_error_dn_count(data)              ((0x000FF000&(data))>>12)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_get_hstate_error_rst(data)                   ((0x00000800&(data))>>11)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_get_hdetect_error_avg_interval(data)         ((0x00000300&(data))>>8)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_get_hdetect_error_avg_length(data)           ((0x00000070&(data))>>4)
#define  VDTOP_HDETECT_ERR_VAR_CTRL_get_hdetect_error_avg_sel(data)              (0x00000001&(data))

#define  VDTOP_HDETECT_ERR_VAR_STATUS                                           0x1801912C
#define  VDTOP_HDETECT_ERR_VAR_STATUS_reg_addr                                   "0xB801912C"
#define  VDTOP_HDETECT_ERR_VAR_STATUS_reg                                        0xB801912C
#define  VDTOP_HDETECT_ERR_VAR_STATUS_inst_addr                                  "0x0048"
#define  set_VDTOP_HDETECT_ERR_VAR_STATUS_reg(data)                              (*((volatile unsigned int*)VDTOP_HDETECT_ERR_VAR_STATUS_reg)=data)
#define  get_VDTOP_HDETECT_ERR_VAR_STATUS_reg                                    (*((volatile unsigned int*)VDTOP_HDETECT_ERR_VAR_STATUS_reg))
#define  VDTOP_HDETECT_ERR_VAR_STATUS_hdetect_error_var_shift                    (16)
#define  VDTOP_HDETECT_ERR_VAR_STATUS_hdetect_error_mean_shift                   (0)
#define  VDTOP_HDETECT_ERR_VAR_STATUS_hdetect_error_var_mask                     (0xFFFF0000)
#define  VDTOP_HDETECT_ERR_VAR_STATUS_hdetect_error_mean_mask                    (0x0000FFFF)
#define  VDTOP_HDETECT_ERR_VAR_STATUS_hdetect_error_var(data)                    (0xFFFF0000&((data)<<16))
#define  VDTOP_HDETECT_ERR_VAR_STATUS_hdetect_error_mean(data)                   (0x0000FFFF&(data))
#define  VDTOP_HDETECT_ERR_VAR_STATUS_get_hdetect_error_var(data)                ((0xFFFF0000&(data))>>16)
#define  VDTOP_HDETECT_ERR_VAR_STATUS_get_hdetect_error_mean(data)               (0x0000FFFF&(data))

#define  VDTOP_LOCK_COUNT                                                       0x18019130
#define  VDTOP_LOCK_COUNT_reg_addr                                               "0xB8019130"
#define  VDTOP_LOCK_COUNT_reg                                                    0xB8019130
#define  VDTOP_LOCK_COUNT_inst_addr                                              "0x0049"
#define  set_VDTOP_LOCK_COUNT_reg(data)                                          (*((volatile unsigned int*)VDTOP_LOCK_COUNT_reg)=data)
#define  get_VDTOP_LOCK_COUNT_reg                                                (*((volatile unsigned int*)VDTOP_LOCK_COUNT_reg))
#define  VDTOP_LOCK_COUNT_hstate_vsync_error_num_thr_shift                       (28)
#define  VDTOP_LOCK_COUNT_hstate_vsync_error_end_shift                           (20)
#define  VDTOP_LOCK_COUNT_hstate_vsync_error_start_shift                         (12)
#define  VDTOP_LOCK_COUNT_locked_count_vcrtrick_max_shift                        (8)
#define  VDTOP_LOCK_COUNT_locked_count_noisy_max_shift                           (4)
#define  VDTOP_LOCK_COUNT_locked_count_clean_max_shift                           (0)
#define  VDTOP_LOCK_COUNT_hstate_vsync_error_num_thr_mask                        (0xF0000000)
#define  VDTOP_LOCK_COUNT_hstate_vsync_error_end_mask                            (0x07F00000)
#define  VDTOP_LOCK_COUNT_hstate_vsync_error_start_mask                          (0x0007F000)
#define  VDTOP_LOCK_COUNT_locked_count_vcrtrick_max_mask                         (0x00000F00)
#define  VDTOP_LOCK_COUNT_locked_count_noisy_max_mask                            (0x000000F0)
#define  VDTOP_LOCK_COUNT_locked_count_clean_max_mask                            (0x0000000F)
#define  VDTOP_LOCK_COUNT_hstate_vsync_error_num_thr(data)                       (0xF0000000&((data)<<28))
#define  VDTOP_LOCK_COUNT_hstate_vsync_error_end(data)                           (0x07F00000&((data)<<20))
#define  VDTOP_LOCK_COUNT_hstate_vsync_error_start(data)                         (0x0007F000&((data)<<12))
#define  VDTOP_LOCK_COUNT_locked_count_vcrtrick_max(data)                        (0x00000F00&((data)<<8))
#define  VDTOP_LOCK_COUNT_locked_count_noisy_max(data)                           (0x000000F0&((data)<<4))
#define  VDTOP_LOCK_COUNT_locked_count_clean_max(data)                           (0x0000000F&(data))
#define  VDTOP_LOCK_COUNT_get_hstate_vsync_error_num_thr(data)                   ((0xF0000000&(data))>>28)
#define  VDTOP_LOCK_COUNT_get_hstate_vsync_error_end(data)                       ((0x07F00000&(data))>>20)
#define  VDTOP_LOCK_COUNT_get_hstate_vsync_error_start(data)                     ((0x0007F000&(data))>>12)
#define  VDTOP_LOCK_COUNT_get_locked_count_vcrtrick_max(data)                    ((0x00000F00&(data))>>8)
#define  VDTOP_LOCK_COUNT_get_locked_count_noisy_max(data)                       ((0x000000F0&(data))>>4)
#define  VDTOP_LOCK_COUNT_get_locked_count_clean_max(data)                       (0x0000000F&(data))

#define  VDTOP_H_LOOP_MAXSTATE                                                  0x18019134
#define  VDTOP_H_LOOP_MAXSTATE_reg_addr                                          "0xB8019134"
#define  VDTOP_H_LOOP_MAXSTATE_reg                                               0xB8019134
#define  VDTOP_H_LOOP_MAXSTATE_inst_addr                                         "0x004A"
#define  set_VDTOP_H_LOOP_MAXSTATE_reg(data)                                     (*((volatile unsigned int*)VDTOP_H_LOOP_MAXSTATE_reg)=data)
#define  get_VDTOP_H_LOOP_MAXSTATE_reg                                           (*((volatile unsigned int*)VDTOP_H_LOOP_MAXSTATE_reg))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_unbalance_status_shift         (25)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_unbalance_en_shift             (24)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_sel_shift                      (20)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_value_en_shift                 (16)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_num_en_shift                   (15)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_noisy_en_shift                 (14)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_vlock_en_shift                 (13)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_hlock_en_shift                 (12)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_unbalance_shift                (8)
#define  VDTOP_H_LOOP_MAXSTATE_hlock_vsync_mode_shift                            (6)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_fixed_shift                                (5)
#define  VDTOP_H_LOOP_MAXSTATE_disable_hfine_shift                               (4)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_unlocked_shift                             (3)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_max_shift                                  (0)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_unbalance_status_mask          (0x02000000)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_unbalance_en_mask              (0x01000000)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_sel_mask                       (0x00300000)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_value_en_mask                  (0x00010000)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_num_en_mask                    (0x00008000)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_noisy_en_mask                  (0x00004000)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_vlock_en_mask                  (0x00002000)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_hlock_en_mask                  (0x00001000)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_unbalance_mask                 (0x00000700)
#define  VDTOP_H_LOOP_MAXSTATE_hlock_vsync_mode_mask                             (0x000000C0)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_fixed_mask                                 (0x00000020)
#define  VDTOP_H_LOOP_MAXSTATE_disable_hfine_mask                                (0x00000010)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_unlocked_mask                              (0x00000008)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_max_mask                                   (0x00000007)
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_unbalance_status(data)         (0x02000000&((data)<<25))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_unbalance_en(data)             (0x01000000&((data)<<24))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_sel(data)                      (0x00300000&((data)<<20))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_value_en(data)                 (0x00010000&((data)<<16))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_num_en(data)                   (0x00008000&((data)<<15))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_noisy_en(data)                 (0x00004000&((data)<<14))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_vlock_en(data)                 (0x00002000&((data)<<13))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_hlock_en(data)                 (0x00001000&((data)<<12))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_vsync_error_unbalance(data)                (0x00000700&((data)<<8))
#define  VDTOP_H_LOOP_MAXSTATE_hlock_vsync_mode(data)                            (0x000000C0&((data)<<6))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_fixed(data)                                (0x00000020&((data)<<5))
#define  VDTOP_H_LOOP_MAXSTATE_disable_hfine(data)                               (0x00000010&((data)<<4))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_unlocked(data)                             (0x00000008&((data)<<3))
#define  VDTOP_H_LOOP_MAXSTATE_hstate_max(data)                                  (0x00000007&(data))
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_vsync_error_unbalance_status(data)     ((0x02000000&(data))>>25)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_vsync_error_unbalance_en(data)         ((0x01000000&(data))>>24)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_vsync_error_sel(data)                  ((0x00300000&(data))>>20)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_vsync_error_value_en(data)             ((0x00010000&(data))>>16)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_vsync_error_num_en(data)               ((0x00008000&(data))>>15)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_vsync_error_noisy_en(data)             ((0x00004000&(data))>>14)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_vsync_error_vlock_en(data)             ((0x00002000&(data))>>13)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_vsync_error_hlock_en(data)             ((0x00001000&(data))>>12)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_vsync_error_unbalance(data)            ((0x00000700&(data))>>8)
#define  VDTOP_H_LOOP_MAXSTATE_get_hlock_vsync_mode(data)                        ((0x000000C0&(data))>>6)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_fixed(data)                            ((0x00000020&(data))>>5)
#define  VDTOP_H_LOOP_MAXSTATE_get_disable_hfine(data)                           ((0x00000010&(data))>>4)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_unlocked(data)                         ((0x00000008&(data))>>3)
#define  VDTOP_H_LOOP_MAXSTATE_get_hstate_max(data)                              (0x00000007&(data))

#define  VDTOP_CLAMPAGC_CTRL0                                                   0x18019138
#define  VDTOP_CLAMPAGC_CTRL0_reg_addr                                           "0xB8019138"
#define  VDTOP_CLAMPAGC_CTRL0_reg                                                0xB8019138
#define  VDTOP_CLAMPAGC_CTRL0_inst_addr                                          "0x004B"
#define  set_VDTOP_CLAMPAGC_CTRL0_reg(data)                                      (*((volatile unsigned int*)VDTOP_CLAMPAGC_CTRL0_reg)=data)
#define  get_VDTOP_CLAMPAGC_CTRL0_reg                                            (*((volatile unsigned int*)VDTOP_CLAMPAGC_CTRL0_reg))
#define  VDTOP_CLAMPAGC_CTRL0_fine_phase_error_thl_shift                         (16)
#define  VDTOP_CLAMPAGC_CTRL0_cpll_hpll_use_front_vactive_shift                  (15)
#define  VDTOP_CLAMPAGC_CTRL0_hstate_hlock_sel_shift                             (14)
#define  VDTOP_CLAMPAGC_CTRL0_hstate_ignore_err_shift                            (13)
#define  VDTOP_CLAMPAGC_CTRL0_auto_fine_phase_sel_shift                          (12)
#define  VDTOP_CLAMPAGC_CTRL0_fine_hstate_to_5_shift                             (11)
#define  VDTOP_CLAMPAGC_CTRL0_auto_fine_phase_sel_en_shift                       (10)
#define  VDTOP_CLAMPAGC_CTRL0_hpll_fine_lock_data_sel_shift                      (9)
#define  VDTOP_CLAMPAGC_CTRL0_coarse_phase_rising_en_shift                       (8)
#define  VDTOP_CLAMPAGC_CTRL0_fine_src_sel_shift                                 (7)
#define  VDTOP_CLAMPAGC_CTRL0_coarse_src_sel_shift                               (6)
#define  VDTOP_CLAMPAGC_CTRL0_fine_gate_sel_shift                                (5)
#define  VDTOP_CLAMPAGC_CTRL0_gate_end_thresh_shift                              (0)
#define  VDTOP_CLAMPAGC_CTRL0_fine_phase_error_thl_mask                          (0x03FF0000)
#define  VDTOP_CLAMPAGC_CTRL0_cpll_hpll_use_front_vactive_mask                   (0x00008000)
#define  VDTOP_CLAMPAGC_CTRL0_hstate_hlock_sel_mask                              (0x00004000)
#define  VDTOP_CLAMPAGC_CTRL0_hstate_ignore_err_mask                             (0x00002000)
#define  VDTOP_CLAMPAGC_CTRL0_auto_fine_phase_sel_mask                           (0x00001000)
#define  VDTOP_CLAMPAGC_CTRL0_fine_hstate_to_5_mask                              (0x00000800)
#define  VDTOP_CLAMPAGC_CTRL0_auto_fine_phase_sel_en_mask                        (0x00000400)
#define  VDTOP_CLAMPAGC_CTRL0_hpll_fine_lock_data_sel_mask                       (0x00000200)
#define  VDTOP_CLAMPAGC_CTRL0_coarse_phase_rising_en_mask                        (0x00000100)
#define  VDTOP_CLAMPAGC_CTRL0_fine_src_sel_mask                                  (0x00000080)
#define  VDTOP_CLAMPAGC_CTRL0_coarse_src_sel_mask                                (0x00000040)
#define  VDTOP_CLAMPAGC_CTRL0_fine_gate_sel_mask                                 (0x00000020)
#define  VDTOP_CLAMPAGC_CTRL0_gate_end_thresh_mask                               (0x0000001F)
#define  VDTOP_CLAMPAGC_CTRL0_fine_phase_error_thl(data)                         (0x03FF0000&((data)<<16))
#define  VDTOP_CLAMPAGC_CTRL0_cpll_hpll_use_front_vactive(data)                  (0x00008000&((data)<<15))
#define  VDTOP_CLAMPAGC_CTRL0_hstate_hlock_sel(data)                             (0x00004000&((data)<<14))
#define  VDTOP_CLAMPAGC_CTRL0_hstate_ignore_err(data)                            (0x00002000&((data)<<13))
#define  VDTOP_CLAMPAGC_CTRL0_auto_fine_phase_sel(data)                          (0x00001000&((data)<<12))
#define  VDTOP_CLAMPAGC_CTRL0_fine_hstate_to_5(data)                             (0x00000800&((data)<<11))
#define  VDTOP_CLAMPAGC_CTRL0_auto_fine_phase_sel_en(data)                       (0x00000400&((data)<<10))
#define  VDTOP_CLAMPAGC_CTRL0_hpll_fine_lock_data_sel(data)                      (0x00000200&((data)<<9))
#define  VDTOP_CLAMPAGC_CTRL0_coarse_phase_rising_en(data)                       (0x00000100&((data)<<8))
#define  VDTOP_CLAMPAGC_CTRL0_fine_src_sel(data)                                 (0x00000080&((data)<<7))
#define  VDTOP_CLAMPAGC_CTRL0_coarse_src_sel(data)                               (0x00000040&((data)<<6))
#define  VDTOP_CLAMPAGC_CTRL0_fine_gate_sel(data)                                (0x00000020&((data)<<5))
#define  VDTOP_CLAMPAGC_CTRL0_gate_end_thresh(data)                              (0x0000001F&(data))
#define  VDTOP_CLAMPAGC_CTRL0_get_fine_phase_error_thl(data)                     ((0x03FF0000&(data))>>16)
#define  VDTOP_CLAMPAGC_CTRL0_get_cpll_hpll_use_front_vactive(data)              ((0x00008000&(data))>>15)
#define  VDTOP_CLAMPAGC_CTRL0_get_hstate_hlock_sel(data)                         ((0x00004000&(data))>>14)
#define  VDTOP_CLAMPAGC_CTRL0_get_hstate_ignore_err(data)                        ((0x00002000&(data))>>13)
#define  VDTOP_CLAMPAGC_CTRL0_get_auto_fine_phase_sel(data)                      ((0x00001000&(data))>>12)
#define  VDTOP_CLAMPAGC_CTRL0_get_fine_hstate_to_5(data)                         ((0x00000800&(data))>>11)
#define  VDTOP_CLAMPAGC_CTRL0_get_auto_fine_phase_sel_en(data)                   ((0x00000400&(data))>>10)
#define  VDTOP_CLAMPAGC_CTRL0_get_hpll_fine_lock_data_sel(data)                  ((0x00000200&(data))>>9)
#define  VDTOP_CLAMPAGC_CTRL0_get_coarse_phase_rising_en(data)                   ((0x00000100&(data))>>8)
#define  VDTOP_CLAMPAGC_CTRL0_get_fine_src_sel(data)                             ((0x00000080&(data))>>7)
#define  VDTOP_CLAMPAGC_CTRL0_get_coarse_src_sel(data)                           ((0x00000040&(data))>>6)
#define  VDTOP_CLAMPAGC_CTRL0_get_fine_gate_sel(data)                            ((0x00000020&(data))>>5)
#define  VDTOP_CLAMPAGC_CTRL0_get_gate_end_thresh(data)                          (0x0000001F&(data))

#define  VDTOP_CLAMPAGC_NEW_SYNC_START                                          0x1801913C
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_reg_addr                                  "0xB801913C"
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_reg                                       0xB801913C
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_inst_addr                                 "0x004C"
#define  set_VDTOP_CLAMPAGC_NEW_SYNC_START_reg(data)                             (*((volatile unsigned int*)VDTOP_CLAMPAGC_NEW_SYNC_START_reg)=data)
#define  get_VDTOP_CLAMPAGC_NEW_SYNC_START_reg                                   (*((volatile unsigned int*)VDTOP_CLAMPAGC_NEW_SYNC_START_reg))
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_hstate_vsync_error_noisy_lower_th_shift   (16)
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_hstate_vsync_error_noisy_upper_th_shift   (8)
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_coarse_sync_start_shift                   (0)
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_hstate_vsync_error_noisy_lower_th_mask    (0x00FF0000)
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_hstate_vsync_error_noisy_upper_th_mask    (0x0000FF00)
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_coarse_sync_start_mask                    (0x0000007F)
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_hstate_vsync_error_noisy_lower_th(data)   (0x00FF0000&((data)<<16))
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_hstate_vsync_error_noisy_upper_th(data)   (0x0000FF00&((data)<<8))
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_coarse_sync_start(data)                   (0x0000007F&(data))
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_get_hstate_vsync_error_noisy_lower_th(data) ((0x00FF0000&(data))>>16)
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_get_hstate_vsync_error_noisy_upper_th(data) ((0x0000FF00&(data))>>8)
#define  VDTOP_CLAMPAGC_NEW_SYNC_START_get_coarse_sync_start(data)               (0x0000007F&(data))

#define  VDTOP_CLAMPAGC_NEW_SYNC_END                                            0x18019140
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_reg_addr                                    "0xB8019140"
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_reg                                         0xB8019140
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_inst_addr                                   "0x004D"
#define  set_VDTOP_CLAMPAGC_NEW_SYNC_END_reg(data)                               (*((volatile unsigned int*)VDTOP_CLAMPAGC_NEW_SYNC_END_reg)=data)
#define  get_VDTOP_CLAMPAGC_NEW_SYNC_END_reg                                     (*((volatile unsigned int*)VDTOP_CLAMPAGC_NEW_SYNC_END_reg))
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_hstate_vsync_error_value_thr_shift          (16)
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_hstate_vsync_error_abs_thr_shift            (8)
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_coarse_sync_end_shift                       (0)
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_hstate_vsync_error_value_thr_mask           (0x00FF0000)
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_hstate_vsync_error_abs_thr_mask             (0x0000FF00)
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_coarse_sync_end_mask                        (0x000000FF)
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_hstate_vsync_error_value_thr(data)          (0x00FF0000&((data)<<16))
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_hstate_vsync_error_abs_thr(data)            (0x0000FF00&((data)<<8))
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_coarse_sync_end(data)                       (0x000000FF&(data))
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_get_hstate_vsync_error_value_thr(data)      ((0x00FF0000&(data))>>16)
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_get_hstate_vsync_error_abs_thr(data)        ((0x0000FF00&(data))>>8)
#define  VDTOP_CLAMPAGC_NEW_SYNC_END_get_coarse_sync_end(data)                   (0x000000FF&(data))

#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START                                     0x18019144
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_reg_addr                             "0xB8019144"
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_reg                                  0xB8019144
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_inst_addr                            "0x004E"
#define  set_VDTOP_CLAMPAGC_NEW_BACKPORCH_START_reg(data)                        (*((volatile unsigned int*)VDTOP_CLAMPAGC_NEW_BACKPORCH_START_reg)=data)
#define  get_VDTOP_CLAMPAGC_NEW_BACKPORCH_START_reg                              (*((volatile unsigned int*)VDTOP_CLAMPAGC_NEW_BACKPORCH_START_reg))
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_hstate_err_shift                     (8)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_agc_trailing_sel_shift               (7)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_coarse_backporch_start_shift         (0)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_hstate_err_mask                      (0x003FFF00)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_agc_trailing_sel_mask                (0x00000080)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_coarse_backporch_start_mask          (0x0000007F)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_hstate_err(data)                     (0x003FFF00&((data)<<8))
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_agc_trailing_sel(data)               (0x00000080&((data)<<7))
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_coarse_backporch_start(data)         (0x0000007F&(data))
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_get_hstate_err(data)                 ((0x003FFF00&(data))>>8)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_get_agc_trailing_sel(data)           ((0x00000080&(data))>>7)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_START_get_coarse_backporch_start(data)     (0x0000007F&(data))

#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END                                       0x18019148
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_reg_addr                               "0xB8019148"
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_reg                                    0xB8019148
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_inst_addr                              "0x004F"
#define  set_VDTOP_CLAMPAGC_NEW_BACKPORCH_END_reg(data)                          (*((volatile unsigned int*)VDTOP_CLAMPAGC_NEW_BACKPORCH_END_reg)=data)
#define  get_VDTOP_CLAMPAGC_NEW_BACKPORCH_END_reg                                (*((volatile unsigned int*)VDTOP_CLAMPAGC_NEW_BACKPORCH_END_reg))
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_hstate_err_in_vcount_shift             (8)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_coarse_backporch_end_shift             (0)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_hstate_err_in_vcount_mask              (0x0003FF00)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_coarse_backporch_end_mask              (0x000000FF)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_hstate_err_in_vcount(data)             (0x0003FF00&((data)<<8))
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_coarse_backporch_end(data)             (0x000000FF&(data))
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_get_hstate_err_in_vcount(data)         ((0x0003FF00&(data))>>8)
#define  VDTOP_CLAMPAGC_NEW_BACKPORCH_END_get_coarse_backporch_end(data)         (0x000000FF&(data))

#define  VDTOP_HDETECT_PHASE_SEL                                                0x1801914C
#define  VDTOP_HDETECT_PHASE_SEL_reg_addr                                        "0xB801914C"
#define  VDTOP_HDETECT_PHASE_SEL_reg                                             0xB801914C
#define  VDTOP_HDETECT_PHASE_SEL_inst_addr                                       "0x0050"
#define  set_VDTOP_HDETECT_PHASE_SEL_reg(data)                                   (*((volatile unsigned int*)VDTOP_HDETECT_PHASE_SEL_reg)=data)
#define  get_VDTOP_HDETECT_PHASE_SEL_reg                                         (*((volatile unsigned int*)VDTOP_HDETECT_PHASE_SEL_reg))
#define  VDTOP_HDETECT_PHASE_SEL_lpfsync_force_blank_en_shift                    (5)
#define  VDTOP_HDETECT_PHASE_SEL_nosignal_hlock_check_en_shift                   (4)
#define  VDTOP_HDETECT_PHASE_SEL_agc_clamping_trailing_sel_shift                 (3)
#define  VDTOP_HDETECT_PHASE_SEL_killgate_sel_shift                              (2)
#define  VDTOP_HDETECT_PHASE_SEL_coarse_phase_sel_shift                          (1)
#define  VDTOP_HDETECT_PHASE_SEL_fine_phase_sel_shift                            (0)
#define  VDTOP_HDETECT_PHASE_SEL_lpfsync_force_blank_en_mask                     (0x00000020)
#define  VDTOP_HDETECT_PHASE_SEL_nosignal_hlock_check_en_mask                    (0x00000010)
#define  VDTOP_HDETECT_PHASE_SEL_agc_clamping_trailing_sel_mask                  (0x00000008)
#define  VDTOP_HDETECT_PHASE_SEL_killgate_sel_mask                               (0x00000004)
#define  VDTOP_HDETECT_PHASE_SEL_coarse_phase_sel_mask                           (0x00000002)
#define  VDTOP_HDETECT_PHASE_SEL_fine_phase_sel_mask                             (0x00000001)
#define  VDTOP_HDETECT_PHASE_SEL_lpfsync_force_blank_en(data)                    (0x00000020&((data)<<5))
#define  VDTOP_HDETECT_PHASE_SEL_nosignal_hlock_check_en(data)                   (0x00000010&((data)<<4))
#define  VDTOP_HDETECT_PHASE_SEL_agc_clamping_trailing_sel(data)                 (0x00000008&((data)<<3))
#define  VDTOP_HDETECT_PHASE_SEL_killgate_sel(data)                              (0x00000004&((data)<<2))
#define  VDTOP_HDETECT_PHASE_SEL_coarse_phase_sel(data)                          (0x00000002&((data)<<1))
#define  VDTOP_HDETECT_PHASE_SEL_fine_phase_sel(data)                            (0x00000001&(data))
#define  VDTOP_HDETECT_PHASE_SEL_get_lpfsync_force_blank_en(data)                ((0x00000020&(data))>>5)
#define  VDTOP_HDETECT_PHASE_SEL_get_nosignal_hlock_check_en(data)               ((0x00000010&(data))>>4)
#define  VDTOP_HDETECT_PHASE_SEL_get_agc_clamping_trailing_sel(data)             ((0x00000008&(data))>>3)
#define  VDTOP_HDETECT_PHASE_SEL_get_killgate_sel(data)                          ((0x00000004&(data))>>2)
#define  VDTOP_HDETECT_PHASE_SEL_get_coarse_phase_sel(data)                      ((0x00000002&(data))>>1)
#define  VDTOP_HDETECT_PHASE_SEL_get_fine_phase_sel(data)                        (0x00000001&(data))

#define  VDTOP_HDETECT_COUNTER_TIP_START                                        0x18019150
#define  VDTOP_HDETECT_COUNTER_TIP_START_reg_addr                                "0xB8019150"
#define  VDTOP_HDETECT_COUNTER_TIP_START_reg                                     0xB8019150
#define  VDTOP_HDETECT_COUNTER_TIP_START_inst_addr                               "0x0051"
#define  set_VDTOP_HDETECT_COUNTER_TIP_START_reg(data)                           (*((volatile unsigned int*)VDTOP_HDETECT_COUNTER_TIP_START_reg)=data)
#define  get_VDTOP_HDETECT_COUNTER_TIP_START_reg                                 (*((volatile unsigned int*)VDTOP_HDETECT_COUNTER_TIP_START_reg))
#define  VDTOP_HDETECT_COUNTER_TIP_START_lsync_tip_start_shift                   (0)
#define  VDTOP_HDETECT_COUNTER_TIP_START_lsync_tip_start_mask                    (0x000000FF)
#define  VDTOP_HDETECT_COUNTER_TIP_START_lsync_tip_start(data)                   (0x000000FF&(data))
#define  VDTOP_HDETECT_COUNTER_TIP_START_get_lsync_tip_start(data)               (0x000000FF&(data))

#define  VDTOP_HDETECT_COUNTER_TIP_END                                          0x18019154
#define  VDTOP_HDETECT_COUNTER_TIP_END_reg_addr                                  "0xB8019154"
#define  VDTOP_HDETECT_COUNTER_TIP_END_reg                                       0xB8019154
#define  VDTOP_HDETECT_COUNTER_TIP_END_inst_addr                                 "0x0052"
#define  set_VDTOP_HDETECT_COUNTER_TIP_END_reg(data)                             (*((volatile unsigned int*)VDTOP_HDETECT_COUNTER_TIP_END_reg)=data)
#define  get_VDTOP_HDETECT_COUNTER_TIP_END_reg                                   (*((volatile unsigned int*)VDTOP_HDETECT_COUNTER_TIP_END_reg))
#define  VDTOP_HDETECT_COUNTER_TIP_END_lsync_tip_end_shift                       (0)
#define  VDTOP_HDETECT_COUNTER_TIP_END_lsync_tip_end_mask                        (0x000000FF)
#define  VDTOP_HDETECT_COUNTER_TIP_END_lsync_tip_end(data)                       (0x000000FF&(data))
#define  VDTOP_HDETECT_COUNTER_TIP_END_get_lsync_tip_end(data)                   (0x000000FF&(data))

#define  VDTOP_HDETECT_COUNTER_BACKPORCH_START                                  0x18019158
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_START_reg_addr                          "0xB8019158"
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_START_reg                               0xB8019158
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_START_inst_addr                         "0x0053"
#define  set_VDTOP_HDETECT_COUNTER_BACKPORCH_START_reg(data)                     (*((volatile unsigned int*)VDTOP_HDETECT_COUNTER_BACKPORCH_START_reg)=data)
#define  get_VDTOP_HDETECT_COUNTER_BACKPORCH_START_reg                           (*((volatile unsigned int*)VDTOP_HDETECT_COUNTER_BACKPORCH_START_reg))
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_START_lporch_start_shift                (0)
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_START_lporch_start_mask                 (0x000000FF)
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_START_lporch_start(data)                (0x000000FF&(data))
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_START_get_lporch_start(data)            (0x000000FF&(data))

#define  VDTOP_HDETECT_COUNTER_BACKPORCH_END                                    0x1801915C
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_END_reg_addr                            "0xB801915C"
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_END_reg                                 0xB801915C
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_END_inst_addr                           "0x0054"
#define  set_VDTOP_HDETECT_COUNTER_BACKPORCH_END_reg(data)                       (*((volatile unsigned int*)VDTOP_HDETECT_COUNTER_BACKPORCH_END_reg)=data)
#define  get_VDTOP_HDETECT_COUNTER_BACKPORCH_END_reg                             (*((volatile unsigned int*)VDTOP_HDETECT_COUNTER_BACKPORCH_END_reg))
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_END_lporch_end_shift                    (0)
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_END_lporch_end_mask                     (0x000000FF)
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_END_lporch_end(data)                    (0x000000FF&(data))
#define  VDTOP_HDETECT_COUNTER_BACKPORCH_END_get_lporch_end(data)                (0x000000FF&(data))

#define  VDTOP_HPLL_INTEGRAL_CTRL                                               0x18019160
#define  VDTOP_HPLL_INTEGRAL_CTRL_reg_addr                                       "0xB8019160"
#define  VDTOP_HPLL_INTEGRAL_CTRL_reg                                            0xB8019160
#define  VDTOP_HPLL_INTEGRAL_CTRL_inst_addr                                      "0x0055"
#define  set_VDTOP_HPLL_INTEGRAL_CTRL_reg(data)                                  (*((volatile unsigned int*)VDTOP_HPLL_INTEGRAL_CTRL_reg)=data)
#define  get_VDTOP_HPLL_INTEGRAL_CTRL_reg                                        (*((volatile unsigned int*)VDTOP_HPLL_INTEGRAL_CTRL_reg))
#define  VDTOP_HPLL_INTEGRAL_CTRL_hpll_integral_rst_shift                        (1)
#define  VDTOP_HPLL_INTEGRAL_CTRL_hpll_integral_ext_shift                        (0)
#define  VDTOP_HPLL_INTEGRAL_CTRL_hpll_integral_rst_mask                         (0x00000002)
#define  VDTOP_HPLL_INTEGRAL_CTRL_hpll_integral_ext_mask                         (0x00000001)
#define  VDTOP_HPLL_INTEGRAL_CTRL_hpll_integral_rst(data)                        (0x00000002&((data)<<1))
#define  VDTOP_HPLL_INTEGRAL_CTRL_hpll_integral_ext(data)                        (0x00000001&(data))
#define  VDTOP_HPLL_INTEGRAL_CTRL_get_hpll_integral_rst(data)                    ((0x00000002&(data))>>1)
#define  VDTOP_HPLL_INTEGRAL_CTRL_get_hpll_integral_ext(data)                    (0x00000001&(data))

#define  VDTOP_HDETECT_LOOPFILTER_SW                                            0x18019164
#define  VDTOP_HDETECT_LOOPFILTER_SW_reg_addr                                    "0xB8019164"
#define  VDTOP_HDETECT_LOOPFILTER_SW_reg                                         0xB8019164
#define  VDTOP_HDETECT_LOOPFILTER_SW_inst_addr                                   "0x0056"
#define  set_VDTOP_HDETECT_LOOPFILTER_SW_reg(data)                               (*((volatile unsigned int*)VDTOP_HDETECT_LOOPFILTER_SW_reg)=data)
#define  get_VDTOP_HDETECT_LOOPFILTER_SW_reg                                     (*((volatile unsigned int*)VDTOP_HDETECT_LOOPFILTER_SW_reg))
#define  VDTOP_HDETECT_LOOPFILTER_SW_agc_gate_kill_mode_status_shift             (30)
#define  VDTOP_HDETECT_LOOPFILTER_SW_new_hpll_lpf_sel_status_shift               (29)
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_h_sel_status_shift                 (28)
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_v_sel_status_shift                 (27)
#define  VDTOP_HDETECT_LOOPFILTER_SW_dgain_ignore_fine_lock_status_shift         (26)
#define  VDTOP_HDETECT_LOOPFILTER_SW_second_pll_en_status_shift                  (25)
#define  VDTOP_HDETECT_LOOPFILTER_SW_vsync_freerun_when_unstable_en_status_shift (24)
#define  VDTOP_HDETECT_LOOPFILTER_SW_agc_gate_kill_mode_vcr_shift                (22)
#define  VDTOP_HDETECT_LOOPFILTER_SW_new_hpll_lpf_sel_vcr_shift                  (21)
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_h_sel_vcr_shift                    (20)
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_v_sel_vcr_shift                    (19)
#define  VDTOP_HDETECT_LOOPFILTER_SW_dgain_ignore_fine_lock_vcr_shift            (18)
#define  VDTOP_HDETECT_LOOPFILTER_SW_second_pll_en_vcr_shift                     (17)
#define  VDTOP_HDETECT_LOOPFILTER_SW_vsync_freerun_when_unstable_en_vcr_shift    (16)
#define  VDTOP_HDETECT_LOOPFILTER_SW_impulsive_noise_disable_pll_en_shift        (15)
#define  VDTOP_HDETECT_LOOPFILTER_SW_cstate_impn_max_shift                       (12)
#define  VDTOP_HDETECT_LOOPFILTER_SW_mode_vcr_setting_change_en_shift            (11)
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_impn_max_shift                       (8)
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_vcr_max_shift                        (4)
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_loopfilter_sw_shift                  (3)
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_status_shift                         (0)
#define  VDTOP_HDETECT_LOOPFILTER_SW_agc_gate_kill_mode_status_mask              (0xC0000000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_new_hpll_lpf_sel_status_mask                (0x20000000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_h_sel_status_mask                  (0x10000000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_v_sel_status_mask                  (0x08000000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_dgain_ignore_fine_lock_status_mask          (0x04000000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_second_pll_en_status_mask                   (0x02000000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_vsync_freerun_when_unstable_en_status_mask  (0x01000000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_agc_gate_kill_mode_vcr_mask                 (0x00C00000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_new_hpll_lpf_sel_vcr_mask                   (0x00200000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_h_sel_vcr_mask                     (0x00100000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_v_sel_vcr_mask                     (0x00080000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_dgain_ignore_fine_lock_vcr_mask             (0x00040000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_second_pll_en_vcr_mask                      (0x00020000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_vsync_freerun_when_unstable_en_vcr_mask     (0x00010000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_impulsive_noise_disable_pll_en_mask         (0x00008000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_cstate_impn_max_mask                        (0x00007000)
#define  VDTOP_HDETECT_LOOPFILTER_SW_mode_vcr_setting_change_en_mask             (0x00000800)
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_impn_max_mask                        (0x00000700)
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_vcr_max_mask                         (0x00000070)
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_loopfilter_sw_mask                   (0x00000008)
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_status_mask                          (0x00000007)
#define  VDTOP_HDETECT_LOOPFILTER_SW_agc_gate_kill_mode_status(data)             (0xC0000000&((data)<<30))
#define  VDTOP_HDETECT_LOOPFILTER_SW_new_hpll_lpf_sel_status(data)               (0x20000000&((data)<<29))
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_h_sel_status(data)                 (0x10000000&((data)<<28))
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_v_sel_status(data)                 (0x08000000&((data)<<27))
#define  VDTOP_HDETECT_LOOPFILTER_SW_dgain_ignore_fine_lock_status(data)         (0x04000000&((data)<<26))
#define  VDTOP_HDETECT_LOOPFILTER_SW_second_pll_en_status(data)                  (0x02000000&((data)<<25))
#define  VDTOP_HDETECT_LOOPFILTER_SW_vsync_freerun_when_unstable_en_status(data) (0x01000000&((data)<<24))
#define  VDTOP_HDETECT_LOOPFILTER_SW_agc_gate_kill_mode_vcr(data)                (0x00C00000&((data)<<22))
#define  VDTOP_HDETECT_LOOPFILTER_SW_new_hpll_lpf_sel_vcr(data)                  (0x00200000&((data)<<21))
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_h_sel_vcr(data)                    (0x00100000&((data)<<20))
#define  VDTOP_HDETECT_LOOPFILTER_SW_gate_iir_v_sel_vcr(data)                    (0x00080000&((data)<<19))
#define  VDTOP_HDETECT_LOOPFILTER_SW_dgain_ignore_fine_lock_vcr(data)            (0x00040000&((data)<<18))
#define  VDTOP_HDETECT_LOOPFILTER_SW_second_pll_en_vcr(data)                     (0x00020000&((data)<<17))
#define  VDTOP_HDETECT_LOOPFILTER_SW_vsync_freerun_when_unstable_en_vcr(data)    (0x00010000&((data)<<16))
#define  VDTOP_HDETECT_LOOPFILTER_SW_impulsive_noise_disable_pll_en(data)        (0x00008000&((data)<<15))
#define  VDTOP_HDETECT_LOOPFILTER_SW_cstate_impn_max(data)                       (0x00007000&((data)<<12))
#define  VDTOP_HDETECT_LOOPFILTER_SW_mode_vcr_setting_change_en(data)            (0x00000800&((data)<<11))
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_impn_max(data)                       (0x00000700&((data)<<8))
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_vcr_max(data)                        (0x00000070&((data)<<4))
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_loopfilter_sw(data)                  (0x00000008&((data)<<3))
#define  VDTOP_HDETECT_LOOPFILTER_SW_hstate_status(data)                         (0x00000007&(data))
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_agc_gate_kill_mode_status(data)         ((0xC0000000&(data))>>30)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_new_hpll_lpf_sel_status(data)           ((0x20000000&(data))>>29)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_gate_iir_h_sel_status(data)             ((0x10000000&(data))>>28)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_gate_iir_v_sel_status(data)             ((0x08000000&(data))>>27)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_dgain_ignore_fine_lock_status(data)     ((0x04000000&(data))>>26)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_second_pll_en_status(data)              ((0x02000000&(data))>>25)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_vsync_freerun_when_unstable_en_status(data) ((0x01000000&(data))>>24)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_agc_gate_kill_mode_vcr(data)            ((0x00C00000&(data))>>22)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_new_hpll_lpf_sel_vcr(data)              ((0x00200000&(data))>>21)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_gate_iir_h_sel_vcr(data)                ((0x00100000&(data))>>20)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_gate_iir_v_sel_vcr(data)                ((0x00080000&(data))>>19)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_dgain_ignore_fine_lock_vcr(data)        ((0x00040000&(data))>>18)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_second_pll_en_vcr(data)                 ((0x00020000&(data))>>17)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_vsync_freerun_when_unstable_en_vcr(data) ((0x00010000&(data))>>16)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_impulsive_noise_disable_pll_en(data)    ((0x00008000&(data))>>15)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_cstate_impn_max(data)                   ((0x00007000&(data))>>12)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_mode_vcr_setting_change_en(data)        ((0x00000800&(data))>>11)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_hstate_impn_max(data)                   ((0x00000700&(data))>>8)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_hstate_vcr_max(data)                    ((0x00000070&(data))>>4)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_hstate_loopfilter_sw(data)              ((0x00000008&(data))>>3)
#define  VDTOP_HDETECT_LOOPFILTER_SW_get_hstate_status(data)                     (0x00000007&(data))

#define  VDTOP_HDETECT_LOOPFILTER_DCTRL                                         0x18019168
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_reg_addr                                 "0xB8019168"
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_reg                                      0xB8019168
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_inst_addr                                "0x0057"
#define  set_VDTOP_HDETECT_LOOPFILTER_DCTRL_reg(data)                            (*((volatile unsigned int*)VDTOP_HDETECT_LOOPFILTER_DCTRL_reg)=data)
#define  get_VDTOP_HDETECT_LOOPFILTER_DCTRL_reg                                  (*((volatile unsigned int*)VDTOP_HDETECT_LOOPFILTER_DCTRL_reg))
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_hdetect_loopfilter_dctrl1_shift          (4)
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_hdetect_loopfilter_dctrl2_shift          (0)
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_hdetect_loopfilter_dctrl1_mask           (0x000000F0)
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_hdetect_loopfilter_dctrl2_mask           (0x0000000F)
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_hdetect_loopfilter_dctrl1(data)          (0x000000F0&((data)<<4))
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_hdetect_loopfilter_dctrl2(data)          (0x0000000F&(data))
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_get_hdetect_loopfilter_dctrl1(data)      ((0x000000F0&(data))>>4)
#define  VDTOP_HDETECT_LOOPFILTER_DCTRL_get_hdetect_loopfilter_dctrl2(data)      (0x0000000F&(data))

#define  VDTOP_HSYNC_PULSE_START                                                0x1801916C
#define  VDTOP_HSYNC_PULSE_START_reg_addr                                        "0xB801916C"
#define  VDTOP_HSYNC_PULSE_START_reg                                             0xB801916C
#define  VDTOP_HSYNC_PULSE_START_inst_addr                                       "0x0058"
#define  set_VDTOP_HSYNC_PULSE_START_reg(data)                                   (*((volatile unsigned int*)VDTOP_HSYNC_PULSE_START_reg)=data)
#define  get_VDTOP_HSYNC_PULSE_START_reg                                         (*((volatile unsigned int*)VDTOP_HSYNC_PULSE_START_reg))
#define  VDTOP_HSYNC_PULSE_START_hsync_start_shift                               (0)
#define  VDTOP_HSYNC_PULSE_START_hsync_start_mask                                (0x000000FF)
#define  VDTOP_HSYNC_PULSE_START_hsync_start(data)                               (0x000000FF&(data))
#define  VDTOP_HSYNC_PULSE_START_get_hsync_start(data)                           (0x000000FF&(data))

#define  VDTOP_HSYNC_PULSE_WIDTH                                                0x18019170
#define  VDTOP_HSYNC_PULSE_WIDTH_reg_addr                                        "0xB8019170"
#define  VDTOP_HSYNC_PULSE_WIDTH_reg                                             0xB8019170
#define  VDTOP_HSYNC_PULSE_WIDTH_inst_addr                                       "0x0059"
#define  set_VDTOP_HSYNC_PULSE_WIDTH_reg(data)                                   (*((volatile unsigned int*)VDTOP_HSYNC_PULSE_WIDTH_reg)=data)
#define  get_VDTOP_HSYNC_PULSE_WIDTH_reg                                         (*((volatile unsigned int*)VDTOP_HSYNC_PULSE_WIDTH_reg))
#define  VDTOP_HSYNC_PULSE_WIDTH_hsync_width_shift                               (0)
#define  VDTOP_HSYNC_PULSE_WIDTH_hsync_width_mask                                (0x000000FF)
#define  VDTOP_HSYNC_PULSE_WIDTH_hsync_width(data)                               (0x000000FF&(data))
#define  VDTOP_HSYNC_PULSE_WIDTH_get_hsync_width(data)                           (0x000000FF&(data))

#define  VDTOP_CHROMA_HRESAMPLER_CONTROL                                        0x18019174
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_reg_addr                                "0xB8019174"
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_reg                                     0xB8019174
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_inst_addr                               "0x005A"
#define  set_VDTOP_CHROMA_HRESAMPLER_CONTROL_reg(data)                           (*((volatile unsigned int*)VDTOP_CHROMA_HRESAMPLER_CONTROL_reg)=data)
#define  get_VDTOP_CHROMA_HRESAMPLER_CONTROL_reg                                 (*((volatile unsigned int*)VDTOP_CHROMA_HRESAMPLER_CONTROL_reg))
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_hresampler_app_alpha_sel_shift          (2)
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_hresampler_app_sel_shift                (1)
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_hresampler_2up_shift                    (0)
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_hresampler_app_alpha_sel_mask           (0x00000004)
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_hresampler_app_sel_mask                 (0x00000002)
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_hresampler_2up_mask                     (0x00000001)
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_hresampler_app_alpha_sel(data)          (0x00000004&((data)<<2))
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_hresampler_app_sel(data)                (0x00000002&((data)<<1))
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_hresampler_2up(data)                    (0x00000001&(data))
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_get_hresampler_app_alpha_sel(data)      ((0x00000004&(data))>>2)
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_get_hresampler_app_sel(data)            ((0x00000002&(data))>>1)
#define  VDTOP_CHROMA_HRESAMPLER_CONTROL_get_hresampler_2up(data)                (0x00000001&(data))

#define  VDTOP_HPLL_KP_0                                                        0x18019178
#define  VDTOP_HPLL_KP_0_reg_addr                                                "0xB8019178"
#define  VDTOP_HPLL_KP_0_reg                                                     0xB8019178
#define  VDTOP_HPLL_KP_0_inst_addr                                               "0x005B"
#define  set_VDTOP_HPLL_KP_0_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KP_0_reg)=data)
#define  get_VDTOP_HPLL_KP_0_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KP_0_reg))
#define  VDTOP_HPLL_KP_0_hpll_manu_mode_en_shift                                 (7)
#define  VDTOP_HPLL_KP_0_hpll_kp_coef_0_shift                                    (0)
#define  VDTOP_HPLL_KP_0_hpll_manu_mode_en_mask                                  (0x00000080)
#define  VDTOP_HPLL_KP_0_hpll_kp_coef_0_mask                                     (0x0000003F)
#define  VDTOP_HPLL_KP_0_hpll_manu_mode_en(data)                                 (0x00000080&((data)<<7))
#define  VDTOP_HPLL_KP_0_hpll_kp_coef_0(data)                                    (0x0000003F&(data))
#define  VDTOP_HPLL_KP_0_get_hpll_manu_mode_en(data)                             ((0x00000080&(data))>>7)
#define  VDTOP_HPLL_KP_0_get_hpll_kp_coef_0(data)                                (0x0000003F&(data))

#define  VDTOP_HPLL_KP_1                                                        0x1801917C
#define  VDTOP_HPLL_KP_1_reg_addr                                                "0xB801917C"
#define  VDTOP_HPLL_KP_1_reg                                                     0xB801917C
#define  VDTOP_HPLL_KP_1_inst_addr                                               "0x005C"
#define  set_VDTOP_HPLL_KP_1_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KP_1_reg)=data)
#define  get_VDTOP_HPLL_KP_1_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KP_1_reg))
#define  VDTOP_HPLL_KP_1_hpll_kp_coef_1_shift                                    (0)
#define  VDTOP_HPLL_KP_1_hpll_kp_coef_1_mask                                     (0x0000003F)
#define  VDTOP_HPLL_KP_1_hpll_kp_coef_1(data)                                    (0x0000003F&(data))
#define  VDTOP_HPLL_KP_1_get_hpll_kp_coef_1(data)                                (0x0000003F&(data))

#define  VDTOP_HPLL_KP_2                                                        0x18019180
#define  VDTOP_HPLL_KP_2_reg_addr                                                "0xB8019180"
#define  VDTOP_HPLL_KP_2_reg                                                     0xB8019180
#define  VDTOP_HPLL_KP_2_inst_addr                                               "0x005D"
#define  set_VDTOP_HPLL_KP_2_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KP_2_reg)=data)
#define  get_VDTOP_HPLL_KP_2_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KP_2_reg))
#define  VDTOP_HPLL_KP_2_hpll_kp_coef_2_shift                                    (0)
#define  VDTOP_HPLL_KP_2_hpll_kp_coef_2_mask                                     (0x0000003F)
#define  VDTOP_HPLL_KP_2_hpll_kp_coef_2(data)                                    (0x0000003F&(data))
#define  VDTOP_HPLL_KP_2_get_hpll_kp_coef_2(data)                                (0x0000003F&(data))

#define  VDTOP_HPLL_KP_3                                                        0x18019184
#define  VDTOP_HPLL_KP_3_reg_addr                                                "0xB8019184"
#define  VDTOP_HPLL_KP_3_reg                                                     0xB8019184
#define  VDTOP_HPLL_KP_3_inst_addr                                               "0x005E"
#define  set_VDTOP_HPLL_KP_3_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KP_3_reg)=data)
#define  get_VDTOP_HPLL_KP_3_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KP_3_reg))
#define  VDTOP_HPLL_KP_3_hpll_kp_coef_3_shift                                    (0)
#define  VDTOP_HPLL_KP_3_hpll_kp_coef_3_mask                                     (0x0000003F)
#define  VDTOP_HPLL_KP_3_hpll_kp_coef_3(data)                                    (0x0000003F&(data))
#define  VDTOP_HPLL_KP_3_get_hpll_kp_coef_3(data)                                (0x0000003F&(data))

#define  VDTOP_HPLL_KP_4                                                        0x18019188
#define  VDTOP_HPLL_KP_4_reg_addr                                                "0xB8019188"
#define  VDTOP_HPLL_KP_4_reg                                                     0xB8019188
#define  VDTOP_HPLL_KP_4_inst_addr                                               "0x005F"
#define  set_VDTOP_HPLL_KP_4_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KP_4_reg)=data)
#define  get_VDTOP_HPLL_KP_4_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KP_4_reg))
#define  VDTOP_HPLL_KP_4_hpll_kp_coef_4_shift                                    (0)
#define  VDTOP_HPLL_KP_4_hpll_kp_coef_4_mask                                     (0x0000003F)
#define  VDTOP_HPLL_KP_4_hpll_kp_coef_4(data)                                    (0x0000003F&(data))
#define  VDTOP_HPLL_KP_4_get_hpll_kp_coef_4(data)                                (0x0000003F&(data))

#define  VDTOP_HPLL_KP_5                                                        0x1801918C
#define  VDTOP_HPLL_KP_5_reg_addr                                                "0xB801918C"
#define  VDTOP_HPLL_KP_5_reg                                                     0xB801918C
#define  VDTOP_HPLL_KP_5_inst_addr                                               "0x0060"
#define  set_VDTOP_HPLL_KP_5_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KP_5_reg)=data)
#define  get_VDTOP_HPLL_KP_5_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KP_5_reg))
#define  VDTOP_HPLL_KP_5_hpll_kp_coef_5_shift                                    (0)
#define  VDTOP_HPLL_KP_5_hpll_kp_coef_5_mask                                     (0x0000003F)
#define  VDTOP_HPLL_KP_5_hpll_kp_coef_5(data)                                    (0x0000003F&(data))
#define  VDTOP_HPLL_KP_5_get_hpll_kp_coef_5(data)                                (0x0000003F&(data))

#define  VDTOP_HPLL_KI_0                                                        0x18019190
#define  VDTOP_HPLL_KI_0_reg_addr                                                "0xB8019190"
#define  VDTOP_HPLL_KI_0_reg                                                     0xB8019190
#define  VDTOP_HPLL_KI_0_inst_addr                                               "0x0061"
#define  set_VDTOP_HPLL_KI_0_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KI_0_reg)=data)
#define  get_VDTOP_HPLL_KI_0_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KI_0_reg))
#define  VDTOP_HPLL_KI_0_hpll_ki_coef_0_shift                                    (0)
#define  VDTOP_HPLL_KI_0_hpll_ki_coef_0_mask                                     (0x000000FF)
#define  VDTOP_HPLL_KI_0_hpll_ki_coef_0(data)                                    (0x000000FF&(data))
#define  VDTOP_HPLL_KI_0_get_hpll_ki_coef_0(data)                                (0x000000FF&(data))

#define  VDTOP_HPLL_KI_1                                                        0x18019194
#define  VDTOP_HPLL_KI_1_reg_addr                                                "0xB8019194"
#define  VDTOP_HPLL_KI_1_reg                                                     0xB8019194
#define  VDTOP_HPLL_KI_1_inst_addr                                               "0x0062"
#define  set_VDTOP_HPLL_KI_1_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KI_1_reg)=data)
#define  get_VDTOP_HPLL_KI_1_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KI_1_reg))
#define  VDTOP_HPLL_KI_1_hpll_ki_coef_1_shift                                    (0)
#define  VDTOP_HPLL_KI_1_hpll_ki_coef_1_mask                                     (0x000000FF)
#define  VDTOP_HPLL_KI_1_hpll_ki_coef_1(data)                                    (0x000000FF&(data))
#define  VDTOP_HPLL_KI_1_get_hpll_ki_coef_1(data)                                (0x000000FF&(data))

#define  VDTOP_HPLL_KI_2                                                        0x18019198
#define  VDTOP_HPLL_KI_2_reg_addr                                                "0xB8019198"
#define  VDTOP_HPLL_KI_2_reg                                                     0xB8019198
#define  VDTOP_HPLL_KI_2_inst_addr                                               "0x0063"
#define  set_VDTOP_HPLL_KI_2_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KI_2_reg)=data)
#define  get_VDTOP_HPLL_KI_2_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KI_2_reg))
#define  VDTOP_HPLL_KI_2_hpll_ki_coef_2_shift                                    (0)
#define  VDTOP_HPLL_KI_2_hpll_ki_coef_2_mask                                     (0x000000FF)
#define  VDTOP_HPLL_KI_2_hpll_ki_coef_2(data)                                    (0x000000FF&(data))
#define  VDTOP_HPLL_KI_2_get_hpll_ki_coef_2(data)                                (0x000000FF&(data))

#define  VDTOP_HPLL_KI_3                                                        0x1801919C
#define  VDTOP_HPLL_KI_3_reg_addr                                                "0xB801919C"
#define  VDTOP_HPLL_KI_3_reg                                                     0xB801919C
#define  VDTOP_HPLL_KI_3_inst_addr                                               "0x0064"
#define  set_VDTOP_HPLL_KI_3_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KI_3_reg)=data)
#define  get_VDTOP_HPLL_KI_3_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KI_3_reg))
#define  VDTOP_HPLL_KI_3_hpll_ki_coef_3_shift                                    (0)
#define  VDTOP_HPLL_KI_3_hpll_ki_coef_3_mask                                     (0x000000FF)
#define  VDTOP_HPLL_KI_3_hpll_ki_coef_3(data)                                    (0x000000FF&(data))
#define  VDTOP_HPLL_KI_3_get_hpll_ki_coef_3(data)                                (0x000000FF&(data))

#define  VDTOP_HPLL_KI_4                                                        0x180191A0
#define  VDTOP_HPLL_KI_4_reg_addr                                                "0xB80191A0"
#define  VDTOP_HPLL_KI_4_reg                                                     0xB80191A0
#define  VDTOP_HPLL_KI_4_inst_addr                                               "0x0065"
#define  set_VDTOP_HPLL_KI_4_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KI_4_reg)=data)
#define  get_VDTOP_HPLL_KI_4_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KI_4_reg))
#define  VDTOP_HPLL_KI_4_hpll_ki_coef_4_shift                                    (0)
#define  VDTOP_HPLL_KI_4_hpll_ki_coef_4_mask                                     (0x000000FF)
#define  VDTOP_HPLL_KI_4_hpll_ki_coef_4(data)                                    (0x000000FF&(data))
#define  VDTOP_HPLL_KI_4_get_hpll_ki_coef_4(data)                                (0x000000FF&(data))

#define  VDTOP_HPLL_KI_5                                                        0x180191A4
#define  VDTOP_HPLL_KI_5_reg_addr                                                "0xB80191A4"
#define  VDTOP_HPLL_KI_5_reg                                                     0xB80191A4
#define  VDTOP_HPLL_KI_5_inst_addr                                               "0x0066"
#define  set_VDTOP_HPLL_KI_5_reg(data)                                           (*((volatile unsigned int*)VDTOP_HPLL_KI_5_reg)=data)
#define  get_VDTOP_HPLL_KI_5_reg                                                 (*((volatile unsigned int*)VDTOP_HPLL_KI_5_reg))
#define  VDTOP_HPLL_KI_5_hpll_ki_coef_5_shift                                    (0)
#define  VDTOP_HPLL_KI_5_hpll_ki_coef_5_mask                                     (0x000000FF)
#define  VDTOP_HPLL_KI_5_hpll_ki_coef_5(data)                                    (0x000000FF&(data))
#define  VDTOP_HPLL_KI_5_get_hpll_ki_coef_5(data)                                (0x000000FF&(data))

#define  VDTOP_Second_pll_gain                                                  0x180191A8
#define  VDTOP_Second_pll_gain_reg_addr                                          "0xB80191A8"
#define  VDTOP_Second_pll_gain_reg                                               0xB80191A8
#define  VDTOP_Second_pll_gain_inst_addr                                         "0x0067"
#define  set_VDTOP_Second_pll_gain_reg(data)                                     (*((volatile unsigned int*)VDTOP_Second_pll_gain_reg)=data)
#define  get_VDTOP_Second_pll_gain_reg                                           (*((volatile unsigned int*)VDTOP_Second_pll_gain_reg))
#define  VDTOP_Second_pll_gain_second_pll_level_sel_shift                        (8)
#define  VDTOP_Second_pll_gain_second_pll_gain_sel_shift                         (4)
#define  VDTOP_Second_pll_gain_second_pll_clampgate_sel_shift                    (3)
#define  VDTOP_Second_pll_gain_second_pll_phase_sel_shift                        (2)
#define  VDTOP_Second_pll_gain_second_pll_w_hlock_shift                          (1)
#define  VDTOP_Second_pll_gain_second_pll_en_shift                               (0)
#define  VDTOP_Second_pll_gain_second_pll_level_sel_mask                         (0x00000300)
#define  VDTOP_Second_pll_gain_second_pll_gain_sel_mask                          (0x00000030)
#define  VDTOP_Second_pll_gain_second_pll_clampgate_sel_mask                     (0x00000008)
#define  VDTOP_Second_pll_gain_second_pll_phase_sel_mask                         (0x00000004)
#define  VDTOP_Second_pll_gain_second_pll_w_hlock_mask                           (0x00000002)
#define  VDTOP_Second_pll_gain_second_pll_en_mask                                (0x00000001)
#define  VDTOP_Second_pll_gain_second_pll_level_sel(data)                        (0x00000300&((data)<<8))
#define  VDTOP_Second_pll_gain_second_pll_gain_sel(data)                         (0x00000030&((data)<<4))
#define  VDTOP_Second_pll_gain_second_pll_clampgate_sel(data)                    (0x00000008&((data)<<3))
#define  VDTOP_Second_pll_gain_second_pll_phase_sel(data)                        (0x00000004&((data)<<2))
#define  VDTOP_Second_pll_gain_second_pll_w_hlock(data)                          (0x00000002&((data)<<1))
#define  VDTOP_Second_pll_gain_second_pll_en(data)                               (0x00000001&(data))
#define  VDTOP_Second_pll_gain_get_second_pll_level_sel(data)                    ((0x00000300&(data))>>8)
#define  VDTOP_Second_pll_gain_get_second_pll_gain_sel(data)                     ((0x00000030&(data))>>4)
#define  VDTOP_Second_pll_gain_get_second_pll_clampgate_sel(data)                ((0x00000008&(data))>>3)
#define  VDTOP_Second_pll_gain_get_second_pll_phase_sel(data)                    ((0x00000004&(data))>>2)
#define  VDTOP_Second_pll_gain_get_second_pll_w_hlock(data)                      ((0x00000002&(data))>>1)
#define  VDTOP_Second_pll_gain_get_second_pll_en(data)                           (0x00000001&(data))

#define  VDTOP_Second_pll_gain1                                                 0x180191AC
#define  VDTOP_Second_pll_gain1_reg_addr                                         "0xB80191AC"
#define  VDTOP_Second_pll_gain1_reg                                              0xB80191AC
#define  VDTOP_Second_pll_gain1_inst_addr                                        "0x0068"
#define  set_VDTOP_Second_pll_gain1_reg(data)                                    (*((volatile unsigned int*)VDTOP_Second_pll_gain1_reg)=data)
#define  get_VDTOP_Second_pll_gain1_reg                                          (*((volatile unsigned int*)VDTOP_Second_pll_gain1_reg))
#define  VDTOP_Second_pll_gain1_second_pll_sync_level_shift                      (24)
#define  VDTOP_Second_pll_gain1_second_pll_dc_add_shift                          (12)
#define  VDTOP_Second_pll_gain1_second_pll_dc_rm_shift                           (0)
#define  VDTOP_Second_pll_gain1_second_pll_sync_level_mask                       (0xFF000000)
#define  VDTOP_Second_pll_gain1_second_pll_dc_add_mask                           (0x00FFF000)
#define  VDTOP_Second_pll_gain1_second_pll_dc_rm_mask                            (0x00000FFF)
#define  VDTOP_Second_pll_gain1_second_pll_sync_level(data)                      (0xFF000000&((data)<<24))
#define  VDTOP_Second_pll_gain1_second_pll_dc_add(data)                          (0x00FFF000&((data)<<12))
#define  VDTOP_Second_pll_gain1_second_pll_dc_rm(data)                           (0x00000FFF&(data))
#define  VDTOP_Second_pll_gain1_get_second_pll_sync_level(data)                  ((0xFF000000&(data))>>24)
#define  VDTOP_Second_pll_gain1_get_second_pll_dc_add(data)                      ((0x00FFF000&(data))>>12)
#define  VDTOP_Second_pll_gain1_get_second_pll_dc_rm(data)                       (0x00000FFF&(data))

#define  VDTOP_Second_pll_gain2                                                 0x180191B0
#define  VDTOP_Second_pll_gain2_reg_addr                                         "0xB80191B0"
#define  VDTOP_Second_pll_gain2_reg                                              0xB80191B0
#define  VDTOP_Second_pll_gain2_inst_addr                                        "0x0069"
#define  set_VDTOP_Second_pll_gain2_reg(data)                                    (*((volatile unsigned int*)VDTOP_Second_pll_gain2_reg)=data)
#define  get_VDTOP_Second_pll_gain2_reg                                          (*((volatile unsigned int*)VDTOP_Second_pll_gain2_reg))
#define  VDTOP_Second_pll_gain2_second_comp_blevel_shift                         (12)
#define  VDTOP_Second_pll_gain2_second_comp_slevel_shift                         (0)
#define  VDTOP_Second_pll_gain2_second_comp_blevel_mask                          (0x00FFF000)
#define  VDTOP_Second_pll_gain2_second_comp_slevel_mask                          (0x00000FFF)
#define  VDTOP_Second_pll_gain2_second_comp_blevel(data)                         (0x00FFF000&((data)<<12))
#define  VDTOP_Second_pll_gain2_second_comp_slevel(data)                         (0x00000FFF&(data))
#define  VDTOP_Second_pll_gain2_get_second_comp_blevel(data)                     ((0x00FFF000&(data))>>12)
#define  VDTOP_Second_pll_gain2_get_second_comp_slevel(data)                     (0x00000FFF&(data))

#define  VDTOP_Second_pll_gain3                                                 0x180191B4
#define  VDTOP_Second_pll_gain3_reg_addr                                         "0xB80191B4"
#define  VDTOP_Second_pll_gain3_reg                                              0xB80191B4
#define  VDTOP_Second_pll_gain3_inst_addr                                        "0x006A"
#define  set_VDTOP_Second_pll_gain3_reg(data)                                    (*((volatile unsigned int*)VDTOP_Second_pll_gain3_reg)=data)
#define  get_VDTOP_Second_pll_gain3_reg                                          (*((volatile unsigned int*)VDTOP_Second_pll_gain3_reg))
#define  VDTOP_Second_pll_gain3_second_trailing_shift                            (12)
#define  VDTOP_Second_pll_gain3_second_dgain_shift                               (0)
#define  VDTOP_Second_pll_gain3_second_trailing_mask                             (0x000FF000)
#define  VDTOP_Second_pll_gain3_second_dgain_mask                                (0x00000FFF)
#define  VDTOP_Second_pll_gain3_second_trailing(data)                            (0x000FF000&((data)<<12))
#define  VDTOP_Second_pll_gain3_second_dgain(data)                               (0x00000FFF&(data))
#define  VDTOP_Second_pll_gain3_get_second_trailing(data)                        ((0x000FF000&(data))>>12)
#define  VDTOP_Second_pll_gain3_get_second_dgain(data)                           (0x00000FFF&(data))

#define  VDTOP_Second_pll_gain4                                                 0x180191B8
#define  VDTOP_Second_pll_gain4_reg_addr                                         "0xB80191B8"
#define  VDTOP_Second_pll_gain4_reg                                              0xB80191B8
#define  VDTOP_Second_pll_gain4_inst_addr                                        "0x006B"
#define  set_VDTOP_Second_pll_gain4_reg(data)                                    (*((volatile unsigned int*)VDTOP_Second_pll_gain4_reg)=data)
#define  get_VDTOP_Second_pll_gain4_reg                                          (*((volatile unsigned int*)VDTOP_Second_pll_gain4_reg))
#define  VDTOP_Second_pll_gain4_second_backporch_start_shift                     (24)
#define  VDTOP_Second_pll_gain4_second_backporch_end_shift                       (16)
#define  VDTOP_Second_pll_gain4_second_hsync_tip_start_shift                     (8)
#define  VDTOP_Second_pll_gain4_second_hsync_tip_end_shift                       (0)
#define  VDTOP_Second_pll_gain4_second_backporch_start_mask                      (0xFF000000)
#define  VDTOP_Second_pll_gain4_second_backporch_end_mask                        (0x00FF0000)
#define  VDTOP_Second_pll_gain4_second_hsync_tip_start_mask                      (0x0000FF00)
#define  VDTOP_Second_pll_gain4_second_hsync_tip_end_mask                        (0x000000FF)
#define  VDTOP_Second_pll_gain4_second_backporch_start(data)                     (0xFF000000&((data)<<24))
#define  VDTOP_Second_pll_gain4_second_backporch_end(data)                       (0x00FF0000&((data)<<16))
#define  VDTOP_Second_pll_gain4_second_hsync_tip_start(data)                     (0x0000FF00&((data)<<8))
#define  VDTOP_Second_pll_gain4_second_hsync_tip_end(data)                       (0x000000FF&(data))
#define  VDTOP_Second_pll_gain4_get_second_backporch_start(data)                 ((0xFF000000&(data))>>24)
#define  VDTOP_Second_pll_gain4_get_second_backporch_end(data)                   ((0x00FF0000&(data))>>16)
#define  VDTOP_Second_pll_gain4_get_second_hsync_tip_start(data)                 ((0x0000FF00&(data))>>8)
#define  VDTOP_Second_pll_gain4_get_second_hsync_tip_end(data)                   (0x000000FF&(data))

#define  VDTOP_under_new_th1                                                    0x180191BC
#define  VDTOP_under_new_th1_reg_addr                                            "0xB80191BC"
#define  VDTOP_under_new_th1_reg                                                 0xB80191BC
#define  VDTOP_under_new_th1_inst_addr                                           "0x006C"
#define  set_VDTOP_under_new_th1_reg(data)                                       (*((volatile unsigned int*)VDTOP_under_new_th1_reg)=data)
#define  get_VDTOP_under_new_th1_reg                                             (*((volatile unsigned int*)VDTOP_under_new_th1_reg))
#define  VDTOP_under_new_th1_headswitch_debounce_en_shift                        (27)
#define  VDTOP_under_new_th1_second_pll_kill_en_shift                            (26)
#define  VDTOP_under_new_th1_under_detected_flag_shift                           (25)
#define  VDTOP_under_new_th1_under_count_reset_shift                             (24)
#define  VDTOP_under_new_th1_under_line_err_thl_shift                            (12)
#define  VDTOP_under_new_th1_under_min_err_thl_shift                             (0)
#define  VDTOP_under_new_th1_headswitch_debounce_en_mask                         (0x08000000)
#define  VDTOP_under_new_th1_second_pll_kill_en_mask                             (0x04000000)
#define  VDTOP_under_new_th1_under_detected_flag_mask                            (0x02000000)
#define  VDTOP_under_new_th1_under_count_reset_mask                              (0x01000000)
#define  VDTOP_under_new_th1_under_line_err_thl_mask                             (0x003FF000)
#define  VDTOP_under_new_th1_under_min_err_thl_mask                              (0x000003FF)
#define  VDTOP_under_new_th1_headswitch_debounce_en(data)                        (0x08000000&((data)<<27))
#define  VDTOP_under_new_th1_second_pll_kill_en(data)                            (0x04000000&((data)<<26))
#define  VDTOP_under_new_th1_under_detected_flag(data)                           (0x02000000&((data)<<25))
#define  VDTOP_under_new_th1_under_count_reset(data)                             (0x01000000&((data)<<24))
#define  VDTOP_under_new_th1_under_line_err_thl(data)                            (0x003FF000&((data)<<12))
#define  VDTOP_under_new_th1_under_min_err_thl(data)                             (0x000003FF&(data))
#define  VDTOP_under_new_th1_get_headswitch_debounce_en(data)                    ((0x08000000&(data))>>27)
#define  VDTOP_under_new_th1_get_second_pll_kill_en(data)                        ((0x04000000&(data))>>26)
#define  VDTOP_under_new_th1_get_under_detected_flag(data)                       ((0x02000000&(data))>>25)
#define  VDTOP_under_new_th1_get_under_count_reset(data)                         ((0x01000000&(data))>>24)
#define  VDTOP_under_new_th1_get_under_line_err_thl(data)                        ((0x003FF000&(data))>>12)
#define  VDTOP_under_new_th1_get_under_min_err_thl(data)                         (0x000003FF&(data))

#define  VDTOP_under_new_th2                                                    0x180191C0
#define  VDTOP_under_new_th2_reg_addr                                            "0xB80191C0"
#define  VDTOP_under_new_th2_reg                                                 0xB80191C0
#define  VDTOP_under_new_th2_inst_addr                                           "0x006D"
#define  set_VDTOP_under_new_th2_reg(data)                                       (*((volatile unsigned int*)VDTOP_under_new_th2_reg)=data)
#define  get_VDTOP_under_new_th2_reg                                             (*((volatile unsigned int*)VDTOP_under_new_th2_reg))
#define  VDTOP_under_new_th2_under_field_err_thl_shift                           (0)
#define  VDTOP_under_new_th2_under_field_err_thl_mask                            (0x000003FF)
#define  VDTOP_under_new_th2_under_field_err_thl(data)                           (0x000003FF&(data))
#define  VDTOP_under_new_th2_get_under_field_err_thl(data)                       (0x000003FF&(data))

#define  VDTOP_under_new_th3                                                    0x180191C4
#define  VDTOP_under_new_th3_reg_addr                                            "0xB80191C4"
#define  VDTOP_under_new_th3_reg                                                 0xB80191C4
#define  VDTOP_under_new_th3_inst_addr                                           "0x006E"
#define  set_VDTOP_under_new_th3_reg(data)                                       (*((volatile unsigned int*)VDTOP_under_new_th3_reg)=data)
#define  get_VDTOP_under_new_th3_reg                                             (*((volatile unsigned int*)VDTOP_under_new_th3_reg))
#define  VDTOP_under_new_th3_under_debounce_thl_shift                            (12)
#define  VDTOP_under_new_th3_under_debounce_max_shift                            (0)
#define  VDTOP_under_new_th3_under_debounce_thl_mask                             (0x003FF000)
#define  VDTOP_under_new_th3_under_debounce_max_mask                             (0x000003FF)
#define  VDTOP_under_new_th3_under_debounce_thl(data)                            (0x003FF000&((data)<<12))
#define  VDTOP_under_new_th3_under_debounce_max(data)                            (0x000003FF&(data))
#define  VDTOP_under_new_th3_get_under_debounce_thl(data)                        ((0x003FF000&(data))>>12)
#define  VDTOP_under_new_th3_get_under_debounce_max(data)                        (0x000003FF&(data))

#define  VDTOP_DC_COCH_SEPERATE_1                                               0x180191C8
#define  VDTOP_DC_COCH_SEPERATE_1_reg_addr                                       "0xB80191C8"
#define  VDTOP_DC_COCH_SEPERATE_1_reg                                            0xB80191C8
#define  VDTOP_DC_COCH_SEPERATE_1_inst_addr                                      "0x006F"
#define  set_VDTOP_DC_COCH_SEPERATE_1_reg(data)                                  (*((volatile unsigned int*)VDTOP_DC_COCH_SEPERATE_1_reg)=data)
#define  get_VDTOP_DC_COCH_SEPERATE_1_reg                                        (*((volatile unsigned int*)VDTOP_DC_COCH_SEPERATE_1_reg))
#define  VDTOP_DC_COCH_SEPERATE_1_coch_detected_by_check_dc_shift                (31)
#define  VDTOP_DC_COCH_SEPERATE_1_coch_avg_line1_diff_thre_up_shift              (12)
#define  VDTOP_DC_COCH_SEPERATE_1_coch_avg_line1_diff_thre_lo_shift              (0)
#define  VDTOP_DC_COCH_SEPERATE_1_coch_detected_by_check_dc_mask                 (0x80000000)
#define  VDTOP_DC_COCH_SEPERATE_1_coch_avg_line1_diff_thre_up_mask               (0x00FFF000)
#define  VDTOP_DC_COCH_SEPERATE_1_coch_avg_line1_diff_thre_lo_mask               (0x00000FFF)
#define  VDTOP_DC_COCH_SEPERATE_1_coch_detected_by_check_dc(data)                (0x80000000&((data)<<31))
#define  VDTOP_DC_COCH_SEPERATE_1_coch_avg_line1_diff_thre_up(data)              (0x00FFF000&((data)<<12))
#define  VDTOP_DC_COCH_SEPERATE_1_coch_avg_line1_diff_thre_lo(data)              (0x00000FFF&(data))
#define  VDTOP_DC_COCH_SEPERATE_1_get_coch_detected_by_check_dc(data)            ((0x80000000&(data))>>31)
#define  VDTOP_DC_COCH_SEPERATE_1_get_coch_avg_line1_diff_thre_up(data)          ((0x00FFF000&(data))>>12)
#define  VDTOP_DC_COCH_SEPERATE_1_get_coch_avg_line1_diff_thre_lo(data)          (0x00000FFF&(data))

#define  VDTOP_DC_COCH_SEPERATE_2                                               0x180191CC
#define  VDTOP_DC_COCH_SEPERATE_2_reg_addr                                       "0xB80191CC"
#define  VDTOP_DC_COCH_SEPERATE_2_reg                                            0xB80191CC
#define  VDTOP_DC_COCH_SEPERATE_2_inst_addr                                      "0x0070"
#define  set_VDTOP_DC_COCH_SEPERATE_2_reg(data)                                  (*((volatile unsigned int*)VDTOP_DC_COCH_SEPERATE_2_reg)=data)
#define  get_VDTOP_DC_COCH_SEPERATE_2_reg                                        (*((volatile unsigned int*)VDTOP_DC_COCH_SEPERATE_2_reg))
#define  VDTOP_DC_COCH_SEPERATE_2_coch_detect_lpf_reset_shift                    (31)
#define  VDTOP_DC_COCH_SEPERATE_2_coch_detect_counter_up_thre_shift              (12)
#define  VDTOP_DC_COCH_SEPERATE_2_coch_detect_counter_lo_thre_shift              (0)
#define  VDTOP_DC_COCH_SEPERATE_2_coch_detect_lpf_reset_mask                     (0x80000000)
#define  VDTOP_DC_COCH_SEPERATE_2_coch_detect_counter_up_thre_mask               (0x003FF000)
#define  VDTOP_DC_COCH_SEPERATE_2_coch_detect_counter_lo_thre_mask               (0x000003FF)
#define  VDTOP_DC_COCH_SEPERATE_2_coch_detect_lpf_reset(data)                    (0x80000000&((data)<<31))
#define  VDTOP_DC_COCH_SEPERATE_2_coch_detect_counter_up_thre(data)              (0x003FF000&((data)<<12))
#define  VDTOP_DC_COCH_SEPERATE_2_coch_detect_counter_lo_thre(data)              (0x000003FF&(data))
#define  VDTOP_DC_COCH_SEPERATE_2_get_coch_detect_lpf_reset(data)                ((0x80000000&(data))>>31)
#define  VDTOP_DC_COCH_SEPERATE_2_get_coch_detect_counter_up_thre(data)          ((0x003FF000&(data))>>12)
#define  VDTOP_DC_COCH_SEPERATE_2_get_coch_detect_counter_lo_thre(data)          (0x000003FF&(data))

#define  VDTOP_HSYNC_RISING                                                     0x180191D0
#define  VDTOP_HSYNC_RISING_reg_addr                                             "0xB80191D0"
#define  VDTOP_HSYNC_RISING_reg                                                  0xB80191D0
#define  VDTOP_HSYNC_RISING_inst_addr                                            "0x0071"
#define  set_VDTOP_HSYNC_RISING_reg(data)                                        (*((volatile unsigned int*)VDTOP_HSYNC_RISING_reg)=data)
#define  get_VDTOP_HSYNC_RISING_reg                                              (*((volatile unsigned int*)VDTOP_HSYNC_RISING_reg))
#define  VDTOP_HSYNC_RISING_hsync_rising_shift                                   (0)
#define  VDTOP_HSYNC_RISING_hsync_rising_mask                                    (0x000000FF)
#define  VDTOP_HSYNC_RISING_hsync_rising(data)                                   (0x000000FF&(data))
#define  VDTOP_HSYNC_RISING_get_hsync_rising(data)                               (0x000000FF&(data))

#define  VDTOP_HSYNC_PHASE_OFFSET                                               0x180191D4
#define  VDTOP_HSYNC_PHASE_OFFSET_reg_addr                                       "0xB80191D4"
#define  VDTOP_HSYNC_PHASE_OFFSET_reg                                            0xB80191D4
#define  VDTOP_HSYNC_PHASE_OFFSET_inst_addr                                      "0x0072"
#define  set_VDTOP_HSYNC_PHASE_OFFSET_reg(data)                                  (*((volatile unsigned int*)VDTOP_HSYNC_PHASE_OFFSET_reg)=data)
#define  get_VDTOP_HSYNC_PHASE_OFFSET_reg                                        (*((volatile unsigned int*)VDTOP_HSYNC_PHASE_OFFSET_reg))
#define  VDTOP_HSYNC_PHASE_OFFSET_hsync_phase_offset_shift                       (0)
#define  VDTOP_HSYNC_PHASE_OFFSET_hsync_phase_offset_mask                        (0x000000FF)
#define  VDTOP_HSYNC_PHASE_OFFSET_hsync_phase_offset(data)                       (0x000000FF&(data))
#define  VDTOP_HSYNC_PHASE_OFFSET_get_hsync_phase_offset(data)                   (0x000000FF&(data))

#define  VDTOP_HSYNC_GATE_START                                                 0x180191D8
#define  VDTOP_HSYNC_GATE_START_reg_addr                                         "0xB80191D8"
#define  VDTOP_HSYNC_GATE_START_reg                                              0xB80191D8
#define  VDTOP_HSYNC_GATE_START_inst_addr                                        "0x0073"
#define  set_VDTOP_HSYNC_GATE_START_reg(data)                                    (*((volatile unsigned int*)VDTOP_HSYNC_GATE_START_reg)=data)
#define  get_VDTOP_HSYNC_GATE_START_reg                                          (*((volatile unsigned int*)VDTOP_HSYNC_GATE_START_reg))
#define  VDTOP_HSYNC_GATE_START_secam_gp_hcount_start_shift                      (12)
#define  VDTOP_HSYNC_GATE_START_hsync_gate_start_shift                           (0)
#define  VDTOP_HSYNC_GATE_START_secam_gp_hcount_start_mask                       (0x003FF000)
#define  VDTOP_HSYNC_GATE_START_hsync_gate_start_mask                            (0x000000FF)
#define  VDTOP_HSYNC_GATE_START_secam_gp_hcount_start(data)                      (0x003FF000&((data)<<12))
#define  VDTOP_HSYNC_GATE_START_hsync_gate_start(data)                           (0x000000FF&(data))
#define  VDTOP_HSYNC_GATE_START_get_secam_gp_hcount_start(data)                  ((0x003FF000&(data))>>12)
#define  VDTOP_HSYNC_GATE_START_get_hsync_gate_start(data)                       (0x000000FF&(data))

#define  VDTOP_HSYNC_GATE_END                                                   0x180191DC
#define  VDTOP_HSYNC_GATE_END_reg_addr                                           "0xB80191DC"
#define  VDTOP_HSYNC_GATE_END_reg                                                0xB80191DC
#define  VDTOP_HSYNC_GATE_END_inst_addr                                          "0x0074"
#define  set_VDTOP_HSYNC_GATE_END_reg(data)                                      (*((volatile unsigned int*)VDTOP_HSYNC_GATE_END_reg)=data)
#define  get_VDTOP_HSYNC_GATE_END_reg                                            (*((volatile unsigned int*)VDTOP_HSYNC_GATE_END_reg))
#define  VDTOP_HSYNC_GATE_END_secam_gp_hcount_end_shift                          (12)
#define  VDTOP_HSYNC_GATE_END_hsync_gate_end_shift                               (0)
#define  VDTOP_HSYNC_GATE_END_secam_gp_hcount_end_mask                           (0x003FF000)
#define  VDTOP_HSYNC_GATE_END_hsync_gate_end_mask                                (0x000000FF)
#define  VDTOP_HSYNC_GATE_END_secam_gp_hcount_end(data)                          (0x003FF000&((data)<<12))
#define  VDTOP_HSYNC_GATE_END_hsync_gate_end(data)                               (0x000000FF&(data))
#define  VDTOP_HSYNC_GATE_END_get_secam_gp_hcount_end(data)                      ((0x003FF000&(data))>>12)
#define  VDTOP_HSYNC_GATE_END_get_hsync_gate_end(data)                           (0x000000FF&(data))

#define  VDTOP_HSYNC_TIP_START                                                  0x180191E0
#define  VDTOP_HSYNC_TIP_START_reg_addr                                          "0xB80191E0"
#define  VDTOP_HSYNC_TIP_START_reg                                               0xB80191E0
#define  VDTOP_HSYNC_TIP_START_inst_addr                                         "0x0075"
#define  set_VDTOP_HSYNC_TIP_START_reg(data)                                     (*((volatile unsigned int*)VDTOP_HSYNC_TIP_START_reg)=data)
#define  get_VDTOP_HSYNC_TIP_START_reg                                           (*((volatile unsigned int*)VDTOP_HSYNC_TIP_START_reg))
#define  VDTOP_HSYNC_TIP_START_secam_gp_vcount_start_o_shift                     (12)
#define  VDTOP_HSYNC_TIP_START_hsync_tip_start_shift                             (0)
#define  VDTOP_HSYNC_TIP_START_secam_gp_vcount_start_o_mask                      (0x003FF000)
#define  VDTOP_HSYNC_TIP_START_hsync_tip_start_mask                              (0x000000FF)
#define  VDTOP_HSYNC_TIP_START_secam_gp_vcount_start_o(data)                     (0x003FF000&((data)<<12))
#define  VDTOP_HSYNC_TIP_START_hsync_tip_start(data)                             (0x000000FF&(data))
#define  VDTOP_HSYNC_TIP_START_get_secam_gp_vcount_start_o(data)                 ((0x003FF000&(data))>>12)
#define  VDTOP_HSYNC_TIP_START_get_hsync_tip_start(data)                         (0x000000FF&(data))

#define  VDTOP_HSYNC_TIP_END                                                    0x180191E4
#define  VDTOP_HSYNC_TIP_END_reg_addr                                            "0xB80191E4"
#define  VDTOP_HSYNC_TIP_END_reg                                                 0xB80191E4
#define  VDTOP_HSYNC_TIP_END_inst_addr                                           "0x0076"
#define  set_VDTOP_HSYNC_TIP_END_reg(data)                                       (*((volatile unsigned int*)VDTOP_HSYNC_TIP_END_reg)=data)
#define  get_VDTOP_HSYNC_TIP_END_reg                                             (*((volatile unsigned int*)VDTOP_HSYNC_TIP_END_reg))
#define  VDTOP_HSYNC_TIP_END_secam_gp_vcount_end_o_shift                         (12)
#define  VDTOP_HSYNC_TIP_END_hsync_tip_end_shift                                 (0)
#define  VDTOP_HSYNC_TIP_END_secam_gp_vcount_end_o_mask                          (0x003FF000)
#define  VDTOP_HSYNC_TIP_END_hsync_tip_end_mask                                  (0x000000FF)
#define  VDTOP_HSYNC_TIP_END_secam_gp_vcount_end_o(data)                         (0x003FF000&((data)<<12))
#define  VDTOP_HSYNC_TIP_END_hsync_tip_end(data)                                 (0x000000FF&(data))
#define  VDTOP_HSYNC_TIP_END_get_secam_gp_vcount_end_o(data)                     ((0x003FF000&(data))>>12)
#define  VDTOP_HSYNC_TIP_END_get_hsync_tip_end(data)                             (0x000000FF&(data))

#define  VDTOP_HSYNC_RISING_START                                               0x180191E8
#define  VDTOP_HSYNC_RISING_START_reg_addr                                       "0xB80191E8"
#define  VDTOP_HSYNC_RISING_START_reg                                            0xB80191E8
#define  VDTOP_HSYNC_RISING_START_inst_addr                                      "0x0077"
#define  set_VDTOP_HSYNC_RISING_START_reg(data)                                  (*((volatile unsigned int*)VDTOP_HSYNC_RISING_START_reg)=data)
#define  get_VDTOP_HSYNC_RISING_START_reg                                        (*((volatile unsigned int*)VDTOP_HSYNC_RISING_START_reg))
#define  VDTOP_HSYNC_RISING_START_secam_gp_vcount_start_e_shift                  (12)
#define  VDTOP_HSYNC_RISING_START_hsync_rising_start_shift                       (0)
#define  VDTOP_HSYNC_RISING_START_secam_gp_vcount_start_e_mask                   (0x003FF000)
#define  VDTOP_HSYNC_RISING_START_hsync_rising_start_mask                        (0x000000FF)
#define  VDTOP_HSYNC_RISING_START_secam_gp_vcount_start_e(data)                  (0x003FF000&((data)<<12))
#define  VDTOP_HSYNC_RISING_START_hsync_rising_start(data)                       (0x000000FF&(data))
#define  VDTOP_HSYNC_RISING_START_get_secam_gp_vcount_start_e(data)              ((0x003FF000&(data))>>12)
#define  VDTOP_HSYNC_RISING_START_get_hsync_rising_start(data)                   (0x000000FF&(data))

#define  VDTOP_HSYNC_RISING_END                                                 0x180191EC
#define  VDTOP_HSYNC_RISING_END_reg_addr                                         "0xB80191EC"
#define  VDTOP_HSYNC_RISING_END_reg                                              0xB80191EC
#define  VDTOP_HSYNC_RISING_END_inst_addr                                        "0x0078"
#define  set_VDTOP_HSYNC_RISING_END_reg(data)                                    (*((volatile unsigned int*)VDTOP_HSYNC_RISING_END_reg)=data)
#define  get_VDTOP_HSYNC_RISING_END_reg                                          (*((volatile unsigned int*)VDTOP_HSYNC_RISING_END_reg))
#define  VDTOP_HSYNC_RISING_END_secam_gp_vcount_end_e_shift                      (12)
#define  VDTOP_HSYNC_RISING_END_hsync_rising_end_shift                           (0)
#define  VDTOP_HSYNC_RISING_END_secam_gp_vcount_end_e_mask                       (0x003FF000)
#define  VDTOP_HSYNC_RISING_END_hsync_rising_end_mask                            (0x000000FF)
#define  VDTOP_HSYNC_RISING_END_secam_gp_vcount_end_e(data)                      (0x003FF000&((data)<<12))
#define  VDTOP_HSYNC_RISING_END_hsync_rising_end(data)                           (0x000000FF&(data))
#define  VDTOP_HSYNC_RISING_END_get_secam_gp_vcount_end_e(data)                  ((0x003FF000&(data))>>12)
#define  VDTOP_HSYNC_RISING_END_get_hsync_rising_end(data)                       (0x000000FF&(data))

#define  VDTOP_BACKPROCH_START                                                  0x180191F0
#define  VDTOP_BACKPROCH_START_reg_addr                                          "0xB80191F0"
#define  VDTOP_BACKPROCH_START_reg                                               0xB80191F0
#define  VDTOP_BACKPROCH_START_inst_addr                                         "0x0079"
#define  set_VDTOP_BACKPROCH_START_reg(data)                                     (*((volatile unsigned int*)VDTOP_BACKPROCH_START_reg)=data)
#define  get_VDTOP_BACKPROCH_START_reg                                           (*((volatile unsigned int*)VDTOP_BACKPROCH_START_reg))
#define  VDTOP_BACKPROCH_START_front_porch_detect_en_shift                       (25)
#define  VDTOP_BACKPROCH_START_front_porch_level_data_sel_shift                  (24)
#define  VDTOP_BACKPROCH_START_front_porch_level_line_sel_shift                  (23)
#define  VDTOP_BACKPROCH_START_front_porch_level_pixel_sel_shift                 (20)
#define  VDTOP_BACKPROCH_START_front_porch_gate_start_shift                      (8)
#define  VDTOP_BACKPROCH_START_backporch_start_shift                             (0)
#define  VDTOP_BACKPROCH_START_front_porch_detect_en_mask                        (0x02000000)
#define  VDTOP_BACKPROCH_START_front_porch_level_data_sel_mask                   (0x01000000)
#define  VDTOP_BACKPROCH_START_front_porch_level_line_sel_mask                   (0x00800000)
#define  VDTOP_BACKPROCH_START_front_porch_level_pixel_sel_mask                  (0x00700000)
#define  VDTOP_BACKPROCH_START_front_porch_gate_start_mask                       (0x0003FF00)
#define  VDTOP_BACKPROCH_START_backporch_start_mask                              (0x000000FF)
#define  VDTOP_BACKPROCH_START_front_porch_detect_en(data)                       (0x02000000&((data)<<25))
#define  VDTOP_BACKPROCH_START_front_porch_level_data_sel(data)                  (0x01000000&((data)<<24))
#define  VDTOP_BACKPROCH_START_front_porch_level_line_sel(data)                  (0x00800000&((data)<<23))
#define  VDTOP_BACKPROCH_START_front_porch_level_pixel_sel(data)                 (0x00700000&((data)<<20))
#define  VDTOP_BACKPROCH_START_front_porch_gate_start(data)                      (0x0003FF00&((data)<<8))
#define  VDTOP_BACKPROCH_START_backporch_start(data)                             (0x000000FF&(data))
#define  VDTOP_BACKPROCH_START_get_front_porch_detect_en(data)                   ((0x02000000&(data))>>25)
#define  VDTOP_BACKPROCH_START_get_front_porch_level_data_sel(data)              ((0x01000000&(data))>>24)
#define  VDTOP_BACKPROCH_START_get_front_porch_level_line_sel(data)              ((0x00800000&(data))>>23)
#define  VDTOP_BACKPROCH_START_get_front_porch_level_pixel_sel(data)             ((0x00700000&(data))>>20)
#define  VDTOP_BACKPROCH_START_get_front_porch_gate_start(data)                  ((0x0003FF00&(data))>>8)
#define  VDTOP_BACKPROCH_START_get_backporch_start(data)                         (0x000000FF&(data))

#define  VDTOP_BACKPORCH_END                                                    0x180191F4
#define  VDTOP_BACKPORCH_END_reg_addr                                            "0xB80191F4"
#define  VDTOP_BACKPORCH_END_reg                                                 0xB80191F4
#define  VDTOP_BACKPORCH_END_inst_addr                                           "0x007A"
#define  set_VDTOP_BACKPORCH_END_reg(data)                                       (*((volatile unsigned int*)VDTOP_BACKPORCH_END_reg)=data)
#define  get_VDTOP_BACKPORCH_END_reg                                             (*((volatile unsigned int*)VDTOP_BACKPORCH_END_reg))
#define  VDTOP_BACKPORCH_END_vclamp_n_gate_shift                                 (8)
#define  VDTOP_BACKPORCH_END_backporch_end_shift                                 (0)
#define  VDTOP_BACKPORCH_END_vclamp_n_gate_mask                                  (0x0003FF00)
#define  VDTOP_BACKPORCH_END_backporch_end_mask                                  (0x000000FF)
#define  VDTOP_BACKPORCH_END_vclamp_n_gate(data)                                 (0x0003FF00&((data)<<8))
#define  VDTOP_BACKPORCH_END_backporch_end(data)                                 (0x000000FF&(data))
#define  VDTOP_BACKPORCH_END_get_vclamp_n_gate(data)                             ((0x0003FF00&(data))>>8)
#define  VDTOP_BACKPORCH_END_get_backporch_end(data)                             (0x000000FF&(data))

#define  VDTOP_HBLANK_START                                                     0x180191F8
#define  VDTOP_HBLANK_START_reg_addr                                             "0xB80191F8"
#define  VDTOP_HBLANK_START_reg                                                  0xB80191F8
#define  VDTOP_HBLANK_START_inst_addr                                            "0x007B"
#define  set_VDTOP_HBLANK_START_reg(data)                                        (*((volatile unsigned int*)VDTOP_HBLANK_START_reg)=data)
#define  get_VDTOP_HBLANK_START_reg                                              (*((volatile unsigned int*)VDTOP_HBLANK_START_reg))
#define  VDTOP_HBLANK_START_hblank_start_shift                                   (0)
#define  VDTOP_HBLANK_START_hblank_start_mask                                    (0x000000FF)
#define  VDTOP_HBLANK_START_hblank_start(data)                                   (0x000000FF&(data))
#define  VDTOP_HBLANK_START_get_hblank_start(data)                               (0x000000FF&(data))

#define  VDTOP_HBLANK_END                                                       0x180191FC
#define  VDTOP_HBLANK_END_reg_addr                                               "0xB80191FC"
#define  VDTOP_HBLANK_END_reg                                                    0xB80191FC
#define  VDTOP_HBLANK_END_inst_addr                                              "0x007C"
#define  set_VDTOP_HBLANK_END_reg(data)                                          (*((volatile unsigned int*)VDTOP_HBLANK_END_reg)=data)
#define  get_VDTOP_HBLANK_END_reg                                                (*((volatile unsigned int*)VDTOP_HBLANK_END_reg))
#define  VDTOP_HBLANK_END_hblank_end_shift                                       (0)
#define  VDTOP_HBLANK_END_hblank_end_mask                                        (0x000000FF)
#define  VDTOP_HBLANK_END_hblank_end(data)                                       (0x000000FF&(data))
#define  VDTOP_HBLANK_END_get_hblank_end(data)                                   (0x000000FF&(data))

#define  VDTOP_BURST_GATE_START                                                 0x18019200
#define  VDTOP_BURST_GATE_START_reg_addr                                         "0xB8019200"
#define  VDTOP_BURST_GATE_START_reg                                              0xB8019200
#define  VDTOP_BURST_GATE_START_inst_addr                                        "0x007D"
#define  set_VDTOP_BURST_GATE_START_reg(data)                                    (*((volatile unsigned int*)VDTOP_BURST_GATE_START_reg)=data)
#define  get_VDTOP_BURST_GATE_START_reg                                          (*((volatile unsigned int*)VDTOP_BURST_GATE_START_reg))
#define  VDTOP_BURST_GATE_START_secam_burst_gate_start_shift                     (8)
#define  VDTOP_BURST_GATE_START_burst_gate_start_shift                           (0)
#define  VDTOP_BURST_GATE_START_secam_burst_gate_start_mask                      (0x0000FF00)
#define  VDTOP_BURST_GATE_START_burst_gate_start_mask                            (0x000000FF)
#define  VDTOP_BURST_GATE_START_secam_burst_gate_start(data)                     (0x0000FF00&((data)<<8))
#define  VDTOP_BURST_GATE_START_burst_gate_start(data)                           (0x000000FF&(data))
#define  VDTOP_BURST_GATE_START_get_secam_burst_gate_start(data)                 ((0x0000FF00&(data))>>8)
#define  VDTOP_BURST_GATE_START_get_burst_gate_start(data)                       (0x000000FF&(data))

#define  VDTOP_BURST_GATE_END                                                   0x18019204
#define  VDTOP_BURST_GATE_END_reg_addr                                           "0xB8019204"
#define  VDTOP_BURST_GATE_END_reg                                                0xB8019204
#define  VDTOP_BURST_GATE_END_inst_addr                                          "0x007E"
#define  set_VDTOP_BURST_GATE_END_reg(data)                                      (*((volatile unsigned int*)VDTOP_BURST_GATE_END_reg)=data)
#define  get_VDTOP_BURST_GATE_END_reg                                            (*((volatile unsigned int*)VDTOP_BURST_GATE_END_reg))
#define  VDTOP_BURST_GATE_END_secam_burst_gate_end_shift                         (8)
#define  VDTOP_BURST_GATE_END_burst_gate_end_shift                               (0)
#define  VDTOP_BURST_GATE_END_secam_burst_gate_end_mask                          (0x0000FF00)
#define  VDTOP_BURST_GATE_END_burst_gate_end_mask                                (0x000000FF)
#define  VDTOP_BURST_GATE_END_secam_burst_gate_end(data)                         (0x0000FF00&((data)<<8))
#define  VDTOP_BURST_GATE_END_burst_gate_end(data)                               (0x000000FF&(data))
#define  VDTOP_BURST_GATE_END_get_secam_burst_gate_end(data)                     ((0x0000FF00&(data))>>8)
#define  VDTOP_BURST_GATE_END_get_burst_gate_end(data)                           (0x000000FF&(data))

#define  VDTOP_HACTIVE_START                                                    0x18019208
#define  VDTOP_HACTIVE_START_reg_addr                                            "0xB8019208"
#define  VDTOP_HACTIVE_START_reg                                                 0xB8019208
#define  VDTOP_HACTIVE_START_inst_addr                                           "0x007F"
#define  set_VDTOP_HACTIVE_START_reg(data)                                       (*((volatile unsigned int*)VDTOP_HACTIVE_START_reg)=data)
#define  get_VDTOP_HACTIVE_START_reg                                             (*((volatile unsigned int*)VDTOP_HACTIVE_START_reg))
#define  VDTOP_HACTIVE_START_hactive_start_shift                                 (0)
#define  VDTOP_HACTIVE_START_hactive_start_mask                                  (0x000000FF)
#define  VDTOP_HACTIVE_START_hactive_start(data)                                 (0x000000FF&(data))
#define  VDTOP_HACTIVE_START_get_hactive_start(data)                             (0x000000FF&(data))

#define  VDTOP_HACTIVE_WIDTH                                                    0x1801920C
#define  VDTOP_HACTIVE_WIDTH_reg_addr                                            "0xB801920C"
#define  VDTOP_HACTIVE_WIDTH_reg                                                 0xB801920C
#define  VDTOP_HACTIVE_WIDTH_inst_addr                                           "0x0080"
#define  set_VDTOP_HACTIVE_WIDTH_reg(data)                                       (*((volatile unsigned int*)VDTOP_HACTIVE_WIDTH_reg)=data)
#define  get_VDTOP_HACTIVE_WIDTH_reg                                             (*((volatile unsigned int*)VDTOP_HACTIVE_WIDTH_reg))
#define  VDTOP_HACTIVE_WIDTH_hactive_width_shift                                 (0)
#define  VDTOP_HACTIVE_WIDTH_hactive_width_mask                                  (0x000000FF)
#define  VDTOP_HACTIVE_WIDTH_hactive_width(data)                                 (0x000000FF&(data))
#define  VDTOP_HACTIVE_WIDTH_get_hactive_width(data)                             (0x000000FF&(data))

#define  VDTOP_HDETECT_ERR_TH1                                                  0x18019210
#define  VDTOP_HDETECT_ERR_TH1_reg_addr                                          "0xB8019210"
#define  VDTOP_HDETECT_ERR_TH1_reg                                               0xB8019210
#define  VDTOP_HDETECT_ERR_TH1_inst_addr                                         "0x0081"
#define  set_VDTOP_HDETECT_ERR_TH1_reg(data)                                     (*((volatile unsigned int*)VDTOP_HDETECT_ERR_TH1_reg)=data)
#define  get_VDTOP_HDETECT_ERR_TH1_reg                                           (*((volatile unsigned int*)VDTOP_HDETECT_ERR_TH1_reg))
#define  VDTOP_HDETECT_ERR_TH1_hdetect_hstate_phase_max_en_shift                 (31)
#define  VDTOP_HDETECT_ERR_TH1_hdetect_hstate_3_phase_max_shift                  (16)
#define  VDTOP_HDETECT_ERR_TH1_hdetect_hstate_4_phase_max_shift                  (0)
#define  VDTOP_HDETECT_ERR_TH1_hdetect_hstate_phase_max_en_mask                  (0x80000000)
#define  VDTOP_HDETECT_ERR_TH1_hdetect_hstate_3_phase_max_mask                   (0x1FFF0000)
#define  VDTOP_HDETECT_ERR_TH1_hdetect_hstate_4_phase_max_mask                   (0x00001FFF)
#define  VDTOP_HDETECT_ERR_TH1_hdetect_hstate_phase_max_en(data)                 (0x80000000&((data)<<31))
#define  VDTOP_HDETECT_ERR_TH1_hdetect_hstate_3_phase_max(data)                  (0x1FFF0000&((data)<<16))
#define  VDTOP_HDETECT_ERR_TH1_hdetect_hstate_4_phase_max(data)                  (0x00001FFF&(data))
#define  VDTOP_HDETECT_ERR_TH1_get_hdetect_hstate_phase_max_en(data)             ((0x80000000&(data))>>31)
#define  VDTOP_HDETECT_ERR_TH1_get_hdetect_hstate_3_phase_max(data)              ((0x1FFF0000&(data))>>16)
#define  VDTOP_HDETECT_ERR_TH1_get_hdetect_hstate_4_phase_max(data)              (0x00001FFF&(data))

#define  VDTOP_HDETECT_ERR_TH2                                                  0x18019214
#define  VDTOP_HDETECT_ERR_TH2_reg_addr                                          "0xB8019214"
#define  VDTOP_HDETECT_ERR_TH2_reg                                               0xB8019214
#define  VDTOP_HDETECT_ERR_TH2_inst_addr                                         "0x0082"
#define  set_VDTOP_HDETECT_ERR_TH2_reg(data)                                     (*((volatile unsigned int*)VDTOP_HDETECT_ERR_TH2_reg)=data)
#define  get_VDTOP_HDETECT_ERR_TH2_reg                                           (*((volatile unsigned int*)VDTOP_HDETECT_ERR_TH2_reg))
#define  VDTOP_HDETECT_ERR_TH2_hdetect_hstate_5_phase_max_shift                  (16)
#define  VDTOP_HDETECT_ERR_TH2_hdetect_err04_th_shift                            (8)
#define  VDTOP_HDETECT_ERR_TH2_hdetect_err00_th_shift                            (0)
#define  VDTOP_HDETECT_ERR_TH2_hdetect_hstate_5_phase_max_mask                   (0x1FFF0000)
#define  VDTOP_HDETECT_ERR_TH2_hdetect_err04_th_mask                             (0x0000FF00)
#define  VDTOP_HDETECT_ERR_TH2_hdetect_err00_th_mask                             (0x000000FF)
#define  VDTOP_HDETECT_ERR_TH2_hdetect_hstate_5_phase_max(data)                  (0x1FFF0000&((data)<<16))
#define  VDTOP_HDETECT_ERR_TH2_hdetect_err04_th(data)                            (0x0000FF00&((data)<<8))
#define  VDTOP_HDETECT_ERR_TH2_hdetect_err00_th(data)                            (0x000000FF&(data))
#define  VDTOP_HDETECT_ERR_TH2_get_hdetect_hstate_5_phase_max(data)              ((0x1FFF0000&(data))>>16)
#define  VDTOP_HDETECT_ERR_TH2_get_hdetect_err04_th(data)                        ((0x0000FF00&(data))>>8)
#define  VDTOP_HDETECT_ERR_TH2_get_hdetect_err00_th(data)                        (0x000000FF&(data))

#define  VDTOP_CSTATE_STATUS                                                    0x18019218
#define  VDTOP_CSTATE_STATUS_reg_addr                                            "0xB8019218"
#define  VDTOP_CSTATE_STATUS_reg                                                 0xB8019218
#define  VDTOP_CSTATE_STATUS_inst_addr                                           "0x0083"
#define  set_VDTOP_CSTATE_STATUS_reg(data)                                       (*((volatile unsigned int*)VDTOP_CSTATE_STATUS_reg)=data)
#define  get_VDTOP_CSTATE_STATUS_reg                                             (*((volatile unsigned int*)VDTOP_CSTATE_STATUS_reg))
#define  VDTOP_CSTATE_STATUS_cpll_cgain_reset_en_shift                           (9)
#define  VDTOP_CSTATE_STATUS_cpll_use_fine_or_final_hlock_shift                  (8)
#define  VDTOP_CSTATE_STATUS_new_c_state_i_shift                                 (7)
#define  VDTOP_CSTATE_STATUS_new_cstate_shift                                    (6)
#define  VDTOP_CSTATE_STATUS_cstate_cntl_shift                                   (4)
#define  VDTOP_CSTATE_STATUS_cstate_status_shift                                 (0)
#define  VDTOP_CSTATE_STATUS_cpll_cgain_reset_en_mask                            (0x00000200)
#define  VDTOP_CSTATE_STATUS_cpll_use_fine_or_final_hlock_mask                   (0x00000100)
#define  VDTOP_CSTATE_STATUS_new_c_state_i_mask                                  (0x00000080)
#define  VDTOP_CSTATE_STATUS_new_cstate_mask                                     (0x00000040)
#define  VDTOP_CSTATE_STATUS_cstate_cntl_mask                                    (0x00000030)
#define  VDTOP_CSTATE_STATUS_cstate_status_mask                                  (0x00000007)
#define  VDTOP_CSTATE_STATUS_cpll_cgain_reset_en(data)                           (0x00000200&((data)<<9))
#define  VDTOP_CSTATE_STATUS_cpll_use_fine_or_final_hlock(data)                  (0x00000100&((data)<<8))
#define  VDTOP_CSTATE_STATUS_new_c_state_i(data)                                 (0x00000080&((data)<<7))
#define  VDTOP_CSTATE_STATUS_new_cstate(data)                                    (0x00000040&((data)<<6))
#define  VDTOP_CSTATE_STATUS_cstate_cntl(data)                                   (0x00000030&((data)<<4))
#define  VDTOP_CSTATE_STATUS_cstate_status(data)                                 (0x00000007&(data))
#define  VDTOP_CSTATE_STATUS_get_cpll_cgain_reset_en(data)                       ((0x00000200&(data))>>9)
#define  VDTOP_CSTATE_STATUS_get_cpll_use_fine_or_final_hlock(data)              ((0x00000100&(data))>>8)
#define  VDTOP_CSTATE_STATUS_get_new_c_state_i(data)                             ((0x00000080&(data))>>7)
#define  VDTOP_CSTATE_STATUS_get_new_cstate(data)                                ((0x00000040&(data))>>6)
#define  VDTOP_CSTATE_STATUS_get_cstate_cntl(data)                               ((0x00000030&(data))>>4)
#define  VDTOP_CSTATE_STATUS_get_cstate_status(data)                             (0x00000007&(data))

#define  VDTOP_HDETECT_GATE_CTRL                                                0x1801921C
#define  VDTOP_HDETECT_GATE_CTRL_reg_addr                                        "0xB801921C"
#define  VDTOP_HDETECT_GATE_CTRL_reg                                             0xB801921C
#define  VDTOP_HDETECT_GATE_CTRL_inst_addr                                       "0x0084"
#define  set_VDTOP_HDETECT_GATE_CTRL_reg(data)                                   (*((volatile unsigned int*)VDTOP_HDETECT_GATE_CTRL_reg)=data)
#define  get_VDTOP_HDETECT_GATE_CTRL_reg                                         (*((volatile unsigned int*)VDTOP_HDETECT_GATE_CTRL_reg))
#define  VDTOP_HDETECT_GATE_CTRL_s_b_level_fir_en_shift                          (18)
#define  VDTOP_HDETECT_GATE_CTRL_level_fir_num_32_64_blevel_shift                (17)
#define  VDTOP_HDETECT_GATE_CTRL_level_fir_num_32_64_slevel_shift                (16)
#define  VDTOP_HDETECT_GATE_CTRL_coef_syncmidpt_fir_in_shift                     (8)
#define  VDTOP_HDETECT_GATE_CTRL_new_hpll_lpf_sel_shift                          (2)
#define  VDTOP_HDETECT_GATE_CTRL_gate_iir_h_sel_shift                            (1)
#define  VDTOP_HDETECT_GATE_CTRL_gate_iir_v_sel_shift                            (0)
#define  VDTOP_HDETECT_GATE_CTRL_s_b_level_fir_en_mask                           (0x00040000)
#define  VDTOP_HDETECT_GATE_CTRL_level_fir_num_32_64_blevel_mask                 (0x00020000)
#define  VDTOP_HDETECT_GATE_CTRL_level_fir_num_32_64_slevel_mask                 (0x00010000)
#define  VDTOP_HDETECT_GATE_CTRL_coef_syncmidpt_fir_in_mask                      (0x0000FF00)
#define  VDTOP_HDETECT_GATE_CTRL_new_hpll_lpf_sel_mask                           (0x00000004)
#define  VDTOP_HDETECT_GATE_CTRL_gate_iir_h_sel_mask                             (0x00000002)
#define  VDTOP_HDETECT_GATE_CTRL_gate_iir_v_sel_mask                             (0x00000001)
#define  VDTOP_HDETECT_GATE_CTRL_s_b_level_fir_en(data)                          (0x00040000&((data)<<18))
#define  VDTOP_HDETECT_GATE_CTRL_level_fir_num_32_64_blevel(data)                (0x00020000&((data)<<17))
#define  VDTOP_HDETECT_GATE_CTRL_level_fir_num_32_64_slevel(data)                (0x00010000&((data)<<16))
#define  VDTOP_HDETECT_GATE_CTRL_coef_syncmidpt_fir_in(data)                     (0x0000FF00&((data)<<8))
#define  VDTOP_HDETECT_GATE_CTRL_new_hpll_lpf_sel(data)                          (0x00000004&((data)<<2))
#define  VDTOP_HDETECT_GATE_CTRL_gate_iir_h_sel(data)                            (0x00000002&((data)<<1))
#define  VDTOP_HDETECT_GATE_CTRL_gate_iir_v_sel(data)                            (0x00000001&(data))
#define  VDTOP_HDETECT_GATE_CTRL_get_s_b_level_fir_en(data)                      ((0x00040000&(data))>>18)
#define  VDTOP_HDETECT_GATE_CTRL_get_level_fir_num_32_64_blevel(data)            ((0x00020000&(data))>>17)
#define  VDTOP_HDETECT_GATE_CTRL_get_level_fir_num_32_64_slevel(data)            ((0x00010000&(data))>>16)
#define  VDTOP_HDETECT_GATE_CTRL_get_coef_syncmidpt_fir_in(data)                 ((0x0000FF00&(data))>>8)
#define  VDTOP_HDETECT_GATE_CTRL_get_new_hpll_lpf_sel(data)                      ((0x00000004&(data))>>2)
#define  VDTOP_HDETECT_GATE_CTRL_get_gate_iir_h_sel(data)                        ((0x00000002&(data))>>1)
#define  VDTOP_HDETECT_GATE_CTRL_get_gate_iir_v_sel(data)                        (0x00000001&(data))

#define  VDTOP_HDETECT_GATE_COEF1                                               0x18019220
#define  VDTOP_HDETECT_GATE_COEF1_reg_addr                                       "0xB8019220"
#define  VDTOP_HDETECT_GATE_COEF1_reg                                            0xB8019220
#define  VDTOP_HDETECT_GATE_COEF1_inst_addr                                      "0x0085"
#define  set_VDTOP_HDETECT_GATE_COEF1_reg(data)                                  (*((volatile unsigned int*)VDTOP_HDETECT_GATE_COEF1_reg)=data)
#define  get_VDTOP_HDETECT_GATE_COEF1_reg                                        (*((volatile unsigned int*)VDTOP_HDETECT_GATE_COEF1_reg))
#define  VDTOP_HDETECT_GATE_COEF1_headswitch_err_sel_shift                       (10)
#define  VDTOP_HDETECT_GATE_COEF1_hsync_refind_mask_err_shift                    (9)
#define  VDTOP_HDETECT_GATE_COEF1_hsync_refind_shift                             (8)
#define  VDTOP_HDETECT_GATE_COEF1_gate_iir_coef1_shift                           (0)
#define  VDTOP_HDETECT_GATE_COEF1_headswitch_err_sel_mask                        (0x00000C00)
#define  VDTOP_HDETECT_GATE_COEF1_hsync_refind_mask_err_mask                     (0x00000200)
#define  VDTOP_HDETECT_GATE_COEF1_hsync_refind_mask                              (0x00000100)
#define  VDTOP_HDETECT_GATE_COEF1_gate_iir_coef1_mask                            (0x000000FF)
#define  VDTOP_HDETECT_GATE_COEF1_headswitch_err_sel(data)                       (0x00000C00&((data)<<10))
#define  VDTOP_HDETECT_GATE_COEF1_hsync_refind_mask_err(data)                    (0x00000200&((data)<<9))
#define  VDTOP_HDETECT_GATE_COEF1_hsync_refind(data)                             (0x00000100&((data)<<8))
#define  VDTOP_HDETECT_GATE_COEF1_gate_iir_coef1(data)                           (0x000000FF&(data))
#define  VDTOP_HDETECT_GATE_COEF1_get_headswitch_err_sel(data)                   ((0x00000C00&(data))>>10)
#define  VDTOP_HDETECT_GATE_COEF1_get_hsync_refind_mask_err(data)                ((0x00000200&(data))>>9)
#define  VDTOP_HDETECT_GATE_COEF1_get_hsync_refind(data)                         ((0x00000100&(data))>>8)
#define  VDTOP_HDETECT_GATE_COEF1_get_gate_iir_coef1(data)                       (0x000000FF&(data))

#define  VDTOP_HDETECT_GATE_COEF2                                               0x18019224
#define  VDTOP_HDETECT_GATE_COEF2_reg_addr                                       "0xB8019224"
#define  VDTOP_HDETECT_GATE_COEF2_reg                                            0xB8019224
#define  VDTOP_HDETECT_GATE_COEF2_inst_addr                                      "0x0086"
#define  set_VDTOP_HDETECT_GATE_COEF2_reg(data)                                  (*((volatile unsigned int*)VDTOP_HDETECT_GATE_COEF2_reg)=data)
#define  get_VDTOP_HDETECT_GATE_COEF2_reg                                        (*((volatile unsigned int*)VDTOP_HDETECT_GATE_COEF2_reg))
#define  VDTOP_HDETECT_GATE_COEF2_hdetect_err07_th_shift                         (8)
#define  VDTOP_HDETECT_GATE_COEF2_gate_iir_coef2_shift                           (0)
#define  VDTOP_HDETECT_GATE_COEF2_hdetect_err07_th_mask                          (0x0000FF00)
#define  VDTOP_HDETECT_GATE_COEF2_gate_iir_coef2_mask                            (0x000000FF)
#define  VDTOP_HDETECT_GATE_COEF2_hdetect_err07_th(data)                         (0x0000FF00&((data)<<8))
#define  VDTOP_HDETECT_GATE_COEF2_gate_iir_coef2(data)                           (0x000000FF&(data))
#define  VDTOP_HDETECT_GATE_COEF2_get_hdetect_err07_th(data)                     ((0x0000FF00&(data))>>8)
#define  VDTOP_HDETECT_GATE_COEF2_get_gate_iir_coef2(data)                       (0x000000FF&(data))

#define  VDTOP_HDETECT_VPHASE_STATUS                                            0x18019228
#define  VDTOP_HDETECT_VPHASE_STATUS_reg_addr                                    "0xB8019228"
#define  VDTOP_HDETECT_VPHASE_STATUS_reg                                         0xB8019228
#define  VDTOP_HDETECT_VPHASE_STATUS_inst_addr                                   "0x0087"
#define  set_VDTOP_HDETECT_VPHASE_STATUS_reg(data)                               (*((volatile unsigned int*)VDTOP_HDETECT_VPHASE_STATUS_reg)=data)
#define  get_VDTOP_HDETECT_VPHASE_STATUS_reg                                     (*((volatile unsigned int*)VDTOP_HDETECT_VPHASE_STATUS_reg))
#define  VDTOP_HDETECT_VPHASE_STATUS_hstate_err_thl_shift                        (16)
#define  VDTOP_HDETECT_VPHASE_STATUS_hstate_err_counter_shift                    (8)
#define  VDTOP_HDETECT_VPHASE_STATUS_vphase_status_shift                         (0)
#define  VDTOP_HDETECT_VPHASE_STATUS_hstate_err_thl_mask                         (0x3FFF0000)
#define  VDTOP_HDETECT_VPHASE_STATUS_hstate_err_counter_mask                     (0x00000300)
#define  VDTOP_HDETECT_VPHASE_STATUS_vphase_status_mask                          (0x000000FF)
#define  VDTOP_HDETECT_VPHASE_STATUS_hstate_err_thl(data)                        (0x3FFF0000&((data)<<16))
#define  VDTOP_HDETECT_VPHASE_STATUS_hstate_err_counter(data)                    (0x00000300&((data)<<8))
#define  VDTOP_HDETECT_VPHASE_STATUS_vphase_status(data)                         (0x000000FF&(data))
#define  VDTOP_HDETECT_VPHASE_STATUS_get_hstate_err_thl(data)                    ((0x3FFF0000&(data))>>16)
#define  VDTOP_HDETECT_VPHASE_STATUS_get_hstate_err_counter(data)                ((0x00000300&(data))>>8)
#define  VDTOP_HDETECT_VPHASE_STATUS_get_vphase_status(data)                     (0x000000FF&(data))

#define  VDTOP_HDETECT_VPHASEDIFF_STATUS                                        0x1801922C
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_reg_addr                                "0xB801922C"
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_reg                                     0xB801922C
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_inst_addr                               "0x0088"
#define  set_VDTOP_HDETECT_VPHASEDIFF_STATUS_reg(data)                           (*((volatile unsigned int*)VDTOP_HDETECT_VPHASEDIFF_STATUS_reg)=data)
#define  get_VDTOP_HDETECT_VPHASEDIFF_STATUS_reg                                 (*((volatile unsigned int*)VDTOP_HDETECT_VPHASEDIFF_STATUS_reg))
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_hdetect_err05_th_shift                  (24)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_hdetect_err10_th_shift                  (16)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_hdetect_err01_th_shift                  (8)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_vphasediff_status_shift                 (0)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_hdetect_err05_th_mask                   (0xFF000000)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_hdetect_err10_th_mask                   (0x00FF0000)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_hdetect_err01_th_mask                   (0x0000FF00)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_vphasediff_status_mask                  (0x000000FF)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_hdetect_err05_th(data)                  (0xFF000000&((data)<<24))
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_hdetect_err10_th(data)                  (0x00FF0000&((data)<<16))
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_hdetect_err01_th(data)                  (0x0000FF00&((data)<<8))
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_vphasediff_status(data)                 (0x000000FF&(data))
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_get_hdetect_err05_th(data)              ((0xFF000000&(data))>>24)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_get_hdetect_err10_th(data)              ((0x00FF0000&(data))>>16)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_get_hdetect_err01_th(data)              ((0x0000FF00&(data))>>8)
#define  VDTOP_HDETECT_VPHASEDIFF_STATUS_get_vphasediff_status(data)             (0x000000FF&(data))

#define  VDTOP_NOISE_VBI_THRESHOLD                                              0x18019230
#define  VDTOP_NOISE_VBI_THRESHOLD_reg_addr                                      "0xB8019230"
#define  VDTOP_NOISE_VBI_THRESHOLD_reg                                           0xB8019230
#define  VDTOP_NOISE_VBI_THRESHOLD_inst_addr                                     "0x0089"
#define  set_VDTOP_NOISE_VBI_THRESHOLD_reg(data)                                 (*((volatile unsigned int*)VDTOP_NOISE_VBI_THRESHOLD_reg)=data)
#define  get_VDTOP_NOISE_VBI_THRESHOLD_reg                                       (*((volatile unsigned int*)VDTOP_NOISE_VBI_THRESHOLD_reg))
#define  VDTOP_NOISE_VBI_THRESHOLD_noise_vbi_thresh_shift                        (0)
#define  VDTOP_NOISE_VBI_THRESHOLD_noise_vbi_thresh_mask                         (0x000000FF)
#define  VDTOP_NOISE_VBI_THRESHOLD_noise_vbi_thresh(data)                        (0x000000FF&(data))
#define  VDTOP_NOISE_VBI_THRESHOLD_get_noise_vbi_thresh(data)                    (0x000000FF&(data))

#define  VDTOP_VBI_CO_CH_CTRL0                                                  0x18019234
#define  VDTOP_VBI_CO_CH_CTRL0_reg_addr                                          "0xB8019234"
#define  VDTOP_VBI_CO_CH_CTRL0_reg                                               0xB8019234
#define  VDTOP_VBI_CO_CH_CTRL0_inst_addr                                         "0x008A"
#define  set_VDTOP_VBI_CO_CH_CTRL0_reg(data)                                     (*((volatile unsigned int*)VDTOP_VBI_CO_CH_CTRL0_reg)=data)
#define  get_VDTOP_VBI_CO_CH_CTRL0_reg                                           (*((volatile unsigned int*)VDTOP_VBI_CO_CH_CTRL0_reg))
#define  VDTOP_VBI_CO_CH_CTRL0_coch_detected_status_shift                        (7)
#define  VDTOP_VBI_CO_CH_CTRL0_coch_detected_frame_shift                         (0)
#define  VDTOP_VBI_CO_CH_CTRL0_coch_detected_status_mask                         (0x00000080)
#define  VDTOP_VBI_CO_CH_CTRL0_coch_detected_frame_mask                          (0x0000003F)
#define  VDTOP_VBI_CO_CH_CTRL0_coch_detected_status(data)                        (0x00000080&((data)<<7))
#define  VDTOP_VBI_CO_CH_CTRL0_coch_detected_frame(data)                         (0x0000003F&(data))
#define  VDTOP_VBI_CO_CH_CTRL0_get_coch_detected_status(data)                    ((0x00000080&(data))>>7)
#define  VDTOP_VBI_CO_CH_CTRL0_get_coch_detected_frame(data)                     (0x0000003F&(data))

#define  VDTOP_VBI_CO_CH_CTRL1                                                  0x18019238
#define  VDTOP_VBI_CO_CH_CTRL1_reg_addr                                          "0xB8019238"
#define  VDTOP_VBI_CO_CH_CTRL1_reg                                               0xB8019238
#define  VDTOP_VBI_CO_CH_CTRL1_inst_addr                                         "0x008B"
#define  set_VDTOP_VBI_CO_CH_CTRL1_reg(data)                                     (*((volatile unsigned int*)VDTOP_VBI_CO_CH_CTRL1_reg)=data)
#define  get_VDTOP_VBI_CO_CH_CTRL1_reg                                           (*((volatile unsigned int*)VDTOP_VBI_CO_CH_CTRL1_reg))
#define  VDTOP_VBI_CO_CH_CTRL1_coch_bp_diff_th_shift                             (0)
#define  VDTOP_VBI_CO_CH_CTRL1_coch_bp_diff_th_mask                              (0x0000000F)
#define  VDTOP_VBI_CO_CH_CTRL1_coch_bp_diff_th(data)                             (0x0000000F&(data))
#define  VDTOP_VBI_CO_CH_CTRL1_get_coch_bp_diff_th(data)                         (0x0000000F&(data))

#define  VDTOP_VBI_CO_CH_CTRL2                                                  0x1801923C
#define  VDTOP_VBI_CO_CH_CTRL2_reg_addr                                          "0xB801923C"
#define  VDTOP_VBI_CO_CH_CTRL2_reg                                               0xB801923C
#define  VDTOP_VBI_CO_CH_CTRL2_inst_addr                                         "0x008C"
#define  set_VDTOP_VBI_CO_CH_CTRL2_reg(data)                                     (*((volatile unsigned int*)VDTOP_VBI_CO_CH_CTRL2_reg)=data)
#define  get_VDTOP_VBI_CO_CH_CTRL2_reg                                           (*((volatile unsigned int*)VDTOP_VBI_CO_CH_CTRL2_reg))
#define  VDTOP_VBI_CO_CH_CTRL2_coch_line_count_th_shift                          (0)
#define  VDTOP_VBI_CO_CH_CTRL2_coch_line_count_th_mask                           (0x000000FF)
#define  VDTOP_VBI_CO_CH_CTRL2_coch_line_count_th(data)                          (0x000000FF&(data))
#define  VDTOP_VBI_CO_CH_CTRL2_get_coch_line_count_th(data)                      (0x000000FF&(data))

#define  VDTOP_MOV_DETECT_WINDOW                                                0x18019240
#define  VDTOP_MOV_DETECT_WINDOW_reg_addr                                        "0xB8019240"
#define  VDTOP_MOV_DETECT_WINDOW_reg                                             0xB8019240
#define  VDTOP_MOV_DETECT_WINDOW_inst_addr                                       "0x008D"
#define  set_VDTOP_MOV_DETECT_WINDOW_reg(data)                                   (*((volatile unsigned int*)VDTOP_MOV_DETECT_WINDOW_reg)=data)
#define  get_VDTOP_MOV_DETECT_WINDOW_reg                                         (*((volatile unsigned int*)VDTOP_MOV_DETECT_WINDOW_reg))
#define  VDTOP_MOV_DETECT_WINDOW_mov_window2_value_shift                         (0)
#define  VDTOP_MOV_DETECT_WINDOW_mov_window2_value_mask                          (0x000000FF)
#define  VDTOP_MOV_DETECT_WINDOW_mov_window2_value(data)                         (0x000000FF&(data))
#define  VDTOP_MOV_DETECT_WINDOW_get_mov_window2_value(data)                     (0x000000FF&(data))

#define  VDTOP_MOV_BURSTGATE_START                                              0x18019244
#define  VDTOP_MOV_BURSTGATE_START_reg_addr                                      "0xB8019244"
#define  VDTOP_MOV_BURSTGATE_START_reg                                           0xB8019244
#define  VDTOP_MOV_BURSTGATE_START_inst_addr                                     "0x008E"
#define  set_VDTOP_MOV_BURSTGATE_START_reg(data)                                 (*((volatile unsigned int*)VDTOP_MOV_BURSTGATE_START_reg)=data)
#define  get_VDTOP_MOV_BURSTGATE_START_reg                                       (*((volatile unsigned int*)VDTOP_MOV_BURSTGATE_START_reg))
#define  VDTOP_MOV_BURSTGATE_START_ad_burst_gate_start_shift                     (0)
#define  VDTOP_MOV_BURSTGATE_START_ad_burst_gate_start_mask                      (0x000000FF)
#define  VDTOP_MOV_BURSTGATE_START_ad_burst_gate_start(data)                     (0x000000FF&(data))
#define  VDTOP_MOV_BURSTGATE_START_get_ad_burst_gate_start(data)                 (0x000000FF&(data))

#define  VDTOP_MOV_BURSTGATE_END                                                0x18019248
#define  VDTOP_MOV_BURSTGATE_END_reg_addr                                        "0xB8019248"
#define  VDTOP_MOV_BURSTGATE_END_reg                                             0xB8019248
#define  VDTOP_MOV_BURSTGATE_END_inst_addr                                       "0x008F"
#define  set_VDTOP_MOV_BURSTGATE_END_reg(data)                                   (*((volatile unsigned int*)VDTOP_MOV_BURSTGATE_END_reg)=data)
#define  get_VDTOP_MOV_BURSTGATE_END_reg                                         (*((volatile unsigned int*)VDTOP_MOV_BURSTGATE_END_reg))
#define  VDTOP_MOV_BURSTGATE_END_ad_burst_gate_end_shift                         (0)
#define  VDTOP_MOV_BURSTGATE_END_ad_burst_gate_end_mask                          (0x000000FF)
#define  VDTOP_MOV_BURSTGATE_END_ad_burst_gate_end(data)                         (0x000000FF&(data))
#define  VDTOP_MOV_BURSTGATE_END_get_ad_burst_gate_end(data)                     (0x000000FF&(data))

#define  VDTOP_COLOR_INVERSE_CONTROL                                            0x1801924C
#define  VDTOP_COLOR_INVERSE_CONTROL_reg_addr                                    "0xB801924C"
#define  VDTOP_COLOR_INVERSE_CONTROL_reg                                         0xB801924C
#define  VDTOP_COLOR_INVERSE_CONTROL_inst_addr                                   "0x0090"
#define  set_VDTOP_COLOR_INVERSE_CONTROL_reg(data)                               (*((volatile unsigned int*)VDTOP_COLOR_INVERSE_CONTROL_reg)=data)
#define  get_VDTOP_COLOR_INVERSE_CONTROL_reg                                     (*((volatile unsigned int*)VDTOP_COLOR_INVERSE_CONTROL_reg))
#define  VDTOP_COLOR_INVERSE_CONTROL_cinverse_detect_control_shift               (0)
#define  VDTOP_COLOR_INVERSE_CONTROL_cinverse_detect_control_mask                (0x00000007)
#define  VDTOP_COLOR_INVERSE_CONTROL_cinverse_detect_control(data)               (0x00000007&(data))
#define  VDTOP_COLOR_INVERSE_CONTROL_get_cinverse_detect_control(data)           (0x00000007&(data))

#define  VDTOP_H_ERR_CONSTRAINT_1                                               0x18019250
#define  VDTOP_H_ERR_CONSTRAINT_1_reg_addr                                       "0xB8019250"
#define  VDTOP_H_ERR_CONSTRAINT_1_reg                                            0xB8019250
#define  VDTOP_H_ERR_CONSTRAINT_1_inst_addr                                      "0x0091"
#define  set_VDTOP_H_ERR_CONSTRAINT_1_reg(data)                                  (*((volatile unsigned int*)VDTOP_H_ERR_CONSTRAINT_1_reg)=data)
#define  get_VDTOP_H_ERR_CONSTRAINT_1_reg                                        (*((volatile unsigned int*)VDTOP_H_ERR_CONSTRAINT_1_reg))
#define  VDTOP_H_ERR_CONSTRAINT_1_h_err_constraint_en_shift                      (31)
#define  VDTOP_H_ERR_CONSTRAINT_1_h_err_constraint_high_th_shift                 (16)
#define  VDTOP_H_ERR_CONSTRAINT_1_h_err_constraint_low_th_shift                  (0)
#define  VDTOP_H_ERR_CONSTRAINT_1_h_err_constraint_en_mask                       (0x80000000)
#define  VDTOP_H_ERR_CONSTRAINT_1_h_err_constraint_high_th_mask                  (0x3FFF0000)
#define  VDTOP_H_ERR_CONSTRAINT_1_h_err_constraint_low_th_mask                   (0x00003FFF)
#define  VDTOP_H_ERR_CONSTRAINT_1_h_err_constraint_en(data)                      (0x80000000&((data)<<31))
#define  VDTOP_H_ERR_CONSTRAINT_1_h_err_constraint_high_th(data)                 (0x3FFF0000&((data)<<16))
#define  VDTOP_H_ERR_CONSTRAINT_1_h_err_constraint_low_th(data)                  (0x00003FFF&(data))
#define  VDTOP_H_ERR_CONSTRAINT_1_get_h_err_constraint_en(data)                  ((0x80000000&(data))>>31)
#define  VDTOP_H_ERR_CONSTRAINT_1_get_h_err_constraint_high_th(data)             ((0x3FFF0000&(data))>>16)
#define  VDTOP_H_ERR_CONSTRAINT_1_get_h_err_constraint_low_th(data)              (0x00003FFF&(data))

#define  VDTOP_H_ERR_CONSTRAINT_2                                               0x18019254
#define  VDTOP_H_ERR_CONSTRAINT_2_reg_addr                                       "0xB8019254"
#define  VDTOP_H_ERR_CONSTRAINT_2_reg                                            0xB8019254
#define  VDTOP_H_ERR_CONSTRAINT_2_inst_addr                                      "0x0092"
#define  set_VDTOP_H_ERR_CONSTRAINT_2_reg(data)                                  (*((volatile unsigned int*)VDTOP_H_ERR_CONSTRAINT_2_reg)=data)
#define  get_VDTOP_H_ERR_CONSTRAINT_2_reg                                        (*((volatile unsigned int*)VDTOP_H_ERR_CONSTRAINT_2_reg))
#define  VDTOP_H_ERR_CONSTRAINT_2_h_err_constraint_hstate_shift                  (13)
#define  VDTOP_H_ERR_CONSTRAINT_2_h_err_constraint_val_shift                     (0)
#define  VDTOP_H_ERR_CONSTRAINT_2_h_err_constraint_hstate_mask                   (0x0000E000)
#define  VDTOP_H_ERR_CONSTRAINT_2_h_err_constraint_val_mask                      (0x00001FFF)
#define  VDTOP_H_ERR_CONSTRAINT_2_h_err_constraint_hstate(data)                  (0x0000E000&((data)<<13))
#define  VDTOP_H_ERR_CONSTRAINT_2_h_err_constraint_val(data)                     (0x00001FFF&(data))
#define  VDTOP_H_ERR_CONSTRAINT_2_get_h_err_constraint_hstate(data)              ((0x0000E000&(data))>>13)
#define  VDTOP_H_ERR_CONSTRAINT_2_get_h_err_constraint_val(data)                 (0x00001FFF&(data))

#define  VDTOP_H_RESTORE_HDTO_1                                                 0x18019258
#define  VDTOP_H_RESTORE_HDTO_1_reg_addr                                         "0xB8019258"
#define  VDTOP_H_RESTORE_HDTO_1_reg                                              0xB8019258
#define  VDTOP_H_RESTORE_HDTO_1_inst_addr                                        "0x0093"
#define  set_VDTOP_H_RESTORE_HDTO_1_reg(data)                                    (*((volatile unsigned int*)VDTOP_H_RESTORE_HDTO_1_reg)=data)
#define  get_VDTOP_H_RESTORE_HDTO_1_reg                                          (*((volatile unsigned int*)VDTOP_H_RESTORE_HDTO_1_reg))
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_restore_hdto_en_shift                    (31)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_set_new_hdto_n_shift                     (28)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_restore_hdto_status_shift                (27)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_force_hdto_en_shift                      (26)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_set_hdto_start_shift                     (16)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_restore_vcr_enable_shift                 (12)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_save_stable_hdto_start_shift             (0)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_restore_hdto_en_mask                     (0x80000000)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_set_new_hdto_n_mask                      (0x70000000)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_restore_hdto_status_mask                 (0x08000000)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_force_hdto_en_mask                       (0x04000000)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_set_hdto_start_mask                      (0x03FF0000)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_restore_vcr_enable_mask                  (0x00001000)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_save_stable_hdto_start_mask              (0x000003FF)
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_restore_hdto_en(data)                    (0x80000000&((data)<<31))
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_set_new_hdto_n(data)                     (0x70000000&((data)<<28))
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_restore_hdto_status(data)                (0x08000000&((data)<<27))
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_force_hdto_en(data)                      (0x04000000&((data)<<26))
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_set_hdto_start(data)                     (0x03FF0000&((data)<<16))
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_restore_vcr_enable(data)                 (0x00001000&((data)<<12))
#define  VDTOP_H_RESTORE_HDTO_1_hdetect_save_stable_hdto_start(data)             (0x000003FF&(data))
#define  VDTOP_H_RESTORE_HDTO_1_get_hdetect_restore_hdto_en(data)                ((0x80000000&(data))>>31)
#define  VDTOP_H_RESTORE_HDTO_1_get_hdetect_set_new_hdto_n(data)                 ((0x70000000&(data))>>28)
#define  VDTOP_H_RESTORE_HDTO_1_get_hdetect_restore_hdto_status(data)            ((0x08000000&(data))>>27)
#define  VDTOP_H_RESTORE_HDTO_1_get_hdetect_force_hdto_en(data)                  ((0x04000000&(data))>>26)
#define  VDTOP_H_RESTORE_HDTO_1_get_hdetect_set_hdto_start(data)                 ((0x03FF0000&(data))>>16)
#define  VDTOP_H_RESTORE_HDTO_1_get_hdetect_restore_vcr_enable(data)             ((0x00001000&(data))>>12)
#define  VDTOP_H_RESTORE_HDTO_1_get_hdetect_save_stable_hdto_start(data)         (0x000003FF&(data))

#define  VDTOP_H_RESTORE_HDTO_2                                                 0x1801925C
#define  VDTOP_H_RESTORE_HDTO_2_reg_addr                                         "0xB801925C"
#define  VDTOP_H_RESTORE_HDTO_2_reg                                              0xB801925C
#define  VDTOP_H_RESTORE_HDTO_2_inst_addr                                        "0x0094"
#define  set_VDTOP_H_RESTORE_HDTO_2_reg(data)                                    (*((volatile unsigned int*)VDTOP_H_RESTORE_HDTO_2_reg)=data)
#define  get_VDTOP_H_RESTORE_HDTO_2_reg                                          (*((volatile unsigned int*)VDTOP_H_RESTORE_HDTO_2_reg))
#define  VDTOP_H_RESTORE_HDTO_2_hdetect_set_hdto_phase_err_th_shift              (0)
#define  VDTOP_H_RESTORE_HDTO_2_hdetect_set_hdto_phase_err_th_mask               (0x00003FFF)
#define  VDTOP_H_RESTORE_HDTO_2_hdetect_set_hdto_phase_err_th(data)              (0x00003FFF&(data))
#define  VDTOP_H_RESTORE_HDTO_2_get_hdetect_set_hdto_phase_err_th(data)          (0x00003FFF&(data))

#define  VDTOP_IF_WRONG_PC                                                      0x18019260
#define  VDTOP_IF_WRONG_PC_reg_addr                                              "0xB8019260"
#define  VDTOP_IF_WRONG_PC_reg                                                   0xB8019260
#define  VDTOP_IF_WRONG_PC_inst_addr                                             "0x0095"
#define  set_VDTOP_IF_WRONG_PC_reg(data)                                         (*((volatile unsigned int*)VDTOP_IF_WRONG_PC_reg)=data)
#define  get_VDTOP_IF_WRONG_PC_reg                                               (*((volatile unsigned int*)VDTOP_IF_WRONG_PC_reg))
#define  VDTOP_IF_WRONG_PC_wrong_if_pc_detect_th_shift                           (24)
#define  VDTOP_IF_WRONG_PC_sync_level_manu_shift                                 (16)
#define  VDTOP_IF_WRONG_PC_sync_level_manu_en_shift                              (8)
#define  VDTOP_IF_WRONG_PC_wrong_if_pc_detect_shift                              (0)
#define  VDTOP_IF_WRONG_PC_wrong_if_pc_detect_th_mask                            (0xFF000000)
#define  VDTOP_IF_WRONG_PC_sync_level_manu_mask                                  (0x00FF0000)
#define  VDTOP_IF_WRONG_PC_sync_level_manu_en_mask                               (0x00000100)
#define  VDTOP_IF_WRONG_PC_wrong_if_pc_detect_mask                               (0x00000001)
#define  VDTOP_IF_WRONG_PC_wrong_if_pc_detect_th(data)                           (0xFF000000&((data)<<24))
#define  VDTOP_IF_WRONG_PC_sync_level_manu(data)                                 (0x00FF0000&((data)<<16))
#define  VDTOP_IF_WRONG_PC_sync_level_manu_en(data)                              (0x00000100&((data)<<8))
#define  VDTOP_IF_WRONG_PC_wrong_if_pc_detect(data)                              (0x00000001&(data))
#define  VDTOP_IF_WRONG_PC_get_wrong_if_pc_detect_th(data)                       ((0xFF000000&(data))>>24)
#define  VDTOP_IF_WRONG_PC_get_sync_level_manu(data)                             ((0x00FF0000&(data))>>16)
#define  VDTOP_IF_WRONG_PC_get_sync_level_manu_en(data)                          ((0x00000100&(data))>>8)
#define  VDTOP_IF_WRONG_PC_get_wrong_if_pc_detect(data)                          (0x00000001&(data))

#define  VDTOP_CPLL_STABILITY_OBSERVE_1                                         0x18019264
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_reg_addr                                 "0xB8019264"
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_reg                                      0xB8019264
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_inst_addr                                "0x0096"
#define  set_VDTOP_CPLL_STABILITY_OBSERVE_1_reg(data)                            (*((volatile unsigned int*)VDTOP_CPLL_STABILITY_OBSERVE_1_reg)=data)
#define  get_VDTOP_CPLL_STABILITY_OBSERVE_1_reg                                  (*((volatile unsigned int*)VDTOP_CPLL_STABILITY_OBSERVE_1_reg))
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_cpll_phase_thr_up_shift                  (16)
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_cpll_phase_thr_dn_shift                  (0)
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_cpll_phase_thr_up_mask                   (0x3FFF0000)
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_cpll_phase_thr_dn_mask                   (0x00003FFF)
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_cpll_phase_thr_up(data)                  (0x3FFF0000&((data)<<16))
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_cpll_phase_thr_dn(data)                  (0x00003FFF&(data))
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_get_cpll_phase_thr_up(data)              ((0x3FFF0000&(data))>>16)
#define  VDTOP_CPLL_STABILITY_OBSERVE_1_get_cpll_phase_thr_dn(data)              (0x00003FFF&(data))

#define  VDTOP_CPLL_STABILITY_OBSERVE_2                                         0x18019268
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_reg_addr                                 "0xB8019268"
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_reg                                      0xB8019268
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_inst_addr                                "0x0097"
#define  set_VDTOP_CPLL_STABILITY_OBSERVE_2_reg(data)                            (*((volatile unsigned int*)VDTOP_CPLL_STABILITY_OBSERVE_2_reg)=data)
#define  get_VDTOP_CPLL_STABILITY_OBSERVE_2_reg                                  (*((volatile unsigned int*)VDTOP_CPLL_STABILITY_OBSERVE_2_reg))
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_ampl_thr_shift                      (24)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cerror_continune_same_sign_thr_shift     (16)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_ampl_neg_flag_shift                 (2)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_phase_small_flag_shift              (1)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_stable_flag_shift                   (0)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_ampl_thr_mask                       (0x7F000000)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cerror_continune_same_sign_thr_mask      (0x003F0000)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_ampl_neg_flag_mask                  (0x00000004)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_phase_small_flag_mask               (0x00000002)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_stable_flag_mask                    (0x00000001)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_ampl_thr(data)                      (0x7F000000&((data)<<24))
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cerror_continune_same_sign_thr(data)     (0x003F0000&((data)<<16))
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_ampl_neg_flag(data)                 (0x00000004&((data)<<2))
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_phase_small_flag(data)              (0x00000002&((data)<<1))
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_cpll_stable_flag(data)                   (0x00000001&(data))
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_get_cpll_ampl_thr(data)                  ((0x7F000000&(data))>>24)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_get_cerror_continune_same_sign_thr(data) ((0x003F0000&(data))>>16)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_get_cpll_ampl_neg_flag(data)             ((0x00000004&(data))>>2)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_get_cpll_phase_small_flag(data)          ((0x00000002&(data))>>1)
#define  VDTOP_CPLL_STABILITY_OBSERVE_2_get_cpll_stable_flag(data)               (0x00000001&(data))

#define  VDTOP_CPLL_STABILITY_OBSERVE_3                                         0x1801926C
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_reg_addr                                 "0xB801926C"
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_reg                                      0xB801926C
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_inst_addr                                "0x0098"
#define  set_VDTOP_CPLL_STABILITY_OBSERVE_3_reg(data)                            (*((volatile unsigned int*)VDTOP_CPLL_STABILITY_OBSERVE_3_reg)=data)
#define  get_VDTOP_CPLL_STABILITY_OBSERVE_3_reg                                  (*((volatile unsigned int*)VDTOP_CPLL_STABILITY_OBSERVE_3_reg))
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_ampl_out_line_iir_shift                  (16)
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_phase_out_line_iir_shift                 (0)
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_ampl_out_line_iir_mask                   (0x3FFF0000)
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_phase_out_line_iir_mask                  (0x00003FFF)
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_ampl_out_line_iir(data)                  (0x3FFF0000&((data)<<16))
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_phase_out_line_iir(data)                 (0x00003FFF&(data))
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_get_ampl_out_line_iir(data)              ((0x3FFF0000&(data))>>16)
#define  VDTOP_CPLL_STABILITY_OBSERVE_3_get_phase_out_line_iir(data)             (0x00003FFF&(data))

#define  VDTOP_HPLL_STABILITY_OBSERVE_1                                         0x18019270
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_reg_addr                                 "0xB8019270"
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_reg                                      0xB8019270
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_inst_addr                                "0x0099"
#define  set_VDTOP_HPLL_STABILITY_OBSERVE_1_reg(data)                            (*((volatile unsigned int*)VDTOP_HPLL_STABILITY_OBSERVE_1_reg)=data)
#define  get_VDTOP_HPLL_STABILITY_OBSERVE_1_reg                                  (*((volatile unsigned int*)VDTOP_HPLL_STABILITY_OBSERVE_1_reg))
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_pos_neg_value_diff_thr_shift      (16)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_continune_same_sign_thr_shift     (8)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_neg_pos_num_total_thr_shift       (4)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_neg_pos_value_total_thr_shift     (0)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_pos_neg_value_diff_thr_mask       (0xFFFF0000)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_continune_same_sign_thr_mask      (0x00003F00)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_neg_pos_num_total_thr_mask        (0x000000F0)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_neg_pos_value_total_thr_mask      (0x0000000F)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_pos_neg_value_diff_thr(data)      (0xFFFF0000&((data)<<16))
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_continune_same_sign_thr(data)     (0x00003F00&((data)<<8))
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_neg_pos_num_total_thr(data)       (0x000000F0&((data)<<4))
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_herror_neg_pos_value_total_thr(data)     (0x0000000F&(data))
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_get_herror_pos_neg_value_diff_thr(data)  ((0xFFFF0000&(data))>>16)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_get_herror_continune_same_sign_thr(data) ((0x00003F00&(data))>>8)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_get_herror_neg_pos_num_total_thr(data)   ((0x000000F0&(data))>>4)
#define  VDTOP_HPLL_STABILITY_OBSERVE_1_get_herror_neg_pos_value_total_thr(data) (0x0000000F&(data))

#define  VDTOP_HPLL_STABILITY_OBSERVE_2                                         0x18019274
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_reg_addr                                 "0xB8019274"
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_reg                                      0xB8019274
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_inst_addr                                "0x009A"
#define  set_VDTOP_HPLL_STABILITY_OBSERVE_2_reg(data)                            (*((volatile unsigned int*)VDTOP_HPLL_STABILITY_OBSERVE_2_reg)=data)
#define  get_VDTOP_HPLL_STABILITY_OBSERVE_2_reg                                  (*((volatile unsigned int*)VDTOP_HPLL_STABILITY_OBSERVE_2_reg))
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_herror_neg_value_shift                   (16)
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_herror_pos_value_shift                   (0)
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_herror_neg_value_mask                    (0xFFFF0000)
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_herror_pos_value_mask                    (0x0000FFFF)
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_herror_neg_value(data)                   (0xFFFF0000&((data)<<16))
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_herror_pos_value(data)                   (0x0000FFFF&(data))
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_get_herror_neg_value(data)               ((0xFFFF0000&(data))>>16)
#define  VDTOP_HPLL_STABILITY_OBSERVE_2_get_herror_pos_value(data)               (0x0000FFFF&(data))

#define  VDTOP_HPLL_STABILITY_OBSERVE_3                                         0x18019278
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_reg_addr                                 "0xB8019278"
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_reg                                      0xB8019278
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_inst_addr                                "0x009B"
#define  set_VDTOP_HPLL_STABILITY_OBSERVE_3_reg(data)                            (*((volatile unsigned int*)VDTOP_HPLL_STABILITY_OBSERVE_3_reg)=data)
#define  get_VDTOP_HPLL_STABILITY_OBSERVE_3_reg                                  (*((volatile unsigned int*)VDTOP_HPLL_STABILITY_OBSERVE_3_reg))
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_neg_pos_err_th_shift              (16)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_neg_pos_num_win_thr_shift         (8)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_pos_neg_num_even_shift            (2)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_pos_neg_value_even_shift          (1)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_stable_state_hold_en_shift        (0)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_neg_pos_err_th_mask               (0x1FFF0000)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_neg_pos_num_win_thr_mask          (0x00007F00)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_pos_neg_num_even_mask             (0x00000004)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_pos_neg_value_even_mask           (0x00000002)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_stable_state_hold_en_mask         (0x00000001)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_neg_pos_err_th(data)              (0x1FFF0000&((data)<<16))
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_neg_pos_num_win_thr(data)         (0x00007F00&((data)<<8))
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_pos_neg_num_even(data)            (0x00000004&((data)<<2))
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_pos_neg_value_even(data)          (0x00000002&((data)<<1))
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_herror_stable_state_hold_en(data)        (0x00000001&(data))
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_get_herror_neg_pos_err_th(data)          ((0x1FFF0000&(data))>>16)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_get_herror_neg_pos_num_win_thr(data)     ((0x00007F00&(data))>>8)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_get_herror_pos_neg_num_even(data)        ((0x00000004&(data))>>2)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_get_herror_pos_neg_value_even(data)      ((0x00000002&(data))>>1)
#define  VDTOP_HPLL_STABILITY_OBSERVE_3_get_herror_stable_state_hold_en(data)    (0x00000001&(data))

#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1                                    0x1801927C
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_reg_addr                            "0xB801927C"
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_reg                                 0xB801927C
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_inst_addr                           "0x009C"
#define  set_VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_reg(data)                       (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_reg)=data)
#define  get_VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_reg                             (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_reg))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_statistic_h_phase_diff_sec1_end_shift (16)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_statistic_h_phase_diff_sec1_start_shift (0)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_statistic_h_phase_diff_sec1_end_mask (0x01FF0000)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_statistic_h_phase_diff_sec1_start_mask (0x000001FF)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_statistic_h_phase_diff_sec1_end(data) (0x01FF0000&((data)<<16))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_statistic_h_phase_diff_sec1_start(data) (0x000001FF&(data))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_get_statistic_h_phase_diff_sec1_end(data) ((0x01FF0000&(data))>>16)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_1_get_statistic_h_phase_diff_sec1_start(data) (0x000001FF&(data))

#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2                                    0x18019280
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_reg_addr                            "0xB8019280"
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_reg                                 0xB8019280
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_inst_addr                           "0x009D"
#define  set_VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_reg(data)                       (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_reg)=data)
#define  get_VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_reg                             (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_reg))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_statistic_h_phase_diff_sec2_end_shift (16)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_statistic_h_phase_diff_sec2_start_shift (0)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_statistic_h_phase_diff_sec2_end_mask (0x01FF0000)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_statistic_h_phase_diff_sec2_start_mask (0x000001FF)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_statistic_h_phase_diff_sec2_end(data) (0x01FF0000&((data)<<16))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_statistic_h_phase_diff_sec2_start(data) (0x000001FF&(data))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_get_statistic_h_phase_diff_sec2_end(data) ((0x01FF0000&(data))>>16)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_2_get_statistic_h_phase_diff_sec2_start(data) (0x000001FF&(data))

#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3                                    0x18019284
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_reg_addr                            "0xB8019284"
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_reg                                 0xB8019284
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_inst_addr                           "0x009E"
#define  set_VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_reg(data)                       (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_reg)=data)
#define  get_VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_reg                             (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_reg))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_statistic_h_phase_diff_hitso_level2_shift (16)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_statistic_h_phase_diff_hitso_level1_shift (0)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_statistic_h_phase_diff_hitso_level2_mask (0x1FFF0000)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_statistic_h_phase_diff_hitso_level1_mask (0x00001FFF)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_statistic_h_phase_diff_hitso_level2(data) (0x1FFF0000&((data)<<16))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_statistic_h_phase_diff_hitso_level1(data) (0x00001FFF&(data))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_get_statistic_h_phase_diff_hitso_level2(data) ((0x1FFF0000&(data))>>16)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_3_get_statistic_h_phase_diff_hitso_level1(data) (0x00001FFF&(data))

#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4                                    0x18019288
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_reg_addr                            "0xB8019288"
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_reg                                 0xB8019288
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_inst_addr                           "0x009F"
#define  set_VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_reg(data)                       (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_reg)=data)
#define  get_VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_reg                             (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_reg))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_statistic_h_phase_diff_hitso_level4_shift (16)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_statistic_h_phase_diff_hitso_level3_shift (0)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_statistic_h_phase_diff_hitso_level4_mask (0x1FFF0000)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_statistic_h_phase_diff_hitso_level3_mask (0x00001FFF)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_statistic_h_phase_diff_hitso_level4(data) (0x1FFF0000&((data)<<16))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_statistic_h_phase_diff_hitso_level3(data) (0x00001FFF&(data))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_get_statistic_h_phase_diff_hitso_level4(data) ((0x1FFF0000&(data))>>16)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_4_get_statistic_h_phase_diff_hitso_level3(data) (0x00001FFF&(data))

#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_5                                    0x1801928C
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_reg_addr                            "0xB801928C"
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_reg                                 0xB801928C
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_inst_addr                           "0x00A0"
#define  set_VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_reg(data)                       (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_reg)=data)
#define  get_VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_reg                             (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_reg))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_statistic_h_phase_diff_hitso_level5_shift (0)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_statistic_h_phase_diff_hitso_level5_mask (0x00001FFF)
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_statistic_h_phase_diff_hitso_level5(data) (0x00001FFF&(data))
#define  VDTOP_H_PHASE_DIFF_STATISTICS_SET_5_get_statistic_h_phase_diff_hitso_level5(data) (0x00001FFF&(data))

#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1                                    0x18019290
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_reg_addr                            "0xB8019290"
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_reg                                 0xB8019290
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_inst_addr                           "0x00A1"
#define  set_VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_reg(data)                       (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_reg)=data)
#define  get_VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_reg                             (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_reg))
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_ready_shift (31)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_2_shift (20)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_1_shift (10)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_0_shift (0)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_ready_mask (0x80000000)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_2_mask (0x3FF00000)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_1_mask (0x000FFC00)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_0_mask (0x000003FF)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_ready(data) (0x80000000&((data)<<31))
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_2(data) (0x3FF00000&((data)<<20))
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_1(data) (0x000FFC00&((data)<<10))
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_statistic_h_phase_diff_sec1_histo_0(data) (0x000003FF&(data))
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_get_statistic_h_phase_diff_sec1_histo_ready(data) ((0x80000000&(data))>>31)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_get_statistic_h_phase_diff_sec1_histo_2(data) ((0x3FF00000&(data))>>20)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_get_statistic_h_phase_diff_sec1_histo_1(data) ((0x000FFC00&(data))>>10)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_1_get_statistic_h_phase_diff_sec1_histo_0(data) (0x000003FF&(data))

#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2                                    0x18019294
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_reg_addr                            "0xB8019294"
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_reg                                 0xB8019294
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_inst_addr                           "0x00A2"
#define  set_VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_reg(data)                       (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_reg)=data)
#define  get_VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_reg                             (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_reg))
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_statistic_h_phase_diff_sec1_histo_5_shift (20)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_statistic_h_phase_diff_sec1_histo_4_shift (10)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_statistic_h_phase_diff_sec1_histo_3_shift (0)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_statistic_h_phase_diff_sec1_histo_5_mask (0x3FF00000)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_statistic_h_phase_diff_sec1_histo_4_mask (0x000FFC00)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_statistic_h_phase_diff_sec1_histo_3_mask (0x000003FF)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_statistic_h_phase_diff_sec1_histo_5(data) (0x3FF00000&((data)<<20))
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_statistic_h_phase_diff_sec1_histo_4(data) (0x000FFC00&((data)<<10))
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_statistic_h_phase_diff_sec1_histo_3(data) (0x000003FF&(data))
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_get_statistic_h_phase_diff_sec1_histo_5(data) ((0x3FF00000&(data))>>20)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_get_statistic_h_phase_diff_sec1_histo_4(data) ((0x000FFC00&(data))>>10)
#define  VDTOP_H_PHASE_DIFF_SEC1_HISTOGRAM_2_get_statistic_h_phase_diff_sec1_histo_3(data) (0x000003FF&(data))

#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1                                    0x18019298
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_reg_addr                            "0xB8019298"
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_reg                                 0xB8019298
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_inst_addr                           "0x00A3"
#define  set_VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_reg(data)                       (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_reg)=data)
#define  get_VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_reg                             (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_reg))
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_ready_shift (31)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_2_shift (20)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_1_shift (10)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_0_shift (0)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_ready_mask (0x80000000)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_2_mask (0x3FF00000)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_1_mask (0x000FFC00)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_0_mask (0x000003FF)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_ready(data) (0x80000000&((data)<<31))
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_2(data) (0x3FF00000&((data)<<20))
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_1(data) (0x000FFC00&((data)<<10))
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_statistic_h_phase_diff_sec2_histo_0(data) (0x000003FF&(data))
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_get_statistic_h_phase_diff_sec2_histo_ready(data) ((0x80000000&(data))>>31)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_get_statistic_h_phase_diff_sec2_histo_2(data) ((0x3FF00000&(data))>>20)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_get_statistic_h_phase_diff_sec2_histo_1(data) ((0x000FFC00&(data))>>10)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_1_get_statistic_h_phase_diff_sec2_histo_0(data) (0x000003FF&(data))

#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2                                    0x1801929C
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_reg_addr                            "0xB801929C"
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_reg                                 0xB801929C
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_inst_addr                           "0x00A4"
#define  set_VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_reg(data)                       (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_reg)=data)
#define  get_VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_reg                             (*((volatile unsigned int*)VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_reg))
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_statistic_h_phase_diff_sec2_histo_5_shift (20)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_statistic_h_phase_diff_sec2_histo_4_shift (10)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_statistic_h_phase_diff_sec2_histo_3_shift (0)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_statistic_h_phase_diff_sec2_histo_5_mask (0x3FF00000)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_statistic_h_phase_diff_sec2_histo_4_mask (0x000FFC00)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_statistic_h_phase_diff_sec2_histo_3_mask (0x000003FF)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_statistic_h_phase_diff_sec2_histo_5(data) (0x3FF00000&((data)<<20))
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_statistic_h_phase_diff_sec2_histo_4(data) (0x000FFC00&((data)<<10))
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_statistic_h_phase_diff_sec2_histo_3(data) (0x000003FF&(data))
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_get_statistic_h_phase_diff_sec2_histo_5(data) ((0x3FF00000&(data))>>20)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_get_statistic_h_phase_diff_sec2_histo_4(data) ((0x000FFC00&(data))>>10)
#define  VDTOP_H_PHASE_DIFF_SEC2_HISTOGRAM_2_get_statistic_h_phase_diff_sec2_histo_3(data) (0x000003FF&(data))

#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1                                      0x180192A0
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_reg_addr                              "0xB80192A0"
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_reg                                   0xB80192A0
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_inst_addr                             "0x00A5"
#define  set_VDTOP_DATA_LEVEL_STATISTICS_SET_1_reg(data)                         (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SET_1_reg)=data)
#define  get_VDTOP_DATA_LEVEL_STATISTICS_SET_1_reg                               (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SET_1_reg))
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_iir_up_speed_on_shift                 (31)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_data_level_diff_iir_en_shift          (30)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_statistic_data_level_diff_th_shift    (16)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_statistic_data_level_line_num_shift   (0)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_iir_up_speed_on_mask                  (0x80000000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_data_level_diff_iir_en_mask           (0x40000000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_statistic_data_level_diff_th_mask     (0x3FFF0000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_statistic_data_level_line_num_mask    (0x0000003F)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_iir_up_speed_on(data)                 (0x80000000&((data)<<31))
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_data_level_diff_iir_en(data)          (0x40000000&((data)<<30))
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_statistic_data_level_diff_th(data)    (0x3FFF0000&((data)<<16))
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_statistic_data_level_line_num(data)   (0x0000003F&(data))
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_get_iir_up_speed_on(data)             ((0x80000000&(data))>>31)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_get_data_level_diff_iir_en(data)      ((0x40000000&(data))>>30)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_get_statistic_data_level_diff_th(data) ((0x3FFF0000&(data))>>16)
#define  VDTOP_DATA_LEVEL_STATISTICS_SET_1_get_statistic_data_level_line_num(data) (0x0000003F&(data))

#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1                                       0x180192A4
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_reg_addr                               "0xB80192A4"
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_reg                                    0xB80192A4
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_inst_addr                              "0x00A6"
#define  set_VDTOP_DATA_LEVEL_STATISTICS_SEC1_reg(data)                          (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC1_reg)=data)
#define  get_VDTOP_DATA_LEVEL_STATISTICS_SEC1_reg                                (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC1_reg))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_statistic_data_level_ready_shift       (31)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_statistic_data_level_sec1_min_shift    (12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_statistic_data_level_sec1_max_shift    (0)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_statistic_data_level_ready_mask        (0x80000000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_statistic_data_level_sec1_min_mask     (0x00FFF000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_statistic_data_level_sec1_max_mask     (0x00000FFF)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_statistic_data_level_ready(data)       (0x80000000&((data)<<31))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_statistic_data_level_sec1_min(data)    (0x00FFF000&((data)<<12))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_statistic_data_level_sec1_max(data)    (0x00000FFF&(data))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_get_statistic_data_level_ready(data)   ((0x80000000&(data))>>31)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_get_statistic_data_level_sec1_min(data) ((0x00FFF000&(data))>>12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC1_get_statistic_data_level_sec1_max(data) (0x00000FFF&(data))

#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2                                       0x180192A8
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_reg_addr                               "0xB80192A8"
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_reg                                    0xB80192A8
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_inst_addr                              "0x00A7"
#define  set_VDTOP_DATA_LEVEL_STATISTICS_SEC2_reg(data)                          (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC2_reg)=data)
#define  get_VDTOP_DATA_LEVEL_STATISTICS_SEC2_reg                                (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC2_reg))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_statistic_data_level_sec2_min_shift    (12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_statistic_data_level_sec2_max_shift    (0)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_statistic_data_level_sec2_min_mask     (0x00FFF000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_statistic_data_level_sec2_max_mask     (0x00000FFF)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_statistic_data_level_sec2_min(data)    (0x00FFF000&((data)<<12))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_statistic_data_level_sec2_max(data)    (0x00000FFF&(data))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_get_statistic_data_level_sec2_min(data) ((0x00FFF000&(data))>>12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC2_get_statistic_data_level_sec2_max(data) (0x00000FFF&(data))

#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3                                       0x180192AC
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_reg_addr                               "0xB80192AC"
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_reg                                    0xB80192AC
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_inst_addr                              "0x00A8"
#define  set_VDTOP_DATA_LEVEL_STATISTICS_SEC3_reg(data)                          (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC3_reg)=data)
#define  get_VDTOP_DATA_LEVEL_STATISTICS_SEC3_reg                                (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC3_reg))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_statistic_data_level_sec3_min_shift    (12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_statistic_data_level_sec3_max_shift    (0)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_statistic_data_level_sec3_min_mask     (0x00FFF000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_statistic_data_level_sec3_max_mask     (0x00000FFF)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_statistic_data_level_sec3_min(data)    (0x00FFF000&((data)<<12))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_statistic_data_level_sec3_max(data)    (0x00000FFF&(data))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_get_statistic_data_level_sec3_min(data) ((0x00FFF000&(data))>>12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC3_get_statistic_data_level_sec3_max(data) (0x00000FFF&(data))

#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4                                       0x180192B0
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_reg_addr                               "0xB80192B0"
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_reg                                    0xB80192B0
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_inst_addr                              "0x00A9"
#define  set_VDTOP_DATA_LEVEL_STATISTICS_SEC4_reg(data)                          (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC4_reg)=data)
#define  get_VDTOP_DATA_LEVEL_STATISTICS_SEC4_reg                                (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC4_reg))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_statistic_data_level_sec4_min_shift    (12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_statistic_data_level_sec4_max_shift    (0)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_statistic_data_level_sec4_min_mask     (0x00FFF000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_statistic_data_level_sec4_max_mask     (0x00000FFF)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_statistic_data_level_sec4_min(data)    (0x00FFF000&((data)<<12))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_statistic_data_level_sec4_max(data)    (0x00000FFF&(data))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_get_statistic_data_level_sec4_min(data) ((0x00FFF000&(data))>>12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC4_get_statistic_data_level_sec4_max(data) (0x00000FFF&(data))

#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5                                       0x180192B4
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_reg_addr                               "0xB80192B4"
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_reg                                    0xB80192B4
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_inst_addr                              "0x00AA"
#define  set_VDTOP_DATA_LEVEL_STATISTICS_SEC5_reg(data)                          (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC5_reg)=data)
#define  get_VDTOP_DATA_LEVEL_STATISTICS_SEC5_reg                                (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC5_reg))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_statistic_data_level_sec5_min_shift    (12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_statistic_data_level_sec5_max_shift    (0)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_statistic_data_level_sec5_min_mask     (0x00FFF000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_statistic_data_level_sec5_max_mask     (0x00000FFF)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_statistic_data_level_sec5_min(data)    (0x00FFF000&((data)<<12))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_statistic_data_level_sec5_max(data)    (0x00000FFF&(data))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_get_statistic_data_level_sec5_min(data) ((0x00FFF000&(data))>>12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC5_get_statistic_data_level_sec5_max(data) (0x00000FFF&(data))

#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6                                       0x180192B8
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_reg_addr                               "0xB80192B8"
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_reg                                    0xB80192B8
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_inst_addr                              "0x00AB"
#define  set_VDTOP_DATA_LEVEL_STATISTICS_SEC6_reg(data)                          (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC6_reg)=data)
#define  get_VDTOP_DATA_LEVEL_STATISTICS_SEC6_reg                                (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC6_reg))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_statistic_data_level_sec6_min_shift    (12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_statistic_data_level_sec6_max_shift    (0)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_statistic_data_level_sec6_min_mask     (0x00FFF000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_statistic_data_level_sec6_max_mask     (0x00000FFF)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_statistic_data_level_sec6_min(data)    (0x00FFF000&((data)<<12))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_statistic_data_level_sec6_max(data)    (0x00000FFF&(data))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_get_statistic_data_level_sec6_min(data) ((0x00FFF000&(data))>>12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC6_get_statistic_data_level_sec6_max(data) (0x00000FFF&(data))

#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7                                       0x180192BC
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_reg_addr                               "0xB80192BC"
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_reg                                    0xB80192BC
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_inst_addr                              "0x00AC"
#define  set_VDTOP_DATA_LEVEL_STATISTICS_SEC7_reg(data)                          (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC7_reg)=data)
#define  get_VDTOP_DATA_LEVEL_STATISTICS_SEC7_reg                                (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC7_reg))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_statistic_data_level_sec7_min_shift    (12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_statistic_data_level_sec7_max_shift    (0)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_statistic_data_level_sec7_min_mask     (0x00FFF000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_statistic_data_level_sec7_max_mask     (0x00000FFF)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_statistic_data_level_sec7_min(data)    (0x00FFF000&((data)<<12))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_statistic_data_level_sec7_max(data)    (0x00000FFF&(data))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_get_statistic_data_level_sec7_min(data) ((0x00FFF000&(data))>>12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC7_get_statistic_data_level_sec7_max(data) (0x00000FFF&(data))

#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8                                       0x180192C0
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_reg_addr                               "0xB80192C0"
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_reg                                    0xB80192C0
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_inst_addr                              "0x00AD"
#define  set_VDTOP_DATA_LEVEL_STATISTICS_SEC8_reg(data)                          (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC8_reg)=data)
#define  get_VDTOP_DATA_LEVEL_STATISTICS_SEC8_reg                                (*((volatile unsigned int*)VDTOP_DATA_LEVEL_STATISTICS_SEC8_reg))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_statistic_data_level_sec8_min_shift    (12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_statistic_data_level_sec8_max_shift    (0)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_statistic_data_level_sec8_min_mask     (0x00FFF000)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_statistic_data_level_sec8_max_mask     (0x00000FFF)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_statistic_data_level_sec8_min(data)    (0x00FFF000&((data)<<12))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_statistic_data_level_sec8_max(data)    (0x00000FFF&(data))
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_get_statistic_data_level_sec8_min(data) ((0x00FFF000&(data))>>12)
#define  VDTOP_DATA_LEVEL_STATISTICS_SEC8_get_statistic_data_level_sec8_max(data) (0x00000FFF&(data))

#define  VDTOP_HLOCK_TIME_POLLING                                               0x180192D0
#define  VDTOP_HLOCK_TIME_POLLING_reg_addr                                       "0xB80192D0"
#define  VDTOP_HLOCK_TIME_POLLING_reg                                            0xB80192D0
#define  VDTOP_HLOCK_TIME_POLLING_inst_addr                                      "0x00AE"
#define  set_VDTOP_HLOCK_TIME_POLLING_reg(data)                                  (*((volatile unsigned int*)VDTOP_HLOCK_TIME_POLLING_reg)=data)
#define  get_VDTOP_HLOCK_TIME_POLLING_reg                                        (*((volatile unsigned int*)VDTOP_HLOCK_TIME_POLLING_reg))
#define  VDTOP_HLOCK_TIME_POLLING_hlock_time_shift                               (0)
#define  VDTOP_HLOCK_TIME_POLLING_hlock_time_mask                                (0x003FFFFF)
#define  VDTOP_HLOCK_TIME_POLLING_hlock_time(data)                               (0x003FFFFF&(data))
#define  VDTOP_HLOCK_TIME_POLLING_get_hlock_time(data)                           (0x003FFFFF&(data))

#define  VDTOP_VLOCK_TIME_POLLING                                               0x180192D4
#define  VDTOP_VLOCK_TIME_POLLING_reg_addr                                       "0xB80192D4"
#define  VDTOP_VLOCK_TIME_POLLING_reg                                            0xB80192D4
#define  VDTOP_VLOCK_TIME_POLLING_inst_addr                                      "0x00AF"
#define  set_VDTOP_VLOCK_TIME_POLLING_reg(data)                                  (*((volatile unsigned int*)VDTOP_VLOCK_TIME_POLLING_reg)=data)
#define  get_VDTOP_VLOCK_TIME_POLLING_reg                                        (*((volatile unsigned int*)VDTOP_VLOCK_TIME_POLLING_reg))
#define  VDTOP_VLOCK_TIME_POLLING_vlock_time_shift                               (0)
#define  VDTOP_VLOCK_TIME_POLLING_vlock_time_mask                                (0x003FFFFF)
#define  VDTOP_VLOCK_TIME_POLLING_vlock_time(data)                               (0x003FFFFF&(data))
#define  VDTOP_VLOCK_TIME_POLLING_get_vlock_time(data)                           (0x003FFFFF&(data))

#define  VDTOP_VSTATELOCK_TIME_POLLING                                          0x180192D8
#define  VDTOP_VSTATELOCK_TIME_POLLING_reg_addr                                  "0xB80192D8"
#define  VDTOP_VSTATELOCK_TIME_POLLING_reg                                       0xB80192D8
#define  VDTOP_VSTATELOCK_TIME_POLLING_inst_addr                                 "0x00B0"
#define  set_VDTOP_VSTATELOCK_TIME_POLLING_reg(data)                             (*((volatile unsigned int*)VDTOP_VSTATELOCK_TIME_POLLING_reg)=data)
#define  get_VDTOP_VSTATELOCK_TIME_POLLING_reg                                   (*((volatile unsigned int*)VDTOP_VSTATELOCK_TIME_POLLING_reg))
#define  VDTOP_VSTATELOCK_TIME_POLLING_vstate_eq3_time_shift                     (0)
#define  VDTOP_VSTATELOCK_TIME_POLLING_vstate_eq3_time_mask                      (0x003FFFFF)
#define  VDTOP_VSTATELOCK_TIME_POLLING_vstate_eq3_time(data)                     (0x003FFFFF&(data))
#define  VDTOP_VSTATELOCK_TIME_POLLING_get_vstate_eq3_time(data)                 (0x003FFFFF&(data))

#define  VDTOP_NO_SIGNAL_FALL_TIME_POLLING                                      0x180192DC
#define  VDTOP_NO_SIGNAL_FALL_TIME_POLLING_reg_addr                              "0xB80192DC"
#define  VDTOP_NO_SIGNAL_FALL_TIME_POLLING_reg                                   0xB80192DC
#define  VDTOP_NO_SIGNAL_FALL_TIME_POLLING_inst_addr                             "0x00B1"
#define  set_VDTOP_NO_SIGNAL_FALL_TIME_POLLING_reg(data)                         (*((volatile unsigned int*)VDTOP_NO_SIGNAL_FALL_TIME_POLLING_reg)=data)
#define  get_VDTOP_NO_SIGNAL_FALL_TIME_POLLING_reg                               (*((volatile unsigned int*)VDTOP_NO_SIGNAL_FALL_TIME_POLLING_reg))
#define  VDTOP_NO_SIGNAL_FALL_TIME_POLLING_no_signal_fall_time_shift             (0)
#define  VDTOP_NO_SIGNAL_FALL_TIME_POLLING_no_signal_fall_time_mask              (0x003FFFFF)
#define  VDTOP_NO_SIGNAL_FALL_TIME_POLLING_no_signal_fall_time(data)             (0x003FFFFF&(data))
#define  VDTOP_NO_SIGNAL_FALL_TIME_POLLING_get_no_signal_fall_time(data)         (0x003FFFFF&(data))

#define  VDTOP_VSYNC_CNTL                                                       0x18019300
#define  VDTOP_VSYNC_CNTL_reg_addr                                               "0xB8019300"
#define  VDTOP_VSYNC_CNTL_reg                                                    0xB8019300
#define  VDTOP_VSYNC_CNTL_inst_addr                                              "0x00B2"
#define  set_VDTOP_VSYNC_CNTL_reg(data)                                          (*((volatile unsigned int*)VDTOP_VSYNC_CNTL_reg)=data)
#define  get_VDTOP_VSYNC_CNTL_reg                                                (*((volatile unsigned int*)VDTOP_VSYNC_CNTL_reg))
#define  VDTOP_VSYNC_CNTL_old_vdetect_line_count_max_shift                       (16)
#define  VDTOP_VSYNC_CNTL_num_old_vdetect_stable_fields_shift                    (8)
#define  VDTOP_VSYNC_CNTL_vsync_cntl_shift                                       (6)
#define  VDTOP_VSYNC_CNTL_vsync_threshold_shift                                  (0)
#define  VDTOP_VSYNC_CNTL_old_vdetect_line_count_max_mask                        (0x03FF0000)
#define  VDTOP_VSYNC_CNTL_num_old_vdetect_stable_fields_mask                     (0x0000FF00)
#define  VDTOP_VSYNC_CNTL_vsync_cntl_mask                                        (0x000000C0)
#define  VDTOP_VSYNC_CNTL_vsync_threshold_mask                                   (0x0000003F)
#define  VDTOP_VSYNC_CNTL_old_vdetect_line_count_max(data)                       (0x03FF0000&((data)<<16))
#define  VDTOP_VSYNC_CNTL_num_old_vdetect_stable_fields(data)                    (0x0000FF00&((data)<<8))
#define  VDTOP_VSYNC_CNTL_vsync_cntl(data)                                       (0x000000C0&((data)<<6))
#define  VDTOP_VSYNC_CNTL_vsync_threshold(data)                                  (0x0000003F&(data))
#define  VDTOP_VSYNC_CNTL_get_old_vdetect_line_count_max(data)                   ((0x03FF0000&(data))>>16)
#define  VDTOP_VSYNC_CNTL_get_num_old_vdetect_stable_fields(data)                ((0x0000FF00&(data))>>8)
#define  VDTOP_VSYNC_CNTL_get_vsync_cntl(data)                                   ((0x000000C0&(data))>>6)
#define  VDTOP_VSYNC_CNTL_get_vsync_threshold(data)                              (0x0000003F&(data))

#define  VDTOP_VSYNC_TIME_CONST                                                 0x18019304
#define  VDTOP_VSYNC_TIME_CONST_reg_addr                                         "0xB8019304"
#define  VDTOP_VSYNC_TIME_CONST_reg                                              0xB8019304
#define  VDTOP_VSYNC_TIME_CONST_inst_addr                                        "0x00B3"
#define  set_VDTOP_VSYNC_TIME_CONST_reg(data)                                    (*((volatile unsigned int*)VDTOP_VSYNC_TIME_CONST_reg)=data)
#define  get_VDTOP_VSYNC_TIME_CONST_reg                                          (*((volatile unsigned int*)VDTOP_VSYNC_TIME_CONST_reg))
#define  VDTOP_VSYNC_TIME_CONST_num_new_vdetect_stable_fields_shift              (8)
#define  VDTOP_VSYNC_TIME_CONST_field_polarity_shift                             (7)
#define  VDTOP_VSYNC_TIME_CONST_flip_field_shift                                 (6)
#define  VDTOP_VSYNC_TIME_CONST_veven_delayed_shift                              (5)
#define  VDTOP_VSYNC_TIME_CONST_vodd_delayed_shift                               (4)
#define  VDTOP_VSYNC_TIME_CONST_field_detect_mode_shift                          (2)
#define  VDTOP_VSYNC_TIME_CONST_vloop_tc3_shift                                  (0)
#define  VDTOP_VSYNC_TIME_CONST_num_new_vdetect_stable_fields_mask               (0x0000FF00)
#define  VDTOP_VSYNC_TIME_CONST_field_polarity_mask                              (0x00000080)
#define  VDTOP_VSYNC_TIME_CONST_flip_field_mask                                  (0x00000040)
#define  VDTOP_VSYNC_TIME_CONST_veven_delayed_mask                               (0x00000020)
#define  VDTOP_VSYNC_TIME_CONST_vodd_delayed_mask                                (0x00000010)
#define  VDTOP_VSYNC_TIME_CONST_field_detect_mode_mask                           (0x0000000C)
#define  VDTOP_VSYNC_TIME_CONST_vloop_tc3_mask                                   (0x00000003)
#define  VDTOP_VSYNC_TIME_CONST_num_new_vdetect_stable_fields(data)              (0x0000FF00&((data)<<8))
#define  VDTOP_VSYNC_TIME_CONST_field_polarity(data)                             (0x00000080&((data)<<7))
#define  VDTOP_VSYNC_TIME_CONST_flip_field(data)                                 (0x00000040&((data)<<6))
#define  VDTOP_VSYNC_TIME_CONST_veven_delayed(data)                              (0x00000020&((data)<<5))
#define  VDTOP_VSYNC_TIME_CONST_vodd_delayed(data)                               (0x00000010&((data)<<4))
#define  VDTOP_VSYNC_TIME_CONST_field_detect_mode(data)                          (0x0000000C&((data)<<2))
#define  VDTOP_VSYNC_TIME_CONST_vloop_tc3(data)                                  (0x00000003&(data))
#define  VDTOP_VSYNC_TIME_CONST_get_num_new_vdetect_stable_fields(data)          ((0x0000FF00&(data))>>8)
#define  VDTOP_VSYNC_TIME_CONST_get_field_polarity(data)                         ((0x00000080&(data))>>7)
#define  VDTOP_VSYNC_TIME_CONST_get_flip_field(data)                             ((0x00000040&(data))>>6)
#define  VDTOP_VSYNC_TIME_CONST_get_veven_delayed(data)                          ((0x00000020&(data))>>5)
#define  VDTOP_VSYNC_TIME_CONST_get_vodd_delayed(data)                           ((0x00000010&(data))>>4)
#define  VDTOP_VSYNC_TIME_CONST_get_field_detect_mode(data)                      ((0x0000000C&(data))>>2)
#define  VDTOP_VSYNC_TIME_CONST_get_vloop_tc3(data)                              (0x00000003&(data))

#define  VDTOP_VSYNC_TIME_CONST2                                                0x18019308
#define  VDTOP_VSYNC_TIME_CONST2_reg_addr                                        "0xB8019308"
#define  VDTOP_VSYNC_TIME_CONST2_reg                                             0xB8019308
#define  VDTOP_VSYNC_TIME_CONST2_inst_addr                                       "0x00B4"
#define  set_VDTOP_VSYNC_TIME_CONST2_reg(data)                                   (*((volatile unsigned int*)VDTOP_VSYNC_TIME_CONST2_reg)=data)
#define  get_VDTOP_VSYNC_TIME_CONST2_reg                                         (*((volatile unsigned int*)VDTOP_VSYNC_TIME_CONST2_reg))
#define  VDTOP_VSYNC_TIME_CONST2_vloop_tc2_shift                                 (0)
#define  VDTOP_VSYNC_TIME_CONST2_vloop_tc2_mask                                  (0x0000007F)
#define  VDTOP_VSYNC_TIME_CONST2_vloop_tc2(data)                                 (0x0000007F&(data))
#define  VDTOP_VSYNC_TIME_CONST2_get_vloop_tc2(data)                             (0x0000007F&(data))

#define  VDTOP_VSYNC_TIME_CONST1                                                0x1801930C
#define  VDTOP_VSYNC_TIME_CONST1_reg_addr                                        "0xB801930C"
#define  VDTOP_VSYNC_TIME_CONST1_reg                                             0xB801930C
#define  VDTOP_VSYNC_TIME_CONST1_inst_addr                                       "0x00B5"
#define  set_VDTOP_VSYNC_TIME_CONST1_reg(data)                                   (*((volatile unsigned int*)VDTOP_VSYNC_TIME_CONST1_reg)=data)
#define  get_VDTOP_VSYNC_TIME_CONST1_reg                                         (*((volatile unsigned int*)VDTOP_VSYNC_TIME_CONST1_reg))
#define  VDTOP_VSYNC_TIME_CONST1_vloop_tc1_shift                                 (0)
#define  VDTOP_VSYNC_TIME_CONST1_vloop_tc1_mask                                  (0x000000FF)
#define  VDTOP_VSYNC_TIME_CONST1_vloop_tc1(data)                                 (0x000000FF&(data))
#define  VDTOP_VSYNC_TIME_CONST1_get_vloop_tc1(data)                             (0x000000FF&(data))

#define  VDTOP_SERRATION_TH                                                     0x18019310
#define  VDTOP_SERRATION_TH_reg_addr                                             "0xB8019310"
#define  VDTOP_SERRATION_TH_reg                                                  0xB8019310
#define  VDTOP_SERRATION_TH_inst_addr                                            "0x00B6"
#define  set_VDTOP_SERRATION_TH_reg(data)                                        (*((volatile unsigned int*)VDTOP_SERRATION_TH_reg)=data)
#define  get_VDTOP_SERRATION_TH_reg                                              (*((volatile unsigned int*)VDTOP_SERRATION_TH_reg))
#define  VDTOP_SERRATION_TH_serration_threshold_shift                            (0)
#define  VDTOP_SERRATION_TH_serration_threshold_mask                             (0x000000FF)
#define  VDTOP_SERRATION_TH_serration_threshold(data)                            (0x000000FF&(data))
#define  VDTOP_SERRATION_TH_get_serration_threshold(data)                        (0x000000FF&(data))

#define  VDTOP_NO_SIGNAL_DEC                                                    0x18019314
#define  VDTOP_NO_SIGNAL_DEC_reg_addr                                            "0xB8019314"
#define  VDTOP_NO_SIGNAL_DEC_reg                                                 0xB8019314
#define  VDTOP_NO_SIGNAL_DEC_inst_addr                                           "0x00B7"
#define  set_VDTOP_NO_SIGNAL_DEC_reg(data)                                       (*((volatile unsigned int*)VDTOP_NO_SIGNAL_DEC_reg)=data)
#define  get_VDTOP_NO_SIGNAL_DEC_reg                                             (*((volatile unsigned int*)VDTOP_NO_SIGNAL_DEC_reg))
#define  VDTOP_NO_SIGNAL_DEC_hvlock_field_cnt_shift                              (28)
#define  VDTOP_NO_SIGNAL_DEC_vlock_field_cnt_shift                               (24)
#define  VDTOP_NO_SIGNAL_DEC_hlock_field_cnt_shift                               (20)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_sel_shift                               (17)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_en_shift                                (16)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_1d_shift                                (12)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_2d_shift                                (8)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_2d_delta_shift                          (4)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_2d_delta_en_shift                       (3)
#define  VDTOP_NO_SIGNAL_DEC_no_signal_dec_shift                                 (0)
#define  VDTOP_NO_SIGNAL_DEC_hvlock_field_cnt_mask                               (0xF0000000)
#define  VDTOP_NO_SIGNAL_DEC_vlock_field_cnt_mask                                (0x0F000000)
#define  VDTOP_NO_SIGNAL_DEC_hlock_field_cnt_mask                                (0x00F00000)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_sel_mask                                (0x00020000)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_en_mask                                 (0x00010000)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_1d_mask                                 (0x0000F000)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_2d_mask                                 (0x00000F00)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_2d_delta_mask                           (0x000000F0)
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_2d_delta_en_mask                        (0x00000008)
#define  VDTOP_NO_SIGNAL_DEC_no_signal_dec_mask                                  (0x00000007)
#define  VDTOP_NO_SIGNAL_DEC_hvlock_field_cnt(data)                              (0xF0000000&((data)<<28))
#define  VDTOP_NO_SIGNAL_DEC_vlock_field_cnt(data)                               (0x0F000000&((data)<<24))
#define  VDTOP_NO_SIGNAL_DEC_hlock_field_cnt(data)                               (0x00F00000&((data)<<20))
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_sel(data)                               (0x00020000&((data)<<17))
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_en(data)                                (0x00010000&((data)<<16))
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_1d(data)                                (0x0000F000&((data)<<12))
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_2d(data)                                (0x00000F00&((data)<<8))
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_2d_delta(data)                          (0x000000F0&((data)<<4))
#define  VDTOP_NO_SIGNAL_DEC_vsync_delay_2d_delta_en(data)                       (0x00000008&((data)<<3))
#define  VDTOP_NO_SIGNAL_DEC_no_signal_dec(data)                                 (0x00000007&(data))
#define  VDTOP_NO_SIGNAL_DEC_get_hvlock_field_cnt(data)                          ((0xF0000000&(data))>>28)
#define  VDTOP_NO_SIGNAL_DEC_get_vlock_field_cnt(data)                           ((0x0F000000&(data))>>24)
#define  VDTOP_NO_SIGNAL_DEC_get_hlock_field_cnt(data)                           ((0x00F00000&(data))>>20)
#define  VDTOP_NO_SIGNAL_DEC_get_vsync_delay_sel(data)                           ((0x00020000&(data))>>17)
#define  VDTOP_NO_SIGNAL_DEC_get_vsync_delay_en(data)                            ((0x00010000&(data))>>16)
#define  VDTOP_NO_SIGNAL_DEC_get_vsync_delay_1d(data)                            ((0x0000F000&(data))>>12)
#define  VDTOP_NO_SIGNAL_DEC_get_vsync_delay_2d(data)                            ((0x00000F00&(data))>>8)
#define  VDTOP_NO_SIGNAL_DEC_get_vsync_delay_2d_delta(data)                      ((0x000000F0&(data))>>4)
#define  VDTOP_NO_SIGNAL_DEC_get_vsync_delay_2d_delta_en(data)                   ((0x00000008&(data))>>3)
#define  VDTOP_NO_SIGNAL_DEC_get_no_signal_dec(data)                             (0x00000007&(data))

#define  VDTOP_VACTIVE_START                                                    0x18019318
#define  VDTOP_VACTIVE_START_reg_addr                                            "0xB8019318"
#define  VDTOP_VACTIVE_START_reg                                                 0xB8019318
#define  VDTOP_VACTIVE_START_inst_addr                                           "0x00B8"
#define  set_VDTOP_VACTIVE_START_reg(data)                                       (*((volatile unsigned int*)VDTOP_VACTIVE_START_reg)=data)
#define  get_VDTOP_VACTIVE_START_reg                                             (*((volatile unsigned int*)VDTOP_VACTIVE_START_reg))
#define  VDTOP_VACTIVE_START_vactive_start_shift                                 (0)
#define  VDTOP_VACTIVE_START_vactive_start_mask                                  (0x000000FF)
#define  VDTOP_VACTIVE_START_vactive_start(data)                                 (0x000000FF&(data))
#define  VDTOP_VACTIVE_START_get_vactive_start(data)                             (0x000000FF&(data))

#define  VDTOP_VACTIVE_HEIGHT                                                   0x1801931C
#define  VDTOP_VACTIVE_HEIGHT_reg_addr                                           "0xB801931C"
#define  VDTOP_VACTIVE_HEIGHT_reg                                                0xB801931C
#define  VDTOP_VACTIVE_HEIGHT_inst_addr                                          "0x00B9"
#define  set_VDTOP_VACTIVE_HEIGHT_reg(data)                                      (*((volatile unsigned int*)VDTOP_VACTIVE_HEIGHT_reg)=data)
#define  get_VDTOP_VACTIVE_HEIGHT_reg                                            (*((volatile unsigned int*)VDTOP_VACTIVE_HEIGHT_reg))
#define  VDTOP_VACTIVE_HEIGHT_vactive_height_shift                               (0)
#define  VDTOP_VACTIVE_HEIGHT_vactive_height_mask                                (0x000000FF)
#define  VDTOP_VACTIVE_HEIGHT_vactive_height(data)                               (0x000000FF&(data))
#define  VDTOP_VACTIVE_HEIGHT_get_vactive_height(data)                           (0x000000FF&(data))

#define  VDTOP_VSYNC_H_MIN                                                      0x18019320
#define  VDTOP_VSYNC_H_MIN_reg_addr                                              "0xB8019320"
#define  VDTOP_VSYNC_H_MIN_reg                                                   0xB8019320
#define  VDTOP_VSYNC_H_MIN_inst_addr                                             "0x00BA"
#define  set_VDTOP_VSYNC_H_MIN_reg(data)                                         (*((volatile unsigned int*)VDTOP_VSYNC_H_MIN_reg)=data)
#define  get_VDTOP_VSYNC_H_MIN_reg                                               (*((volatile unsigned int*)VDTOP_VSYNC_H_MIN_reg))
#define  VDTOP_VSYNC_H_MIN_vsync_h_min_shift                                     (0)
#define  VDTOP_VSYNC_H_MIN_vsync_h_min_mask                                      (0x0000007F)
#define  VDTOP_VSYNC_H_MIN_vsync_h_min(data)                                     (0x0000007F&(data))
#define  VDTOP_VSYNC_H_MIN_get_vsync_h_min(data)                                 (0x0000007F&(data))

#define  VDTOP_VSYNC_H_MAX                                                      0x18019324
#define  VDTOP_VSYNC_H_MAX_reg_addr                                              "0xB8019324"
#define  VDTOP_VSYNC_H_MAX_reg                                                   0xB8019324
#define  VDTOP_VSYNC_H_MAX_inst_addr                                             "0x00BB"
#define  set_VDTOP_VSYNC_H_MAX_reg(data)                                         (*((volatile unsigned int*)VDTOP_VSYNC_H_MAX_reg)=data)
#define  get_VDTOP_VSYNC_H_MAX_reg                                               (*((volatile unsigned int*)VDTOP_VSYNC_H_MAX_reg))
#define  VDTOP_VSYNC_H_MAX_vsync_h_max_shift                                     (0)
#define  VDTOP_VSYNC_H_MAX_vsync_h_max_mask                                      (0x0000007F)
#define  VDTOP_VSYNC_H_MAX_vsync_h_max(data)                                     (0x0000007F&(data))
#define  VDTOP_VSYNC_H_MAX_get_vsync_h_max(data)                                 (0x0000007F&(data))

#define  VDTOP_VSYNC_VBI_MIN                                                    0x18019328
#define  VDTOP_VSYNC_VBI_MIN_reg_addr                                            "0xB8019328"
#define  VDTOP_VSYNC_VBI_MIN_reg                                                 0xB8019328
#define  VDTOP_VSYNC_VBI_MIN_inst_addr                                           "0x00BC"
#define  set_VDTOP_VSYNC_VBI_MIN_reg(data)                                       (*((volatile unsigned int*)VDTOP_VSYNC_VBI_MIN_reg)=data)
#define  get_VDTOP_VSYNC_VBI_MIN_reg                                             (*((volatile unsigned int*)VDTOP_VSYNC_VBI_MIN_reg))
#define  VDTOP_VSYNC_VBI_MIN_vsync_vbi_min_shift                                 (0)
#define  VDTOP_VSYNC_VBI_MIN_vsync_vbi_min_mask                                  (0x0000007F)
#define  VDTOP_VSYNC_VBI_MIN_vsync_vbi_min(data)                                 (0x0000007F&(data))
#define  VDTOP_VSYNC_VBI_MIN_get_vsync_vbi_min(data)                             (0x0000007F&(data))

#define  VDTOP_VSYNC_VBI_LOCKOUT_END                                            0x1801932C
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_reg_addr                                    "0xB801932C"
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_reg                                         0xB801932C
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_inst_addr                                   "0x00BD"
#define  set_VDTOP_VSYNC_VBI_LOCKOUT_END_reg(data)                               (*((volatile unsigned int*)VDTOP_VSYNC_VBI_LOCKOUT_END_reg)=data)
#define  get_VDTOP_VSYNC_VBI_LOCKOUT_END_reg                                     (*((volatile unsigned int*)VDTOP_VSYNC_VBI_LOCKOUT_END_reg))
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_vlock_wide_range_shift                      (7)
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_vsync_vbi_max_shift                         (0)
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_vlock_wide_range_mask                       (0x00000080)
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_vsync_vbi_max_mask                          (0x0000007F)
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_vlock_wide_range(data)                      (0x00000080&((data)<<7))
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_vsync_vbi_max(data)                         (0x0000007F&(data))
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_get_vlock_wide_range(data)                  ((0x00000080&(data))>>7)
#define  VDTOP_VSYNC_VBI_LOCKOUT_END_get_vsync_vbi_max(data)                     (0x0000007F&(data))

#define  VDTOP_MIDPT_CTRL                                                       0x18019330
#define  VDTOP_MIDPT_CTRL_reg_addr                                               "0xB8019330"
#define  VDTOP_MIDPT_CTRL_reg                                                    0xB8019330
#define  VDTOP_MIDPT_CTRL_inst_addr                                              "0x00BE"
#define  set_VDTOP_MIDPT_CTRL_reg(data)                                          (*((volatile unsigned int*)VDTOP_MIDPT_CTRL_reg)=data)
#define  get_VDTOP_MIDPT_CTRL_reg                                                (*((volatile unsigned int*)VDTOP_MIDPT_CTRL_reg))
#define  VDTOP_MIDPT_CTRL_vsync_ser_num_bigger_10_en_shift                       (16)
#define  VDTOP_MIDPT_CTRL_vsync_ser_num_max_def_shift                            (8)
#define  VDTOP_MIDPT_CTRL_syncmidpt_dc_rough_shift                               (7)
#define  VDTOP_MIDPT_CTRL_midpt_625_dc_th_en_shift                               (6)
#define  VDTOP_MIDPT_CTRL_midpt_rough_vdetect_en_shift                           (5)
#define  VDTOP_MIDPT_CTRL_vsync_625_midpt_en_shift                               (4)
#define  VDTOP_MIDPT_CTRL_syncmidpt_add_level_shift                              (0)
#define  VDTOP_MIDPT_CTRL_vsync_ser_num_bigger_10_en_mask                        (0x00010000)
#define  VDTOP_MIDPT_CTRL_vsync_ser_num_max_def_mask                             (0x00003F00)
#define  VDTOP_MIDPT_CTRL_syncmidpt_dc_rough_mask                                (0x00000080)
#define  VDTOP_MIDPT_CTRL_midpt_625_dc_th_en_mask                                (0x00000040)
#define  VDTOP_MIDPT_CTRL_midpt_rough_vdetect_en_mask                            (0x00000020)
#define  VDTOP_MIDPT_CTRL_vsync_625_midpt_en_mask                                (0x00000010)
#define  VDTOP_MIDPT_CTRL_syncmidpt_add_level_mask                               (0x00000003)
#define  VDTOP_MIDPT_CTRL_vsync_ser_num_bigger_10_en(data)                       (0x00010000&((data)<<16))
#define  VDTOP_MIDPT_CTRL_vsync_ser_num_max_def(data)                            (0x00003F00&((data)<<8))
#define  VDTOP_MIDPT_CTRL_syncmidpt_dc_rough(data)                               (0x00000080&((data)<<7))
#define  VDTOP_MIDPT_CTRL_midpt_625_dc_th_en(data)                               (0x00000040&((data)<<6))
#define  VDTOP_MIDPT_CTRL_midpt_rough_vdetect_en(data)                           (0x00000020&((data)<<5))
#define  VDTOP_MIDPT_CTRL_vsync_625_midpt_en(data)                               (0x00000010&((data)<<4))
#define  VDTOP_MIDPT_CTRL_syncmidpt_add_level(data)                              (0x00000003&(data))
#define  VDTOP_MIDPT_CTRL_get_vsync_ser_num_bigger_10_en(data)                   ((0x00010000&(data))>>16)
#define  VDTOP_MIDPT_CTRL_get_vsync_ser_num_max_def(data)                        ((0x00003F00&(data))>>8)
#define  VDTOP_MIDPT_CTRL_get_syncmidpt_dc_rough(data)                           ((0x00000080&(data))>>7)
#define  VDTOP_MIDPT_CTRL_get_midpt_625_dc_th_en(data)                           ((0x00000040&(data))>>6)
#define  VDTOP_MIDPT_CTRL_get_midpt_rough_vdetect_en(data)                       ((0x00000020&(data))>>5)
#define  VDTOP_MIDPT_CTRL_get_vsync_625_midpt_en(data)                           ((0x00000010&(data))>>4)
#define  VDTOP_MIDPT_CTRL_get_syncmidpt_add_level(data)                          (0x00000003&(data))

#define  VDTOP_MIDPT_FIX_ADD_VALUE                                              0x18019334
#define  VDTOP_MIDPT_FIX_ADD_VALUE_reg_addr                                      "0xB8019334"
#define  VDTOP_MIDPT_FIX_ADD_VALUE_reg                                           0xB8019334
#define  VDTOP_MIDPT_FIX_ADD_VALUE_inst_addr                                     "0x00BF"
#define  set_VDTOP_MIDPT_FIX_ADD_VALUE_reg(data)                                 (*((volatile unsigned int*)VDTOP_MIDPT_FIX_ADD_VALUE_reg)=data)
#define  get_VDTOP_MIDPT_FIX_ADD_VALUE_reg                                       (*((volatile unsigned int*)VDTOP_MIDPT_FIX_ADD_VALUE_reg))
#define  VDTOP_MIDPT_FIX_ADD_VALUE_syncmidpt_fix_add_value_shift                 (0)
#define  VDTOP_MIDPT_FIX_ADD_VALUE_syncmidpt_fix_add_value_mask                  (0x000000FF)
#define  VDTOP_MIDPT_FIX_ADD_VALUE_syncmidpt_fix_add_value(data)                 (0x000000FF&(data))
#define  VDTOP_MIDPT_FIX_ADD_VALUE_get_syncmidpt_fix_add_value(data)             (0x000000FF&(data))

#define  VDTOP_MIDPT_625_DC_TH                                                  0x18019338
#define  VDTOP_MIDPT_625_DC_TH_reg_addr                                          "0xB8019338"
#define  VDTOP_MIDPT_625_DC_TH_reg                                               0xB8019338
#define  VDTOP_MIDPT_625_DC_TH_inst_addr                                         "0x00C0"
#define  set_VDTOP_MIDPT_625_DC_TH_reg(data)                                     (*((volatile unsigned int*)VDTOP_MIDPT_625_DC_TH_reg)=data)
#define  get_VDTOP_MIDPT_625_DC_TH_reg                                           (*((volatile unsigned int*)VDTOP_MIDPT_625_DC_TH_reg))
#define  VDTOP_MIDPT_625_DC_TH_midpt_625_dc_th_shift                             (0)
#define  VDTOP_MIDPT_625_DC_TH_midpt_625_dc_th_mask                              (0x000000FF)
#define  VDTOP_MIDPT_625_DC_TH_midpt_625_dc_th(data)                             (0x000000FF&(data))
#define  VDTOP_MIDPT_625_DC_TH_get_midpt_625_dc_th(data)                         (0x000000FF&(data))

#define  VDTOP_SYNC_DC_OFFSET_TH1                                               0x1801933C
#define  VDTOP_SYNC_DC_OFFSET_TH1_reg_addr                                       "0xB801933C"
#define  VDTOP_SYNC_DC_OFFSET_TH1_reg                                            0xB801933C
#define  VDTOP_SYNC_DC_OFFSET_TH1_inst_addr                                      "0x00C1"
#define  set_VDTOP_SYNC_DC_OFFSET_TH1_reg(data)                                  (*((volatile unsigned int*)VDTOP_SYNC_DC_OFFSET_TH1_reg)=data)
#define  get_VDTOP_SYNC_DC_OFFSET_TH1_reg                                        (*((volatile unsigned int*)VDTOP_SYNC_DC_OFFSET_TH1_reg))
#define  VDTOP_SYNC_DC_OFFSET_TH1_sync_dc_offset_th_shift                        (0)
#define  VDTOP_SYNC_DC_OFFSET_TH1_sync_dc_offset_th_mask                         (0x00000FFF)
#define  VDTOP_SYNC_DC_OFFSET_TH1_sync_dc_offset_th(data)                        (0x00000FFF&(data))
#define  VDTOP_SYNC_DC_OFFSET_TH1_get_sync_dc_offset_th(data)                    (0x00000FFF&(data))

#define  VDTOP_SYNC_DC_OFFSET_TH                                                0x18019340
#define  VDTOP_SYNC_DC_OFFSET_TH_reg_addr                                        "0xB8019340"
#define  VDTOP_SYNC_DC_OFFSET_TH_reg                                             0xB8019340
#define  VDTOP_SYNC_DC_OFFSET_TH_inst_addr                                       "0x00C2"
#define  set_VDTOP_SYNC_DC_OFFSET_TH_reg(data)                                   (*((volatile unsigned int*)VDTOP_SYNC_DC_OFFSET_TH_reg)=data)
#define  get_VDTOP_SYNC_DC_OFFSET_TH_reg                                         (*((volatile unsigned int*)VDTOP_SYNC_DC_OFFSET_TH_reg))
#define  VDTOP_SYNC_DC_OFFSET_TH_sync_midpt_625_shift                            (0)
#define  VDTOP_SYNC_DC_OFFSET_TH_sync_midpt_625_mask                             (0x00000FFF)
#define  VDTOP_SYNC_DC_OFFSET_TH_sync_midpt_625(data)                            (0x00000FFF&(data))
#define  VDTOP_SYNC_DC_OFFSET_TH_get_sync_midpt_625(data)                        (0x00000FFF&(data))

#define  VDTOP_SYNC_MIDPT_H                                                     0x18019344
#define  VDTOP_SYNC_MIDPT_H_reg_addr                                             "0xB8019344"
#define  VDTOP_SYNC_MIDPT_H_reg                                                  0xB8019344
#define  VDTOP_SYNC_MIDPT_H_inst_addr                                            "0x00C3"
#define  set_VDTOP_SYNC_MIDPT_H_reg(data)                                        (*((volatile unsigned int*)VDTOP_SYNC_MIDPT_H_reg)=data)
#define  get_VDTOP_SYNC_MIDPT_H_reg                                              (*((volatile unsigned int*)VDTOP_SYNC_MIDPT_H_reg))
#define  VDTOP_SYNC_MIDPT_H_sync_midpt_h_shift                                   (0)
#define  VDTOP_SYNC_MIDPT_H_sync_midpt_h_mask                                    (0x00000FFF)
#define  VDTOP_SYNC_MIDPT_H_sync_midpt_h(data)                                   (0x00000FFF&(data))
#define  VDTOP_SYNC_MIDPT_H_get_sync_midpt_h(data)                               (0x00000FFF&(data))

#define  VDTOP_SYNC_MIDPT_V                                                     0x18019348
#define  VDTOP_SYNC_MIDPT_V_reg_addr                                             "0xB8019348"
#define  VDTOP_SYNC_MIDPT_V_reg                                                  0xB8019348
#define  VDTOP_SYNC_MIDPT_V_inst_addr                                            "0x00C4"
#define  set_VDTOP_SYNC_MIDPT_V_reg(data)                                        (*((volatile unsigned int*)VDTOP_SYNC_MIDPT_V_reg)=data)
#define  get_VDTOP_SYNC_MIDPT_V_reg                                              (*((volatile unsigned int*)VDTOP_SYNC_MIDPT_V_reg))
#define  VDTOP_SYNC_MIDPT_V_sync_midpt_v_shift                                   (0)
#define  VDTOP_SYNC_MIDPT_V_sync_midpt_v_mask                                    (0x00000FFF)
#define  VDTOP_SYNC_MIDPT_V_sync_midpt_v(data)                                   (0x00000FFF&(data))
#define  VDTOP_SYNC_MIDPT_V_get_sync_midpt_v(data)                               (0x00000FFF&(data))

#define  VDTOP_SYNC_MIDPT_V2                                                    0x1801934C
#define  VDTOP_SYNC_MIDPT_V2_reg_addr                                            "0xB801934C"
#define  VDTOP_SYNC_MIDPT_V2_reg                                                 0xB801934C
#define  VDTOP_SYNC_MIDPT_V2_inst_addr                                           "0x00C5"
#define  set_VDTOP_SYNC_MIDPT_V2_reg(data)                                       (*((volatile unsigned int*)VDTOP_SYNC_MIDPT_V2_reg)=data)
#define  get_VDTOP_SYNC_MIDPT_V2_reg                                             (*((volatile unsigned int*)VDTOP_SYNC_MIDPT_V2_reg))
#define  VDTOP_SYNC_MIDPT_V2_new_vdetect_feature_max_core_shift                  (20)
#define  VDTOP_SYNC_MIDPT_V2_raw_vdetect_max_sel_shift                           (16)
#define  VDTOP_SYNC_MIDPT_V2_no_signal_hpll_out_shift                            (12)
#define  VDTOP_SYNC_MIDPT_V2_no_signal_to_0_sel_shift                            (10)
#define  VDTOP_SYNC_MIDPT_V2_hpll_no_signal_sel_shift                            (9)
#define  VDTOP_SYNC_MIDPT_V2_vlock_sel_shift                                     (8)
#define  VDTOP_SYNC_MIDPT_V2_vdetect_pattern_sel_shift                           (6)
#define  VDTOP_SYNC_MIDPT_V2_adc_lpf_sel_shift                                   (1)
#define  VDTOP_SYNC_MIDPT_V2_new_vdetect_line_length_en_shift                    (0)
#define  VDTOP_SYNC_MIDPT_V2_new_vdetect_feature_max_core_mask                   (0x7FF00000)
#define  VDTOP_SYNC_MIDPT_V2_raw_vdetect_max_sel_mask                            (0x00030000)
#define  VDTOP_SYNC_MIDPT_V2_no_signal_hpll_out_mask                             (0x00001000)
#define  VDTOP_SYNC_MIDPT_V2_no_signal_to_0_sel_mask                             (0x00000400)
#define  VDTOP_SYNC_MIDPT_V2_hpll_no_signal_sel_mask                             (0x00000200)
#define  VDTOP_SYNC_MIDPT_V2_vlock_sel_mask                                      (0x00000100)
#define  VDTOP_SYNC_MIDPT_V2_vdetect_pattern_sel_mask                            (0x000000C0)
#define  VDTOP_SYNC_MIDPT_V2_adc_lpf_sel_mask                                    (0x0000000E)
#define  VDTOP_SYNC_MIDPT_V2_new_vdetect_line_length_en_mask                     (0x00000001)
#define  VDTOP_SYNC_MIDPT_V2_new_vdetect_feature_max_core(data)                  (0x7FF00000&((data)<<20))
#define  VDTOP_SYNC_MIDPT_V2_raw_vdetect_max_sel(data)                           (0x00030000&((data)<<16))
#define  VDTOP_SYNC_MIDPT_V2_no_signal_hpll_out(data)                            (0x00001000&((data)<<12))
#define  VDTOP_SYNC_MIDPT_V2_no_signal_to_0_sel(data)                            (0x00000400&((data)<<10))
#define  VDTOP_SYNC_MIDPT_V2_hpll_no_signal_sel(data)                            (0x00000200&((data)<<9))
#define  VDTOP_SYNC_MIDPT_V2_vlock_sel(data)                                     (0x00000100&((data)<<8))
#define  VDTOP_SYNC_MIDPT_V2_vdetect_pattern_sel(data)                           (0x000000C0&((data)<<6))
#define  VDTOP_SYNC_MIDPT_V2_adc_lpf_sel(data)                                   (0x0000000E&((data)<<1))
#define  VDTOP_SYNC_MIDPT_V2_new_vdetect_line_length_en(data)                    (0x00000001&(data))
#define  VDTOP_SYNC_MIDPT_V2_get_new_vdetect_feature_max_core(data)              ((0x7FF00000&(data))>>20)
#define  VDTOP_SYNC_MIDPT_V2_get_raw_vdetect_max_sel(data)                       ((0x00030000&(data))>>16)
#define  VDTOP_SYNC_MIDPT_V2_get_no_signal_hpll_out(data)                        ((0x00001000&(data))>>12)
#define  VDTOP_SYNC_MIDPT_V2_get_no_signal_to_0_sel(data)                        ((0x00000400&(data))>>10)
#define  VDTOP_SYNC_MIDPT_V2_get_hpll_no_signal_sel(data)                        ((0x00000200&(data))>>9)
#define  VDTOP_SYNC_MIDPT_V2_get_vlock_sel(data)                                 ((0x00000100&(data))>>8)
#define  VDTOP_SYNC_MIDPT_V2_get_vdetect_pattern_sel(data)                       ((0x000000C0&(data))>>6)
#define  VDTOP_SYNC_MIDPT_V2_get_adc_lpf_sel(data)                               ((0x0000000E&(data))>>1)
#define  VDTOP_SYNC_MIDPT_V2_get_new_vdetect_line_length_en(data)                (0x00000001&(data))

#define  VDTOP_ADC_27_LPF_COEF_1                                                0x18019350
#define  VDTOP_ADC_27_LPF_COEF_1_reg_addr                                        "0xB8019350"
#define  VDTOP_ADC_27_LPF_COEF_1_reg                                             0xB8019350
#define  VDTOP_ADC_27_LPF_COEF_1_inst_addr                                       "0x00C6"
#define  set_VDTOP_ADC_27_LPF_COEF_1_reg(data)                                   (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_1_reg)=data)
#define  get_VDTOP_ADC_27_LPF_COEF_1_reg                                         (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_1_reg))
#define  VDTOP_ADC_27_LPF_COEF_1_adc_lpf_coef1_shift                             (16)
#define  VDTOP_ADC_27_LPF_COEF_1_adc_lpf_coef2_shift                             (0)
#define  VDTOP_ADC_27_LPF_COEF_1_adc_lpf_coef1_mask                              (0x03FF0000)
#define  VDTOP_ADC_27_LPF_COEF_1_adc_lpf_coef2_mask                              (0x000003FF)
#define  VDTOP_ADC_27_LPF_COEF_1_adc_lpf_coef1(data)                             (0x03FF0000&((data)<<16))
#define  VDTOP_ADC_27_LPF_COEF_1_adc_lpf_coef2(data)                             (0x000003FF&(data))
#define  VDTOP_ADC_27_LPF_COEF_1_get_adc_lpf_coef1(data)                         ((0x03FF0000&(data))>>16)
#define  VDTOP_ADC_27_LPF_COEF_1_get_adc_lpf_coef2(data)                         (0x000003FF&(data))

#define  VDTOP_ADC_27_LPF_COEF_2                                                0x18019354
#define  VDTOP_ADC_27_LPF_COEF_2_reg_addr                                        "0xB8019354"
#define  VDTOP_ADC_27_LPF_COEF_2_reg                                             0xB8019354
#define  VDTOP_ADC_27_LPF_COEF_2_inst_addr                                       "0x00C7"
#define  set_VDTOP_ADC_27_LPF_COEF_2_reg(data)                                   (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_2_reg)=data)
#define  get_VDTOP_ADC_27_LPF_COEF_2_reg                                         (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_2_reg))
#define  VDTOP_ADC_27_LPF_COEF_2_adc_lpf_coef3_shift                             (16)
#define  VDTOP_ADC_27_LPF_COEF_2_adc_lpf_coef4_shift                             (0)
#define  VDTOP_ADC_27_LPF_COEF_2_adc_lpf_coef3_mask                              (0x03FF0000)
#define  VDTOP_ADC_27_LPF_COEF_2_adc_lpf_coef4_mask                              (0x000003FF)
#define  VDTOP_ADC_27_LPF_COEF_2_adc_lpf_coef3(data)                             (0x03FF0000&((data)<<16))
#define  VDTOP_ADC_27_LPF_COEF_2_adc_lpf_coef4(data)                             (0x000003FF&(data))
#define  VDTOP_ADC_27_LPF_COEF_2_get_adc_lpf_coef3(data)                         ((0x03FF0000&(data))>>16)
#define  VDTOP_ADC_27_LPF_COEF_2_get_adc_lpf_coef4(data)                         (0x000003FF&(data))

#define  VDTOP_ADC_27_LPF_COEF_3                                                0x18019358
#define  VDTOP_ADC_27_LPF_COEF_3_reg_addr                                        "0xB8019358"
#define  VDTOP_ADC_27_LPF_COEF_3_reg                                             0xB8019358
#define  VDTOP_ADC_27_LPF_COEF_3_inst_addr                                       "0x00C8"
#define  set_VDTOP_ADC_27_LPF_COEF_3_reg(data)                                   (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_3_reg)=data)
#define  get_VDTOP_ADC_27_LPF_COEF_3_reg                                         (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_3_reg))
#define  VDTOP_ADC_27_LPF_COEF_3_adc_lpf_coef5_shift                             (16)
#define  VDTOP_ADC_27_LPF_COEF_3_adc_lpf_coef6_shift                             (0)
#define  VDTOP_ADC_27_LPF_COEF_3_adc_lpf_coef5_mask                              (0x03FF0000)
#define  VDTOP_ADC_27_LPF_COEF_3_adc_lpf_coef6_mask                              (0x000003FF)
#define  VDTOP_ADC_27_LPF_COEF_3_adc_lpf_coef5(data)                             (0x03FF0000&((data)<<16))
#define  VDTOP_ADC_27_LPF_COEF_3_adc_lpf_coef6(data)                             (0x000003FF&(data))
#define  VDTOP_ADC_27_LPF_COEF_3_get_adc_lpf_coef5(data)                         ((0x03FF0000&(data))>>16)
#define  VDTOP_ADC_27_LPF_COEF_3_get_adc_lpf_coef6(data)                         (0x000003FF&(data))

#define  VDTOP_ADC_27_LPF_COEF_4                                                0x1801935C
#define  VDTOP_ADC_27_LPF_COEF_4_reg_addr                                        "0xB801935C"
#define  VDTOP_ADC_27_LPF_COEF_4_reg                                             0xB801935C
#define  VDTOP_ADC_27_LPF_COEF_4_inst_addr                                       "0x00C9"
#define  set_VDTOP_ADC_27_LPF_COEF_4_reg(data)                                   (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_4_reg)=data)
#define  get_VDTOP_ADC_27_LPF_COEF_4_reg                                         (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_4_reg))
#define  VDTOP_ADC_27_LPF_COEF_4_adc_lpf_coef7_shift                             (16)
#define  VDTOP_ADC_27_LPF_COEF_4_adc_lpf_coef8_shift                             (0)
#define  VDTOP_ADC_27_LPF_COEF_4_adc_lpf_coef7_mask                              (0x03FF0000)
#define  VDTOP_ADC_27_LPF_COEF_4_adc_lpf_coef8_mask                              (0x000003FF)
#define  VDTOP_ADC_27_LPF_COEF_4_adc_lpf_coef7(data)                             (0x03FF0000&((data)<<16))
#define  VDTOP_ADC_27_LPF_COEF_4_adc_lpf_coef8(data)                             (0x000003FF&(data))
#define  VDTOP_ADC_27_LPF_COEF_4_get_adc_lpf_coef7(data)                         ((0x03FF0000&(data))>>16)
#define  VDTOP_ADC_27_LPF_COEF_4_get_adc_lpf_coef8(data)                         (0x000003FF&(data))

#define  VDTOP_ADC_27_LPF_COEF_5                                                0x18019360
#define  VDTOP_ADC_27_LPF_COEF_5_reg_addr                                        "0xB8019360"
#define  VDTOP_ADC_27_LPF_COEF_5_reg                                             0xB8019360
#define  VDTOP_ADC_27_LPF_COEF_5_inst_addr                                       "0x00CA"
#define  set_VDTOP_ADC_27_LPF_COEF_5_reg(data)                                   (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_5_reg)=data)
#define  get_VDTOP_ADC_27_LPF_COEF_5_reg                                         (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_5_reg))
#define  VDTOP_ADC_27_LPF_COEF_5_adc_lpf_coef9_shift                             (16)
#define  VDTOP_ADC_27_LPF_COEF_5_adc_lpf_coefa_shift                             (0)
#define  VDTOP_ADC_27_LPF_COEF_5_adc_lpf_coef9_mask                              (0x03FF0000)
#define  VDTOP_ADC_27_LPF_COEF_5_adc_lpf_coefa_mask                              (0x000003FF)
#define  VDTOP_ADC_27_LPF_COEF_5_adc_lpf_coef9(data)                             (0x03FF0000&((data)<<16))
#define  VDTOP_ADC_27_LPF_COEF_5_adc_lpf_coefa(data)                             (0x000003FF&(data))
#define  VDTOP_ADC_27_LPF_COEF_5_get_adc_lpf_coef9(data)                         ((0x03FF0000&(data))>>16)
#define  VDTOP_ADC_27_LPF_COEF_5_get_adc_lpf_coefa(data)                         (0x000003FF&(data))

#define  VDTOP_ADC_27_LPF_COEF_6                                                0x18019364
#define  VDTOP_ADC_27_LPF_COEF_6_reg_addr                                        "0xB8019364"
#define  VDTOP_ADC_27_LPF_COEF_6_reg                                             0xB8019364
#define  VDTOP_ADC_27_LPF_COEF_6_inst_addr                                       "0x00CB"
#define  set_VDTOP_ADC_27_LPF_COEF_6_reg(data)                                   (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_6_reg)=data)
#define  get_VDTOP_ADC_27_LPF_COEF_6_reg                                         (*((volatile unsigned int*)VDTOP_ADC_27_LPF_COEF_6_reg))
#define  VDTOP_ADC_27_LPF_COEF_6_adc_lpf_coefb_shift                             (16)
#define  VDTOP_ADC_27_LPF_COEF_6_adc_lpf_coefc_shift                             (0)
#define  VDTOP_ADC_27_LPF_COEF_6_adc_lpf_coefb_mask                              (0x03FF0000)
#define  VDTOP_ADC_27_LPF_COEF_6_adc_lpf_coefc_mask                              (0x000003FF)
#define  VDTOP_ADC_27_LPF_COEF_6_adc_lpf_coefb(data)                             (0x03FF0000&((data)<<16))
#define  VDTOP_ADC_27_LPF_COEF_6_adc_lpf_coefc(data)                             (0x000003FF&(data))
#define  VDTOP_ADC_27_LPF_COEF_6_get_adc_lpf_coefb(data)                         ((0x03FF0000&(data))>>16)
#define  VDTOP_ADC_27_LPF_COEF_6_get_adc_lpf_coefc(data)                         (0x000003FF&(data))

#define  VDTOP_VDETECT_LINE_LENGHT                                              0x18019368
#define  VDTOP_VDETECT_LINE_LENGHT_reg_addr                                      "0xB8019368"
#define  VDTOP_VDETECT_LINE_LENGHT_reg                                           0xB8019368
#define  VDTOP_VDETECT_LINE_LENGHT_inst_addr                                     "0x00CC"
#define  set_VDTOP_VDETECT_LINE_LENGHT_reg(data)                                 (*((volatile unsigned int*)VDTOP_VDETECT_LINE_LENGHT_reg)=data)
#define  get_VDTOP_VDETECT_LINE_LENGHT_reg                                       (*((volatile unsigned int*)VDTOP_VDETECT_LINE_LENGHT_reg))
#define  VDTOP_VDETECT_LINE_LENGHT_new_vdetect_line_length_shift                 (0)
#define  VDTOP_VDETECT_LINE_LENGHT_new_vdetect_line_length_mask                  (0x000000FF)
#define  VDTOP_VDETECT_LINE_LENGHT_new_vdetect_line_length(data)                 (0x000000FF&(data))
#define  VDTOP_VDETECT_LINE_LENGHT_get_new_vdetect_line_length(data)             (0x000000FF&(data))

#define  VDTOP_VDETECT_WINDOW_CTRL                                              0x1801936C
#define  VDTOP_VDETECT_WINDOW_CTRL_reg_addr                                      "0xB801936C"
#define  VDTOP_VDETECT_WINDOW_CTRL_reg                                           0xB801936C
#define  VDTOP_VDETECT_WINDOW_CTRL_inst_addr                                     "0x00CD"
#define  set_VDTOP_VDETECT_WINDOW_CTRL_reg(data)                                 (*((volatile unsigned int*)VDTOP_VDETECT_WINDOW_CTRL_reg)=data)
#define  get_VDTOP_VDETECT_WINDOW_CTRL_reg                                       (*((volatile unsigned int*)VDTOP_VDETECT_WINDOW_CTRL_reg))
#define  VDTOP_VDETECT_WINDOW_CTRL_new_vdetect_force_en_shift                    (3)
#define  VDTOP_VDETECT_WINDOW_CTRL_no_vsync_flag_en_shift                        (2)
#define  VDTOP_VDETECT_WINDOW_CTRL_new_vdetect_window_en_shift                   (1)
#define  VDTOP_VDETECT_WINDOW_CTRL_new_vdetect_window_manu_en_shift              (0)
#define  VDTOP_VDETECT_WINDOW_CTRL_new_vdetect_force_en_mask                     (0x00000008)
#define  VDTOP_VDETECT_WINDOW_CTRL_no_vsync_flag_en_mask                         (0x00000004)
#define  VDTOP_VDETECT_WINDOW_CTRL_new_vdetect_window_en_mask                    (0x00000002)
#define  VDTOP_VDETECT_WINDOW_CTRL_new_vdetect_window_manu_en_mask               (0x00000001)
#define  VDTOP_VDETECT_WINDOW_CTRL_new_vdetect_force_en(data)                    (0x00000008&((data)<<3))
#define  VDTOP_VDETECT_WINDOW_CTRL_no_vsync_flag_en(data)                        (0x00000004&((data)<<2))
#define  VDTOP_VDETECT_WINDOW_CTRL_new_vdetect_window_en(data)                   (0x00000002&((data)<<1))
#define  VDTOP_VDETECT_WINDOW_CTRL_new_vdetect_window_manu_en(data)              (0x00000001&(data))
#define  VDTOP_VDETECT_WINDOW_CTRL_get_new_vdetect_force_en(data)                ((0x00000008&(data))>>3)
#define  VDTOP_VDETECT_WINDOW_CTRL_get_no_vsync_flag_en(data)                    ((0x00000004&(data))>>2)
#define  VDTOP_VDETECT_WINDOW_CTRL_get_new_vdetect_window_en(data)               ((0x00000002&(data))>>1)
#define  VDTOP_VDETECT_WINDOW_CTRL_get_new_vdetect_window_manu_en(data)          (0x00000001&(data))

#define  VDTOP_VDETECT_WINDOW_TH                                                0x18019370
#define  VDTOP_VDETECT_WINDOW_TH_reg_addr                                        "0xB8019370"
#define  VDTOP_VDETECT_WINDOW_TH_reg                                             0xB8019370
#define  VDTOP_VDETECT_WINDOW_TH_inst_addr                                       "0x00CE"
#define  set_VDTOP_VDETECT_WINDOW_TH_reg(data)                                   (*((volatile unsigned int*)VDTOP_VDETECT_WINDOW_TH_reg)=data)
#define  get_VDTOP_VDETECT_WINDOW_TH_reg                                         (*((volatile unsigned int*)VDTOP_VDETECT_WINDOW_TH_reg))
#define  VDTOP_VDETECT_WINDOW_TH_new_vdetect_window_shift                        (0)
#define  VDTOP_VDETECT_WINDOW_TH_new_vdetect_window_mask                         (0x00000FFF)
#define  VDTOP_VDETECT_WINDOW_TH_new_vdetect_window(data)                        (0x00000FFF&(data))
#define  VDTOP_VDETECT_WINDOW_TH_get_new_vdetect_window(data)                    (0x00000FFF&(data))

#define  VDTOP_NEW_VDETECT_CTRL                                                 0x18019374
#define  VDTOP_NEW_VDETECT_CTRL_reg_addr                                         "0xB8019374"
#define  VDTOP_NEW_VDETECT_CTRL_reg                                              0xB8019374
#define  VDTOP_NEW_VDETECT_CTRL_inst_addr                                        "0x00CF"
#define  set_VDTOP_NEW_VDETECT_CTRL_reg(data)                                    (*((volatile unsigned int*)VDTOP_NEW_VDETECT_CTRL_reg)=data)
#define  get_VDTOP_NEW_VDETECT_CTRL_reg                                          (*((volatile unsigned int*)VDTOP_NEW_VDETECT_CTRL_reg))
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_maxmin_data_rc_rate_shift            (28)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_maxmin_data_rc_en_shift              (24)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_max_limit_value_shift                (12)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_first_vsync_sel_shift                (10)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_max_limit_en_shift                   (9)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_coch_en_shift                        (8)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_en_shift                             (7)
#define  VDTOP_NEW_VDETECT_CTRL_gate_sel_shift                                   (6)
#define  VDTOP_NEW_VDETECT_CTRL_vloss_detect_en_shift                            (5)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_vcount_window_en_shift               (4)
#define  VDTOP_NEW_VDETECT_CTRL_new_vsync_offset_manul_mode_en_shift             (3)
#define  VDTOP_NEW_VDETECT_CTRL_new_vsync_offset_manul_shift                     (0)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_maxmin_data_rc_rate_mask             (0xF0000000)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_maxmin_data_rc_en_mask               (0x01000000)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_max_limit_value_mask                 (0x00FFF000)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_first_vsync_sel_mask                 (0x00000400)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_max_limit_en_mask                    (0x00000200)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_coch_en_mask                         (0x00000100)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_en_mask                              (0x00000080)
#define  VDTOP_NEW_VDETECT_CTRL_gate_sel_mask                                    (0x00000040)
#define  VDTOP_NEW_VDETECT_CTRL_vloss_detect_en_mask                             (0x00000020)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_vcount_window_en_mask                (0x00000010)
#define  VDTOP_NEW_VDETECT_CTRL_new_vsync_offset_manul_mode_en_mask              (0x00000008)
#define  VDTOP_NEW_VDETECT_CTRL_new_vsync_offset_manul_mask                      (0x00000007)
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_maxmin_data_rc_rate(data)            (0xF0000000&((data)<<28))
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_maxmin_data_rc_en(data)              (0x01000000&((data)<<24))
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_max_limit_value(data)                (0x00FFF000&((data)<<12))
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_first_vsync_sel(data)                (0x00000400&((data)<<10))
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_max_limit_en(data)                   (0x00000200&((data)<<9))
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_coch_en(data)                        (0x00000100&((data)<<8))
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_en(data)                             (0x00000080&((data)<<7))
#define  VDTOP_NEW_VDETECT_CTRL_gate_sel(data)                                   (0x00000040&((data)<<6))
#define  VDTOP_NEW_VDETECT_CTRL_vloss_detect_en(data)                            (0x00000020&((data)<<5))
#define  VDTOP_NEW_VDETECT_CTRL_new_vdetect_vcount_window_en(data)               (0x00000010&((data)<<4))
#define  VDTOP_NEW_VDETECT_CTRL_new_vsync_offset_manul_mode_en(data)             (0x00000008&((data)<<3))
#define  VDTOP_NEW_VDETECT_CTRL_new_vsync_offset_manul(data)                     (0x00000007&(data))
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vdetect_maxmin_data_rc_rate(data)        ((0xF0000000&(data))>>28)
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vdetect_maxmin_data_rc_en(data)          ((0x01000000&(data))>>24)
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vdetect_max_limit_value(data)            ((0x00FFF000&(data))>>12)
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vdetect_first_vsync_sel(data)            ((0x00000400&(data))>>10)
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vdetect_max_limit_en(data)               ((0x00000200&(data))>>9)
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vdetect_coch_en(data)                    ((0x00000100&(data))>>8)
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vdetect_en(data)                         ((0x00000080&(data))>>7)
#define  VDTOP_NEW_VDETECT_CTRL_get_gate_sel(data)                               ((0x00000040&(data))>>6)
#define  VDTOP_NEW_VDETECT_CTRL_get_vloss_detect_en(data)                        ((0x00000020&(data))>>5)
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vdetect_vcount_window_en(data)           ((0x00000010&(data))>>4)
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vsync_offset_manul_mode_en(data)         ((0x00000008&(data))>>3)
#define  VDTOP_NEW_VDETECT_CTRL_get_new_vsync_offset_manul(data)                 (0x00000007&(data))

#define  VDTOP_NEW_VDETECT_LOOP_TH2                                             0x18019378
#define  VDTOP_NEW_VDETECT_LOOP_TH2_reg_addr                                     "0xB8019378"
#define  VDTOP_NEW_VDETECT_LOOP_TH2_reg                                          0xB8019378
#define  VDTOP_NEW_VDETECT_LOOP_TH2_inst_addr                                    "0x00D0"
#define  set_VDTOP_NEW_VDETECT_LOOP_TH2_reg(data)                                (*((volatile unsigned int*)VDTOP_NEW_VDETECT_LOOP_TH2_reg)=data)
#define  get_VDTOP_NEW_VDETECT_LOOP_TH2_reg                                      (*((volatile unsigned int*)VDTOP_NEW_VDETECT_LOOP_TH2_reg))
#define  VDTOP_NEW_VDETECT_LOOP_TH2_old_hdetect_lpf_en_shift                     (7)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_new_vdetect_feature_th_manul_en_shift        (6)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_no_vsync_flag_shift                          (5)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_new_vloss_flag_shift                         (4)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_force_new_vdetect_fine_window_shift          (3)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_vsync_fine_window_state1_en_shift            (2)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_old_hdetect_lpf_en_mask                      (0x00000080)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_new_vdetect_feature_th_manul_en_mask         (0x00000040)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_no_vsync_flag_mask                           (0x00000020)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_new_vloss_flag_mask                          (0x00000010)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_force_new_vdetect_fine_window_mask           (0x00000008)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_vsync_fine_window_state1_en_mask             (0x00000004)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_old_hdetect_lpf_en(data)                     (0x00000080&((data)<<7))
#define  VDTOP_NEW_VDETECT_LOOP_TH2_new_vdetect_feature_th_manul_en(data)        (0x00000040&((data)<<6))
#define  VDTOP_NEW_VDETECT_LOOP_TH2_no_vsync_flag(data)                          (0x00000020&((data)<<5))
#define  VDTOP_NEW_VDETECT_LOOP_TH2_new_vloss_flag(data)                         (0x00000010&((data)<<4))
#define  VDTOP_NEW_VDETECT_LOOP_TH2_force_new_vdetect_fine_window(data)          (0x00000008&((data)<<3))
#define  VDTOP_NEW_VDETECT_LOOP_TH2_vsync_fine_window_state1_en(data)            (0x00000004&((data)<<2))
#define  VDTOP_NEW_VDETECT_LOOP_TH2_get_old_hdetect_lpf_en(data)                 ((0x00000080&(data))>>7)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_get_new_vdetect_feature_th_manul_en(data)    ((0x00000040&(data))>>6)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_get_no_vsync_flag(data)                      ((0x00000020&(data))>>5)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_get_new_vloss_flag(data)                     ((0x00000010&(data))>>4)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_get_force_new_vdetect_fine_window(data)      ((0x00000008&(data))>>3)
#define  VDTOP_NEW_VDETECT_LOOP_TH2_get_vsync_fine_window_state1_en(data)        ((0x00000004&(data))>>2)

#define  VDTOP_NEW_VDETECT_LOOP_TH1                                             0x1801937C
#define  VDTOP_NEW_VDETECT_LOOP_TH1_reg_addr                                     "0xB801937C"
#define  VDTOP_NEW_VDETECT_LOOP_TH1_reg                                          0xB801937C
#define  VDTOP_NEW_VDETECT_LOOP_TH1_inst_addr                                    "0x00D1"
#define  set_VDTOP_NEW_VDETECT_LOOP_TH1_reg(data)                                (*((volatile unsigned int*)VDTOP_NEW_VDETECT_LOOP_TH1_reg)=data)
#define  get_VDTOP_NEW_VDETECT_LOOP_TH1_reg                                      (*((volatile unsigned int*)VDTOP_NEW_VDETECT_LOOP_TH1_reg))
#define  VDTOP_NEW_VDETECT_LOOP_TH1_new_vdetect_loop_core_th_shift               (0)
#define  VDTOP_NEW_VDETECT_LOOP_TH1_new_vdetect_loop_core_th_mask                (0x000003FF)
#define  VDTOP_NEW_VDETECT_LOOP_TH1_new_vdetect_loop_core_th(data)               (0x000003FF&(data))
#define  VDTOP_NEW_VDETECT_LOOP_TH1_get_new_vdetect_loop_core_th(data)           (0x000003FF&(data))

#define  VDTOP_NEW_VDETECT_DIFF_OFFSET                                          0x18019380
#define  VDTOP_NEW_VDETECT_DIFF_OFFSET_reg_addr                                  "0xB8019380"
#define  VDTOP_NEW_VDETECT_DIFF_OFFSET_reg                                       0xB8019380
#define  VDTOP_NEW_VDETECT_DIFF_OFFSET_inst_addr                                 "0x00D2"
#define  set_VDTOP_NEW_VDETECT_DIFF_OFFSET_reg(data)                             (*((volatile unsigned int*)VDTOP_NEW_VDETECT_DIFF_OFFSET_reg)=data)
#define  get_VDTOP_NEW_VDETECT_DIFF_OFFSET_reg                                   (*((volatile unsigned int*)VDTOP_NEW_VDETECT_DIFF_OFFSET_reg))
#define  VDTOP_NEW_VDETECT_DIFF_OFFSET_new_vdetect_diff_offset_shift             (0)
#define  VDTOP_NEW_VDETECT_DIFF_OFFSET_new_vdetect_diff_offset_mask              (0x00000FFF)
#define  VDTOP_NEW_VDETECT_DIFF_OFFSET_new_vdetect_diff_offset(data)             (0x00000FFF&(data))
#define  VDTOP_NEW_VDETECT_DIFF_OFFSET_get_new_vdetect_diff_offset(data)         (0x00000FFF&(data))

#define  VDTOP_VSYNC_FINE_START                                                 0x18019384
#define  VDTOP_VSYNC_FINE_START_reg_addr                                         "0xB8019384"
#define  VDTOP_VSYNC_FINE_START_reg                                              0xB8019384
#define  VDTOP_VSYNC_FINE_START_inst_addr                                        "0x00D3"
#define  set_VDTOP_VSYNC_FINE_START_reg(data)                                    (*((volatile unsigned int*)VDTOP_VSYNC_FINE_START_reg)=data)
#define  get_VDTOP_VSYNC_FINE_START_reg                                          (*((volatile unsigned int*)VDTOP_VSYNC_FINE_START_reg))
#define  VDTOP_VSYNC_FINE_START_vsync_fine_start1_shift                          (20)
#define  VDTOP_VSYNC_FINE_START_new_vdetect_loss_max_shift                       (12)
#define  VDTOP_VSYNC_FINE_START_vsync_fine_start_shift                           (0)
#define  VDTOP_VSYNC_FINE_START_vsync_fine_start1_mask                           (0x3FF00000)
#define  VDTOP_VSYNC_FINE_START_new_vdetect_loss_max_mask                        (0x0003F000)
#define  VDTOP_VSYNC_FINE_START_vsync_fine_start_mask                            (0x000003FF)
#define  VDTOP_VSYNC_FINE_START_vsync_fine_start1(data)                          (0x3FF00000&((data)<<20))
#define  VDTOP_VSYNC_FINE_START_new_vdetect_loss_max(data)                       (0x0003F000&((data)<<12))
#define  VDTOP_VSYNC_FINE_START_vsync_fine_start(data)                           (0x000003FF&(data))
#define  VDTOP_VSYNC_FINE_START_get_vsync_fine_start1(data)                      ((0x3FF00000&(data))>>20)
#define  VDTOP_VSYNC_FINE_START_get_new_vdetect_loss_max(data)                   ((0x0003F000&(data))>>12)
#define  VDTOP_VSYNC_FINE_START_get_vsync_fine_start(data)                       (0x000003FF&(data))

#define  VDTOP_VSYNC_FINE_END                                                   0x18019388
#define  VDTOP_VSYNC_FINE_END_reg_addr                                           "0xB8019388"
#define  VDTOP_VSYNC_FINE_END_reg                                                0xB8019388
#define  VDTOP_VSYNC_FINE_END_inst_addr                                          "0x00D4"
#define  set_VDTOP_VSYNC_FINE_END_reg(data)                                      (*((volatile unsigned int*)VDTOP_VSYNC_FINE_END_reg)=data)
#define  get_VDTOP_VSYNC_FINE_END_reg                                            (*((volatile unsigned int*)VDTOP_VSYNC_FINE_END_reg))
#define  VDTOP_VSYNC_FINE_END_vsync_fine_end1_shift                              (20)
#define  VDTOP_VSYNC_FINE_END_new_vdetect_loss_up_shift                          (12)
#define  VDTOP_VSYNC_FINE_END_vsync_fine_end_shift                               (0)
#define  VDTOP_VSYNC_FINE_END_vsync_fine_end1_mask                               (0x3FF00000)
#define  VDTOP_VSYNC_FINE_END_new_vdetect_loss_up_mask                           (0x0003F000)
#define  VDTOP_VSYNC_FINE_END_vsync_fine_end_mask                                (0x000003FF)
#define  VDTOP_VSYNC_FINE_END_vsync_fine_end1(data)                              (0x3FF00000&((data)<<20))
#define  VDTOP_VSYNC_FINE_END_new_vdetect_loss_up(data)                          (0x0003F000&((data)<<12))
#define  VDTOP_VSYNC_FINE_END_vsync_fine_end(data)                               (0x000003FF&(data))
#define  VDTOP_VSYNC_FINE_END_get_vsync_fine_end1(data)                          ((0x3FF00000&(data))>>20)
#define  VDTOP_VSYNC_FINE_END_get_new_vdetect_loss_up(data)                      ((0x0003F000&(data))>>12)
#define  VDTOP_VSYNC_FINE_END_get_vsync_fine_end(data)                           (0x000003FF&(data))

#define  VDTOP_NO_VSYNC_TH                                                      0x1801938C
#define  VDTOP_NO_VSYNC_TH_reg_addr                                              "0xB801938C"
#define  VDTOP_NO_VSYNC_TH_reg                                                   0xB801938C
#define  VDTOP_NO_VSYNC_TH_inst_addr                                             "0x00D5"
#define  set_VDTOP_NO_VSYNC_TH_reg(data)                                         (*((volatile unsigned int*)VDTOP_NO_VSYNC_TH_reg)=data)
#define  get_VDTOP_NO_VSYNC_TH_reg                                               (*((volatile unsigned int*)VDTOP_NO_VSYNC_TH_reg))
#define  VDTOP_NO_VSYNC_TH_no_vsync_th_hi_shift                                  (4)
#define  VDTOP_NO_VSYNC_TH_no_vsync_th_lo_shift                                  (0)
#define  VDTOP_NO_VSYNC_TH_no_vsync_th_hi_mask                                   (0x000000F0)
#define  VDTOP_NO_VSYNC_TH_no_vsync_th_lo_mask                                   (0x0000000F)
#define  VDTOP_NO_VSYNC_TH_no_vsync_th_hi(data)                                  (0x000000F0&((data)<<4))
#define  VDTOP_NO_VSYNC_TH_no_vsync_th_lo(data)                                  (0x0000000F&(data))
#define  VDTOP_NO_VSYNC_TH_get_no_vsync_th_hi(data)                              ((0x000000F0&(data))>>4)
#define  VDTOP_NO_VSYNC_TH_get_no_vsync_th_lo(data)                              (0x0000000F&(data))

#define  VDTOP_NEW_VDETECT_VPHASE_TH                                            0x18019390
#define  VDTOP_NEW_VDETECT_VPHASE_TH_reg_addr                                    "0xB8019390"
#define  VDTOP_NEW_VDETECT_VPHASE_TH_reg                                         0xB8019390
#define  VDTOP_NEW_VDETECT_VPHASE_TH_inst_addr                                   "0x00D6"
#define  set_VDTOP_NEW_VDETECT_VPHASE_TH_reg(data)                               (*((volatile unsigned int*)VDTOP_NEW_VDETECT_VPHASE_TH_reg)=data)
#define  get_VDTOP_NEW_VDETECT_VPHASE_TH_reg                                     (*((volatile unsigned int*)VDTOP_NEW_VDETECT_VPHASE_TH_reg))
#define  VDTOP_NEW_VDETECT_VPHASE_TH_new_vdetect_loss_dn_shift                   (12)
#define  VDTOP_NEW_VDETECT_VPHASE_TH_new_vdetect_fine_vphase_th_shift            (0)
#define  VDTOP_NEW_VDETECT_VPHASE_TH_new_vdetect_loss_dn_mask                    (0x0003F000)
#define  VDTOP_NEW_VDETECT_VPHASE_TH_new_vdetect_fine_vphase_th_mask             (0x000003FF)
#define  VDTOP_NEW_VDETECT_VPHASE_TH_new_vdetect_loss_dn(data)                   (0x0003F000&((data)<<12))
#define  VDTOP_NEW_VDETECT_VPHASE_TH_new_vdetect_fine_vphase_th(data)            (0x000003FF&(data))
#define  VDTOP_NEW_VDETECT_VPHASE_TH_get_new_vdetect_loss_dn(data)               ((0x0003F000&(data))>>12)
#define  VDTOP_NEW_VDETECT_VPHASE_TH_get_new_vdetect_fine_vphase_th(data)        (0x000003FF&(data))

#define  VDTOP_NEW_VDETECT_TH1                                                  0x18019394
#define  VDTOP_NEW_VDETECT_TH1_reg_addr                                          "0xB8019394"
#define  VDTOP_NEW_VDETECT_TH1_reg                                               0xB8019394
#define  VDTOP_NEW_VDETECT_TH1_inst_addr                                         "0x00D7"
#define  set_VDTOP_NEW_VDETECT_TH1_reg(data)                                     (*((volatile unsigned int*)VDTOP_NEW_VDETECT_TH1_reg)=data)
#define  get_VDTOP_NEW_VDETECT_TH1_reg                                           (*((volatile unsigned int*)VDTOP_NEW_VDETECT_TH1_reg))
#define  VDTOP_NEW_VDETECT_TH1_new_vdetect_feature_th1_shift                     (0)
#define  VDTOP_NEW_VDETECT_TH1_new_vdetect_feature_th1_mask                      (0x000000FF)
#define  VDTOP_NEW_VDETECT_TH1_new_vdetect_feature_th1(data)                     (0x000000FF&(data))
#define  VDTOP_NEW_VDETECT_TH1_get_new_vdetect_feature_th1(data)                 (0x000000FF&(data))

#define  VDTOP_NEW_VDETECT_TH2                                                  0x18019398
#define  VDTOP_NEW_VDETECT_TH2_reg_addr                                          "0xB8019398"
#define  VDTOP_NEW_VDETECT_TH2_reg                                               0xB8019398
#define  VDTOP_NEW_VDETECT_TH2_inst_addr                                         "0x00D8"
#define  set_VDTOP_NEW_VDETECT_TH2_reg(data)                                     (*((volatile unsigned int*)VDTOP_NEW_VDETECT_TH2_reg)=data)
#define  get_VDTOP_NEW_VDETECT_TH2_reg                                           (*((volatile unsigned int*)VDTOP_NEW_VDETECT_TH2_reg))
#define  VDTOP_NEW_VDETECT_TH2_new_vdetect_feature_th2_shift                     (0)
#define  VDTOP_NEW_VDETECT_TH2_new_vdetect_feature_th2_mask                      (0x000000FF)
#define  VDTOP_NEW_VDETECT_TH2_new_vdetect_feature_th2(data)                     (0x000000FF&(data))
#define  VDTOP_NEW_VDETECT_TH2_get_new_vdetect_feature_th2(data)                 (0x000000FF&(data))

#define  VDTOP_NEW_VDETECT_TH3                                                  0x1801939C
#define  VDTOP_NEW_VDETECT_TH3_reg_addr                                          "0xB801939C"
#define  VDTOP_NEW_VDETECT_TH3_reg                                               0xB801939C
#define  VDTOP_NEW_VDETECT_TH3_inst_addr                                         "0x00D9"
#define  set_VDTOP_NEW_VDETECT_TH3_reg(data)                                     (*((volatile unsigned int*)VDTOP_NEW_VDETECT_TH3_reg)=data)
#define  get_VDTOP_NEW_VDETECT_TH3_reg                                           (*((volatile unsigned int*)VDTOP_NEW_VDETECT_TH3_reg))
#define  VDTOP_NEW_VDETECT_TH3_new_vdetect_feature_th3_shift                     (0)
#define  VDTOP_NEW_VDETECT_TH3_new_vdetect_feature_th3_mask                      (0x000000FF)
#define  VDTOP_NEW_VDETECT_TH3_new_vdetect_feature_th3(data)                     (0x000000FF&(data))
#define  VDTOP_NEW_VDETECT_TH3_get_new_vdetect_feature_th3(data)                 (0x000000FF&(data))

#define  VDTOP_NEW_VDETECT_TH4                                                  0x180193A0
#define  VDTOP_NEW_VDETECT_TH4_reg_addr                                          "0xB80193A0"
#define  VDTOP_NEW_VDETECT_TH4_reg                                               0xB80193A0
#define  VDTOP_NEW_VDETECT_TH4_inst_addr                                         "0x00DA"
#define  set_VDTOP_NEW_VDETECT_TH4_reg(data)                                     (*((volatile unsigned int*)VDTOP_NEW_VDETECT_TH4_reg)=data)
#define  get_VDTOP_NEW_VDETECT_TH4_reg                                           (*((volatile unsigned int*)VDTOP_NEW_VDETECT_TH4_reg))
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th7_shift                     (24)
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th6_shift                     (16)
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th5_shift                     (8)
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th4_shift                     (0)
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th7_mask                      (0xFF000000)
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th6_mask                      (0x00FF0000)
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th5_mask                      (0x0000FF00)
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th4_mask                      (0x000000FF)
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th7(data)                     (0xFF000000&((data)<<24))
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th6(data)                     (0x00FF0000&((data)<<16))
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th5(data)                     (0x0000FF00&((data)<<8))
#define  VDTOP_NEW_VDETECT_TH4_new_vdetect_feature_th4(data)                     (0x000000FF&(data))
#define  VDTOP_NEW_VDETECT_TH4_get_new_vdetect_feature_th7(data)                 ((0xFF000000&(data))>>24)
#define  VDTOP_NEW_VDETECT_TH4_get_new_vdetect_feature_th6(data)                 ((0x00FF0000&(data))>>16)
#define  VDTOP_NEW_VDETECT_TH4_get_new_vdetect_feature_th5(data)                 ((0x0000FF00&(data))>>8)
#define  VDTOP_NEW_VDETECT_TH4_get_new_vdetect_feature_th4(data)                 (0x000000FF&(data))

#define  VDTOP_VPLL_HW_RESET                                                    0x180193A4
#define  VDTOP_VPLL_HW_RESET_reg_addr                                            "0xB80193A4"
#define  VDTOP_VPLL_HW_RESET_reg                                                 0xB80193A4
#define  VDTOP_VPLL_HW_RESET_inst_addr                                           "0x00DB"
#define  set_VDTOP_VPLL_HW_RESET_reg(data)                                       (*((volatile unsigned int*)VDTOP_VPLL_HW_RESET_reg)=data)
#define  get_VDTOP_VPLL_HW_RESET_reg                                             (*((volatile unsigned int*)VDTOP_VPLL_HW_RESET_reg))
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_shift                                   (30)
#define  VDTOP_VPLL_HW_RESET_vphase_error_eq0_num_shift                          (24)
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_old_v_stable_en_shift                   (23)
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_new_v_stable_en_shift                   (22)
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_en_shift                                (21)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_time_after_reset_shift                (12)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_vstate_non_eq_3_shift                 (8)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_vstate_reset_to_0_shift               (7)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_vstate_leave_3_shift                  (6)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_time_shift                            (5)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_flag_625_change_shift                 (4)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_i_ctrl_replace_shift                  (3)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_old_en_shift                          (2)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_new_en_shift                          (1)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_function_en_shift                     (0)
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_mask                                    (0x40000000)
#define  VDTOP_VPLL_HW_RESET_vphase_error_eq0_num_mask                           (0x3F000000)
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_old_v_stable_en_mask                    (0x00800000)
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_new_v_stable_en_mask                    (0x00400000)
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_en_mask                                 (0x00200000)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_time_after_reset_mask                 (0x001FF000)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_vstate_non_eq_3_mask                  (0x00000100)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_vstate_reset_to_0_mask                (0x00000080)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_vstate_leave_3_mask                   (0x00000040)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_time_mask                             (0x00000020)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_flag_625_change_mask                  (0x00000010)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_i_ctrl_replace_mask                   (0x00000008)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_old_en_mask                           (0x00000004)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_new_en_mask                           (0x00000002)
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_function_en_mask                      (0x00000001)
#define  VDTOP_VPLL_HW_RESET_vstate_to_3(data)                                   (0x40000000&((data)<<30))
#define  VDTOP_VPLL_HW_RESET_vphase_error_eq0_num(data)                          (0x3F000000&((data)<<24))
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_old_v_stable_en(data)                   (0x00800000&((data)<<23))
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_new_v_stable_en(data)                   (0x00400000&((data)<<22))
#define  VDTOP_VPLL_HW_RESET_vstate_to_3_en(data)                                (0x00200000&((data)<<21))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_time_after_reset(data)                (0x001FF000&((data)<<12))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_vstate_non_eq_3(data)                 (0x00000100&((data)<<8))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_vstate_reset_to_0(data)               (0x00000080&((data)<<7))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_vstate_leave_3(data)                  (0x00000040&((data)<<6))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_time(data)                            (0x00000020&((data)<<5))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_flag_625_change(data)                 (0x00000010&((data)<<4))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_i_ctrl_replace(data)                  (0x00000008&((data)<<3))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_old_en(data)                          (0x00000004&((data)<<2))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_new_en(data)                          (0x00000002&((data)<<1))
#define  VDTOP_VPLL_HW_RESET_vpll_hw_reset_function_en(data)                     (0x00000001&(data))
#define  VDTOP_VPLL_HW_RESET_get_vstate_to_3(data)                               ((0x40000000&(data))>>30)
#define  VDTOP_VPLL_HW_RESET_get_vphase_error_eq0_num(data)                      ((0x3F000000&(data))>>24)
#define  VDTOP_VPLL_HW_RESET_get_vstate_to_3_old_v_stable_en(data)               ((0x00800000&(data))>>23)
#define  VDTOP_VPLL_HW_RESET_get_vstate_to_3_new_v_stable_en(data)               ((0x00400000&(data))>>22)
#define  VDTOP_VPLL_HW_RESET_get_vstate_to_3_en(data)                            ((0x00200000&(data))>>21)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_time_after_reset(data)            ((0x001FF000&(data))>>12)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_vstate_non_eq_3(data)             ((0x00000100&(data))>>8)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_vstate_reset_to_0(data)           ((0x00000080&(data))>>7)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_vstate_leave_3(data)              ((0x00000040&(data))>>6)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_time(data)                        ((0x00000020&(data))>>5)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_flag_625_change(data)             ((0x00000010&(data))>>4)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_i_ctrl_replace(data)              ((0x00000008&(data))>>3)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_old_en(data)                      ((0x00000004&(data))>>2)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_new_en(data)                      ((0x00000002&(data))>>1)
#define  VDTOP_VPLL_HW_RESET_get_vpll_hw_reset_function_en(data)                 (0x00000001&(data))

#define  VDTOP_VSTATE_CTRL0                                                     0x180193B0
#define  VDTOP_VSTATE_CTRL0_reg_addr                                             "0xB80193B0"
#define  VDTOP_VSTATE_CTRL0_reg                                                  0xB80193B0
#define  VDTOP_VSTATE_CTRL0_inst_addr                                            "0x00DC"
#define  set_VDTOP_VSTATE_CTRL0_reg(data)                                        (*((volatile unsigned int*)VDTOP_VSTATE_CTRL0_reg)=data)
#define  get_VDTOP_VSTATE_CTRL0_reg                                              (*((volatile unsigned int*)VDTOP_VSTATE_CTRL0_reg))
#define  VDTOP_VSTATE_CTRL0_vsync_refind_sel_shift                               (30)
#define  VDTOP_VSTATE_CTRL0_vsync_refind_toggle_shift                            (29)
#define  VDTOP_VSTATE_CTRL0_vstate0_direct_vsync_shift                           (28)
#define  VDTOP_VSTATE_CTRL0_vstate0_counter_num_shift                            (20)
#define  VDTOP_VSTATE_CTRL0_vsync_stable_en_shift                                (16)
#define  VDTOP_VSTATE_CTRL0_vstate_reset_shift                                   (14)
#define  VDTOP_VSTATE_CTRL0_vsync_refind_con_sel_shift                           (12)
#define  VDTOP_VSTATE_CTRL0_vsync_refind_shift                                   (8)
#define  VDTOP_VSTATE_CTRL0_vstate_2to3_er_shift                                 (0)
#define  VDTOP_VSTATE_CTRL0_vsync_refind_sel_mask                                (0xC0000000)
#define  VDTOP_VSTATE_CTRL0_vsync_refind_toggle_mask                             (0x20000000)
#define  VDTOP_VSTATE_CTRL0_vstate0_direct_vsync_mask                            (0x10000000)
#define  VDTOP_VSTATE_CTRL0_vstate0_counter_num_mask                             (0x0FF00000)
#define  VDTOP_VSTATE_CTRL0_vsync_stable_en_mask                                 (0x00010000)
#define  VDTOP_VSTATE_CTRL0_vstate_reset_mask                                    (0x0000C000)
#define  VDTOP_VSTATE_CTRL0_vsync_refind_con_sel_mask                            (0x00003000)
#define  VDTOP_VSTATE_CTRL0_vsync_refind_mask                                    (0x00000100)
#define  VDTOP_VSTATE_CTRL0_vstate_2to3_er_mask                                  (0x0000000F)
#define  VDTOP_VSTATE_CTRL0_vsync_refind_sel(data)                               (0xC0000000&((data)<<30))
#define  VDTOP_VSTATE_CTRL0_vsync_refind_toggle(data)                            (0x20000000&((data)<<29))
#define  VDTOP_VSTATE_CTRL0_vstate0_direct_vsync(data)                           (0x10000000&((data)<<28))
#define  VDTOP_VSTATE_CTRL0_vstate0_counter_num(data)                            (0x0FF00000&((data)<<20))
#define  VDTOP_VSTATE_CTRL0_vsync_stable_en(data)                                (0x00010000&((data)<<16))
#define  VDTOP_VSTATE_CTRL0_vstate_reset(data)                                   (0x0000C000&((data)<<14))
#define  VDTOP_VSTATE_CTRL0_vsync_refind_con_sel(data)                           (0x00003000&((data)<<12))
#define  VDTOP_VSTATE_CTRL0_vsync_refind(data)                                   (0x00000100&((data)<<8))
#define  VDTOP_VSTATE_CTRL0_vstate_2to3_er(data)                                 (0x0000000F&(data))
#define  VDTOP_VSTATE_CTRL0_get_vsync_refind_sel(data)                           ((0xC0000000&(data))>>30)
#define  VDTOP_VSTATE_CTRL0_get_vsync_refind_toggle(data)                        ((0x20000000&(data))>>29)
#define  VDTOP_VSTATE_CTRL0_get_vstate0_direct_vsync(data)                       ((0x10000000&(data))>>28)
#define  VDTOP_VSTATE_CTRL0_get_vstate0_counter_num(data)                        ((0x0FF00000&(data))>>20)
#define  VDTOP_VSTATE_CTRL0_get_vsync_stable_en(data)                            ((0x00010000&(data))>>16)
#define  VDTOP_VSTATE_CTRL0_get_vstate_reset(data)                               ((0x0000C000&(data))>>14)
#define  VDTOP_VSTATE_CTRL0_get_vsync_refind_con_sel(data)                       ((0x00003000&(data))>>12)
#define  VDTOP_VSTATE_CTRL0_get_vsync_refind(data)                               ((0x00000100&(data))>>8)
#define  VDTOP_VSTATE_CTRL0_get_vstate_2to3_er(data)                             (0x0000000F&(data))

#define  VDTOP_VSTATE_CTRL1                                                     0x180193B4
#define  VDTOP_VSTATE_CTRL1_reg_addr                                             "0xB80193B4"
#define  VDTOP_VSTATE_CTRL1_reg                                                  0xB80193B4
#define  VDTOP_VSTATE_CTRL1_inst_addr                                            "0x00DD"
#define  set_VDTOP_VSTATE_CTRL1_reg(data)                                        (*((volatile unsigned int*)VDTOP_VSTATE_CTRL1_reg)=data)
#define  get_VDTOP_VSTATE_CTRL1_reg                                              (*((volatile unsigned int*)VDTOP_VSTATE_CTRL1_reg))
#define  VDTOP_VSTATE_CTRL1_vstate_2to3_th_shift                                 (24)
#define  VDTOP_VSTATE_CTRL1_vstate_new2to3_en_shift                              (23)
#define  VDTOP_VSTATE_CTRL1_hsync_refind_min_shift                               (16)
#define  VDTOP_VSTATE_CTRL1_vstate1_err_sel_shift                                (15)
#define  VDTOP_VSTATE_CTRL1_hsync_refind_max_shift                               (8)
#define  VDTOP_VSTATE_CTRL1_vstate_1to2_er_shift                                 (4)
#define  VDTOP_VSTATE_CTRL1_vstate_back1_er_shift                                (0)
#define  VDTOP_VSTATE_CTRL1_vstate_2to3_th_mask                                  (0xFF000000)
#define  VDTOP_VSTATE_CTRL1_vstate_new2to3_en_mask                               (0x00800000)
#define  VDTOP_VSTATE_CTRL1_hsync_refind_min_mask                                (0x007F0000)
#define  VDTOP_VSTATE_CTRL1_vstate1_err_sel_mask                                 (0x00008000)
#define  VDTOP_VSTATE_CTRL1_hsync_refind_max_mask                                (0x00007F00)
#define  VDTOP_VSTATE_CTRL1_vstate_1to2_er_mask                                  (0x000000F0)
#define  VDTOP_VSTATE_CTRL1_vstate_back1_er_mask                                 (0x0000000F)
#define  VDTOP_VSTATE_CTRL1_vstate_2to3_th(data)                                 (0xFF000000&((data)<<24))
#define  VDTOP_VSTATE_CTRL1_vstate_new2to3_en(data)                              (0x00800000&((data)<<23))
#define  VDTOP_VSTATE_CTRL1_hsync_refind_min(data)                               (0x007F0000&((data)<<16))
#define  VDTOP_VSTATE_CTRL1_vstate1_err_sel(data)                                (0x00008000&((data)<<15))
#define  VDTOP_VSTATE_CTRL1_hsync_refind_max(data)                               (0x00007F00&((data)<<8))
#define  VDTOP_VSTATE_CTRL1_vstate_1to2_er(data)                                 (0x000000F0&((data)<<4))
#define  VDTOP_VSTATE_CTRL1_vstate_back1_er(data)                                (0x0000000F&(data))
#define  VDTOP_VSTATE_CTRL1_get_vstate_2to3_th(data)                             ((0xFF000000&(data))>>24)
#define  VDTOP_VSTATE_CTRL1_get_vstate_new2to3_en(data)                          ((0x00800000&(data))>>23)
#define  VDTOP_VSTATE_CTRL1_get_hsync_refind_min(data)                           ((0x007F0000&(data))>>16)
#define  VDTOP_VSTATE_CTRL1_get_vstate1_err_sel(data)                            ((0x00008000&(data))>>15)
#define  VDTOP_VSTATE_CTRL1_get_hsync_refind_max(data)                           ((0x00007F00&(data))>>8)
#define  VDTOP_VSTATE_CTRL1_get_vstate_1to2_er(data)                             ((0x000000F0&(data))>>4)
#define  VDTOP_VSTATE_CTRL1_get_vstate_back1_er(data)                            (0x0000000F&(data))

#define  VDTOP_VSTATE_CTRL2                                                     0x180193B8
#define  VDTOP_VSTATE_CTRL2_reg_addr                                             "0xB80193B8"
#define  VDTOP_VSTATE_CTRL2_reg                                                  0xB80193B8
#define  VDTOP_VSTATE_CTRL2_inst_addr                                            "0x00DE"
#define  set_VDTOP_VSTATE_CTRL2_reg(data)                                        (*((volatile unsigned int*)VDTOP_VSTATE_CTRL2_reg)=data)
#define  get_VDTOP_VSTATE_CTRL2_reg                                              (*((volatile unsigned int*)VDTOP_VSTATE_CTRL2_reg))
#define  VDTOP_VSTATE_CTRL2_hsync_reset_for_vsync_shift                          (20)
#define  VDTOP_VSTATE_CTRL2_hsync_reset_for_data_shift                           (8)
#define  VDTOP_VSTATE_CTRL2_vstate_counter_num_shift                             (0)
#define  VDTOP_VSTATE_CTRL2_hsync_reset_for_vsync_mask                           (0x3FF00000)
#define  VDTOP_VSTATE_CTRL2_hsync_reset_for_data_mask                            (0x0003FF00)
#define  VDTOP_VSTATE_CTRL2_vstate_counter_num_mask                              (0x000000FF)
#define  VDTOP_VSTATE_CTRL2_hsync_reset_for_vsync(data)                          (0x3FF00000&((data)<<20))
#define  VDTOP_VSTATE_CTRL2_hsync_reset_for_data(data)                           (0x0003FF00&((data)<<8))
#define  VDTOP_VSTATE_CTRL2_vstate_counter_num(data)                             (0x000000FF&(data))
#define  VDTOP_VSTATE_CTRL2_get_hsync_reset_for_vsync(data)                      ((0x3FF00000&(data))>>20)
#define  VDTOP_VSTATE_CTRL2_get_hsync_reset_for_data(data)                       ((0x0003FF00&(data))>>8)
#define  VDTOP_VSTATE_CTRL2_get_vstate_counter_num(data)                         (0x000000FF&(data))

#define  VDTOP_VSTATE_CTRL3                                                     0x180193BC
#define  VDTOP_VSTATE_CTRL3_reg_addr                                             "0xB80193BC"
#define  VDTOP_VSTATE_CTRL3_reg                                                  0xB80193BC
#define  VDTOP_VSTATE_CTRL3_inst_addr                                            "0x00DF"
#define  set_VDTOP_VSTATE_CTRL3_reg(data)                                        (*((volatile unsigned int*)VDTOP_VSTATE_CTRL3_reg)=data)
#define  get_VDTOP_VSTATE_CTRL3_reg                                              (*((volatile unsigned int*)VDTOP_VSTATE_CTRL3_reg))
#define  VDTOP_VSTATE_CTRL3_vphase_error_window_shift                            (24)
#define  VDTOP_VSTATE_CTRL3_vstate3_err_adjust_en_shift                          (20)
#define  VDTOP_VSTATE_CTRL3_vstate3_err_adjust_th_shift                          (16)
#define  VDTOP_VSTATE_CTRL3_vsync_vertical_sum_num_shift                         (8)
#define  VDTOP_VSTATE_CTRL3_vstate_back_to_0_at_625_change_shift                 (6)
#define  VDTOP_VSTATE_CTRL3_vstate_status_shift                                  (4)
#define  VDTOP_VSTATE_CTRL3_vstate_sw_en_shift                                   (3)
#define  VDTOP_VSTATE_CTRL3_vstate_sw_shift                                      (1)
#define  VDTOP_VSTATE_CTRL3_vcr_back_en_shift                                    (0)
#define  VDTOP_VSTATE_CTRL3_vphase_error_window_mask                             (0xFF000000)
#define  VDTOP_VSTATE_CTRL3_vstate3_err_adjust_en_mask                           (0x00100000)
#define  VDTOP_VSTATE_CTRL3_vstate3_err_adjust_th_mask                           (0x000F0000)
#define  VDTOP_VSTATE_CTRL3_vsync_vertical_sum_num_mask                          (0x00001F00)
#define  VDTOP_VSTATE_CTRL3_vstate_back_to_0_at_625_change_mask                  (0x00000040)
#define  VDTOP_VSTATE_CTRL3_vstate_status_mask                                   (0x00000030)
#define  VDTOP_VSTATE_CTRL3_vstate_sw_en_mask                                    (0x00000008)
#define  VDTOP_VSTATE_CTRL3_vstate_sw_mask                                       (0x00000006)
#define  VDTOP_VSTATE_CTRL3_vcr_back_en_mask                                     (0x00000001)
#define  VDTOP_VSTATE_CTRL3_vphase_error_window(data)                            (0xFF000000&((data)<<24))
#define  VDTOP_VSTATE_CTRL3_vstate3_err_adjust_en(data)                          (0x00100000&((data)<<20))
#define  VDTOP_VSTATE_CTRL3_vstate3_err_adjust_th(data)                          (0x000F0000&((data)<<16))
#define  VDTOP_VSTATE_CTRL3_vsync_vertical_sum_num(data)                         (0x00001F00&((data)<<8))
#define  VDTOP_VSTATE_CTRL3_vstate_back_to_0_at_625_change(data)                 (0x00000040&((data)<<6))
#define  VDTOP_VSTATE_CTRL3_vstate_status(data)                                  (0x00000030&((data)<<4))
#define  VDTOP_VSTATE_CTRL3_vstate_sw_en(data)                                   (0x00000008&((data)<<3))
#define  VDTOP_VSTATE_CTRL3_vstate_sw(data)                                      (0x00000006&((data)<<1))
#define  VDTOP_VSTATE_CTRL3_vcr_back_en(data)                                    (0x00000001&(data))
#define  VDTOP_VSTATE_CTRL3_get_vphase_error_window(data)                        ((0xFF000000&(data))>>24)
#define  VDTOP_VSTATE_CTRL3_get_vstate3_err_adjust_en(data)                      ((0x00100000&(data))>>20)
#define  VDTOP_VSTATE_CTRL3_get_vstate3_err_adjust_th(data)                      ((0x000F0000&(data))>>16)
#define  VDTOP_VSTATE_CTRL3_get_vsync_vertical_sum_num(data)                     ((0x00001F00&(data))>>8)
#define  VDTOP_VSTATE_CTRL3_get_vstate_back_to_0_at_625_change(data)             ((0x00000040&(data))>>6)
#define  VDTOP_VSTATE_CTRL3_get_vstate_status(data)                              ((0x00000030&(data))>>4)
#define  VDTOP_VSTATE_CTRL3_get_vstate_sw_en(data)                               ((0x00000008&(data))>>3)
#define  VDTOP_VSTATE_CTRL3_get_vstate_sw(data)                                  ((0x00000006&(data))>>1)
#define  VDTOP_VSTATE_CTRL3_get_vcr_back_en(data)                                (0x00000001&(data))

#define  VDTOP_VLOOP0_TC1                                                       0x180193C0
#define  VDTOP_VLOOP0_TC1_reg_addr                                               "0xB80193C0"
#define  VDTOP_VLOOP0_TC1_reg                                                    0xB80193C0
#define  VDTOP_VLOOP0_TC1_inst_addr                                              "0x00E0"
#define  set_VDTOP_VLOOP0_TC1_reg(data)                                          (*((volatile unsigned int*)VDTOP_VLOOP0_TC1_reg)=data)
#define  get_VDTOP_VLOOP0_TC1_reg                                                (*((volatile unsigned int*)VDTOP_VLOOP0_TC1_reg))
#define  VDTOP_VLOOP0_TC1_vstate3_counter_num_shift                              (8)
#define  VDTOP_VLOOP0_TC1_vloop0_tc1_shift                                       (0)
#define  VDTOP_VLOOP0_TC1_vstate3_counter_num_mask                               (0x0000FF00)
#define  VDTOP_VLOOP0_TC1_vloop0_tc1_mask                                        (0x000000FF)
#define  VDTOP_VLOOP0_TC1_vstate3_counter_num(data)                              (0x0000FF00&((data)<<8))
#define  VDTOP_VLOOP0_TC1_vloop0_tc1(data)                                       (0x000000FF&(data))
#define  VDTOP_VLOOP0_TC1_get_vstate3_counter_num(data)                          ((0x0000FF00&(data))>>8)
#define  VDTOP_VLOOP0_TC1_get_vloop0_tc1(data)                                   (0x000000FF&(data))

#define  VDTOP_VLOOP0_TC2                                                       0x180193C4
#define  VDTOP_VLOOP0_TC2_reg_addr                                               "0xB80193C4"
#define  VDTOP_VLOOP0_TC2_reg                                                    0xB80193C4
#define  VDTOP_VLOOP0_TC2_inst_addr                                              "0x00E1"
#define  set_VDTOP_VLOOP0_TC2_reg(data)                                          (*((volatile unsigned int*)VDTOP_VLOOP0_TC2_reg)=data)
#define  get_VDTOP_VLOOP0_TC2_reg                                                (*((volatile unsigned int*)VDTOP_VLOOP0_TC2_reg))
#define  VDTOP_VLOOP0_TC2_vloop0_tc2_shift                                       (0)
#define  VDTOP_VLOOP0_TC2_vloop0_tc2_mask                                        (0x0000007F)
#define  VDTOP_VLOOP0_TC2_vloop0_tc2(data)                                       (0x0000007F&(data))
#define  VDTOP_VLOOP0_TC2_get_vloop0_tc2(data)                                   (0x0000007F&(data))

#define  VDTOP_VLOOP2_TC1                                                       0x180193C8
#define  VDTOP_VLOOP2_TC1_reg_addr                                               "0xB80193C8"
#define  VDTOP_VLOOP2_TC1_reg                                                    0xB80193C8
#define  VDTOP_VLOOP2_TC1_inst_addr                                              "0x00E2"
#define  set_VDTOP_VLOOP2_TC1_reg(data)                                          (*((volatile unsigned int*)VDTOP_VLOOP2_TC1_reg)=data)
#define  get_VDTOP_VLOOP2_TC1_reg                                                (*((volatile unsigned int*)VDTOP_VLOOP2_TC1_reg))
#define  VDTOP_VLOOP2_TC1_vloop2_tc1_shift                                       (0)
#define  VDTOP_VLOOP2_TC1_vloop2_tc1_mask                                        (0x000000FF)
#define  VDTOP_VLOOP2_TC1_vloop2_tc1(data)                                       (0x000000FF&(data))
#define  VDTOP_VLOOP2_TC1_get_vloop2_tc1(data)                                   (0x000000FF&(data))

#define  VDTOP_VLOOP2_TC2                                                       0x180193CC
#define  VDTOP_VLOOP2_TC2_reg_addr                                               "0xB80193CC"
#define  VDTOP_VLOOP2_TC2_reg                                                    0xB80193CC
#define  VDTOP_VLOOP2_TC2_inst_addr                                              "0x00E3"
#define  set_VDTOP_VLOOP2_TC2_reg(data)                                          (*((volatile unsigned int*)VDTOP_VLOOP2_TC2_reg)=data)
#define  get_VDTOP_VLOOP2_TC2_reg                                                (*((volatile unsigned int*)VDTOP_VLOOP2_TC2_reg))
#define  VDTOP_VLOOP2_TC2_vloop2_tc2_shift                                       (0)
#define  VDTOP_VLOOP2_TC2_vloop2_tc2_mask                                        (0x0000007F)
#define  VDTOP_VLOOP2_TC2_vloop2_tc2(data)                                       (0x0000007F&(data))
#define  VDTOP_VLOOP2_TC2_get_vloop2_tc2(data)                                   (0x0000007F&(data))

#define  VDTOP_VLOOP3_TC1                                                       0x180193D0
#define  VDTOP_VLOOP3_TC1_reg_addr                                               "0xB80193D0"
#define  VDTOP_VLOOP3_TC1_reg                                                    0xB80193D0
#define  VDTOP_VLOOP3_TC1_inst_addr                                              "0x00E4"
#define  set_VDTOP_VLOOP3_TC1_reg(data)                                          (*((volatile unsigned int*)VDTOP_VLOOP3_TC1_reg)=data)
#define  get_VDTOP_VLOOP3_TC1_reg                                                (*((volatile unsigned int*)VDTOP_VLOOP3_TC1_reg))
#define  VDTOP_VLOOP3_TC1_vloop3_tc1_shift                                       (0)
#define  VDTOP_VLOOP3_TC1_vloop3_tc1_mask                                        (0x000000FF)
#define  VDTOP_VLOOP3_TC1_vloop3_tc1(data)                                       (0x000000FF&(data))
#define  VDTOP_VLOOP3_TC1_get_vloop3_tc1(data)                                   (0x000000FF&(data))

#define  VDTOP_VLOOP3_TC2                                                       0x180193D4
#define  VDTOP_VLOOP3_TC2_reg_addr                                               "0xB80193D4"
#define  VDTOP_VLOOP3_TC2_reg                                                    0xB80193D4
#define  VDTOP_VLOOP3_TC2_inst_addr                                              "0x00E5"
#define  set_VDTOP_VLOOP3_TC2_reg(data)                                          (*((volatile unsigned int*)VDTOP_VLOOP3_TC2_reg)=data)
#define  get_VDTOP_VLOOP3_TC2_reg                                                (*((volatile unsigned int*)VDTOP_VLOOP3_TC2_reg))
#define  VDTOP_VLOOP3_TC2_vloop3_tc2_shift                                       (0)
#define  VDTOP_VLOOP3_TC2_vloop3_tc2_mask                                        (0x0000007F)
#define  VDTOP_VLOOP3_TC2_vloop3_tc2(data)                                       (0x0000007F&(data))
#define  VDTOP_VLOOP3_TC2_get_vloop3_tc2(data)                                   (0x0000007F&(data))

#define  VDTOP_VLOOP_TC3                                                        0x180193D8
#define  VDTOP_VLOOP_TC3_reg_addr                                                "0xB80193D8"
#define  VDTOP_VLOOP_TC3_reg                                                     0xB80193D8
#define  VDTOP_VLOOP_TC3_inst_addr                                               "0x00E6"
#define  set_VDTOP_VLOOP_TC3_reg(data)                                           (*((volatile unsigned int*)VDTOP_VLOOP_TC3_reg)=data)
#define  get_VDTOP_VLOOP_TC3_reg                                                 (*((volatile unsigned int*)VDTOP_VLOOP_TC3_reg))
#define  VDTOP_VLOOP_TC3_vloop0_tc3_shift                                        (4)
#define  VDTOP_VLOOP_TC3_vloop2_tc3_shift                                        (2)
#define  VDTOP_VLOOP_TC3_vloop3_tc3_shift                                        (0)
#define  VDTOP_VLOOP_TC3_vloop0_tc3_mask                                         (0x00000030)
#define  VDTOP_VLOOP_TC3_vloop2_tc3_mask                                         (0x0000000C)
#define  VDTOP_VLOOP_TC3_vloop3_tc3_mask                                         (0x00000003)
#define  VDTOP_VLOOP_TC3_vloop0_tc3(data)                                        (0x00000030&((data)<<4))
#define  VDTOP_VLOOP_TC3_vloop2_tc3(data)                                        (0x0000000C&((data)<<2))
#define  VDTOP_VLOOP_TC3_vloop3_tc3(data)                                        (0x00000003&(data))
#define  VDTOP_VLOOP_TC3_get_vloop0_tc3(data)                                    ((0x00000030&(data))>>4)
#define  VDTOP_VLOOP_TC3_get_vloop2_tc3(data)                                    ((0x0000000C&(data))>>2)
#define  VDTOP_VLOOP_TC3_get_vloop3_tc3(data)                                    (0x00000003&(data))

#define  VDTOP_VLOCK_COUNT                                                      0x180193DC
#define  VDTOP_VLOCK_COUNT_reg_addr                                              "0xB80193DC"
#define  VDTOP_VLOCK_COUNT_reg                                                   0xB80193DC
#define  VDTOP_VLOCK_COUNT_inst_addr                                             "0x00E7"
#define  set_VDTOP_VLOCK_COUNT_reg(data)                                         (*((volatile unsigned int*)VDTOP_VLOCK_COUNT_reg)=data)
#define  get_VDTOP_VLOCK_COUNT_reg                                               (*((volatile unsigned int*)VDTOP_VLOCK_COUNT_reg))
#define  VDTOP_VLOCK_COUNT_flag_chrmaunlock_kill_shift                           (6)
#define  VDTOP_VLOCK_COUNT_flag_user_kill_shift                                  (5)
#define  VDTOP_VLOCK_COUNT_flag_cgain_too_big_kill_shift                         (4)
#define  VDTOP_VLOCK_COUNT_new_vdetect_lock_en_shift                             (3)
#define  VDTOP_VLOCK_COUNT_vlock_count_shift                                     (0)
#define  VDTOP_VLOCK_COUNT_flag_chrmaunlock_kill_mask                            (0x00000040)
#define  VDTOP_VLOCK_COUNT_flag_user_kill_mask                                   (0x00000020)
#define  VDTOP_VLOCK_COUNT_flag_cgain_too_big_kill_mask                          (0x00000010)
#define  VDTOP_VLOCK_COUNT_new_vdetect_lock_en_mask                              (0x00000008)
#define  VDTOP_VLOCK_COUNT_vlock_count_mask                                      (0x00000007)
#define  VDTOP_VLOCK_COUNT_flag_chrmaunlock_kill(data)                           (0x00000040&((data)<<6))
#define  VDTOP_VLOCK_COUNT_flag_user_kill(data)                                  (0x00000020&((data)<<5))
#define  VDTOP_VLOCK_COUNT_flag_cgain_too_big_kill(data)                         (0x00000010&((data)<<4))
#define  VDTOP_VLOCK_COUNT_new_vdetect_lock_en(data)                             (0x00000008&((data)<<3))
#define  VDTOP_VLOCK_COUNT_vlock_count(data)                                     (0x00000007&(data))
#define  VDTOP_VLOCK_COUNT_get_flag_chrmaunlock_kill(data)                       ((0x00000040&(data))>>6)
#define  VDTOP_VLOCK_COUNT_get_flag_user_kill(data)                              ((0x00000020&(data))>>5)
#define  VDTOP_VLOCK_COUNT_get_flag_cgain_too_big_kill(data)                     ((0x00000010&(data))>>4)
#define  VDTOP_VLOCK_COUNT_get_new_vdetect_lock_en(data)                         ((0x00000008&(data))>>3)
#define  VDTOP_VLOCK_COUNT_get_vlock_count(data)                                 (0x00000007&(data))

#define  VDTOP_VLOCK_WINDOW                                                     0x180193E0
#define  VDTOP_VLOCK_WINDOW_reg_addr                                             "0xB80193E0"
#define  VDTOP_VLOCK_WINDOW_reg                                                  0xB80193E0
#define  VDTOP_VLOCK_WINDOW_inst_addr                                            "0x00E8"
#define  set_VDTOP_VLOCK_WINDOW_reg(data)                                        (*((volatile unsigned int*)VDTOP_VLOCK_WINDOW_reg)=data)
#define  get_VDTOP_VLOCK_WINDOW_reg                                              (*((volatile unsigned int*)VDTOP_VLOCK_WINDOW_reg))
#define  VDTOP_VLOCK_WINDOW_vsync_detect_rst_shift                               (31)
#define  VDTOP_VLOCK_WINDOW_vsync_detect_crlock_en_shift                         (28)
#define  VDTOP_VLOCK_WINDOW_vsync_detect_count_thl_shift                         (20)
#define  VDTOP_VLOCK_WINDOW_vsync_detect_core_thl_shift                          (8)
#define  VDTOP_VLOCK_WINDOW_vlock_window_shift                                   (0)
#define  VDTOP_VLOCK_WINDOW_vsync_detect_rst_mask                                (0x80000000)
#define  VDTOP_VLOCK_WINDOW_vsync_detect_crlock_en_mask                          (0x10000000)
#define  VDTOP_VLOCK_WINDOW_vsync_detect_count_thl_mask                          (0x03F00000)
#define  VDTOP_VLOCK_WINDOW_vsync_detect_core_thl_mask                           (0x0007FF00)
#define  VDTOP_VLOCK_WINDOW_vlock_window_mask                                    (0x000000FF)
#define  VDTOP_VLOCK_WINDOW_vsync_detect_rst(data)                               (0x80000000&((data)<<31))
#define  VDTOP_VLOCK_WINDOW_vsync_detect_crlock_en(data)                         (0x10000000&((data)<<28))
#define  VDTOP_VLOCK_WINDOW_vsync_detect_count_thl(data)                         (0x03F00000&((data)<<20))
#define  VDTOP_VLOCK_WINDOW_vsync_detect_core_thl(data)                          (0x0007FF00&((data)<<8))
#define  VDTOP_VLOCK_WINDOW_vlock_window(data)                                   (0x000000FF&(data))
#define  VDTOP_VLOCK_WINDOW_get_vsync_detect_rst(data)                           ((0x80000000&(data))>>31)
#define  VDTOP_VLOCK_WINDOW_get_vsync_detect_crlock_en(data)                     ((0x10000000&(data))>>28)
#define  VDTOP_VLOCK_WINDOW_get_vsync_detect_count_thl(data)                     ((0x03F00000&(data))>>20)
#define  VDTOP_VLOCK_WINDOW_get_vsync_detect_core_thl(data)                      ((0x0007FF00&(data))>>8)
#define  VDTOP_VLOCK_WINDOW_get_vlock_window(data)                               (0x000000FF&(data))

#define  VDTOP_VLOCK_PHASE_PLUS                                                 0x180193E4
#define  VDTOP_VLOCK_PHASE_PLUS_reg_addr                                         "0xB80193E4"
#define  VDTOP_VLOCK_PHASE_PLUS_reg                                              0xB80193E4
#define  VDTOP_VLOCK_PHASE_PLUS_inst_addr                                        "0x00E9"
#define  set_VDTOP_VLOCK_PHASE_PLUS_reg(data)                                    (*((volatile unsigned int*)VDTOP_VLOCK_PHASE_PLUS_reg)=data)
#define  get_VDTOP_VLOCK_PHASE_PLUS_reg                                          (*((volatile unsigned int*)VDTOP_VLOCK_PHASE_PLUS_reg))
#define  VDTOP_VLOCK_PHASE_PLUS_vlock_phase_plus_shift                           (0)
#define  VDTOP_VLOCK_PHASE_PLUS_vlock_phase_plus_mask                            (0x000000FF)
#define  VDTOP_VLOCK_PHASE_PLUS_vlock_phase_plus(data)                           (0x000000FF&(data))
#define  VDTOP_VLOCK_PHASE_PLUS_get_vlock_phase_plus(data)                       (0x000000FF&(data))

#define  VDTOP_VLINE_ADJ_CNT_A                                                  0x180193E8
#define  VDTOP_VLINE_ADJ_CNT_A_reg_addr                                          "0xB80193E8"
#define  VDTOP_VLINE_ADJ_CNT_A_reg                                               0xB80193E8
#define  VDTOP_VLINE_ADJ_CNT_A_inst_addr                                         "0x00EA"
#define  set_VDTOP_VLINE_ADJ_CNT_A_reg(data)                                     (*((volatile unsigned int*)VDTOP_VLINE_ADJ_CNT_A_reg)=data)
#define  get_VDTOP_VLINE_ADJ_CNT_A_reg                                           (*((volatile unsigned int*)VDTOP_VLINE_ADJ_CNT_A_reg))
#define  VDTOP_VLINE_ADJ_CNT_A_vline_adj_cnt_a_shift                             (0)
#define  VDTOP_VLINE_ADJ_CNT_A_vline_adj_cnt_a_mask                              (0x000000FF)
#define  VDTOP_VLINE_ADJ_CNT_A_vline_adj_cnt_a(data)                             (0x000000FF&(data))
#define  VDTOP_VLINE_ADJ_CNT_A_get_vline_adj_cnt_a(data)                         (0x000000FF&(data))

#define  VDTOP_VLINE_ADJ_CNT_B                                                  0x180193EC
#define  VDTOP_VLINE_ADJ_CNT_B_reg_addr                                          "0xB80193EC"
#define  VDTOP_VLINE_ADJ_CNT_B_reg                                               0xB80193EC
#define  VDTOP_VLINE_ADJ_CNT_B_inst_addr                                         "0x00EB"
#define  set_VDTOP_VLINE_ADJ_CNT_B_reg(data)                                     (*((volatile unsigned int*)VDTOP_VLINE_ADJ_CNT_B_reg)=data)
#define  get_VDTOP_VLINE_ADJ_CNT_B_reg                                           (*((volatile unsigned int*)VDTOP_VLINE_ADJ_CNT_B_reg))
#define  VDTOP_VLINE_ADJ_CNT_B_vline_adj_cnt_b_shift                             (0)
#define  VDTOP_VLINE_ADJ_CNT_B_vline_adj_cnt_b_mask                              (0x000000FF)
#define  VDTOP_VLINE_ADJ_CNT_B_vline_adj_cnt_b(data)                             (0x000000FF&(data))
#define  VDTOP_VLINE_ADJ_CNT_B_get_vline_adj_cnt_b(data)                         (0x000000FF&(data))

#define  VDTOP_TABLE_HACTIVE_WIDTH                                              0x180193F0
#define  VDTOP_TABLE_HACTIVE_WIDTH_reg_addr                                      "0xB80193F0"
#define  VDTOP_TABLE_HACTIVE_WIDTH_reg                                           0xB80193F0
#define  VDTOP_TABLE_HACTIVE_WIDTH_inst_addr                                     "0x00EC"
#define  set_VDTOP_TABLE_HACTIVE_WIDTH_reg(data)                                 (*((volatile unsigned int*)VDTOP_TABLE_HACTIVE_WIDTH_reg)=data)
#define  get_VDTOP_TABLE_HACTIVE_WIDTH_reg                                       (*((volatile unsigned int*)VDTOP_TABLE_HACTIVE_WIDTH_reg))
#define  VDTOP_TABLE_HACTIVE_WIDTH_table_hactive_width_shift                     (0)
#define  VDTOP_TABLE_HACTIVE_WIDTH_table_hactive_width_mask                      (0x000000FF)
#define  VDTOP_TABLE_HACTIVE_WIDTH_table_hactive_width(data)                     (0x000000FF&(data))
#define  VDTOP_TABLE_HACTIVE_WIDTH_get_table_hactive_width(data)                 (0x000000FF&(data))

#define  VDTOP_VSYNC_PLL_FREERUN_MUX                                            0x180193F4
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_reg_addr                                    "0xB80193F4"
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_reg                                         0xB80193F4
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_inst_addr                                   "0x00ED"
#define  set_VDTOP_VSYNC_PLL_FREERUN_MUX_reg(data)                               (*((volatile unsigned int*)VDTOP_VSYNC_PLL_FREERUN_MUX_reg)=data)
#define  get_VDTOP_VSYNC_PLL_FREERUN_MUX_reg                                     (*((volatile unsigned int*)VDTOP_VSYNC_PLL_FREERUN_MUX_reg))
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_the_same_cnt_thr_shift               (16)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vsync_freerun_when_unstable_en_shift        (14)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_the_same_flag_shift                  (13)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_diff_flag_shift                      (12)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_freerun_shift                        (0)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_the_same_cnt_thr_mask                (0x000F0000)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vsync_freerun_when_unstable_en_mask         (0x00004000)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_the_same_flag_mask                   (0x00002000)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_diff_flag_mask                       (0x00001000)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_freerun_mask                         (0x000003FF)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_the_same_cnt_thr(data)               (0x000F0000&((data)<<16))
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vsync_freerun_when_unstable_en(data)        (0x00004000&((data)<<14))
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_the_same_flag(data)                  (0x00002000&((data)<<13))
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_diff_flag(data)                      (0x00001000&((data)<<12))
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_vlines_freerun(data)                        (0x000003FF&(data))
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_get_vlines_the_same_cnt_thr(data)           ((0x000F0000&(data))>>16)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_get_vsync_freerun_when_unstable_en(data)    ((0x00004000&(data))>>14)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_get_vlines_the_same_flag(data)              ((0x00002000&(data))>>13)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_get_vlines_diff_flag(data)                  ((0x00001000&(data))>>12)
#define  VDTOP_VSYNC_PLL_FREERUN_MUX_get_vlines_freerun(data)                    (0x000003FF&(data))

#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT                                         0x180193F8
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_reg_addr                                 "0xB80193F8"
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_reg                                      0xB80193F8
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_inst_addr                                "0x00EE"
#define  set_VDTOP_VSYNC_OLD_NEW_LINE_COUNT_reg(data)                            (*((volatile unsigned int*)VDTOP_VSYNC_OLD_NEW_LINE_COUNT_reg)=data)
#define  get_VDTOP_VSYNC_OLD_NEW_LINE_COUNT_reg                                  (*((volatile unsigned int*)VDTOP_VSYNC_OLD_NEW_LINE_COUNT_reg))
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_new_vdetect_line_count_shift             (16)
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_old_vdetect_line_count_shift             (0)
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_new_vdetect_line_count_mask              (0x03FF0000)
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_old_vdetect_line_count_mask              (0x000003FF)
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_new_vdetect_line_count(data)             (0x03FF0000&((data)<<16))
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_old_vdetect_line_count(data)             (0x000003FF&(data))
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_get_new_vdetect_line_count(data)         ((0x03FF0000&(data))>>16)
#define  VDTOP_VSYNC_OLD_NEW_LINE_COUNT_get_old_vdetect_line_count(data)         (0x000003FF&(data))

#define  VDTOP_CLOOP_I_CTRL                                                     0x180193FC
#define  VDTOP_CLOOP_I_CTRL_reg_addr                                             "0xB80193FC"
#define  VDTOP_CLOOP_I_CTRL_reg                                                  0xB80193FC
#define  VDTOP_CLOOP_I_CTRL_inst_addr                                            "0x00EF"
#define  set_VDTOP_CLOOP_I_CTRL_reg(data)                                        (*((volatile unsigned int*)VDTOP_CLOOP_I_CTRL_reg)=data)
#define  get_VDTOP_CLOOP_I_CTRL_reg                                              (*((volatile unsigned int*)VDTOP_CLOOP_I_CTRL_reg))
#define  VDTOP_CLOOP_I_CTRL_cloop_i_ctrl_modify_en_shift                         (24)
#define  VDTOP_CLOOP_I_CTRL_cloop_i_ctrl_modify_range_shift                      (0)
#define  VDTOP_CLOOP_I_CTRL_cloop_i_ctrl_modify_en_mask                          (0x01000000)
#define  VDTOP_CLOOP_I_CTRL_cloop_i_ctrl_modify_range_mask                       (0x003FFFFF)
#define  VDTOP_CLOOP_I_CTRL_cloop_i_ctrl_modify_en(data)                         (0x01000000&((data)<<24))
#define  VDTOP_CLOOP_I_CTRL_cloop_i_ctrl_modify_range(data)                      (0x003FFFFF&(data))
#define  VDTOP_CLOOP_I_CTRL_get_cloop_i_ctrl_modify_en(data)                     ((0x01000000&(data))>>24)
#define  VDTOP_CLOOP_I_CTRL_get_cloop_i_ctrl_modify_range(data)                  (0x003FFFFF&(data))

#define  VDTOP_CHROMA_AGC                                                       0x18019400
#define  VDTOP_CHROMA_AGC_reg_addr                                               "0xB8019400"
#define  VDTOP_CHROMA_AGC_reg                                                    0xB8019400
#define  VDTOP_CHROMA_AGC_inst_addr                                              "0x00F0"
#define  set_VDTOP_CHROMA_AGC_reg(data)                                          (*((volatile unsigned int*)VDTOP_CHROMA_AGC_reg)=data)
#define  get_VDTOP_CHROMA_AGC_reg                                                (*((volatile unsigned int*)VDTOP_CHROMA_AGC_reg))
#define  VDTOP_CHROMA_AGC_fix_cgain_shift                                        (28)
#define  VDTOP_CHROMA_AGC_cagc_pll_input_sel_shift                               (10)
#define  VDTOP_CHROMA_AGC_cagc_data_input_sel_shift                              (8)
#define  VDTOP_CHROMA_AGC_cagc_shift                                             (0)
#define  VDTOP_CHROMA_AGC_fix_cgain_mask                                         (0x10000000)
#define  VDTOP_CHROMA_AGC_cagc_pll_input_sel_mask                                (0x00000C00)
#define  VDTOP_CHROMA_AGC_cagc_data_input_sel_mask                               (0x00000300)
#define  VDTOP_CHROMA_AGC_cagc_mask                                              (0x000000FF)
#define  VDTOP_CHROMA_AGC_fix_cgain(data)                                        (0x10000000&((data)<<28))
#define  VDTOP_CHROMA_AGC_cagc_pll_input_sel(data)                               (0x00000C00&((data)<<10))
#define  VDTOP_CHROMA_AGC_cagc_data_input_sel(data)                              (0x00000300&((data)<<8))
#define  VDTOP_CHROMA_AGC_cagc(data)                                             (0x000000FF&(data))
#define  VDTOP_CHROMA_AGC_get_fix_cgain(data)                                    ((0x10000000&(data))>>28)
#define  VDTOP_CHROMA_AGC_get_cagc_pll_input_sel(data)                           ((0x00000C00&(data))>>10)
#define  VDTOP_CHROMA_AGC_get_cagc_data_input_sel(data)                          ((0x00000300&(data))>>8)
#define  VDTOP_CHROMA_AGC_get_cagc(data)                                         (0x000000FF&(data))

#define  VDTOP_CHROMA_KILL                                                      0x18019404
#define  VDTOP_CHROMA_KILL_reg_addr                                              "0xB8019404"
#define  VDTOP_CHROMA_KILL_reg                                                   0xB8019404
#define  VDTOP_CHROMA_KILL_inst_addr                                             "0x00F1"
#define  set_VDTOP_CHROMA_KILL_reg(data)                                         (*((volatile unsigned int*)VDTOP_CHROMA_KILL_reg)=data)
#define  get_VDTOP_CHROMA_KILL_reg                                               (*((volatile unsigned int*)VDTOP_CHROMA_KILL_reg))
#define  VDTOP_CHROMA_KILL_ckill_sel_shift                                       (8)
#define  VDTOP_CHROMA_KILL_user_ckill_mode_shift                                 (6)
#define  VDTOP_CHROMA_KILL_vbi_ckill_shift                                       (5)
#define  VDTOP_CHROMA_KILL_hlock_ckill_shift                                     (4)
#define  VDTOP_CHROMA_KILL_chroma_kill_shift                                     (0)
#define  VDTOP_CHROMA_KILL_ckill_sel_mask                                        (0x00000100)
#define  VDTOP_CHROMA_KILL_user_ckill_mode_mask                                  (0x000000C0)
#define  VDTOP_CHROMA_KILL_vbi_ckill_mask                                        (0x00000020)
#define  VDTOP_CHROMA_KILL_hlock_ckill_mask                                      (0x00000010)
#define  VDTOP_CHROMA_KILL_chroma_kill_mask                                      (0x0000000F)
#define  VDTOP_CHROMA_KILL_ckill_sel(data)                                       (0x00000100&((data)<<8))
#define  VDTOP_CHROMA_KILL_user_ckill_mode(data)                                 (0x000000C0&((data)<<6))
#define  VDTOP_CHROMA_KILL_vbi_ckill(data)                                       (0x00000020&((data)<<5))
#define  VDTOP_CHROMA_KILL_hlock_ckill(data)                                     (0x00000010&((data)<<4))
#define  VDTOP_CHROMA_KILL_chroma_kill(data)                                     (0x0000000F&(data))
#define  VDTOP_CHROMA_KILL_get_ckill_sel(data)                                   ((0x00000100&(data))>>8)
#define  VDTOP_CHROMA_KILL_get_user_ckill_mode(data)                             ((0x000000C0&(data))>>6)
#define  VDTOP_CHROMA_KILL_get_vbi_ckill(data)                                   ((0x00000020&(data))>>5)
#define  VDTOP_CHROMA_KILL_get_hlock_ckill(data)                                 ((0x00000010&(data))>>4)
#define  VDTOP_CHROMA_KILL_get_chroma_kill(data)                                 (0x0000000F&(data))

#define  VDTOP_CHROMA_LOCK_CONFIG                                               0x18019408
#define  VDTOP_CHROMA_LOCK_CONFIG_reg_addr                                       "0xB8019408"
#define  VDTOP_CHROMA_LOCK_CONFIG_reg                                            0xB8019408
#define  VDTOP_CHROMA_LOCK_CONFIG_inst_addr                                      "0x00F2"
#define  set_VDTOP_CHROMA_LOCK_CONFIG_reg(data)                                  (*((volatile unsigned int*)VDTOP_CHROMA_LOCK_CONFIG_reg)=data)
#define  get_VDTOP_CHROMA_LOCK_CONFIG_reg                                        (*((volatile unsigned int*)VDTOP_CHROMA_LOCK_CONFIG_reg))
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_acc_chromalock_level_shift                (12)
#define  VDTOP_CHROMA_LOCK_CONFIG_chromalock_input_acc_en_shift                  (10)
#define  VDTOP_CHROMA_LOCK_CONFIG_chromalock_input_acc_num_shift                 (8)
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_chromalock_count_shift                    (4)
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_chromalock_level_shift                    (1)
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_chromalock_ckill_shift                    (0)
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_acc_chromalock_level_mask                 (0x00007000)
#define  VDTOP_CHROMA_LOCK_CONFIG_chromalock_input_acc_en_mask                   (0x00000400)
#define  VDTOP_CHROMA_LOCK_CONFIG_chromalock_input_acc_num_mask                  (0x00000300)
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_chromalock_count_mask                     (0x000000F0)
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_chromalock_level_mask                     (0x0000000E)
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_chromalock_ckill_mask                     (0x00000001)
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_acc_chromalock_level(data)                (0x00007000&((data)<<12))
#define  VDTOP_CHROMA_LOCK_CONFIG_chromalock_input_acc_en(data)                  (0x00000400&((data)<<10))
#define  VDTOP_CHROMA_LOCK_CONFIG_chromalock_input_acc_num(data)                 (0x00000300&((data)<<8))
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_chromalock_count(data)                    (0x000000F0&((data)<<4))
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_chromalock_level(data)                    (0x0000000E&((data)<<1))
#define  VDTOP_CHROMA_LOCK_CONFIG_lose_chromalock_ckill(data)                    (0x00000001&(data))
#define  VDTOP_CHROMA_LOCK_CONFIG_get_lose_acc_chromalock_level(data)            ((0x00007000&(data))>>12)
#define  VDTOP_CHROMA_LOCK_CONFIG_get_chromalock_input_acc_en(data)              ((0x00000400&(data))>>10)
#define  VDTOP_CHROMA_LOCK_CONFIG_get_chromalock_input_acc_num(data)             ((0x00000300&(data))>>8)
#define  VDTOP_CHROMA_LOCK_CONFIG_get_lose_chromalock_count(data)                ((0x000000F0&(data))>>4)
#define  VDTOP_CHROMA_LOCK_CONFIG_get_lose_chromalock_level(data)                ((0x0000000E&(data))>>1)
#define  VDTOP_CHROMA_LOCK_CONFIG_get_lose_chromalock_ckill(data)                (0x00000001&(data))

#define  VDTOP_CHROMA_LOOPFILTER_GAIN                                           0x1801940C
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_reg_addr                                   "0xB801940C"
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_reg                                        0xB801940C
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_inst_addr                                  "0x00F3"
#define  set_VDTOP_CHROMA_LOOPFILTER_GAIN_reg(data)                              (*((volatile unsigned int*)VDTOP_CHROMA_LOOPFILTER_GAIN_reg)=data)
#define  get_VDTOP_CHROMA_LOOPFILTER_GAIN_reg                                    (*((volatile unsigned int*)VDTOP_CHROMA_LOOPFILTER_GAIN_reg))
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_cnew_gate_en_shift                         (7)
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_flag358_cresample_lpf_sel_shift            (2)
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_cagc_igain_shift                           (0)
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_cnew_gate_en_mask                          (0x00000080)
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_flag358_cresample_lpf_sel_mask             (0x0000000C)
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_cagc_igain_mask                            (0x00000003)
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_cnew_gate_en(data)                         (0x00000080&((data)<<7))
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_flag358_cresample_lpf_sel(data)            (0x0000000C&((data)<<2))
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_cagc_igain(data)                           (0x00000003&(data))
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_get_cnew_gate_en(data)                     ((0x00000080&(data))>>7)
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_get_flag358_cresample_lpf_sel(data)        ((0x0000000C&(data))>>2)
#define  VDTOP_CHROMA_LOOPFILTER_GAIN_get_cagc_igain(data)                       (0x00000003&(data))

#define  VDTOP_CHROMA_LOOPFILTER_STATE                                          0x18019410
#define  VDTOP_CHROMA_LOOPFILTER_STATE_reg_addr                                  "0xB8019410"
#define  VDTOP_CHROMA_LOOPFILTER_STATE_reg                                       0xB8019410
#define  VDTOP_CHROMA_LOOPFILTER_STATE_inst_addr                                 "0x00F4"
#define  set_VDTOP_CHROMA_LOOPFILTER_STATE_reg(data)                             (*((volatile unsigned int*)VDTOP_CHROMA_LOOPFILTER_STATE_reg)=data)
#define  get_VDTOP_CHROMA_LOOPFILTER_STATE_reg                                   (*((volatile unsigned int*)VDTOP_CHROMA_LOOPFILTER_STATE_reg))
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cresample_signed_en_shift                 (24)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cloop_freq_offset_limit_en_shift          (20)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cloop_freq_offset_limit_shift             (8)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_secam_cresample_lpf_sel_shift             (6)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cresample_lpf_sel_shift                   (4)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cstate_shift                              (1)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_fixed_cstate_shift                        (0)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cresample_signed_en_mask                  (0x01000000)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cloop_freq_offset_limit_en_mask           (0x00100000)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cloop_freq_offset_limit_mask              (0x000FFF00)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_secam_cresample_lpf_sel_mask              (0x000000C0)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cresample_lpf_sel_mask                    (0x00000030)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cstate_mask                               (0x0000000E)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_fixed_cstate_mask                         (0x00000001)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cresample_signed_en(data)                 (0x01000000&((data)<<24))
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cloop_freq_offset_limit_en(data)          (0x00100000&((data)<<20))
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cloop_freq_offset_limit(data)             (0x000FFF00&((data)<<8))
#define  VDTOP_CHROMA_LOOPFILTER_STATE_secam_cresample_lpf_sel(data)             (0x000000C0&((data)<<6))
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cresample_lpf_sel(data)                   (0x00000030&((data)<<4))
#define  VDTOP_CHROMA_LOOPFILTER_STATE_cstate(data)                              (0x0000000E&((data)<<1))
#define  VDTOP_CHROMA_LOOPFILTER_STATE_fixed_cstate(data)                        (0x00000001&(data))
#define  VDTOP_CHROMA_LOOPFILTER_STATE_get_cresample_signed_en(data)             ((0x01000000&(data))>>24)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_get_cloop_freq_offset_limit_en(data)      ((0x00100000&(data))>>20)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_get_cloop_freq_offset_limit(data)         ((0x000FFF00&(data))>>8)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_get_secam_cresample_lpf_sel(data)         ((0x000000C0&(data))>>6)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_get_cresample_lpf_sel(data)               ((0x00000030&(data))>>4)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_get_cstate(data)                          ((0x0000000E&(data))>>1)
#define  VDTOP_CHROMA_LOOPFILTER_STATE_get_fixed_cstate(data)                    (0x00000001&(data))

#define  VDTOP_CHROMA_AUTOPOS                                                   0x18019414
#define  VDTOP_CHROMA_AUTOPOS_reg_addr                                           "0xB8019414"
#define  VDTOP_CHROMA_AUTOPOS_reg                                                0xB8019414
#define  VDTOP_CHROMA_AUTOPOS_inst_addr                                          "0x00F5"
#define  set_VDTOP_CHROMA_AUTOPOS_reg(data)                                      (*((volatile unsigned int*)VDTOP_CHROMA_AUTOPOS_reg)=data)
#define  get_VDTOP_CHROMA_AUTOPOS_reg                                            (*((volatile unsigned int*)VDTOP_CHROMA_AUTOPOS_reg))
#define  VDTOP_CHROMA_AUTOPOS_chroma_burst5or10_shift                            (6)
#define  VDTOP_CHROMA_AUTOPOS_fixed_burstgate_shift                              (5)
#define  VDTOP_CHROMA_AUTOPOS_cautopos_shift                                     (0)
#define  VDTOP_CHROMA_AUTOPOS_chroma_burst5or10_mask                             (0x00000040)
#define  VDTOP_CHROMA_AUTOPOS_fixed_burstgate_mask                               (0x00000020)
#define  VDTOP_CHROMA_AUTOPOS_cautopos_mask                                      (0x0000001F)
#define  VDTOP_CHROMA_AUTOPOS_chroma_burst5or10(data)                            (0x00000040&((data)<<6))
#define  VDTOP_CHROMA_AUTOPOS_fixed_burstgate(data)                              (0x00000020&((data)<<5))
#define  VDTOP_CHROMA_AUTOPOS_cautopos(data)                                     (0x0000001F&(data))
#define  VDTOP_CHROMA_AUTOPOS_get_chroma_burst5or10(data)                        ((0x00000040&(data))>>6)
#define  VDTOP_CHROMA_AUTOPOS_get_fixed_burstgate(data)                          ((0x00000020&(data))>>5)
#define  VDTOP_CHROMA_AUTOPOS_get_cautopos(data)                                 (0x0000001F&(data))

#define  VDTOP_CKILL_LB_SEL                                                     0x18019418
#define  VDTOP_CKILL_LB_SEL_reg_addr                                             "0xB8019418"
#define  VDTOP_CKILL_LB_SEL_reg                                                  0xB8019418
#define  VDTOP_CKILL_LB_SEL_inst_addr                                            "0x00F6"
#define  set_VDTOP_CKILL_LB_SEL_reg(data)                                        (*((volatile unsigned int*)VDTOP_CKILL_LB_SEL_reg)=data)
#define  get_VDTOP_CKILL_LB_SEL_reg                                              (*((volatile unsigned int*)VDTOP_CKILL_LB_SEL_reg))
#define  VDTOP_CKILL_LB_SEL_chromalock_cstate_en_shift                           (7)
#define  VDTOP_CKILL_LB_SEL_chromalock_cstate_shift                              (4)
#define  VDTOP_CKILL_LB_SEL_ckill_vsync_delay_en_shift                           (1)
#define  VDTOP_CKILL_LB_SEL_ckill_lb_sel_shift                                   (0)
#define  VDTOP_CKILL_LB_SEL_chromalock_cstate_en_mask                            (0x00000080)
#define  VDTOP_CKILL_LB_SEL_chromalock_cstate_mask                               (0x00000070)
#define  VDTOP_CKILL_LB_SEL_ckill_vsync_delay_en_mask                            (0x00000002)
#define  VDTOP_CKILL_LB_SEL_ckill_lb_sel_mask                                    (0x00000001)
#define  VDTOP_CKILL_LB_SEL_chromalock_cstate_en(data)                           (0x00000080&((data)<<7))
#define  VDTOP_CKILL_LB_SEL_chromalock_cstate(data)                              (0x00000070&((data)<<4))
#define  VDTOP_CKILL_LB_SEL_ckill_vsync_delay_en(data)                           (0x00000002&((data)<<1))
#define  VDTOP_CKILL_LB_SEL_ckill_lb_sel(data)                                   (0x00000001&(data))
#define  VDTOP_CKILL_LB_SEL_get_chromalock_cstate_en(data)                       ((0x00000080&(data))>>7)
#define  VDTOP_CKILL_LB_SEL_get_chromalock_cstate(data)                          ((0x00000070&(data))>>4)
#define  VDTOP_CKILL_LB_SEL_get_ckill_vsync_delay_en(data)                       ((0x00000002&(data))>>1)
#define  VDTOP_CKILL_LB_SEL_get_ckill_lb_sel(data)                               (0x00000001&(data))

#define  VDTOP_CKILL_GAIN_KILL_THL                                              0x1801941C
#define  VDTOP_CKILL_GAIN_KILL_THL_reg_addr                                      "0xB801941C"
#define  VDTOP_CKILL_GAIN_KILL_THL_reg                                           0xB801941C
#define  VDTOP_CKILL_GAIN_KILL_THL_inst_addr                                     "0x00F7"
#define  set_VDTOP_CKILL_GAIN_KILL_THL_reg(data)                                 (*((volatile unsigned int*)VDTOP_CKILL_GAIN_KILL_THL_reg)=data)
#define  get_VDTOP_CKILL_GAIN_KILL_THL_reg                                       (*((volatile unsigned int*)VDTOP_CKILL_GAIN_KILL_THL_reg))
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_offset_en_shift              (31)
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_offset_shift                 (16)
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_mode_en_shift                (15)
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_mode_value_shift             (0)
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_offset_en_mask               (0x80000000)
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_offset_mask                  (0x3FFF0000)
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_mode_en_mask                 (0x00008000)
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_mode_value_mask              (0x00003FFF)
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_offset_en(data)              (0x80000000&((data)<<31))
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_offset(data)                 (0x3FFF0000&((data)<<16))
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_mode_en(data)                (0x00008000&((data)<<15))
#define  VDTOP_CKILL_GAIN_KILL_THL_ckill_level_user_mode_value(data)             (0x00003FFF&(data))
#define  VDTOP_CKILL_GAIN_KILL_THL_get_ckill_level_user_offset_en(data)          ((0x80000000&(data))>>31)
#define  VDTOP_CKILL_GAIN_KILL_THL_get_ckill_level_user_offset(data)             ((0x3FFF0000&(data))>>16)
#define  VDTOP_CKILL_GAIN_KILL_THL_get_ckill_level_user_mode_en(data)            ((0x00008000&(data))>>15)
#define  VDTOP_CKILL_GAIN_KILL_THL_get_ckill_level_user_mode_value(data)         (0x00003FFF&(data))

#define  VDTOP_CSTATE_CTRL                                                      0x18019420
#define  VDTOP_CSTATE_CTRL_reg_addr                                              "0xB8019420"
#define  VDTOP_CSTATE_CTRL_reg                                                   0xB8019420
#define  VDTOP_CSTATE_CTRL_inst_addr                                             "0x00F8"
#define  set_VDTOP_CSTATE_CTRL_reg(data)                                         (*((volatile unsigned int*)VDTOP_CSTATE_CTRL_reg)=data)
#define  get_VDTOP_CSTATE_CTRL_reg                                               (*((volatile unsigned int*)VDTOP_CSTATE_CTRL_reg))
#define  VDTOP_CSTATE_CTRL_badedit_noisy_off_en_shift                            (24)
#define  VDTOP_CSTATE_CTRL_badedit_in_noise_thr_shift                            (16)
#define  VDTOP_CSTATE_CTRL_badedit_out_noise_thr_shift                           (8)
#define  VDTOP_CSTATE_CTRL_fast_lock_en_shift                                    (7)
#define  VDTOP_CSTATE_CTRL_phase_fast_lock_en_shift                              (6)
#define  VDTOP_CSTATE_CTRL_badedit_phase_lock_en_shift                           (5)
#define  VDTOP_CSTATE_CTRL_badedit_pulse_detect_shift                            (4)
#define  VDTOP_CSTATE_CTRL_bad_phase_detect_shift                                (3)
#define  VDTOP_CSTATE_CTRL_badedit_line_num_shift                                (0)
#define  VDTOP_CSTATE_CTRL_badedit_noisy_off_en_mask                             (0x01000000)
#define  VDTOP_CSTATE_CTRL_badedit_in_noise_thr_mask                             (0x00FF0000)
#define  VDTOP_CSTATE_CTRL_badedit_out_noise_thr_mask                            (0x0000FF00)
#define  VDTOP_CSTATE_CTRL_fast_lock_en_mask                                     (0x00000080)
#define  VDTOP_CSTATE_CTRL_phase_fast_lock_en_mask                               (0x00000040)
#define  VDTOP_CSTATE_CTRL_badedit_phase_lock_en_mask                            (0x00000020)
#define  VDTOP_CSTATE_CTRL_badedit_pulse_detect_mask                             (0x00000010)
#define  VDTOP_CSTATE_CTRL_bad_phase_detect_mask                                 (0x00000008)
#define  VDTOP_CSTATE_CTRL_badedit_line_num_mask                                 (0x00000007)
#define  VDTOP_CSTATE_CTRL_badedit_noisy_off_en(data)                            (0x01000000&((data)<<24))
#define  VDTOP_CSTATE_CTRL_badedit_in_noise_thr(data)                            (0x00FF0000&((data)<<16))
#define  VDTOP_CSTATE_CTRL_badedit_out_noise_thr(data)                           (0x0000FF00&((data)<<8))
#define  VDTOP_CSTATE_CTRL_fast_lock_en(data)                                    (0x00000080&((data)<<7))
#define  VDTOP_CSTATE_CTRL_phase_fast_lock_en(data)                              (0x00000040&((data)<<6))
#define  VDTOP_CSTATE_CTRL_badedit_phase_lock_en(data)                           (0x00000020&((data)<<5))
#define  VDTOP_CSTATE_CTRL_badedit_pulse_detect(data)                            (0x00000010&((data)<<4))
#define  VDTOP_CSTATE_CTRL_bad_phase_detect(data)                                (0x00000008&((data)<<3))
#define  VDTOP_CSTATE_CTRL_badedit_line_num(data)                                (0x00000007&(data))
#define  VDTOP_CSTATE_CTRL_get_badedit_noisy_off_en(data)                        ((0x01000000&(data))>>24)
#define  VDTOP_CSTATE_CTRL_get_badedit_in_noise_thr(data)                        ((0x00FF0000&(data))>>16)
#define  VDTOP_CSTATE_CTRL_get_badedit_out_noise_thr(data)                       ((0x0000FF00&(data))>>8)
#define  VDTOP_CSTATE_CTRL_get_fast_lock_en(data)                                ((0x00000080&(data))>>7)
#define  VDTOP_CSTATE_CTRL_get_phase_fast_lock_en(data)                          ((0x00000040&(data))>>6)
#define  VDTOP_CSTATE_CTRL_get_badedit_phase_lock_en(data)                       ((0x00000020&(data))>>5)
#define  VDTOP_CSTATE_CTRL_get_badedit_pulse_detect(data)                        ((0x00000010&(data))>>4)
#define  VDTOP_CSTATE_CTRL_get_bad_phase_detect(data)                            ((0x00000008&(data))>>3)
#define  VDTOP_CSTATE_CTRL_get_badedit_line_num(data)                            (0x00000007&(data))

#define  VDTOP_BADEDIT_TH                                                       0x18019424
#define  VDTOP_BADEDIT_TH_reg_addr                                               "0xB8019424"
#define  VDTOP_BADEDIT_TH_reg                                                    0xB8019424
#define  VDTOP_BADEDIT_TH_inst_addr                                              "0x00F9"
#define  set_VDTOP_BADEDIT_TH_reg(data)                                          (*((volatile unsigned int*)VDTOP_BADEDIT_TH_reg)=data)
#define  get_VDTOP_BADEDIT_TH_reg                                                (*((volatile unsigned int*)VDTOP_BADEDIT_TH_reg))
#define  VDTOP_BADEDIT_TH_badedit_th_shift                                       (0)
#define  VDTOP_BADEDIT_TH_badedit_th_mask                                        (0x000000FF)
#define  VDTOP_BADEDIT_TH_badedit_th(data)                                       (0x000000FF&(data))
#define  VDTOP_BADEDIT_TH_get_badedit_th(data)                                   (0x000000FF&(data))

#define  VDTOP_BADPHASE_TH                                                      0x18019428
#define  VDTOP_BADPHASE_TH_reg_addr                                              "0xB8019428"
#define  VDTOP_BADPHASE_TH_reg                                                   0xB8019428
#define  VDTOP_BADPHASE_TH_inst_addr                                             "0x00FA"
#define  set_VDTOP_BADPHASE_TH_reg(data)                                         (*((volatile unsigned int*)VDTOP_BADPHASE_TH_reg)=data)
#define  get_VDTOP_BADPHASE_TH_reg                                               (*((volatile unsigned int*)VDTOP_BADPHASE_TH_reg))
#define  VDTOP_BADPHASE_TH_badphase_th_shift                                     (0)
#define  VDTOP_BADPHASE_TH_badphase_th_mask                                      (0x000000FF)
#define  VDTOP_BADPHASE_TH_badphase_th(data)                                     (0x000000FF&(data))
#define  VDTOP_BADPHASE_TH_get_badphase_th(data)                                 (0x000000FF&(data))

#define  VDTOP_CSTATE_LINE_NUM                                                  0x1801942C
#define  VDTOP_CSTATE_LINE_NUM_reg_addr                                          "0xB801942C"
#define  VDTOP_CSTATE_LINE_NUM_reg                                               0xB801942C
#define  VDTOP_CSTATE_LINE_NUM_inst_addr                                         "0x00FB"
#define  set_VDTOP_CSTATE_LINE_NUM_reg(data)                                     (*((volatile unsigned int*)VDTOP_CSTATE_LINE_NUM_reg)=data)
#define  get_VDTOP_CSTATE_LINE_NUM_reg                                           (*((volatile unsigned int*)VDTOP_CSTATE_LINE_NUM_reg))
#define  VDTOP_CSTATE_LINE_NUM_cstate_line_num_shift                             (0)
#define  VDTOP_CSTATE_LINE_NUM_cstate_line_num_mask                              (0x000000FF)
#define  VDTOP_CSTATE_LINE_NUM_cstate_line_num(data)                             (0x000000FF&(data))
#define  VDTOP_CSTATE_LINE_NUM_get_cstate_line_num(data)                         (0x000000FF&(data))

#define  VDTOP_CHROMA_AGC_PEAK_CTRL                                             0x18019430
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_reg_addr                                     "0xB8019430"
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_reg                                          0xB8019430
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_inst_addr                                    "0x00FC"
#define  set_VDTOP_CHROMA_AGC_PEAK_CTRL_reg(data)                                (*((volatile unsigned int*)VDTOP_CHROMA_AGC_PEAK_CTRL_reg)=data)
#define  get_VDTOP_CHROMA_AGC_PEAK_CTRL_reg                                      (*((volatile unsigned int*)VDTOP_CHROMA_AGC_PEAK_CTRL_reg))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_gain_no_trunc_en_shift                 (30)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noisy_act_en_pll_shift                 (29)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noisy_act_en_shift                     (28)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noise_thr2_shift                       (20)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noise_thr1_shift                       (12)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_chroma_peak_en_pll_shift                     (8)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_new_cgain_level_en_shift                     (7)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_chroma_peak_en_shift                         (6)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_chroma_agc_peak_cnt_shift                    (0)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_gain_no_trunc_en_mask                  (0x40000000)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noisy_act_en_pll_mask                  (0x20000000)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noisy_act_en_mask                      (0x10000000)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noise_thr2_mask                        (0x0FF00000)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noise_thr1_mask                        (0x000FF000)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_chroma_peak_en_pll_mask                      (0x00000100)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_new_cgain_level_en_mask                      (0x00000080)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_chroma_peak_en_mask                          (0x00000040)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_chroma_agc_peak_cnt_mask                     (0x0000003F)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_gain_no_trunc_en(data)                 (0x40000000&((data)<<30))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noisy_act_en_pll(data)                 (0x20000000&((data)<<29))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noisy_act_en(data)                     (0x10000000&((data)<<28))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noise_thr2(data)                       (0x0FF00000&((data)<<20))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_cpeak_noise_thr1(data)                       (0x000FF000&((data)<<12))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_chroma_peak_en_pll(data)                     (0x00000100&((data)<<8))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_new_cgain_level_en(data)                     (0x00000080&((data)<<7))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_chroma_peak_en(data)                         (0x00000040&((data)<<6))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_chroma_agc_peak_cnt(data)                    (0x0000003F&(data))
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_get_cpeak_gain_no_trunc_en(data)             ((0x40000000&(data))>>30)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_get_cpeak_noisy_act_en_pll(data)             ((0x20000000&(data))>>29)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_get_cpeak_noisy_act_en(data)                 ((0x10000000&(data))>>28)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_get_cpeak_noise_thr2(data)                   ((0x0FF00000&(data))>>20)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_get_cpeak_noise_thr1(data)                   ((0x000FF000&(data))>>12)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_get_chroma_peak_en_pll(data)                 ((0x00000100&(data))>>8)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_get_new_cgain_level_en(data)                 ((0x00000080&(data))>>7)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_get_chroma_peak_en(data)                     ((0x00000040&(data))>>6)
#define  VDTOP_CHROMA_AGC_PEAK_CTRL_get_chroma_agc_peak_cnt(data)                (0x0000003F&(data))

#define  VDTOP_CHROMA_AGC_PEAK_NOMINAL                                          0x18019434
#define  VDTOP_CHROMA_AGC_PEAK_NOMINAL_reg_addr                                  "0xB8019434"
#define  VDTOP_CHROMA_AGC_PEAK_NOMINAL_reg                                       0xB8019434
#define  VDTOP_CHROMA_AGC_PEAK_NOMINAL_inst_addr                                 "0x00FD"
#define  set_VDTOP_CHROMA_AGC_PEAK_NOMINAL_reg(data)                             (*((volatile unsigned int*)VDTOP_CHROMA_AGC_PEAK_NOMINAL_reg)=data)
#define  get_VDTOP_CHROMA_AGC_PEAK_NOMINAL_reg                                   (*((volatile unsigned int*)VDTOP_CHROMA_AGC_PEAK_NOMINAL_reg))
#define  VDTOP_CHROMA_AGC_PEAK_NOMINAL_chroma_agc_peak_nominal_shift             (0)
#define  VDTOP_CHROMA_AGC_PEAK_NOMINAL_chroma_agc_peak_nominal_mask              (0x000007FF)
#define  VDTOP_CHROMA_AGC_PEAK_NOMINAL_chroma_agc_peak_nominal(data)             (0x000007FF&(data))
#define  VDTOP_CHROMA_AGC_PEAK_NOMINAL_get_chroma_agc_peak_nominal(data)         (0x000007FF&(data))

#define  VDTOP_CLOSE_CKILL_LOOPFILTER                                           0x18019438
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_reg_addr                                   "0xB8019438"
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_reg                                        0xB8019438
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_inst_addr                                  "0x00FE"
#define  set_VDTOP_CLOSE_CKILL_LOOPFILTER_reg(data)                              (*((volatile unsigned int*)VDTOP_CLOSE_CKILL_LOOPFILTER_reg)=data)
#define  get_VDTOP_CLOSE_CKILL_LOOPFILTER_reg                                    (*((volatile unsigned int*)VDTOP_CLOSE_CKILL_LOOPFILTER_reg))
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_close_ckill_loopfilter_shift               (17)
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_cagc_upper_xroot2_en_shift                 (16)
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_cagc_upper_shift                           (0)
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_close_ckill_loopfilter_mask                (0x00020000)
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_cagc_upper_xroot2_en_mask                  (0x00010000)
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_cagc_upper_mask                            (0x00003FFF)
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_close_ckill_loopfilter(data)               (0x00020000&((data)<<17))
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_cagc_upper_xroot2_en(data)                 (0x00010000&((data)<<16))
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_cagc_upper(data)                           (0x00003FFF&(data))
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_get_close_ckill_loopfilter(data)           ((0x00020000&(data))>>17)
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_get_cagc_upper_xroot2_en(data)             ((0x00010000&(data))>>16)
#define  VDTOP_CLOSE_CKILL_LOOPFILTER_get_cagc_upper(data)                       (0x00003FFF&(data))

#define  VDTOP_CAGC_PEAK_CTRL1                                                  0x1801943C
#define  VDTOP_CAGC_PEAK_CTRL1_reg_addr                                          "0xB801943C"
#define  VDTOP_CAGC_PEAK_CTRL1_reg                                               0xB801943C
#define  VDTOP_CAGC_PEAK_CTRL1_inst_addr                                         "0x00FF"
#define  set_VDTOP_CAGC_PEAK_CTRL1_reg(data)                                     (*((volatile unsigned int*)VDTOP_CAGC_PEAK_CTRL1_reg)=data)
#define  get_VDTOP_CAGC_PEAK_CTRL1_reg                                           (*((volatile unsigned int*)VDTOP_CAGC_PEAK_CTRL1_reg))
#define  VDTOP_CAGC_PEAK_CTRL1_cagc_peak_err_adj_en_shift                        (7)
#define  VDTOP_CAGC_PEAK_CTRL1_cagc_burst_err_adj_en_shift                       (6)
#define  VDTOP_CAGC_PEAK_CTRL1_cagc_peak_err_diff_sel_shift                      (0)
#define  VDTOP_CAGC_PEAK_CTRL1_cagc_peak_err_adj_en_mask                         (0x00000080)
#define  VDTOP_CAGC_PEAK_CTRL1_cagc_burst_err_adj_en_mask                        (0x00000040)
#define  VDTOP_CAGC_PEAK_CTRL1_cagc_peak_err_diff_sel_mask                       (0x0000003F)
#define  VDTOP_CAGC_PEAK_CTRL1_cagc_peak_err_adj_en(data)                        (0x00000080&((data)<<7))
#define  VDTOP_CAGC_PEAK_CTRL1_cagc_burst_err_adj_en(data)                       (0x00000040&((data)<<6))
#define  VDTOP_CAGC_PEAK_CTRL1_cagc_peak_err_diff_sel(data)                      (0x0000003F&(data))
#define  VDTOP_CAGC_PEAK_CTRL1_get_cagc_peak_err_adj_en(data)                    ((0x00000080&(data))>>7)
#define  VDTOP_CAGC_PEAK_CTRL1_get_cagc_burst_err_adj_en(data)                   ((0x00000040&(data))>>6)
#define  VDTOP_CAGC_PEAK_CTRL1_get_cagc_peak_err_diff_sel(data)                  (0x0000003F&(data))

#define  VDTOP_CAGC_PEAK_CTRL2                                                  0x18019440
#define  VDTOP_CAGC_PEAK_CTRL2_reg_addr                                          "0xB8019440"
#define  VDTOP_CAGC_PEAK_CTRL2_reg                                               0xB8019440
#define  VDTOP_CAGC_PEAK_CTRL2_inst_addr                                         "0x0100"
#define  set_VDTOP_CAGC_PEAK_CTRL2_reg(data)                                     (*((volatile unsigned int*)VDTOP_CAGC_PEAK_CTRL2_reg)=data)
#define  get_VDTOP_CAGC_PEAK_CTRL2_reg                                           (*((volatile unsigned int*)VDTOP_CAGC_PEAK_CTRL2_reg))
#define  VDTOP_CAGC_PEAK_CTRL2_cagc_burst_err_diff_sel_shift                     (0)
#define  VDTOP_CAGC_PEAK_CTRL2_cagc_burst_err_diff_sel_mask                      (0x0000003F)
#define  VDTOP_CAGC_PEAK_CTRL2_cagc_burst_err_diff_sel(data)                     (0x0000003F&(data))
#define  VDTOP_CAGC_PEAK_CTRL2_get_cagc_burst_err_diff_sel(data)                 (0x0000003F&(data))

#define  VDTOP_CAGC_PEAK_CTRL3                                                  0x18019444
#define  VDTOP_CAGC_PEAK_CTRL3_reg_addr                                          "0xB8019444"
#define  VDTOP_CAGC_PEAK_CTRL3_reg                                               0xB8019444
#define  VDTOP_CAGC_PEAK_CTRL3_inst_addr                                         "0x0101"
#define  set_VDTOP_CAGC_PEAK_CTRL3_reg(data)                                     (*((volatile unsigned int*)VDTOP_CAGC_PEAK_CTRL3_reg)=data)
#define  get_VDTOP_CAGC_PEAK_CTRL3_reg                                           (*((volatile unsigned int*)VDTOP_CAGC_PEAK_CTRL3_reg))
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_keep_line_num_shift                 (20)
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_thr_shift                           (8)
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_big_shift                           (7)
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_lpf_en_shift                        (6)
#define  VDTOP_CAGC_PEAK_CTRL3_cagc_peak_luma_ratio_shift                        (0)
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_keep_line_num_mask                  (0x3FF00000)
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_thr_mask                            (0x0001FF00)
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_big_mask                            (0x00000080)
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_lpf_en_mask                         (0x00000040)
#define  VDTOP_CAGC_PEAK_CTRL3_cagc_peak_luma_ratio_mask                         (0x0000003F)
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_keep_line_num(data)                 (0x3FF00000&((data)<<20))
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_thr(data)                           (0x0001FF00&((data)<<8))
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_big(data)                           (0x00000080&((data)<<7))
#define  VDTOP_CAGC_PEAK_CTRL3_cdata_measure_lpf_en(data)                        (0x00000040&((data)<<6))
#define  VDTOP_CAGC_PEAK_CTRL3_cagc_peak_luma_ratio(data)                        (0x0000003F&(data))
#define  VDTOP_CAGC_PEAK_CTRL3_get_cdata_measure_keep_line_num(data)             ((0x3FF00000&(data))>>20)
#define  VDTOP_CAGC_PEAK_CTRL3_get_cdata_measure_thr(data)                       ((0x0001FF00&(data))>>8)
#define  VDTOP_CAGC_PEAK_CTRL3_get_cdata_measure_big(data)                       ((0x00000080&(data))>>7)
#define  VDTOP_CAGC_PEAK_CTRL3_get_cdata_measure_lpf_en(data)                    ((0x00000040&(data))>>6)
#define  VDTOP_CAGC_PEAK_CTRL3_get_cagc_peak_luma_ratio(data)                    (0x0000003F&(data))

#define  VDTOP_CHROMA_DELAY_CTRL                                                0x18019448
#define  VDTOP_CHROMA_DELAY_CTRL_reg_addr                                        "0xB8019448"
#define  VDTOP_CHROMA_DELAY_CTRL_reg                                             0xB8019448
#define  VDTOP_CHROMA_DELAY_CTRL_inst_addr                                       "0x0102"
#define  set_VDTOP_CHROMA_DELAY_CTRL_reg(data)                                   (*((volatile unsigned int*)VDTOP_CHROMA_DELAY_CTRL_reg)=data)
#define  get_VDTOP_CHROMA_DELAY_CTRL_reg                                         (*((volatile unsigned int*)VDTOP_CHROMA_DELAY_CTRL_reg))
#define  VDTOP_CHROMA_DELAY_CTRL_cb_delay_shift                                  (4)
#define  VDTOP_CHROMA_DELAY_CTRL_cr_delay_shift                                  (0)
#define  VDTOP_CHROMA_DELAY_CTRL_cb_delay_mask                                   (0x00000070)
#define  VDTOP_CHROMA_DELAY_CTRL_cr_delay_mask                                   (0x00000007)
#define  VDTOP_CHROMA_DELAY_CTRL_cb_delay(data)                                  (0x00000070&((data)<<4))
#define  VDTOP_CHROMA_DELAY_CTRL_cr_delay(data)                                  (0x00000007&(data))
#define  VDTOP_CHROMA_DELAY_CTRL_get_cb_delay(data)                              ((0x00000070&(data))>>4)
#define  VDTOP_CHROMA_DELAY_CTRL_get_cr_delay(data)                              (0x00000007&(data))

#define  VDTOP_BURST_CGAIN_CTRL                                                 0x1801944C
#define  VDTOP_BURST_CGAIN_CTRL_reg_addr                                         "0xB801944C"
#define  VDTOP_BURST_CGAIN_CTRL_reg                                              0xB801944C
#define  VDTOP_BURST_CGAIN_CTRL_inst_addr                                        "0x0103"
#define  set_VDTOP_BURST_CGAIN_CTRL_reg(data)                                    (*((volatile unsigned int*)VDTOP_BURST_CGAIN_CTRL_reg)=data)
#define  get_VDTOP_BURST_CGAIN_CTRL_reg                                          (*((volatile unsigned int*)VDTOP_BURST_CGAIN_CTRL_reg))
#define  VDTOP_BURST_CGAIN_CTRL_flag_burst_x4_shift                              (1)
#define  VDTOP_BURST_CGAIN_CTRL_burst_cgain_x4_en_shift                          (0)
#define  VDTOP_BURST_CGAIN_CTRL_flag_burst_x4_mask                               (0x00000002)
#define  VDTOP_BURST_CGAIN_CTRL_burst_cgain_x4_en_mask                           (0x00000001)
#define  VDTOP_BURST_CGAIN_CTRL_flag_burst_x4(data)                              (0x00000002&((data)<<1))
#define  VDTOP_BURST_CGAIN_CTRL_burst_cgain_x4_en(data)                          (0x00000001&(data))
#define  VDTOP_BURST_CGAIN_CTRL_get_flag_burst_x4(data)                          ((0x00000002&(data))>>1)
#define  VDTOP_BURST_CGAIN_CTRL_get_burst_cgain_x4_en(data)                      (0x00000001&(data))

#define  VDTOP_BURST_CGAIN_MAG_TH                                               0x18019450
#define  VDTOP_BURST_CGAIN_MAG_TH_reg_addr                                       "0xB8019450"
#define  VDTOP_BURST_CGAIN_MAG_TH_reg                                            0xB8019450
#define  VDTOP_BURST_CGAIN_MAG_TH_inst_addr                                      "0x0104"
#define  set_VDTOP_BURST_CGAIN_MAG_TH_reg(data)                                  (*((volatile unsigned int*)VDTOP_BURST_CGAIN_MAG_TH_reg)=data)
#define  get_VDTOP_BURST_CGAIN_MAG_TH_reg                                        (*((volatile unsigned int*)VDTOP_BURST_CGAIN_MAG_TH_reg))
#define  VDTOP_BURST_CGAIN_MAG_TH_burst_cgain_mag_th_shift                       (0)
#define  VDTOP_BURST_CGAIN_MAG_TH_burst_cgain_mag_th_mask                        (0x000000FF)
#define  VDTOP_BURST_CGAIN_MAG_TH_burst_cgain_mag_th(data)                       (0x000000FF&(data))
#define  VDTOP_BURST_CGAIN_MAG_TH_get_burst_cgain_mag_th(data)                   (0x000000FF&(data))

#define  VDTOP_FLAG358_CDTO_INC4                                                0x18019454
#define  VDTOP_FLAG358_CDTO_INC4_reg_addr                                        "0xB8019454"
#define  VDTOP_FLAG358_CDTO_INC4_reg                                             0xB8019454
#define  VDTOP_FLAG358_CDTO_INC4_inst_addr                                       "0x0105"
#define  set_VDTOP_FLAG358_CDTO_INC4_reg(data)                                   (*((volatile unsigned int*)VDTOP_FLAG358_CDTO_INC4_reg)=data)
#define  get_VDTOP_FLAG358_CDTO_INC4_reg                                         (*((volatile unsigned int*)VDTOP_FLAG358_CDTO_INC4_reg))
#define  VDTOP_FLAG358_CDTO_INC4_flag358_iir_en_shift                            (31)
#define  VDTOP_FLAG358_CDTO_INC4_flag358_iir_cunlock_en_shift                    (30)
#define  VDTOP_FLAG358_CDTO_INC4_flag358_cdto_inc_shift                          (0)
#define  VDTOP_FLAG358_CDTO_INC4_flag358_iir_en_mask                             (0x80000000)
#define  VDTOP_FLAG358_CDTO_INC4_flag358_iir_cunlock_en_mask                     (0x40000000)
#define  VDTOP_FLAG358_CDTO_INC4_flag358_cdto_inc_mask                           (0x3FFFFFFF)
#define  VDTOP_FLAG358_CDTO_INC4_flag358_iir_en(data)                            (0x80000000&((data)<<31))
#define  VDTOP_FLAG358_CDTO_INC4_flag358_iir_cunlock_en(data)                    (0x40000000&((data)<<30))
#define  VDTOP_FLAG358_CDTO_INC4_flag358_cdto_inc(data)                          (0x3FFFFFFF&(data))
#define  VDTOP_FLAG358_CDTO_INC4_get_flag358_iir_en(data)                        ((0x80000000&(data))>>31)
#define  VDTOP_FLAG358_CDTO_INC4_get_flag358_iir_cunlock_en(data)                ((0x40000000&(data))>>30)
#define  VDTOP_FLAG358_CDTO_INC4_get_flag358_cdto_inc(data)                      (0x3FFFFFFF&(data))

#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1                                  0x18019458
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_reg_addr                          "0xB8019458"
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_reg                               0xB8019458
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_inst_addr                         "0x0106"
#define  set_VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_reg(data)                     (*((volatile unsigned int*)VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_reg)=data)
#define  get_VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_reg                           (*((volatile unsigned int*)VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_reg))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_fix_en_shift       (31)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_clock_shift    (30)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_selreg_en_shift    (29)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_normal_burst_locationreg_en_shift (28)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_modify_sel_shift (25)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_modify_en_shift (24)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_center_modify_sel_shift (21)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_center_modify_en_shift (20)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_fix_shift          (8)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_shift          (4)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_lpf_reset_shift    (3)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_rst_en_shift       (2)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_auto_burst_location_en_shift      (1)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_new_coef_sel_shift                (0)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_fix_en_mask        (0x80000000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_clock_mask     (0x40000000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_selreg_en_mask     (0x20000000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_normal_burst_locationreg_en_mask  (0x10000000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_modify_sel_mask (0x0E000000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_modify_en_mask (0x01000000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_center_modify_sel_mask (0x00E00000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_center_modify_en_mask (0x00100000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_fix_mask           (0x0007FF00)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_mask           (0x00000030)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_lpf_reset_mask     (0x00000008)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_rst_en_mask        (0x00000004)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_auto_burst_location_en_mask       (0x00000002)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_new_coef_sel_mask                 (0x00000001)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_fix_en(data)       (0x80000000&((data)<<31))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_clock(data)    (0x40000000&((data)<<30))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_selreg_en(data)    (0x20000000&((data)<<29))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_normal_burst_locationreg_en(data) (0x10000000&((data)<<28))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_modify_sel(data) (0x0E000000&((data)<<25))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel_modify_en(data) (0x01000000&((data)<<24))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_center_modify_sel(data) (0x00E00000&((data)<<21))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_center_modify_en(data) (0x00100000&((data)<<20))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_fix(data)          (0x0007FF00&((data)<<8))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_sel(data)          (0x00000030&((data)<<4))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_lpf_reset(data)    (0x00000008&((data)<<3))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_burst_location_rst_en(data)       (0x00000004&((data)<<2))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_auto_burst_location_en(data)      (0x00000002&((data)<<1))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_new_coef_sel(data)                (0x00000001&(data))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_fix_en(data)   ((0x80000000&(data))>>31)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_sel_clock(data) ((0x40000000&(data))>>30)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_selreg_en(data) ((0x20000000&(data))>>29)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_normal_burst_locationreg_en(data) ((0x10000000&(data))>>28)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_sel_modify_sel(data) ((0x0E000000&(data))>>25)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_sel_modify_en(data) ((0x01000000&(data))>>24)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_center_modify_sel(data) ((0x00E00000&(data))>>21)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_center_modify_en(data) ((0x00100000&(data))>>20)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_fix(data)      ((0x0007FF00&(data))>>8)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_sel(data)      ((0x00000030&(data))>>4)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_lpf_reset(data) ((0x00000008&(data))>>3)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_burst_location_rst_en(data)   ((0x00000004&(data))>>2)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_auto_burst_location_en(data)  ((0x00000002&(data))>>1)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_1_get_new_coef_sel(data)            (0x00000001&(data))

#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2                                  0x1801945C
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_reg_addr                          "0xB801945C"
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_reg                               0xB801945C
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_inst_addr                         "0x0107"
#define  set_VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_reg(data)                     (*((volatile unsigned int*)VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_reg)=data)
#define  get_VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_reg                           (*((volatile unsigned int*)VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_reg))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_burst_location_result_shift       (16)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_normal_burst_location_shift       (0)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_burst_location_result_mask        (0x07FF0000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_normal_burst_location_mask        (0x000007FF)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_burst_location_result(data)       (0x07FF0000&((data)<<16))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_normal_burst_location(data)       (0x000007FF&(data))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_get_burst_location_result(data)   ((0x07FF0000&(data))>>16)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_2_get_normal_burst_location(data)   (0x000007FF&(data))

#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3                                  0x18019460
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_reg_addr                          "0xB8019460"
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_reg                               0xB8019460
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_inst_addr                         "0x0108"
#define  set_VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_reg(data)                     (*((volatile unsigned int*)VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_reg)=data)
#define  get_VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_reg                           (*((volatile unsigned int*)VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_reg))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_modify_sel_shift (29)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_modify_en_shift (28)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_end_shift     (16)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_endreg_en_shift (13)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_startreg_en_shift (12)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_start_shift   (0)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_modify_sel_mask (0xE0000000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_modify_en_mask (0x10000000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_end_mask      (0x07FF0000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_endreg_en_mask (0x00002000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_startreg_en_mask (0x00001000)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_start_mask    (0x000007FF)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_modify_sel(data) (0xE0000000&((data)<<29))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_modify_en(data) (0x10000000&((data)<<28))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_end(data)     (0x07FF0000&((data)<<16))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_endreg_en(data) (0x00002000&((data)<<13))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_startreg_en(data) (0x00001000&((data)<<12))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_wide_burst_location_start(data)   (0x000007FF&(data))
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_get_wide_burst_location_modify_sel(data) ((0xE0000000&(data))>>29)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_get_wide_burst_location_modify_en(data) ((0x10000000&(data))>>28)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_get_wide_burst_location_end(data) ((0x07FF0000&(data))>>16)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_get_wide_burst_location_endreg_en(data) ((0x00002000&(data))>>13)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_get_wide_burst_location_startreg_en(data) ((0x00001000&(data))>>12)
#define  VDTOP_SEPARATE_443_358_NEW_FUNCTION_3_get_wide_burst_location_start(data) (0x000007FF&(data))

#define  VDTOP_BURST_LOCATION_STATUS_1                                          0x18019464
#define  VDTOP_BURST_LOCATION_STATUS_1_reg_addr                                  "0xB8019464"
#define  VDTOP_BURST_LOCATION_STATUS_1_reg                                       0xB8019464
#define  VDTOP_BURST_LOCATION_STATUS_1_inst_addr                                 "0x0109"
#define  set_VDTOP_BURST_LOCATION_STATUS_1_reg(data)                             (*((volatile unsigned int*)VDTOP_BURST_LOCATION_STATUS_1_reg)=data)
#define  get_VDTOP_BURST_LOCATION_STATUS_1_reg                                   (*((volatile unsigned int*)VDTOP_BURST_LOCATION_STATUS_1_reg))
#define  VDTOP_BURST_LOCATION_STATUS_1_burst_location_sel_status_shift           (12)
#define  VDTOP_BURST_LOCATION_STATUS_1_normal_burst_location_status_shift        (0)
#define  VDTOP_BURST_LOCATION_STATUS_1_burst_location_sel_status_mask            (0x00003000)
#define  VDTOP_BURST_LOCATION_STATUS_1_normal_burst_location_status_mask         (0x000007FF)
#define  VDTOP_BURST_LOCATION_STATUS_1_burst_location_sel_status(data)           (0x00003000&((data)<<12))
#define  VDTOP_BURST_LOCATION_STATUS_1_normal_burst_location_status(data)        (0x000007FF&(data))
#define  VDTOP_BURST_LOCATION_STATUS_1_get_burst_location_sel_status(data)       ((0x00003000&(data))>>12)
#define  VDTOP_BURST_LOCATION_STATUS_1_get_normal_burst_location_status(data)    (0x000007FF&(data))

#define  VDTOP_BURST_LOCATION_STATUS_2                                          0x18019468
#define  VDTOP_BURST_LOCATION_STATUS_2_reg_addr                                  "0xB8019468"
#define  VDTOP_BURST_LOCATION_STATUS_2_reg                                       0xB8019468
#define  VDTOP_BURST_LOCATION_STATUS_2_inst_addr                                 "0x010A"
#define  set_VDTOP_BURST_LOCATION_STATUS_2_reg(data)                             (*((volatile unsigned int*)VDTOP_BURST_LOCATION_STATUS_2_reg)=data)
#define  get_VDTOP_BURST_LOCATION_STATUS_2_reg                                   (*((volatile unsigned int*)VDTOP_BURST_LOCATION_STATUS_2_reg))
#define  VDTOP_BURST_LOCATION_STATUS_2_wide_burst_location_end_status_shift      (16)
#define  VDTOP_BURST_LOCATION_STATUS_2_wide_burst_location_start_status_shift    (0)
#define  VDTOP_BURST_LOCATION_STATUS_2_wide_burst_location_end_status_mask       (0x07FF0000)
#define  VDTOP_BURST_LOCATION_STATUS_2_wide_burst_location_start_status_mask     (0x000007FF)
#define  VDTOP_BURST_LOCATION_STATUS_2_wide_burst_location_end_status(data)      (0x07FF0000&((data)<<16))
#define  VDTOP_BURST_LOCATION_STATUS_2_wide_burst_location_start_status(data)    (0x000007FF&(data))
#define  VDTOP_BURST_LOCATION_STATUS_2_get_wide_burst_location_end_status(data)  ((0x07FF0000&(data))>>16)
#define  VDTOP_BURST_LOCATION_STATUS_2_get_wide_burst_location_start_status(data) (0x000007FF&(data))

#define  VDTOP_BURST_LOCATION_HSYNC                                             0x1801946C
#define  VDTOP_BURST_LOCATION_HSYNC_reg_addr                                     "0xB801946C"
#define  VDTOP_BURST_LOCATION_HSYNC_reg                                          0xB801946C
#define  VDTOP_BURST_LOCATION_HSYNC_inst_addr                                    "0x010B"
#define  set_VDTOP_BURST_LOCATION_HSYNC_reg(data)                                (*((volatile unsigned int*)VDTOP_BURST_LOCATION_HSYNC_reg)=data)
#define  get_VDTOP_BURST_LOCATION_HSYNC_reg                                      (*((volatile unsigned int*)VDTOP_BURST_LOCATION_HSYNC_reg))
#define  VDTOP_BURST_LOCATION_HSYNC_sep_hsync_start_shift                        (16)
#define  VDTOP_BURST_LOCATION_HSYNC_sep_hsync_end_shift                          (0)
#define  VDTOP_BURST_LOCATION_HSYNC_sep_hsync_start_mask                         (0x07FF0000)
#define  VDTOP_BURST_LOCATION_HSYNC_sep_hsync_end_mask                           (0x000007FF)
#define  VDTOP_BURST_LOCATION_HSYNC_sep_hsync_start(data)                        (0x07FF0000&((data)<<16))
#define  VDTOP_BURST_LOCATION_HSYNC_sep_hsync_end(data)                          (0x000007FF&(data))
#define  VDTOP_BURST_LOCATION_HSYNC_get_sep_hsync_start(data)                    ((0x07FF0000&(data))>>16)
#define  VDTOP_BURST_LOCATION_HSYNC_get_sep_hsync_end(data)                      (0x000007FF&(data))

#define  VDTOP_BURST_LOCATION_FW_CNTL                                           0x18019470
#define  VDTOP_BURST_LOCATION_FW_CNTL_reg_addr                                   "0xB8019470"
#define  VDTOP_BURST_LOCATION_FW_CNTL_reg                                        0xB8019470
#define  VDTOP_BURST_LOCATION_FW_CNTL_inst_addr                                  "0x010C"
#define  set_VDTOP_BURST_LOCATION_FW_CNTL_reg(data)                              (*((volatile unsigned int*)VDTOP_BURST_LOCATION_FW_CNTL_reg)=data)
#define  get_VDTOP_BURST_LOCATION_FW_CNTL_reg                                    (*((volatile unsigned int*)VDTOP_BURST_LOCATION_FW_CNTL_reg))
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_auto_en_shift               (28)
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_enable_mode_shift           (16)
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_magnitude_thr_shift         (8)
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_auto_thr_shift              (0)
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_auto_en_mask                (0x10000000)
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_enable_mode_mask            (0x00FF0000)
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_magnitude_thr_mask          (0x0000FF00)
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_auto_thr_mask               (0x000000FF)
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_auto_en(data)               (0x10000000&((data)<<28))
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_enable_mode(data)           (0x00FF0000&((data)<<16))
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_magnitude_thr(data)         (0x0000FF00&((data)<<8))
#define  VDTOP_BURST_LOCATION_FW_CNTL_burst_location_auto_thr(data)              (0x000000FF&(data))
#define  VDTOP_BURST_LOCATION_FW_CNTL_get_burst_location_auto_en(data)           ((0x10000000&(data))>>28)
#define  VDTOP_BURST_LOCATION_FW_CNTL_get_burst_location_enable_mode(data)       ((0x00FF0000&(data))>>16)
#define  VDTOP_BURST_LOCATION_FW_CNTL_get_burst_location_magnitude_thr(data)     ((0x0000FF00&(data))>>8)
#define  VDTOP_BURST_LOCATION_FW_CNTL_get_burst_location_auto_thr(data)          (0x000000FF&(data))

#define  VDTOP_Y_PATH_EQ_FILTER                                                 0x18019474
#define  VDTOP_Y_PATH_EQ_FILTER_reg_addr                                         "0xB8019474"
#define  VDTOP_Y_PATH_EQ_FILTER_reg                                              0xB8019474
#define  VDTOP_Y_PATH_EQ_FILTER_inst_addr                                        "0x010D"
#define  set_VDTOP_Y_PATH_EQ_FILTER_reg(data)                                    (*((volatile unsigned int*)VDTOP_Y_PATH_EQ_FILTER_reg)=data)
#define  get_VDTOP_Y_PATH_EQ_FILTER_reg                                          (*((volatile unsigned int*)VDTOP_Y_PATH_EQ_FILTER_reg))
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_eq_en_shift                               (31)
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_eq_bypass_sel_shift                       (30)
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_coef_num_shift                            (12)
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_coef_value_shift                          (0)
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_eq_en_mask                                (0x80000000)
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_eq_bypass_sel_mask                        (0x40000000)
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_coef_num_mask                             (0x0007F000)
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_coef_value_mask                           (0x000007FF)
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_eq_en(data)                               (0x80000000&((data)<<31))
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_eq_bypass_sel(data)                       (0x40000000&((data)<<30))
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_coef_num(data)                            (0x0007F000&((data)<<12))
#define  VDTOP_Y_PATH_EQ_FILTER_y_path_coef_value(data)                          (0x000007FF&(data))
#define  VDTOP_Y_PATH_EQ_FILTER_get_y_path_eq_en(data)                           ((0x80000000&(data))>>31)
#define  VDTOP_Y_PATH_EQ_FILTER_get_y_path_eq_bypass_sel(data)                   ((0x40000000&(data))>>30)
#define  VDTOP_Y_PATH_EQ_FILTER_get_y_path_coef_num(data)                        ((0x0007F000&(data))>>12)
#define  VDTOP_Y_PATH_EQ_FILTER_get_y_path_coef_value(data)                      (0x000007FF&(data))

#define  VDTOP_Y_PATH_EQ_FILTER_R                                               0x18019478
#define  VDTOP_Y_PATH_EQ_FILTER_R_reg_addr                                       "0xB8019478"
#define  VDTOP_Y_PATH_EQ_FILTER_R_reg                                            0xB8019478
#define  VDTOP_Y_PATH_EQ_FILTER_R_inst_addr                                      "0x010E"
#define  set_VDTOP_Y_PATH_EQ_FILTER_R_reg(data)                                  (*((volatile unsigned int*)VDTOP_Y_PATH_EQ_FILTER_R_reg)=data)
#define  get_VDTOP_Y_PATH_EQ_FILTER_R_reg                                        (*((volatile unsigned int*)VDTOP_Y_PATH_EQ_FILTER_R_reg))
#define  VDTOP_Y_PATH_EQ_FILTER_R_y_path_coef_num_r_shift                        (12)
#define  VDTOP_Y_PATH_EQ_FILTER_R_y_path_coef_value_r_shift                      (0)
#define  VDTOP_Y_PATH_EQ_FILTER_R_y_path_coef_num_r_mask                         (0x0007F000)
#define  VDTOP_Y_PATH_EQ_FILTER_R_y_path_coef_value_r_mask                       (0x000007FF)
#define  VDTOP_Y_PATH_EQ_FILTER_R_y_path_coef_num_r(data)                        (0x0007F000&((data)<<12))
#define  VDTOP_Y_PATH_EQ_FILTER_R_y_path_coef_value_r(data)                      (0x000007FF&(data))
#define  VDTOP_Y_PATH_EQ_FILTER_R_get_y_path_coef_num_r(data)                    ((0x0007F000&(data))>>12)
#define  VDTOP_Y_PATH_EQ_FILTER_R_get_y_path_coef_value_r(data)                  (0x000007FF&(data))

#define  VDTOP_PALM_FLAG_COMPENSATION1                                          0x18019490
#define  VDTOP_PALM_FLAG_COMPENSATION1_reg_addr                                  "0xB8019490"
#define  VDTOP_PALM_FLAG_COMPENSATION1_reg                                       0xB8019490
#define  VDTOP_PALM_FLAG_COMPENSATION1_inst_addr                                 "0x010F"
#define  set_VDTOP_PALM_FLAG_COMPENSATION1_reg(data)                             (*((volatile unsigned int*)VDTOP_PALM_FLAG_COMPENSATION1_reg)=data)
#define  get_VDTOP_PALM_FLAG_COMPENSATION1_reg                                   (*((volatile unsigned int*)VDTOP_PALM_FLAG_COMPENSATION1_reg))
#define  VDTOP_PALM_FLAG_COMPENSATION1_flag625_vsync_l_sel_shift                 (7)
#define  VDTOP_PALM_FLAG_COMPENSATION1_flag625_vsync_l_th_shift                  (6)
#define  VDTOP_PALM_FLAG_COMPENSATION1_palm_atone_counter_shift                  (0)
#define  VDTOP_PALM_FLAG_COMPENSATION1_flag625_vsync_l_sel_mask                  (0x00000080)
#define  VDTOP_PALM_FLAG_COMPENSATION1_flag625_vsync_l_th_mask                   (0x00000040)
#define  VDTOP_PALM_FLAG_COMPENSATION1_palm_atone_counter_mask                   (0x0000003F)
#define  VDTOP_PALM_FLAG_COMPENSATION1_flag625_vsync_l_sel(data)                 (0x00000080&((data)<<7))
#define  VDTOP_PALM_FLAG_COMPENSATION1_flag625_vsync_l_th(data)                  (0x00000040&((data)<<6))
#define  VDTOP_PALM_FLAG_COMPENSATION1_palm_atone_counter(data)                  (0x0000003F&(data))
#define  VDTOP_PALM_FLAG_COMPENSATION1_get_flag625_vsync_l_sel(data)             ((0x00000080&(data))>>7)
#define  VDTOP_PALM_FLAG_COMPENSATION1_get_flag625_vsync_l_th(data)              ((0x00000040&(data))>>6)
#define  VDTOP_PALM_FLAG_COMPENSATION1_get_palm_atone_counter(data)              (0x0000003F&(data))

#define  VDTOP_PALM_FLAG_COMPENSATION2                                          0x18019494
#define  VDTOP_PALM_FLAG_COMPENSATION2_reg_addr                                  "0xB8019494"
#define  VDTOP_PALM_FLAG_COMPENSATION2_reg                                       0xB8019494
#define  VDTOP_PALM_FLAG_COMPENSATION2_inst_addr                                 "0x0110"
#define  set_VDTOP_PALM_FLAG_COMPENSATION2_reg(data)                             (*((volatile unsigned int*)VDTOP_PALM_FLAG_COMPENSATION2_reg)=data)
#define  get_VDTOP_PALM_FLAG_COMPENSATION2_reg                                   (*((volatile unsigned int*)VDTOP_PALM_FLAG_COMPENSATION2_reg))
#define  VDTOP_PALM_FLAG_COMPENSATION2_palm_atone_threshold_shift                (0)
#define  VDTOP_PALM_FLAG_COMPENSATION2_palm_atone_threshold_mask                 (0x000000FF)
#define  VDTOP_PALM_FLAG_COMPENSATION2_palm_atone_threshold(data)                (0x000000FF&(data))
#define  VDTOP_PALM_FLAG_COMPENSATION2_get_palm_atone_threshold(data)            (0x000000FF&(data))

#define  VDTOP_MANUAL_MODE                                                      0x180194A0
#define  VDTOP_MANUAL_MODE_reg_addr                                              "0xB80194A0"
#define  VDTOP_MANUAL_MODE_reg                                                   0xB80194A0
#define  VDTOP_MANUAL_MODE_inst_addr                                             "0x0111"
#define  set_VDTOP_MANUAL_MODE_reg(data)                                         (*((volatile unsigned int*)VDTOP_MANUAL_MODE_reg)=data)
#define  get_VDTOP_MANUAL_MODE_reg                                               (*((volatile unsigned int*)VDTOP_MANUAL_MODE_reg))
#define  VDTOP_MANUAL_MODE_colour_mode_dark_check_shift                          (11)
#define  VDTOP_MANUAL_MODE_colour_mode_dark_set_shift                            (8)
#define  VDTOP_MANUAL_MODE_auto_mode_en_shift                                    (7)
#define  VDTOP_MANUAL_MODE_auto_625only_en_shift                                 (6)
#define  VDTOP_MANUAL_MODE_auto_burst_switch_625only_shift                       (5)
#define  VDTOP_MANUAL_MODE_state_machine_reset_shift                             (3)
#define  VDTOP_MANUAL_MODE_manual_mode_select_shift                              (0)
#define  VDTOP_MANUAL_MODE_colour_mode_dark_check_mask                           (0x00000800)
#define  VDTOP_MANUAL_MODE_colour_mode_dark_set_mask                             (0x00000700)
#define  VDTOP_MANUAL_MODE_auto_mode_en_mask                                     (0x00000080)
#define  VDTOP_MANUAL_MODE_auto_625only_en_mask                                  (0x00000040)
#define  VDTOP_MANUAL_MODE_auto_burst_switch_625only_mask                        (0x00000020)
#define  VDTOP_MANUAL_MODE_state_machine_reset_mask                              (0x00000008)
#define  VDTOP_MANUAL_MODE_manual_mode_select_mask                               (0x00000007)
#define  VDTOP_MANUAL_MODE_colour_mode_dark_check(data)                          (0x00000800&((data)<<11))
#define  VDTOP_MANUAL_MODE_colour_mode_dark_set(data)                            (0x00000700&((data)<<8))
#define  VDTOP_MANUAL_MODE_auto_mode_en(data)                                    (0x00000080&((data)<<7))
#define  VDTOP_MANUAL_MODE_auto_625only_en(data)                                 (0x00000040&((data)<<6))
#define  VDTOP_MANUAL_MODE_auto_burst_switch_625only(data)                       (0x00000020&((data)<<5))
#define  VDTOP_MANUAL_MODE_state_machine_reset(data)                             (0x00000008&((data)<<3))
#define  VDTOP_MANUAL_MODE_manual_mode_select(data)                              (0x00000007&(data))
#define  VDTOP_MANUAL_MODE_get_colour_mode_dark_check(data)                      ((0x00000800&(data))>>11)
#define  VDTOP_MANUAL_MODE_get_colour_mode_dark_set(data)                        ((0x00000700&(data))>>8)
#define  VDTOP_MANUAL_MODE_get_auto_mode_en(data)                                ((0x00000080&(data))>>7)
#define  VDTOP_MANUAL_MODE_get_auto_625only_en(data)                             ((0x00000040&(data))>>6)
#define  VDTOP_MANUAL_MODE_get_auto_burst_switch_625only(data)                   ((0x00000020&(data))>>5)
#define  VDTOP_MANUAL_MODE_get_state_machine_reset(data)                         ((0x00000008&(data))>>3)
#define  VDTOP_MANUAL_MODE_get_manual_mode_select(data)                          (0x00000007&(data))

#define  VDTOP_MODE_DETECTION_STATUS                                            0x180194A4
#define  VDTOP_MODE_DETECTION_STATUS_reg_addr                                    "0xB80194A4"
#define  VDTOP_MODE_DETECTION_STATUS_reg                                         0xB80194A4
#define  VDTOP_MODE_DETECTION_STATUS_inst_addr                                   "0x0112"
#define  set_VDTOP_MODE_DETECTION_STATUS_reg(data)                               (*((volatile unsigned int*)VDTOP_MODE_DETECTION_STATUS_reg)=data)
#define  get_VDTOP_MODE_DETECTION_STATUS_reg                                     (*((volatile unsigned int*)VDTOP_MODE_DETECTION_STATUS_reg))
#define  VDTOP_MODE_DETECTION_STATUS_set_mode_status_shift                       (4)
#define  VDTOP_MODE_DETECTION_STATUS_decision_mode_status_shift                  (0)
#define  VDTOP_MODE_DETECTION_STATUS_set_mode_status_mask                        (0x00000070)
#define  VDTOP_MODE_DETECTION_STATUS_decision_mode_status_mask                   (0x00000007)
#define  VDTOP_MODE_DETECTION_STATUS_set_mode_status(data)                       (0x00000070&((data)<<4))
#define  VDTOP_MODE_DETECTION_STATUS_decision_mode_status(data)                  (0x00000007&(data))
#define  VDTOP_MODE_DETECTION_STATUS_get_set_mode_status(data)                   ((0x00000070&(data))>>4)
#define  VDTOP_MODE_DETECTION_STATUS_get_decision_mode_status(data)              (0x00000007&(data))

#define  VDTOP_STATISTIC_AND_DISABLE_MODE                                       0x180194A8
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_reg_addr                               "0xB80194A8"
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_reg                                    0xB80194A8
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_inst_addr                              "0x0113"
#define  set_VDTOP_STATISTIC_AND_DISABLE_MODE_reg(data)                          (*((volatile unsigned int*)VDTOP_STATISTIC_AND_DISABLE_MODE_reg)=data)
#define  get_VDTOP_STATISTIC_AND_DISABLE_MODE_reg                                (*((volatile unsigned int*)VDTOP_STATISTIC_AND_DISABLE_MODE_reg))
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_disable_mode_en_shift                  (7)
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_disable_mode_shift                     (6)
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_statistic_number_shift                 (0)
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_disable_mode_en_mask                   (0x00000080)
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_disable_mode_mask                      (0x00000040)
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_statistic_number_mask                  (0x0000003F)
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_disable_mode_en(data)                  (0x00000080&((data)<<7))
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_disable_mode(data)                     (0x00000040&((data)<<6))
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_statistic_number(data)                 (0x0000003F&(data))
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_get_disable_mode_en(data)              ((0x00000080&(data))>>7)
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_get_disable_mode(data)                 ((0x00000040&(data))>>6)
#define  VDTOP_STATISTIC_AND_DISABLE_MODE_get_statistic_number(data)             (0x0000003F&(data))

#define  VDTOP_PREFER_MODE                                                      0x180194AC
#define  VDTOP_PREFER_MODE_reg_addr                                              "0xB80194AC"
#define  VDTOP_PREFER_MODE_reg                                                   0xB80194AC
#define  VDTOP_PREFER_MODE_inst_addr                                             "0x0114"
#define  set_VDTOP_PREFER_MODE_reg(data)                                         (*((volatile unsigned int*)VDTOP_PREFER_MODE_reg)=data)
#define  get_VDTOP_PREFER_MODE_reg                                               (*((volatile unsigned int*)VDTOP_PREFER_MODE_reg))
#define  VDTOP_PREFER_MODE_prefer_ntsc50_paln_shift                              (7)
#define  VDTOP_PREFER_MODE_prefer_ntsc443_pal60_shift                            (6)
#define  VDTOP_PREFER_MODE_prefer_secam_pali_shift                               (5)
#define  VDTOP_PREFER_MODE_prefer_ntsc_palm_shift                                (4)
#define  VDTOP_PREFER_MODE_prefer_ntsc50_paln_en_shift                           (3)
#define  VDTOP_PREFER_MODE_prefer_ntsc443_pal60_en_shift                         (2)
#define  VDTOP_PREFER_MODE_prefer_secam_pali_en_shift                            (1)
#define  VDTOP_PREFER_MODE_prefer_ntsc_palm_en_shift                             (0)
#define  VDTOP_PREFER_MODE_prefer_ntsc50_paln_mask                               (0x00000080)
#define  VDTOP_PREFER_MODE_prefer_ntsc443_pal60_mask                             (0x00000040)
#define  VDTOP_PREFER_MODE_prefer_secam_pali_mask                                (0x00000020)
#define  VDTOP_PREFER_MODE_prefer_ntsc_palm_mask                                 (0x00000010)
#define  VDTOP_PREFER_MODE_prefer_ntsc50_paln_en_mask                            (0x00000008)
#define  VDTOP_PREFER_MODE_prefer_ntsc443_pal60_en_mask                          (0x00000004)
#define  VDTOP_PREFER_MODE_prefer_secam_pali_en_mask                             (0x00000002)
#define  VDTOP_PREFER_MODE_prefer_ntsc_palm_en_mask                              (0x00000001)
#define  VDTOP_PREFER_MODE_prefer_ntsc50_paln(data)                              (0x00000080&((data)<<7))
#define  VDTOP_PREFER_MODE_prefer_ntsc443_pal60(data)                            (0x00000040&((data)<<6))
#define  VDTOP_PREFER_MODE_prefer_secam_pali(data)                               (0x00000020&((data)<<5))
#define  VDTOP_PREFER_MODE_prefer_ntsc_palm(data)                                (0x00000010&((data)<<4))
#define  VDTOP_PREFER_MODE_prefer_ntsc50_paln_en(data)                           (0x00000008&((data)<<3))
#define  VDTOP_PREFER_MODE_prefer_ntsc443_pal60_en(data)                         (0x00000004&((data)<<2))
#define  VDTOP_PREFER_MODE_prefer_secam_pali_en(data)                            (0x00000002&((data)<<1))
#define  VDTOP_PREFER_MODE_prefer_ntsc_palm_en(data)                             (0x00000001&(data))
#define  VDTOP_PREFER_MODE_get_prefer_ntsc50_paln(data)                          ((0x00000080&(data))>>7)
#define  VDTOP_PREFER_MODE_get_prefer_ntsc443_pal60(data)                        ((0x00000040&(data))>>6)
#define  VDTOP_PREFER_MODE_get_prefer_secam_pali(data)                           ((0x00000020&(data))>>5)
#define  VDTOP_PREFER_MODE_get_prefer_ntsc_palm(data)                            ((0x00000010&(data))>>4)
#define  VDTOP_PREFER_MODE_get_prefer_ntsc50_paln_en(data)                       ((0x00000008&(data))>>3)
#define  VDTOP_PREFER_MODE_get_prefer_ntsc443_pal60_en(data)                     ((0x00000004&(data))>>2)
#define  VDTOP_PREFER_MODE_get_prefer_secam_pali_en(data)                        ((0x00000002&(data))>>1)
#define  VDTOP_PREFER_MODE_get_prefer_ntsc_palm_en(data)                         (0x00000001&(data))

#define  VDTOP_STATE_MACHINE_FIX_MODE                                           0x180194B0
#define  VDTOP_STATE_MACHINE_FIX_MODE_reg_addr                                   "0xB80194B0"
#define  VDTOP_STATE_MACHINE_FIX_MODE_reg                                        0xB80194B0
#define  VDTOP_STATE_MACHINE_FIX_MODE_inst_addr                                  "0x0115"
#define  set_VDTOP_STATE_MACHINE_FIX_MODE_reg(data)                              (*((volatile unsigned int*)VDTOP_STATE_MACHINE_FIX_MODE_reg)=data)
#define  get_VDTOP_STATE_MACHINE_FIX_MODE_reg                                    (*((volatile unsigned int*)VDTOP_STATE_MACHINE_FIX_MODE_reg))
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_625flag_en_shift                       (7)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_443flag_en_shift                       (6)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_palorflag_en_shift                     (5)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_secamflag_en_shift                     (4)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_625_h_shift                            (3)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_443_h_shift                            (2)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_palor_h_shift                          (1)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_secam_h_shift                          (0)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_625flag_en_mask                        (0x00000080)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_443flag_en_mask                        (0x00000040)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_palorflag_en_mask                      (0x00000020)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_secamflag_en_mask                      (0x00000010)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_625_h_mask                             (0x00000008)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_443_h_mask                             (0x00000004)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_palor_h_mask                           (0x00000002)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_secam_h_mask                           (0x00000001)
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_625flag_en(data)                       (0x00000080&((data)<<7))
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_443flag_en(data)                       (0x00000040&((data)<<6))
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_palorflag_en(data)                     (0x00000020&((data)<<5))
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_secamflag_en(data)                     (0x00000010&((data)<<4))
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_625_h(data)                            (0x00000008&((data)<<3))
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_443_h(data)                            (0x00000004&((data)<<2))
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_palor_h(data)                          (0x00000002&((data)<<1))
#define  VDTOP_STATE_MACHINE_FIX_MODE_fix_secam_h(data)                          (0x00000001&(data))
#define  VDTOP_STATE_MACHINE_FIX_MODE_get_fix_625flag_en(data)                   ((0x00000080&(data))>>7)
#define  VDTOP_STATE_MACHINE_FIX_MODE_get_fix_443flag_en(data)                   ((0x00000040&(data))>>6)
#define  VDTOP_STATE_MACHINE_FIX_MODE_get_fix_palorflag_en(data)                 ((0x00000020&(data))>>5)
#define  VDTOP_STATE_MACHINE_FIX_MODE_get_fix_secamflag_en(data)                 ((0x00000010&(data))>>4)
#define  VDTOP_STATE_MACHINE_FIX_MODE_get_fix_625_h(data)                        ((0x00000008&(data))>>3)
#define  VDTOP_STATE_MACHINE_FIX_MODE_get_fix_443_h(data)                        ((0x00000004&(data))>>2)
#define  VDTOP_STATE_MACHINE_FIX_MODE_get_fix_palor_h(data)                      ((0x00000002&(data))>>1)
#define  VDTOP_STATE_MACHINE_FIX_MODE_get_fix_secam_h(data)                      (0x00000001&(data))

#define  VDTOP_VD_BASIC_REGISTER_ENABLE                                         0x180194B4
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_reg_addr                                 "0xB80194B4"
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_reg                                      0xB80194B4
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_inst_addr                                "0x0116"
#define  set_VDTOP_VD_BASIC_REGISTER_ENABLE_reg(data)                            (*((volatile unsigned int*)VDTOP_VD_BASIC_REGISTER_ENABLE_reg)=data)
#define  get_VDTOP_VD_BASIC_REGISTER_ENABLE_reg                                  (*((volatile unsigned int*)VDTOP_VD_BASIC_REGISTER_ENABLE_reg))
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_hactivestartreg_en_shift                 (7)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_hpixelreg_en_shift                       (6)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_colourmodereg_en_shift                   (5)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_hagcreg_en_shift                         (4)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_vline625reg_en_shift                     (3)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_cdtomem_reg_en_shift                     (2)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_vsyncreg_en_shift                        (1)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_ped_reg_en_shift                         (0)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_hactivestartreg_en_mask                  (0x00000080)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_hpixelreg_en_mask                        (0x00000040)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_colourmodereg_en_mask                    (0x00000020)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_hagcreg_en_mask                          (0x00000010)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_vline625reg_en_mask                      (0x00000008)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_cdtomem_reg_en_mask                      (0x00000004)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_vsyncreg_en_mask                         (0x00000002)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_ped_reg_en_mask                          (0x00000001)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_hactivestartreg_en(data)                 (0x00000080&((data)<<7))
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_hpixelreg_en(data)                       (0x00000040&((data)<<6))
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_colourmodereg_en(data)                   (0x00000020&((data)<<5))
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_hagcreg_en(data)                         (0x00000010&((data)<<4))
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_vline625reg_en(data)                     (0x00000008&((data)<<3))
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_cdtomem_reg_en(data)                     (0x00000004&((data)<<2))
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_vsyncreg_en(data)                        (0x00000002&((data)<<1))
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_ped_reg_en(data)                         (0x00000001&(data))
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_get_hactivestartreg_en(data)             ((0x00000080&(data))>>7)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_get_hpixelreg_en(data)                   ((0x00000040&(data))>>6)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_get_colourmodereg_en(data)               ((0x00000020&(data))>>5)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_get_hagcreg_en(data)                     ((0x00000010&(data))>>4)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_get_vline625reg_en(data)                 ((0x00000008&(data))>>3)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_get_cdtomem_reg_en(data)                 ((0x00000004&(data))>>2)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_get_vsyncreg_en(data)                    ((0x00000002&(data))>>1)
#define  VDTOP_VD_BASIC_REGISTER_ENABLE_get_ped_reg_en(data)                     (0x00000001&(data))

#define  VDTOP_AUTO_MODE_S_M_STATISTIC                                          0x180194B8
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_reg_addr                                  "0xB80194B8"
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_reg                                       0xB80194B8
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_inst_addr                                 "0x0117"
#define  set_VDTOP_AUTO_MODE_S_M_STATISTIC_reg(data)                             (*((volatile unsigned int*)VDTOP_AUTO_MODE_S_M_STATISTIC_reg)=data)
#define  get_VDTOP_AUTO_MODE_S_M_STATISTIC_reg                                   (*((volatile unsigned int*)VDTOP_AUTO_MODE_S_M_STATISTIC_reg))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_cpll_demod_region_always_on_shift         (24)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_auto_pos_modify_en_cpll_shift             (23)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_auto_pos_mode_sel_cpll_shift              (20)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_hactivestartreg_en_cpll_shift             (16)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_hactive_start_cpll_shift                  (8)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_switch_palo_palm_method_shift             (6)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_auto_secam_pali_method_shift              (4)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_secam_flag_freq_disable_shift             (3)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_statistic_multiplier_shift                (0)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_cpll_demod_region_always_on_mask          (0x01000000)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_auto_pos_modify_en_cpll_mask              (0x00800000)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_auto_pos_mode_sel_cpll_mask               (0x00700000)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_hactivestartreg_en_cpll_mask              (0x00010000)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_hactive_start_cpll_mask                   (0x0000FF00)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_switch_palo_palm_method_mask              (0x000000C0)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_auto_secam_pali_method_mask               (0x00000030)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_secam_flag_freq_disable_mask              (0x00000008)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_statistic_multiplier_mask                 (0x00000007)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_cpll_demod_region_always_on(data)         (0x01000000&((data)<<24))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_auto_pos_modify_en_cpll(data)             (0x00800000&((data)<<23))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_auto_pos_mode_sel_cpll(data)              (0x00700000&((data)<<20))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_hactivestartreg_en_cpll(data)             (0x00010000&((data)<<16))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_hactive_start_cpll(data)                  (0x0000FF00&((data)<<8))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_switch_palo_palm_method(data)             (0x000000C0&((data)<<6))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_auto_secam_pali_method(data)              (0x00000030&((data)<<4))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_secam_flag_freq_disable(data)             (0x00000008&((data)<<3))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_statistic_multiplier(data)                (0x00000007&(data))
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_get_cpll_demod_region_always_on(data)     ((0x01000000&(data))>>24)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_get_auto_pos_modify_en_cpll(data)         ((0x00800000&(data))>>23)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_get_auto_pos_mode_sel_cpll(data)          ((0x00700000&(data))>>20)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_get_hactivestartreg_en_cpll(data)         ((0x00010000&(data))>>16)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_get_hactive_start_cpll(data)              ((0x0000FF00&(data))>>8)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_get_switch_palo_palm_method(data)         ((0x000000C0&(data))>>6)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_get_auto_secam_pali_method(data)          ((0x00000030&(data))>>4)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_get_secam_flag_freq_disable(data)         ((0x00000008&(data))>>3)
#define  VDTOP_AUTO_MODE_S_M_STATISTIC_get_statistic_multiplier(data)            (0x00000007&(data))

#define  VDTOP_FLAG358_CTRL                                                     0x180194C8
#define  VDTOP_FLAG358_CTRL_reg_addr                                             "0xB80194C8"
#define  VDTOP_FLAG358_CTRL_reg                                                  0xB80194C8
#define  VDTOP_FLAG358_CTRL_inst_addr                                            "0x0118"
#define  set_VDTOP_FLAG358_CTRL_reg(data)                                        (*((volatile unsigned int*)VDTOP_FLAG358_CTRL_reg)=data)
#define  get_VDTOP_FLAG358_CTRL_reg                                              (*((volatile unsigned int*)VDTOP_FLAG358_CTRL_reg))
#define  VDTOP_FLAG358_CTRL_fix_358flag_en_shift                                 (7)
#define  VDTOP_FLAG358_CTRL_fix_358_h_shift                                      (6)
#define  VDTOP_FLAG358_CTRL_auto_443_358_method_625_shift                        (4)
#define  VDTOP_FLAG358_CTRL_auto_443_358_method_525_shift                        (2)
#define  VDTOP_FLAG358_CTRL_auto_sel_no_burst_625_shift                          (0)
#define  VDTOP_FLAG358_CTRL_fix_358flag_en_mask                                  (0x00000080)
#define  VDTOP_FLAG358_CTRL_fix_358_h_mask                                       (0x00000040)
#define  VDTOP_FLAG358_CTRL_auto_443_358_method_625_mask                         (0x00000030)
#define  VDTOP_FLAG358_CTRL_auto_443_358_method_525_mask                         (0x0000000C)
#define  VDTOP_FLAG358_CTRL_auto_sel_no_burst_625_mask                           (0x00000003)
#define  VDTOP_FLAG358_CTRL_fix_358flag_en(data)                                 (0x00000080&((data)<<7))
#define  VDTOP_FLAG358_CTRL_fix_358_h(data)                                      (0x00000040&((data)<<6))
#define  VDTOP_FLAG358_CTRL_auto_443_358_method_625(data)                        (0x00000030&((data)<<4))
#define  VDTOP_FLAG358_CTRL_auto_443_358_method_525(data)                        (0x0000000C&((data)<<2))
#define  VDTOP_FLAG358_CTRL_auto_sel_no_burst_625(data)                          (0x00000003&(data))
#define  VDTOP_FLAG358_CTRL_get_fix_358flag_en(data)                             ((0x00000080&(data))>>7)
#define  VDTOP_FLAG358_CTRL_get_fix_358_h(data)                                  ((0x00000040&(data))>>6)
#define  VDTOP_FLAG358_CTRL_get_auto_443_358_method_625(data)                    ((0x00000030&(data))>>4)
#define  VDTOP_FLAG358_CTRL_get_auto_443_358_method_525(data)                    ((0x0000000C&(data))>>2)
#define  VDTOP_FLAG358_CTRL_get_auto_sel_no_burst_625(data)                      (0x00000003&(data))

#define  VDTOP_NO_BURST_MAG_TH                                                  0x180194CC
#define  VDTOP_NO_BURST_MAG_TH_reg_addr                                          "0xB80194CC"
#define  VDTOP_NO_BURST_MAG_TH_reg                                               0xB80194CC
#define  VDTOP_NO_BURST_MAG_TH_inst_addr                                         "0x0119"
#define  set_VDTOP_NO_BURST_MAG_TH_reg(data)                                     (*((volatile unsigned int*)VDTOP_NO_BURST_MAG_TH_reg)=data)
#define  get_VDTOP_NO_BURST_MAG_TH_reg                                           (*((volatile unsigned int*)VDTOP_NO_BURST_MAG_TH_reg))
#define  VDTOP_NO_BURST_MAG_TH_no_burst_mag_th_shift                             (0)
#define  VDTOP_NO_BURST_MAG_TH_no_burst_mag_th_mask                              (0x000000FF)
#define  VDTOP_NO_BURST_MAG_TH_no_burst_mag_th(data)                             (0x000000FF&(data))
#define  VDTOP_NO_BURST_MAG_TH_get_no_burst_mag_th(data)                         (0x000000FF&(data))

#define  VDTOP_NO_BURST_MAG_FILTER_TH                                           0x180194D0
#define  VDTOP_NO_BURST_MAG_FILTER_TH_reg_addr                                   "0xB80194D0"
#define  VDTOP_NO_BURST_MAG_FILTER_TH_reg                                        0xB80194D0
#define  VDTOP_NO_BURST_MAG_FILTER_TH_inst_addr                                  "0x011A"
#define  set_VDTOP_NO_BURST_MAG_FILTER_TH_reg(data)                              (*((volatile unsigned int*)VDTOP_NO_BURST_MAG_FILTER_TH_reg)=data)
#define  get_VDTOP_NO_BURST_MAG_FILTER_TH_reg                                    (*((volatile unsigned int*)VDTOP_NO_BURST_MAG_FILTER_TH_reg))
#define  VDTOP_NO_BURST_MAG_FILTER_TH_no_burst_mag_filter_th_shift               (0)
#define  VDTOP_NO_BURST_MAG_FILTER_TH_no_burst_mag_filter_th_mask                (0x000000FF)
#define  VDTOP_NO_BURST_MAG_FILTER_TH_no_burst_mag_filter_th(data)               (0x000000FF&(data))
#define  VDTOP_NO_BURST_MAG_FILTER_TH_get_no_burst_mag_filter_th(data)           (0x000000FF&(data))

#define  VDTOP_NO_BURST_443_CTRL                                                0x180194D4
#define  VDTOP_NO_BURST_443_CTRL_reg_addr                                        "0xB80194D4"
#define  VDTOP_NO_BURST_443_CTRL_reg                                             0xB80194D4
#define  VDTOP_NO_BURST_443_CTRL_inst_addr                                       "0x011B"
#define  set_VDTOP_NO_BURST_443_CTRL_reg(data)                                   (*((volatile unsigned int*)VDTOP_NO_BURST_443_CTRL_reg)=data)
#define  get_VDTOP_NO_BURST_443_CTRL_reg                                         (*((volatile unsigned int*)VDTOP_NO_BURST_443_CTRL_reg))
#define  VDTOP_NO_BURST_443_CTRL_burst_mag_trig_offset_shift                     (4)
#define  VDTOP_NO_BURST_443_CTRL_no_burst_flag_shift                             (3)
#define  VDTOP_NO_BURST_443_CTRL_paln_flag_new_shift                             (2)
#define  VDTOP_NO_BURST_443_CTRL_burst_win_error_shift                           (1)
#define  VDTOP_NO_BURST_443_CTRL_no_burst_443_en_shift                           (0)
#define  VDTOP_NO_BURST_443_CTRL_burst_mag_trig_offset_mask                      (0x000000F0)
#define  VDTOP_NO_BURST_443_CTRL_no_burst_flag_mask                              (0x00000008)
#define  VDTOP_NO_BURST_443_CTRL_paln_flag_new_mask                              (0x00000004)
#define  VDTOP_NO_BURST_443_CTRL_burst_win_error_mask                            (0x00000002)
#define  VDTOP_NO_BURST_443_CTRL_no_burst_443_en_mask                            (0x00000001)
#define  VDTOP_NO_BURST_443_CTRL_burst_mag_trig_offset(data)                     (0x000000F0&((data)<<4))
#define  VDTOP_NO_BURST_443_CTRL_no_burst_flag(data)                             (0x00000008&((data)<<3))
#define  VDTOP_NO_BURST_443_CTRL_paln_flag_new(data)                             (0x00000004&((data)<<2))
#define  VDTOP_NO_BURST_443_CTRL_burst_win_error(data)                           (0x00000002&((data)<<1))
#define  VDTOP_NO_BURST_443_CTRL_no_burst_443_en(data)                           (0x00000001&(data))
#define  VDTOP_NO_BURST_443_CTRL_get_burst_mag_trig_offset(data)                 ((0x000000F0&(data))>>4)
#define  VDTOP_NO_BURST_443_CTRL_get_no_burst_flag(data)                         ((0x00000008&(data))>>3)
#define  VDTOP_NO_BURST_443_CTRL_get_paln_flag_new(data)                         ((0x00000004&(data))>>2)
#define  VDTOP_NO_BURST_443_CTRL_get_burst_win_error(data)                       ((0x00000002&(data))>>1)
#define  VDTOP_NO_BURST_443_CTRL_get_no_burst_443_en(data)                       (0x00000001&(data))

#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL                                  0x180194D8
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_reg_addr                          "0xB80194D8"
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_reg                               0xB80194D8
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_inst_addr                         "0x011C"
#define  set_VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_reg(data)                     (*((volatile unsigned int*)VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_reg)=data)
#define  get_VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_reg                           (*((volatile unsigned int*)VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_reg))
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_flag358_secam_phase_diff_hcount_en_shift (7)
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_flag358_phase_diff_hcount_shift   (0)
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_flag358_secam_phase_diff_hcount_en_mask (0x00000080)
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_flag358_phase_diff_hcount_mask    (0x0000007F)
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_flag358_secam_phase_diff_hcount_en(data) (0x00000080&((data)<<7))
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_flag358_phase_diff_hcount(data)   (0x0000007F&(data))
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_get_flag358_secam_phase_diff_hcount_en(data) ((0x00000080&(data))>>7)
#define  VDTOP_FLAG358_SECAM_HCOUNT_RESET_CTRL_get_flag358_phase_diff_hcount(data) (0x0000007F&(data))

#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DR                                      0x180194DC
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_reg_addr                              "0xB80194DC"
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_reg                                   0xB80194DC
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_inst_addr                             "0x011D"
#define  set_VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_reg(data)                         (*((volatile unsigned int*)VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_reg)=data)
#define  get_VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_reg                               (*((volatile unsigned int*)VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_reg))
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_flag358_secam_phase_diff_dr_shift     (0)
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_flag358_secam_phase_diff_dr_mask      (0x000000FF)
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_flag358_secam_phase_diff_dr(data)     (0x000000FF&(data))
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DR_get_flag358_secam_phase_diff_dr(data) (0x000000FF&(data))

#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DB                                      0x180194E0
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_reg_addr                              "0xB80194E0"
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_reg                                   0xB80194E0
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_inst_addr                             "0x011E"
#define  set_VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_reg(data)                         (*((volatile unsigned int*)VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_reg)=data)
#define  get_VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_reg                               (*((volatile unsigned int*)VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_reg))
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_flag358_secam_phase_diff_db_shift     (0)
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_flag358_secam_phase_diff_db_mask      (0x000000FF)
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_flag358_secam_phase_diff_db(data)     (0x000000FF&(data))
#define  VDTOP_FLAG358_SECAM_PHASE_DIFF_DB_get_flag358_secam_phase_diff_db(data) (0x000000FF&(data))

#define  VDTOP_BURST_MAG_TH_358                                                 0x180194E4
#define  VDTOP_BURST_MAG_TH_358_reg_addr                                         "0xB80194E4"
#define  VDTOP_BURST_MAG_TH_358_reg                                              0xB80194E4
#define  VDTOP_BURST_MAG_TH_358_inst_addr                                        "0x011F"
#define  set_VDTOP_BURST_MAG_TH_358_reg(data)                                    (*((volatile unsigned int*)VDTOP_BURST_MAG_TH_358_reg)=data)
#define  get_VDTOP_BURST_MAG_TH_358_reg                                          (*((volatile unsigned int*)VDTOP_BURST_MAG_TH_358_reg))
#define  VDTOP_BURST_MAG_TH_358_burst_mag_th_358_shift                           (0)
#define  VDTOP_BURST_MAG_TH_358_burst_mag_th_358_mask                            (0x000000FF)
#define  VDTOP_BURST_MAG_TH_358_burst_mag_th_358(data)                           (0x000000FF&(data))
#define  VDTOP_BURST_MAG_TH_358_get_burst_mag_th_358(data)                       (0x000000FF&(data))

#define  VDTOP_AUTO_MODE_TABLE1                                                 0x180194F0
#define  VDTOP_AUTO_MODE_TABLE1_reg_addr                                         "0xB80194F0"
#define  VDTOP_AUTO_MODE_TABLE1_reg                                              0xB80194F0
#define  VDTOP_AUTO_MODE_TABLE1_inst_addr                                        "0x0120"
#define  set_VDTOP_AUTO_MODE_TABLE1_reg(data)                                    (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE1_reg)=data)
#define  get_VDTOP_AUTO_MODE_TABLE1_reg                                          (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE1_reg))
#define  VDTOP_AUTO_MODE_TABLE1_table_cagc_en_shift                              (7)
#define  VDTOP_AUTO_MODE_TABLE1_table_vline_625_shift                            (6)
#define  VDTOP_AUTO_MODE_TABLE1_table_hpixel_shift                               (4)
#define  VDTOP_AUTO_MODE_TABLE1_table_ped_shift                                  (3)
#define  VDTOP_AUTO_MODE_TABLE1_table_colour_mode_shift                          (0)
#define  VDTOP_AUTO_MODE_TABLE1_table_cagc_en_mask                               (0x00000080)
#define  VDTOP_AUTO_MODE_TABLE1_table_vline_625_mask                             (0x00000040)
#define  VDTOP_AUTO_MODE_TABLE1_table_hpixel_mask                                (0x00000030)
#define  VDTOP_AUTO_MODE_TABLE1_table_ped_mask                                   (0x00000008)
#define  VDTOP_AUTO_MODE_TABLE1_table_colour_mode_mask                           (0x00000007)
#define  VDTOP_AUTO_MODE_TABLE1_table_cagc_en(data)                              (0x00000080&((data)<<7))
#define  VDTOP_AUTO_MODE_TABLE1_table_vline_625(data)                            (0x00000040&((data)<<6))
#define  VDTOP_AUTO_MODE_TABLE1_table_hpixel(data)                               (0x00000030&((data)<<4))
#define  VDTOP_AUTO_MODE_TABLE1_table_ped(data)                                  (0x00000008&((data)<<3))
#define  VDTOP_AUTO_MODE_TABLE1_table_colour_mode(data)                          (0x00000007&(data))
#define  VDTOP_AUTO_MODE_TABLE1_get_table_cagc_en(data)                          ((0x00000080&(data))>>7)
#define  VDTOP_AUTO_MODE_TABLE1_get_table_vline_625(data)                        ((0x00000040&(data))>>6)
#define  VDTOP_AUTO_MODE_TABLE1_get_table_hpixel(data)                           ((0x00000030&(data))>>4)
#define  VDTOP_AUTO_MODE_TABLE1_get_table_ped(data)                              ((0x00000008&(data))>>3)
#define  VDTOP_AUTO_MODE_TABLE1_get_table_colour_mode(data)                      (0x00000007&(data))

#define  VDTOP_AUTO_MODE_TABLE2                                                 0x180194F4
#define  VDTOP_AUTO_MODE_TABLE2_reg_addr                                         "0xB80194F4"
#define  VDTOP_AUTO_MODE_TABLE2_reg                                              0xB80194F4
#define  VDTOP_AUTO_MODE_TABLE2_inst_addr                                        "0x0121"
#define  set_VDTOP_AUTO_MODE_TABLE2_reg(data)                                    (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE2_reg)=data)
#define  get_VDTOP_AUTO_MODE_TABLE2_reg                                          (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE2_reg))
#define  VDTOP_AUTO_MODE_TABLE2_table_hagc_shift                                 (0)
#define  VDTOP_AUTO_MODE_TABLE2_table_hagc_mask                                  (0x000000FF)
#define  VDTOP_AUTO_MODE_TABLE2_table_hagc(data)                                 (0x000000FF&(data))
#define  VDTOP_AUTO_MODE_TABLE2_get_table_hagc(data)                             (0x000000FF&(data))

#define  VDTOP_AUTO_MODE_TABLE3                                                 0x180194F8
#define  VDTOP_AUTO_MODE_TABLE3_reg_addr                                         "0xB80194F8"
#define  VDTOP_AUTO_MODE_TABLE3_reg                                              0xB80194F8
#define  VDTOP_AUTO_MODE_TABLE3_inst_addr                                        "0x0122"
#define  set_VDTOP_AUTO_MODE_TABLE3_reg(data)                                    (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE3_reg)=data)
#define  get_VDTOP_AUTO_MODE_TABLE3_reg                                          (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE3_reg))
#define  VDTOP_AUTO_MODE_TABLE3_table_hactive_start_shift                        (0)
#define  VDTOP_AUTO_MODE_TABLE3_table_hactive_start_mask                         (0x000000FF)
#define  VDTOP_AUTO_MODE_TABLE3_table_hactive_start(data)                        (0x000000FF&(data))
#define  VDTOP_AUTO_MODE_TABLE3_get_table_hactive_start(data)                    (0x000000FF&(data))

#define  VDTOP_AUTO_MODE_TABLE4                                                 0x180194FC
#define  VDTOP_AUTO_MODE_TABLE4_reg_addr                                         "0xB80194FC"
#define  VDTOP_AUTO_MODE_TABLE4_reg                                              0xB80194FC
#define  VDTOP_AUTO_MODE_TABLE4_inst_addr                                        "0x0123"
#define  set_VDTOP_AUTO_MODE_TABLE4_reg(data)                                    (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE4_reg)=data)
#define  get_VDTOP_AUTO_MODE_TABLE4_reg                                          (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE4_reg))
#define  VDTOP_AUTO_MODE_TABLE4_table_vactive_start_shift                        (0)
#define  VDTOP_AUTO_MODE_TABLE4_table_vactive_start_mask                         (0x000000FF)
#define  VDTOP_AUTO_MODE_TABLE4_table_vactive_start(data)                        (0x000000FF&(data))
#define  VDTOP_AUTO_MODE_TABLE4_get_table_vactive_start(data)                    (0x000000FF&(data))

#define  VDTOP_AUTO_MODE_TABLE5                                                 0x18019500
#define  VDTOP_AUTO_MODE_TABLE5_reg_addr                                         "0xB8019500"
#define  VDTOP_AUTO_MODE_TABLE5_reg                                              0xB8019500
#define  VDTOP_AUTO_MODE_TABLE5_inst_addr                                        "0x0124"
#define  set_VDTOP_AUTO_MODE_TABLE5_reg(data)                                    (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE5_reg)=data)
#define  get_VDTOP_AUTO_MODE_TABLE5_reg                                          (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE5_reg))
#define  VDTOP_AUTO_MODE_TABLE5_table_vactive_height_shift                       (0)
#define  VDTOP_AUTO_MODE_TABLE5_table_vactive_height_mask                        (0x000000FF)
#define  VDTOP_AUTO_MODE_TABLE5_table_vactive_height(data)                       (0x000000FF&(data))
#define  VDTOP_AUTO_MODE_TABLE5_get_table_vactive_height(data)                   (0x000000FF&(data))

#define  VDTOP_AUTO_MODE_TABLE6                                                 0x18019504
#define  VDTOP_AUTO_MODE_TABLE6_reg_addr                                         "0xB8019504"
#define  VDTOP_AUTO_MODE_TABLE6_reg                                              0xB8019504
#define  VDTOP_AUTO_MODE_TABLE6_inst_addr                                        "0x0125"
#define  set_VDTOP_AUTO_MODE_TABLE6_reg(data)                                    (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE6_reg)=data)
#define  get_VDTOP_AUTO_MODE_TABLE6_reg                                          (*((volatile unsigned int*)VDTOP_AUTO_MODE_TABLE6_reg))
#define  VDTOP_AUTO_MODE_TABLE6_table_cdto_shift                                 (0)
#define  VDTOP_AUTO_MODE_TABLE6_table_cdto_mask                                  (0x3FFFFFFF)
#define  VDTOP_AUTO_MODE_TABLE6_table_cdto(data)                                 (0x3FFFFFFF&(data))
#define  VDTOP_AUTO_MODE_TABLE6_get_table_cdto(data)                             (0x3FFFFFFF&(data))

#define  VDTOP_FLAG_625_COUNTER                                                 0x18019508
#define  VDTOP_FLAG_625_COUNTER_reg_addr                                         "0xB8019508"
#define  VDTOP_FLAG_625_COUNTER_reg                                              0xB8019508
#define  VDTOP_FLAG_625_COUNTER_inst_addr                                        "0x0126"
#define  set_VDTOP_FLAG_625_COUNTER_reg(data)                                    (*((volatile unsigned int*)VDTOP_FLAG_625_COUNTER_reg)=data)
#define  get_VDTOP_FLAG_625_COUNTER_reg                                          (*((volatile unsigned int*)VDTOP_FLAG_625_COUNTER_reg))
#define  VDTOP_FLAG_625_COUNTER_vline_625_vloop_clr_en_shift                     (31)
#define  VDTOP_FLAG_625_COUNTER_vline_625_src_sel_shift                          (30)
#define  VDTOP_FLAG_625_COUNTER_new_625flag_window_shift                         (20)
#define  VDTOP_FLAG_625_COUNTER_new_625flag_div_thr_shift                        (8)
#define  VDTOP_FLAG_625_COUNTER_flag_625_counter_shift                           (0)
#define  VDTOP_FLAG_625_COUNTER_vline_625_vloop_clr_en_mask                      (0x80000000)
#define  VDTOP_FLAG_625_COUNTER_vline_625_src_sel_mask                           (0x40000000)
#define  VDTOP_FLAG_625_COUNTER_new_625flag_window_mask                          (0x3FF00000)
#define  VDTOP_FLAG_625_COUNTER_new_625flag_div_thr_mask                         (0x0003FF00)
#define  VDTOP_FLAG_625_COUNTER_flag_625_counter_mask                            (0x000000FF)
#define  VDTOP_FLAG_625_COUNTER_vline_625_vloop_clr_en(data)                     (0x80000000&((data)<<31))
#define  VDTOP_FLAG_625_COUNTER_vline_625_src_sel(data)                          (0x40000000&((data)<<30))
#define  VDTOP_FLAG_625_COUNTER_new_625flag_window(data)                         (0x3FF00000&((data)<<20))
#define  VDTOP_FLAG_625_COUNTER_new_625flag_div_thr(data)                        (0x0003FF00&((data)<<8))
#define  VDTOP_FLAG_625_COUNTER_flag_625_counter(data)                           (0x000000FF&(data))
#define  VDTOP_FLAG_625_COUNTER_get_vline_625_vloop_clr_en(data)                 ((0x80000000&(data))>>31)
#define  VDTOP_FLAG_625_COUNTER_get_vline_625_src_sel(data)                      ((0x40000000&(data))>>30)
#define  VDTOP_FLAG_625_COUNTER_get_new_625flag_window(data)                     ((0x3FF00000&(data))>>20)
#define  VDTOP_FLAG_625_COUNTER_get_new_625flag_div_thr(data)                    ((0x0003FF00&(data))>>8)
#define  VDTOP_FLAG_625_COUNTER_get_flag_625_counter(data)                       (0x000000FF&(data))

#define  VDTOP_FLAG_443_COUNTER                                                 0x1801950C
#define  VDTOP_FLAG_443_COUNTER_reg_addr                                         "0xB801950C"
#define  VDTOP_FLAG_443_COUNTER_reg                                              0xB801950C
#define  VDTOP_FLAG_443_COUNTER_inst_addr                                        "0x0127"
#define  set_VDTOP_FLAG_443_COUNTER_reg(data)                                    (*((volatile unsigned int*)VDTOP_FLAG_443_COUNTER_reg)=data)
#define  get_VDTOP_FLAG_443_COUNTER_reg                                          (*((volatile unsigned int*)VDTOP_FLAG_443_COUNTER_reg))
#define  VDTOP_FLAG_443_COUNTER_flag_443_counter_shift                           (0)
#define  VDTOP_FLAG_443_COUNTER_flag_443_counter_mask                            (0x000000FF)
#define  VDTOP_FLAG_443_COUNTER_flag_443_counter(data)                           (0x000000FF&(data))
#define  VDTOP_FLAG_443_COUNTER_get_flag_443_counter(data)                       (0x000000FF&(data))

#define  VDTOP_SECAM_FLAG_COUNTER                                               0x18019510
#define  VDTOP_SECAM_FLAG_COUNTER_reg_addr                                       "0xB8019510"
#define  VDTOP_SECAM_FLAG_COUNTER_reg                                            0xB8019510
#define  VDTOP_SECAM_FLAG_COUNTER_inst_addr                                      "0x0128"
#define  set_VDTOP_SECAM_FLAG_COUNTER_reg(data)                                  (*((volatile unsigned int*)VDTOP_SECAM_FLAG_COUNTER_reg)=data)
#define  get_VDTOP_SECAM_FLAG_COUNTER_reg                                        (*((volatile unsigned int*)VDTOP_SECAM_FLAG_COUNTER_reg))
#define  VDTOP_SECAM_FLAG_COUNTER_secam_flag_counter_shift                       (0)
#define  VDTOP_SECAM_FLAG_COUNTER_secam_flag_counter_mask                        (0x000000FF)
#define  VDTOP_SECAM_FLAG_COUNTER_secam_flag_counter(data)                       (0x000000FF&(data))
#define  VDTOP_SECAM_FLAG_COUNTER_get_secam_flag_counter(data)                   (0x000000FF&(data))

#define  VDTOP_PALM_FLAG_COUNTER                                                0x18019514
#define  VDTOP_PALM_FLAG_COUNTER_reg_addr                                        "0xB8019514"
#define  VDTOP_PALM_FLAG_COUNTER_reg                                             0xB8019514
#define  VDTOP_PALM_FLAG_COUNTER_inst_addr                                       "0x0129"
#define  set_VDTOP_PALM_FLAG_COUNTER_reg(data)                                   (*((volatile unsigned int*)VDTOP_PALM_FLAG_COUNTER_reg)=data)
#define  get_VDTOP_PALM_FLAG_COUNTER_reg                                         (*((volatile unsigned int*)VDTOP_PALM_FLAG_COUNTER_reg))
#define  VDTOP_PALM_FLAG_COUNTER_palm_flag_counter_shift                         (0)
#define  VDTOP_PALM_FLAG_COUNTER_palm_flag_counter_mask                          (0x000000FF)
#define  VDTOP_PALM_FLAG_COUNTER_palm_flag_counter(data)                         (0x000000FF&(data))
#define  VDTOP_PALM_FLAG_COUNTER_get_palm_flag_counter(data)                     (0x000000FF&(data))

#define  VDTOP_BURST_VALID_COUNTER                                              0x18019518
#define  VDTOP_BURST_VALID_COUNTER_reg_addr                                      "0xB8019518"
#define  VDTOP_BURST_VALID_COUNTER_reg                                           0xB8019518
#define  VDTOP_BURST_VALID_COUNTER_inst_addr                                     "0x012A"
#define  set_VDTOP_BURST_VALID_COUNTER_reg(data)                                 (*((volatile unsigned int*)VDTOP_BURST_VALID_COUNTER_reg)=data)
#define  get_VDTOP_BURST_VALID_COUNTER_reg                                       (*((volatile unsigned int*)VDTOP_BURST_VALID_COUNTER_reg))
#define  VDTOP_BURST_VALID_COUNTER_burst_valid_counter_shift                     (0)
#define  VDTOP_BURST_VALID_COUNTER_burst_valid_counter_mask                      (0x000000FF)
#define  VDTOP_BURST_VALID_COUNTER_burst_valid_counter(data)                     (0x000000FF&(data))
#define  VDTOP_BURST_VALID_COUNTER_get_burst_valid_counter(data)                 (0x000000FF&(data))

#define  VDTOP_MIDPOINT_ADJ                                                     0x1801951C
#define  VDTOP_MIDPOINT_ADJ_reg_addr                                             "0xB801951C"
#define  VDTOP_MIDPOINT_ADJ_reg                                                  0xB801951C
#define  VDTOP_MIDPOINT_ADJ_inst_addr                                            "0x012B"
#define  set_VDTOP_MIDPOINT_ADJ_reg(data)                                        (*((volatile unsigned int*)VDTOP_MIDPOINT_ADJ_reg)=data)
#define  get_VDTOP_MIDPOINT_ADJ_reg                                              (*((volatile unsigned int*)VDTOP_MIDPOINT_ADJ_reg))
#define  VDTOP_MIDPOINT_ADJ_midpoint_adjustment_shift                            (0)
#define  VDTOP_MIDPOINT_ADJ_midpoint_adjustment_mask                             (0x000000FF)
#define  VDTOP_MIDPOINT_ADJ_midpoint_adjustment(data)                            (0x000000FF&(data))
#define  VDTOP_MIDPOINT_ADJ_get_midpoint_adjustment(data)                        (0x000000FF&(data))

#define  VDTOP_FREQ_FLAG_THRESHOLD                                              0x18019520
#define  VDTOP_FREQ_FLAG_THRESHOLD_reg_addr                                      "0xB8019520"
#define  VDTOP_FREQ_FLAG_THRESHOLD_reg                                           0xB8019520
#define  VDTOP_FREQ_FLAG_THRESHOLD_inst_addr                                     "0x012C"
#define  set_VDTOP_FREQ_FLAG_THRESHOLD_reg(data)                                 (*((volatile unsigned int*)VDTOP_FREQ_FLAG_THRESHOLD_reg)=data)
#define  get_VDTOP_FREQ_FLAG_THRESHOLD_reg                                       (*((volatile unsigned int*)VDTOP_FREQ_FLAG_THRESHOLD_reg))
#define  VDTOP_FREQ_FLAG_THRESHOLD_freq_flag_threshold_tune_shift                (0)
#define  VDTOP_FREQ_FLAG_THRESHOLD_freq_flag_threshold_tune_mask                 (0x000000FF)
#define  VDTOP_FREQ_FLAG_THRESHOLD_freq_flag_threshold_tune(data)                (0x000000FF&(data))
#define  VDTOP_FREQ_FLAG_THRESHOLD_get_freq_flag_threshold_tune(data)            (0x000000FF&(data))

#define  VDTOP_FREQ_VALID_MAX                                                   0x18019524
#define  VDTOP_FREQ_VALID_MAX_reg_addr                                           "0xB8019524"
#define  VDTOP_FREQ_VALID_MAX_reg                                                0xB8019524
#define  VDTOP_FREQ_VALID_MAX_inst_addr                                          "0x012D"
#define  set_VDTOP_FREQ_VALID_MAX_reg(data)                                      (*((volatile unsigned int*)VDTOP_FREQ_VALID_MAX_reg)=data)
#define  get_VDTOP_FREQ_VALID_MAX_reg                                            (*((volatile unsigned int*)VDTOP_FREQ_VALID_MAX_reg))
#define  VDTOP_FREQ_VALID_MAX_frequency_valid_upper_limit_shift                  (0)
#define  VDTOP_FREQ_VALID_MAX_frequency_valid_upper_limit_mask                   (0x000000FF)
#define  VDTOP_FREQ_VALID_MAX_frequency_valid_upper_limit(data)                  (0x000000FF&(data))
#define  VDTOP_FREQ_VALID_MAX_get_frequency_valid_upper_limit(data)              (0x000000FF&(data))

#define  VDTOP_FREQ_VALID_INNER                                                 0x18019528
#define  VDTOP_FREQ_VALID_INNER_reg_addr                                         "0xB8019528"
#define  VDTOP_FREQ_VALID_INNER_reg                                              0xB8019528
#define  VDTOP_FREQ_VALID_INNER_inst_addr                                        "0x012E"
#define  set_VDTOP_FREQ_VALID_INNER_reg(data)                                    (*((volatile unsigned int*)VDTOP_FREQ_VALID_INNER_reg)=data)
#define  get_VDTOP_FREQ_VALID_INNER_reg                                          (*((volatile unsigned int*)VDTOP_FREQ_VALID_INNER_reg))
#define  VDTOP_FREQ_VALID_INNER_condition_enable_shift                           (7)
#define  VDTOP_FREQ_VALID_INNER_frequency_valid_inner_limit_shift                (0)
#define  VDTOP_FREQ_VALID_INNER_condition_enable_mask                            (0x00000080)
#define  VDTOP_FREQ_VALID_INNER_frequency_valid_inner_limit_mask                 (0x0000007F)
#define  VDTOP_FREQ_VALID_INNER_condition_enable(data)                           (0x00000080&((data)<<7))
#define  VDTOP_FREQ_VALID_INNER_frequency_valid_inner_limit(data)                (0x0000007F&(data))
#define  VDTOP_FREQ_VALID_INNER_get_condition_enable(data)                       ((0x00000080&(data))>>7)
#define  VDTOP_FREQ_VALID_INNER_get_frequency_valid_inner_limit(data)            (0x0000007F&(data))

#define  VDTOP_FREQ_VALID_MIN                                                   0x1801952C
#define  VDTOP_FREQ_VALID_MIN_reg_addr                                           "0xB801952C"
#define  VDTOP_FREQ_VALID_MIN_reg                                                0xB801952C
#define  VDTOP_FREQ_VALID_MIN_inst_addr                                          "0x012F"
#define  set_VDTOP_FREQ_VALID_MIN_reg(data)                                      (*((volatile unsigned int*)VDTOP_FREQ_VALID_MIN_reg)=data)
#define  get_VDTOP_FREQ_VALID_MIN_reg                                            (*((volatile unsigned int*)VDTOP_FREQ_VALID_MIN_reg))
#define  VDTOP_FREQ_VALID_MIN_frequency_valid_lower_limit_shift                  (0)
#define  VDTOP_FREQ_VALID_MIN_frequency_valid_lower_limit_mask                   (0x000000FF)
#define  VDTOP_FREQ_VALID_MIN_frequency_valid_lower_limit(data)                  (0x000000FF&(data))
#define  VDTOP_FREQ_VALID_MIN_get_frequency_valid_lower_limit(data)              (0x000000FF&(data))

#define  VDTOP_SECAM_FLAG_COUNTER_MAX                                           0x18019530
#define  VDTOP_SECAM_FLAG_COUNTER_MAX_reg_addr                                   "0xB8019530"
#define  VDTOP_SECAM_FLAG_COUNTER_MAX_reg                                        0xB8019530
#define  VDTOP_SECAM_FLAG_COUNTER_MAX_inst_addr                                  "0x0130"
#define  set_VDTOP_SECAM_FLAG_COUNTER_MAX_reg(data)                              (*((volatile unsigned int*)VDTOP_SECAM_FLAG_COUNTER_MAX_reg)=data)
#define  get_VDTOP_SECAM_FLAG_COUNTER_MAX_reg                                    (*((volatile unsigned int*)VDTOP_SECAM_FLAG_COUNTER_MAX_reg))
#define  VDTOP_SECAM_FLAG_COUNTER_MAX_secam_flag_frequency_upper_limit_shift     (0)
#define  VDTOP_SECAM_FLAG_COUNTER_MAX_secam_flag_frequency_upper_limit_mask      (0x000000FF)
#define  VDTOP_SECAM_FLAG_COUNTER_MAX_secam_flag_frequency_upper_limit(data)     (0x000000FF&(data))
#define  VDTOP_SECAM_FLAG_COUNTER_MAX_get_secam_flag_frequency_upper_limit(data) (0x000000FF&(data))

#define  VDTOP_SECAM_FLAG_COUNTER_MIN                                           0x18019534
#define  VDTOP_SECAM_FLAG_COUNTER_MIN_reg_addr                                   "0xB8019534"
#define  VDTOP_SECAM_FLAG_COUNTER_MIN_reg                                        0xB8019534
#define  VDTOP_SECAM_FLAG_COUNTER_MIN_inst_addr                                  "0x0131"
#define  set_VDTOP_SECAM_FLAG_COUNTER_MIN_reg(data)                              (*((volatile unsigned int*)VDTOP_SECAM_FLAG_COUNTER_MIN_reg)=data)
#define  get_VDTOP_SECAM_FLAG_COUNTER_MIN_reg                                    (*((volatile unsigned int*)VDTOP_SECAM_FLAG_COUNTER_MIN_reg))
#define  VDTOP_SECAM_FLAG_COUNTER_MIN_secam_flag_frequency_lower_limit_shift     (0)
#define  VDTOP_SECAM_FLAG_COUNTER_MIN_secam_flag_frequency_lower_limit_mask      (0x000000FF)
#define  VDTOP_SECAM_FLAG_COUNTER_MIN_secam_flag_frequency_lower_limit(data)     (0x000000FF&(data))
#define  VDTOP_SECAM_FLAG_COUNTER_MIN_get_secam_flag_frequency_lower_limit(data) (0x000000FF&(data))

#define  VDTOP_PALM_FLAG_PHASE_ADJ                                              0x18019538
#define  VDTOP_PALM_FLAG_PHASE_ADJ_reg_addr                                      "0xB8019538"
#define  VDTOP_PALM_FLAG_PHASE_ADJ_reg                                           0xB8019538
#define  VDTOP_PALM_FLAG_PHASE_ADJ_inst_addr                                     "0x0132"
#define  set_VDTOP_PALM_FLAG_PHASE_ADJ_reg(data)                                 (*((volatile unsigned int*)VDTOP_PALM_FLAG_PHASE_ADJ_reg)=data)
#define  get_VDTOP_PALM_FLAG_PHASE_ADJ_reg                                       (*((volatile unsigned int*)VDTOP_PALM_FLAG_PHASE_ADJ_reg))
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_flag_limit_en_shift                      (28)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_pal_sw_acc_input_polar_shift                  (27)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_pal_sw_input_sel_shift                        (26)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_sw_acc_input_polar_shift                 (25)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_sw_input_sel_shift                       (24)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_pal_flag_threshold_shift                      (8)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_flag_phase_adjust_shift                  (0)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_flag_limit_en_mask                       (0x10000000)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_pal_sw_acc_input_polar_mask                   (0x08000000)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_pal_sw_input_sel_mask                         (0x04000000)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_sw_acc_input_polar_mask                  (0x02000000)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_sw_input_sel_mask                        (0x01000000)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_pal_flag_threshold_mask                       (0x001FFF00)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_flag_phase_adjust_mask                   (0x000000FF)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_flag_limit_en(data)                      (0x10000000&((data)<<28))
#define  VDTOP_PALM_FLAG_PHASE_ADJ_pal_sw_acc_input_polar(data)                  (0x08000000&((data)<<27))
#define  VDTOP_PALM_FLAG_PHASE_ADJ_pal_sw_input_sel(data)                        (0x04000000&((data)<<26))
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_sw_acc_input_polar(data)                 (0x02000000&((data)<<25))
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_sw_input_sel(data)                       (0x01000000&((data)<<24))
#define  VDTOP_PALM_FLAG_PHASE_ADJ_pal_flag_threshold(data)                      (0x001FFF00&((data)<<8))
#define  VDTOP_PALM_FLAG_PHASE_ADJ_palm_flag_phase_adjust(data)                  (0x000000FF&(data))
#define  VDTOP_PALM_FLAG_PHASE_ADJ_get_palm_flag_limit_en(data)                  ((0x10000000&(data))>>28)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_get_pal_sw_acc_input_polar(data)              ((0x08000000&(data))>>27)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_get_pal_sw_input_sel(data)                    ((0x04000000&(data))>>26)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_get_palm_sw_acc_input_polar(data)             ((0x02000000&(data))>>25)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_get_palm_sw_input_sel(data)                   ((0x01000000&(data))>>24)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_get_pal_flag_threshold(data)                  ((0x001FFF00&(data))>>8)
#define  VDTOP_PALM_FLAG_PHASE_ADJ_get_palm_flag_phase_adjust(data)              (0x000000FF&(data))

#define  VDTOP_BURST_LOWER_LIMIT                                                0x1801953C
#define  VDTOP_BURST_LOWER_LIMIT_reg_addr                                        "0xB801953C"
#define  VDTOP_BURST_LOWER_LIMIT_reg                                             0xB801953C
#define  VDTOP_BURST_LOWER_LIMIT_inst_addr                                       "0x0133"
#define  set_VDTOP_BURST_LOWER_LIMIT_reg(data)                                   (*((volatile unsigned int*)VDTOP_BURST_LOWER_LIMIT_reg)=data)
#define  get_VDTOP_BURST_LOWER_LIMIT_reg                                         (*((volatile unsigned int*)VDTOP_BURST_LOWER_LIMIT_reg))
#define  VDTOP_BURST_LOWER_LIMIT_burst_mag_trigger_shift                         (4)
#define  VDTOP_BURST_LOWER_LIMIT_burst_mag_threshold_shift                       (0)
#define  VDTOP_BURST_LOWER_LIMIT_burst_mag_trigger_mask                          (0x000000F0)
#define  VDTOP_BURST_LOWER_LIMIT_burst_mag_threshold_mask                        (0x0000000F)
#define  VDTOP_BURST_LOWER_LIMIT_burst_mag_trigger(data)                         (0x000000F0&((data)<<4))
#define  VDTOP_BURST_LOWER_LIMIT_burst_mag_threshold(data)                       (0x0000000F&(data))
#define  VDTOP_BURST_LOWER_LIMIT_get_burst_mag_trigger(data)                     ((0x000000F0&(data))>>4)
#define  VDTOP_BURST_LOWER_LIMIT_get_burst_mag_threshold(data)                   (0x0000000F&(data))

#define  VDTOP_BURST_MAG_CHOICE                                                 0x18019540
#define  VDTOP_BURST_MAG_CHOICE_reg_addr                                         "0xB8019540"
#define  VDTOP_BURST_MAG_CHOICE_reg                                              0xB8019540
#define  VDTOP_BURST_MAG_CHOICE_inst_addr                                        "0x0134"
#define  set_VDTOP_BURST_MAG_CHOICE_reg(data)                                    (*((volatile unsigned int*)VDTOP_BURST_MAG_CHOICE_reg)=data)
#define  get_VDTOP_BURST_MAG_CHOICE_reg                                          (*((volatile unsigned int*)VDTOP_BURST_MAG_CHOICE_reg))
#define  VDTOP_BURST_MAG_CHOICE_vsync_select_shift                               (7)
#define  VDTOP_BURST_MAG_CHOICE_secam_frequency_valid_enable_shift               (6)
#define  VDTOP_BURST_MAG_CHOICE_auto_noburst_palflag_off_shift                   (5)
#define  VDTOP_BURST_MAG_CHOICE_burst_noise_weighting_auto_shift                 (4)
#define  VDTOP_BURST_MAG_CHOICE_burst_noise_weighting_shift                      (0)
#define  VDTOP_BURST_MAG_CHOICE_vsync_select_mask                                (0x00000080)
#define  VDTOP_BURST_MAG_CHOICE_secam_frequency_valid_enable_mask                (0x00000040)
#define  VDTOP_BURST_MAG_CHOICE_auto_noburst_palflag_off_mask                    (0x00000020)
#define  VDTOP_BURST_MAG_CHOICE_burst_noise_weighting_auto_mask                  (0x00000010)
#define  VDTOP_BURST_MAG_CHOICE_burst_noise_weighting_mask                       (0x0000000F)
#define  VDTOP_BURST_MAG_CHOICE_vsync_select(data)                               (0x00000080&((data)<<7))
#define  VDTOP_BURST_MAG_CHOICE_secam_frequency_valid_enable(data)               (0x00000040&((data)<<6))
#define  VDTOP_BURST_MAG_CHOICE_auto_noburst_palflag_off(data)                   (0x00000020&((data)<<5))
#define  VDTOP_BURST_MAG_CHOICE_burst_noise_weighting_auto(data)                 (0x00000010&((data)<<4))
#define  VDTOP_BURST_MAG_CHOICE_burst_noise_weighting(data)                      (0x0000000F&(data))
#define  VDTOP_BURST_MAG_CHOICE_get_vsync_select(data)                           ((0x00000080&(data))>>7)
#define  VDTOP_BURST_MAG_CHOICE_get_secam_frequency_valid_enable(data)           ((0x00000040&(data))>>6)
#define  VDTOP_BURST_MAG_CHOICE_get_auto_noburst_palflag_off(data)               ((0x00000020&(data))>>5)
#define  VDTOP_BURST_MAG_CHOICE_get_burst_noise_weighting_auto(data)             ((0x00000010&(data))>>4)
#define  VDTOP_BURST_MAG_CHOICE_get_burst_noise_weighting(data)                  (0x0000000F&(data))

#define  VDTOP_NEW_358_CTRL                                                     0x18019550
#define  VDTOP_NEW_358_CTRL_reg_addr                                             "0xB8019550"
#define  VDTOP_NEW_358_CTRL_reg                                                  0xB8019550
#define  VDTOP_NEW_358_CTRL_inst_addr                                            "0x0135"
#define  set_VDTOP_NEW_358_CTRL_reg(data)                                        (*((volatile unsigned int*)VDTOP_NEW_358_CTRL_reg)=data)
#define  get_VDTOP_NEW_358_CTRL_reg                                              (*((volatile unsigned int*)VDTOP_NEW_358_CTRL_reg))
#define  VDTOP_NEW_358_CTRL_agc_gate_kill_sync_white_en_shift                    (7)
#define  VDTOP_NEW_358_CTRL_new_358_flag_cordic_shift                            (6)
#define  VDTOP_NEW_358_CTRL_new_358_flag_cos_sin_shift                           (5)
#define  VDTOP_NEW_358_CTRL_agc_gate_kill_sync_white_en_mask                     (0x00000080)
#define  VDTOP_NEW_358_CTRL_new_358_flag_cordic_mask                             (0x00000040)
#define  VDTOP_NEW_358_CTRL_new_358_flag_cos_sin_mask                            (0x00000020)
#define  VDTOP_NEW_358_CTRL_agc_gate_kill_sync_white_en(data)                    (0x00000080&((data)<<7))
#define  VDTOP_NEW_358_CTRL_new_358_flag_cordic(data)                            (0x00000040&((data)<<6))
#define  VDTOP_NEW_358_CTRL_new_358_flag_cos_sin(data)                           (0x00000020&((data)<<5))
#define  VDTOP_NEW_358_CTRL_get_agc_gate_kill_sync_white_en(data)                ((0x00000080&(data))>>7)
#define  VDTOP_NEW_358_CTRL_get_new_358_flag_cordic(data)                        ((0x00000040&(data))>>6)
#define  VDTOP_NEW_358_CTRL_get_new_358_flag_cos_sin(data)                       ((0x00000020&(data))>>5)

#define  VDTOP_NEW_358_CNT_UP                                                   0x18019554
#define  VDTOP_NEW_358_CNT_UP_reg_addr                                           "0xB8019554"
#define  VDTOP_NEW_358_CNT_UP_reg                                                0xB8019554
#define  VDTOP_NEW_358_CNT_UP_inst_addr                                          "0x0136"
#define  set_VDTOP_NEW_358_CNT_UP_reg(data)                                      (*((volatile unsigned int*)VDTOP_NEW_358_CNT_UP_reg)=data)
#define  get_VDTOP_NEW_358_CNT_UP_reg                                            (*((volatile unsigned int*)VDTOP_NEW_358_CNT_UP_reg))
#define  VDTOP_NEW_358_CNT_UP_new_dto_358_cnt_up_shift                           (0)
#define  VDTOP_NEW_358_CNT_UP_new_dto_358_cnt_up_mask                            (0x000007FF)
#define  VDTOP_NEW_358_CNT_UP_new_dto_358_cnt_up(data)                           (0x000007FF&(data))
#define  VDTOP_NEW_358_CNT_UP_get_new_dto_358_cnt_up(data)                       (0x000007FF&(data))

#define  VDTOP_NEW_358_CNT_DN                                                   0x18019558
#define  VDTOP_NEW_358_CNT_DN_reg_addr                                           "0xB8019558"
#define  VDTOP_NEW_358_CNT_DN_reg                                                0xB8019558
#define  VDTOP_NEW_358_CNT_DN_inst_addr                                          "0x0137"
#define  set_VDTOP_NEW_358_CNT_DN_reg(data)                                      (*((volatile unsigned int*)VDTOP_NEW_358_CNT_DN_reg)=data)
#define  get_VDTOP_NEW_358_CNT_DN_reg                                            (*((volatile unsigned int*)VDTOP_NEW_358_CNT_DN_reg))
#define  VDTOP_NEW_358_CNT_DN_new_dto_358_cnt_dn_shift                           (0)
#define  VDTOP_NEW_358_CNT_DN_new_dto_358_cnt_dn_mask                            (0x000007FF)
#define  VDTOP_NEW_358_CNT_DN_new_dto_358_cnt_dn(data)                           (0x000007FF&(data))
#define  VDTOP_NEW_358_CNT_DN_get_new_dto_358_cnt_dn(data)                       (0x000007FF&(data))

#define  VDTOP_SEP_COUNT_TH                                                     0x1801955C
#define  VDTOP_SEP_COUNT_TH_reg_addr                                             "0xB801955C"
#define  VDTOP_SEP_COUNT_TH_reg                                                  0xB801955C
#define  VDTOP_SEP_COUNT_TH_inst_addr                                            "0x0138"
#define  set_VDTOP_SEP_COUNT_TH_reg(data)                                        (*((volatile unsigned int*)VDTOP_SEP_COUNT_TH_reg)=data)
#define  get_VDTOP_SEP_COUNT_TH_reg                                              (*((volatile unsigned int*)VDTOP_SEP_COUNT_TH_reg))
#define  VDTOP_SEP_COUNT_TH_sep_count_th_shift                                   (0)
#define  VDTOP_SEP_COUNT_TH_sep_count_th_mask                                    (0x000003FF)
#define  VDTOP_SEP_COUNT_TH_sep_count_th(data)                                   (0x000003FF&(data))
#define  VDTOP_SEP_COUNT_TH_get_sep_count_th(data)                               (0x000003FF&(data))

#define  VDTOP_SEP_BURST_START0                                                 0x18019560
#define  VDTOP_SEP_BURST_START0_reg_addr                                         "0xB8019560"
#define  VDTOP_SEP_BURST_START0_reg                                              0xB8019560
#define  VDTOP_SEP_BURST_START0_inst_addr                                        "0x0139"
#define  set_VDTOP_SEP_BURST_START0_reg(data)                                    (*((volatile unsigned int*)VDTOP_SEP_BURST_START0_reg)=data)
#define  get_VDTOP_SEP_BURST_START0_reg                                          (*((volatile unsigned int*)VDTOP_SEP_BURST_START0_reg))
#define  VDTOP_SEP_BURST_START0_sep_burst_start_shift                            (0)
#define  VDTOP_SEP_BURST_START0_sep_burst_start_mask                             (0x000007FF)
#define  VDTOP_SEP_BURST_START0_sep_burst_start(data)                            (0x000007FF&(data))
#define  VDTOP_SEP_BURST_START0_get_sep_burst_start(data)                        (0x000007FF&(data))

#define  VDTOP_SEP_BURST_END0                                                   0x18019564
#define  VDTOP_SEP_BURST_END0_reg_addr                                           "0xB8019564"
#define  VDTOP_SEP_BURST_END0_reg                                                0xB8019564
#define  VDTOP_SEP_BURST_END0_inst_addr                                          "0x013A"
#define  set_VDTOP_SEP_BURST_END0_reg(data)                                      (*((volatile unsigned int*)VDTOP_SEP_BURST_END0_reg)=data)
#define  get_VDTOP_SEP_BURST_END0_reg                                            (*((volatile unsigned int*)VDTOP_SEP_BURST_END0_reg))
#define  VDTOP_SEP_BURST_END0_sep_burst_end_shift                                (0)
#define  VDTOP_SEP_BURST_END0_sep_burst_end_mask                                 (0x000007FF)
#define  VDTOP_SEP_BURST_END0_sep_burst_end(data)                                (0x000007FF&(data))
#define  VDTOP_SEP_BURST_END0_get_sep_burst_end(data)                            (0x000007FF&(data))

#define  VDTOP_SEP_BURST_RO_1                                                   0x18019568
#define  VDTOP_SEP_BURST_RO_1_reg_addr                                           "0xB8019568"
#define  VDTOP_SEP_BURST_RO_1_reg                                                0xB8019568
#define  VDTOP_SEP_BURST_RO_1_inst_addr                                          "0x013B"
#define  set_VDTOP_SEP_BURST_RO_1_reg(data)                                      (*((volatile unsigned int*)VDTOP_SEP_BURST_RO_1_reg)=data)
#define  get_VDTOP_SEP_BURST_RO_1_reg                                            (*((volatile unsigned int*)VDTOP_SEP_BURST_RO_1_reg))
#define  VDTOP_SEP_BURST_RO_1_sep_core_burst_rst_shift                           (9)
#define  VDTOP_SEP_BURST_RO_1_sep_core_burst_rst_en_shift                        (8)
#define  VDTOP_SEP_BURST_RO_1_sep_core_burst_rst_mask                            (0x00000200)
#define  VDTOP_SEP_BURST_RO_1_sep_core_burst_rst_en_mask                         (0x00000100)
#define  VDTOP_SEP_BURST_RO_1_sep_core_burst_rst(data)                           (0x00000200&((data)<<9))
#define  VDTOP_SEP_BURST_RO_1_sep_core_burst_rst_en(data)                        (0x00000100&((data)<<8))
#define  VDTOP_SEP_BURST_RO_1_get_sep_core_burst_rst(data)                       ((0x00000200&(data))>>9)
#define  VDTOP_SEP_BURST_RO_1_get_sep_core_burst_rst_en(data)                    ((0x00000100&(data))>>8)

#define  VDTOP_SEP_BURST_RO_2                                                   0x1801956C
#define  VDTOP_SEP_BURST_RO_2_reg_addr                                           "0xB801956C"
#define  VDTOP_SEP_BURST_RO_2_reg                                                0xB801956C
#define  VDTOP_SEP_BURST_RO_2_inst_addr                                          "0x013C"
#define  set_VDTOP_SEP_BURST_RO_2_reg(data)                                      (*((volatile unsigned int*)VDTOP_SEP_BURST_RO_2_reg)=data)
#define  get_VDTOP_SEP_BURST_RO_2_reg                                            (*((volatile unsigned int*)VDTOP_SEP_BURST_RO_2_reg))
#define  VDTOP_SEP_BURST_RO_2_sep_443_core_burst_hsync_shift                     (24)
#define  VDTOP_SEP_BURST_RO_2_sep_358_core_burst_hsync_shift                     (16)
#define  VDTOP_SEP_BURST_RO_2_sep_443_core_burst_shift                           (8)
#define  VDTOP_SEP_BURST_RO_2_sep_358_core_burst_shift                           (0)
#define  VDTOP_SEP_BURST_RO_2_sep_443_core_burst_hsync_mask                      (0xFF000000)
#define  VDTOP_SEP_BURST_RO_2_sep_358_core_burst_hsync_mask                      (0x00FF0000)
#define  VDTOP_SEP_BURST_RO_2_sep_443_core_burst_mask                            (0x0000FF00)
#define  VDTOP_SEP_BURST_RO_2_sep_358_core_burst_mask                            (0x000000FF)
#define  VDTOP_SEP_BURST_RO_2_sep_443_core_burst_hsync(data)                     (0xFF000000&((data)<<24))
#define  VDTOP_SEP_BURST_RO_2_sep_358_core_burst_hsync(data)                     (0x00FF0000&((data)<<16))
#define  VDTOP_SEP_BURST_RO_2_sep_443_core_burst(data)                           (0x0000FF00&((data)<<8))
#define  VDTOP_SEP_BURST_RO_2_sep_358_core_burst(data)                           (0x000000FF&(data))
#define  VDTOP_SEP_BURST_RO_2_get_sep_443_core_burst_hsync(data)                 ((0xFF000000&(data))>>24)
#define  VDTOP_SEP_BURST_RO_2_get_sep_358_core_burst_hsync(data)                 ((0x00FF0000&(data))>>16)
#define  VDTOP_SEP_BURST_RO_2_get_sep_443_core_burst(data)                       ((0x0000FF00&(data))>>8)
#define  VDTOP_SEP_BURST_RO_2_get_sep_358_core_burst(data)                       (0x000000FF&(data))

#define  VDTOP_SEP_BURST_RO3                                                    0x18019570
#define  VDTOP_SEP_BURST_RO3_reg_addr                                            "0xB8019570"
#define  VDTOP_SEP_BURST_RO3_reg                                                 0xB8019570
#define  VDTOP_SEP_BURST_RO3_inst_addr                                           "0x013D"
#define  set_VDTOP_SEP_BURST_RO3_reg(data)                                       (*((volatile unsigned int*)VDTOP_SEP_BURST_RO3_reg)=data)
#define  get_VDTOP_SEP_BURST_RO3_reg                                             (*((volatile unsigned int*)VDTOP_SEP_BURST_RO3_reg))
#define  VDTOP_SEP_BURST_RO3_sep_pal_secam_core_burst_rst_shift                  (9)
#define  VDTOP_SEP_BURST_RO3_sep_pal_secam_core_burst_rst_en_shift               (8)
#define  VDTOP_SEP_BURST_RO3_sep_pal_secam_core_burst_shift                      (0)
#define  VDTOP_SEP_BURST_RO3_sep_pal_secam_core_burst_rst_mask                   (0x00000200)
#define  VDTOP_SEP_BURST_RO3_sep_pal_secam_core_burst_rst_en_mask                (0x00000100)
#define  VDTOP_SEP_BURST_RO3_sep_pal_secam_core_burst_mask                       (0x000000FF)
#define  VDTOP_SEP_BURST_RO3_sep_pal_secam_core_burst_rst(data)                  (0x00000200&((data)<<9))
#define  VDTOP_SEP_BURST_RO3_sep_pal_secam_core_burst_rst_en(data)               (0x00000100&((data)<<8))
#define  VDTOP_SEP_BURST_RO3_sep_pal_secam_core_burst(data)                      (0x000000FF&(data))
#define  VDTOP_SEP_BURST_RO3_get_sep_pal_secam_core_burst_rst(data)              ((0x00000200&(data))>>9)
#define  VDTOP_SEP_BURST_RO3_get_sep_pal_secam_core_burst_rst_en(data)           ((0x00000100&(data))>>8)
#define  VDTOP_SEP_BURST_RO3_get_sep_pal_secam_core_burst(data)                  (0x000000FF&(data))

#define  VDTOP_SEP_BURST_TH1                                                    0x18019574
#define  VDTOP_SEP_BURST_TH1_reg_addr                                            "0xB8019574"
#define  VDTOP_SEP_BURST_TH1_reg                                                 0xB8019574
#define  VDTOP_SEP_BURST_TH1_inst_addr                                           "0x013E"
#define  set_VDTOP_SEP_BURST_TH1_reg(data)                                       (*((volatile unsigned int*)VDTOP_SEP_BURST_TH1_reg)=data)
#define  get_VDTOP_SEP_BURST_TH1_reg                                             (*((volatile unsigned int*)VDTOP_SEP_BURST_TH1_reg))
#define  VDTOP_SEP_BURST_TH1_sep_443_thl_shift                                   (8)
#define  VDTOP_SEP_BURST_TH1_sep_358_thl_shift                                   (0)
#define  VDTOP_SEP_BURST_TH1_sep_443_thl_mask                                    (0x0000FF00)
#define  VDTOP_SEP_BURST_TH1_sep_358_thl_mask                                    (0x000000FF)
#define  VDTOP_SEP_BURST_TH1_sep_443_thl(data)                                   (0x0000FF00&((data)<<8))
#define  VDTOP_SEP_BURST_TH1_sep_358_thl(data)                                   (0x000000FF&(data))
#define  VDTOP_SEP_BURST_TH1_get_sep_443_thl(data)                               ((0x0000FF00&(data))>>8)
#define  VDTOP_SEP_BURST_TH1_get_sep_358_thl(data)                               (0x000000FF&(data))

#define  VDTOP_SEP_BURST_FLAG1                                                  0x18019578
#define  VDTOP_SEP_BURST_FLAG1_reg_addr                                          "0xB8019578"
#define  VDTOP_SEP_BURST_FLAG1_reg                                               0xB8019578
#define  VDTOP_SEP_BURST_FLAG1_inst_addr                                         "0x013F"
#define  set_VDTOP_SEP_BURST_FLAG1_reg(data)                                     (*((volatile unsigned int*)VDTOP_SEP_BURST_FLAG1_reg)=data)
#define  get_VDTOP_SEP_BURST_FLAG1_reg                                           (*((volatile unsigned int*)VDTOP_SEP_BURST_FLAG1_reg))
#define  VDTOP_SEP_BURST_FLAG1_secam_new_condition_shift                         (25)
#define  VDTOP_SEP_BURST_FLAG1_sep_secam_f_sel_shift                             (24)
#define  VDTOP_SEP_BURST_FLAG1_sep_secam_thl_shift                               (16)
#define  VDTOP_SEP_BURST_FLAG1_sep_secam_thl_ratio_shift                         (8)
#define  VDTOP_SEP_BURST_FLAG1_power_secam_flag_shift                            (2)
#define  VDTOP_SEP_BURST_FLAG1_power_443_flag_shift                              (1)
#define  VDTOP_SEP_BURST_FLAG1_power_358_flag_shift                              (0)
#define  VDTOP_SEP_BURST_FLAG1_secam_new_condition_mask                          (0x02000000)
#define  VDTOP_SEP_BURST_FLAG1_sep_secam_f_sel_mask                              (0x01000000)
#define  VDTOP_SEP_BURST_FLAG1_sep_secam_thl_mask                                (0x00FF0000)
#define  VDTOP_SEP_BURST_FLAG1_sep_secam_thl_ratio_mask                          (0x0000FF00)
#define  VDTOP_SEP_BURST_FLAG1_power_secam_flag_mask                             (0x00000004)
#define  VDTOP_SEP_BURST_FLAG1_power_443_flag_mask                               (0x00000002)
#define  VDTOP_SEP_BURST_FLAG1_power_358_flag_mask                               (0x00000001)
#define  VDTOP_SEP_BURST_FLAG1_secam_new_condition(data)                         (0x02000000&((data)<<25))
#define  VDTOP_SEP_BURST_FLAG1_sep_secam_f_sel(data)                             (0x01000000&((data)<<24))
#define  VDTOP_SEP_BURST_FLAG1_sep_secam_thl(data)                               (0x00FF0000&((data)<<16))
#define  VDTOP_SEP_BURST_FLAG1_sep_secam_thl_ratio(data)                         (0x0000FF00&((data)<<8))
#define  VDTOP_SEP_BURST_FLAG1_power_secam_flag(data)                            (0x00000004&((data)<<2))
#define  VDTOP_SEP_BURST_FLAG1_power_443_flag(data)                              (0x00000002&((data)<<1))
#define  VDTOP_SEP_BURST_FLAG1_power_358_flag(data)                              (0x00000001&(data))
#define  VDTOP_SEP_BURST_FLAG1_get_secam_new_condition(data)                     ((0x02000000&(data))>>25)
#define  VDTOP_SEP_BURST_FLAG1_get_sep_secam_f_sel(data)                         ((0x01000000&(data))>>24)
#define  VDTOP_SEP_BURST_FLAG1_get_sep_secam_thl(data)                           ((0x00FF0000&(data))>>16)
#define  VDTOP_SEP_BURST_FLAG1_get_sep_secam_thl_ratio(data)                     ((0x0000FF00&(data))>>8)
#define  VDTOP_SEP_BURST_FLAG1_get_power_secam_flag(data)                        ((0x00000004&(data))>>2)
#define  VDTOP_SEP_BURST_FLAG1_get_power_443_flag(data)                          ((0x00000002&(data))>>1)
#define  VDTOP_SEP_BURST_FLAG1_get_power_358_flag(data)                          (0x00000001&(data))

#define  VDTOP_AUTOMODE_443358PK_CTRL                                           0x1801957C
#define  VDTOP_AUTOMODE_443358PK_CTRL_reg_addr                                   "0xB801957C"
#define  VDTOP_AUTOMODE_443358PK_CTRL_reg                                        0xB801957C
#define  VDTOP_AUTOMODE_443358PK_CTRL_inst_addr                                  "0x0140"
#define  set_VDTOP_AUTOMODE_443358PK_CTRL_reg(data)                              (*((volatile unsigned int*)VDTOP_AUTOMODE_443358PK_CTRL_reg)=data)
#define  get_VDTOP_AUTOMODE_443358PK_CTRL_reg                                    (*((volatile unsigned int*)VDTOP_AUTOMODE_443358PK_CTRL_reg))
#define  VDTOP_AUTOMODE_443358PK_CTRL_pk_foraudio_shift                          (6)
#define  VDTOP_AUTOMODE_443358PK_CTRL_mode_secam2_sel_shift                      (4)
#define  VDTOP_AUTOMODE_443358PK_CTRL_mode_443358pk_sel_shift                    (0)
#define  VDTOP_AUTOMODE_443358PK_CTRL_pk_foraudio_mask                           (0x00000040)
#define  VDTOP_AUTOMODE_443358PK_CTRL_mode_secam2_sel_mask                       (0x00000030)
#define  VDTOP_AUTOMODE_443358PK_CTRL_mode_443358pk_sel_mask                     (0x00000003)
#define  VDTOP_AUTOMODE_443358PK_CTRL_pk_foraudio(data)                          (0x00000040&((data)<<6))
#define  VDTOP_AUTOMODE_443358PK_CTRL_mode_secam2_sel(data)                      (0x00000030&((data)<<4))
#define  VDTOP_AUTOMODE_443358PK_CTRL_mode_443358pk_sel(data)                    (0x00000003&(data))
#define  VDTOP_AUTOMODE_443358PK_CTRL_get_pk_foraudio(data)                      ((0x00000040&(data))>>6)
#define  VDTOP_AUTOMODE_443358PK_CTRL_get_mode_secam2_sel(data)                  ((0x00000030&(data))>>4)
#define  VDTOP_AUTOMODE_443358PK_CTRL_get_mode_443358pk_sel(data)                (0x00000003&(data))

#define  VDTOP_DARK_CPLL_CDETECT_1                                              0x18019580
#define  VDTOP_DARK_CPLL_CDETECT_1_reg_addr                                      "0xB8019580"
#define  VDTOP_DARK_CPLL_CDETECT_1_reg                                           0xB8019580
#define  VDTOP_DARK_CPLL_CDETECT_1_inst_addr                                     "0x0141"
#define  set_VDTOP_DARK_CPLL_CDETECT_1_reg(data)                                 (*((volatile unsigned int*)VDTOP_DARK_CPLL_CDETECT_1_reg)=data)
#define  get_VDTOP_DARK_CPLL_CDETECT_1_reg                                       (*((volatile unsigned int*)VDTOP_DARK_CPLL_CDETECT_1_reg))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_badedit_noisy_off_en_shift               (31)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_badedit_phase_lock_en_shift              (30)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_fast_lock_en_shift                       (29)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_phase_fast_lock_en_shift                 (28)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_fixed_cstate_shift                       (27)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cstate_shift                             (24)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_chromalock_cstate_en_shift               (23)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_chromalock_cstate_shift                  (20)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cresample_signed_en_shift                (16)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cagc_shift                               (8)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cagc_pll_input_sel_shift                 (6)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cagc_en_shift                            (5)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_fix_cgain_shift                          (4)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cpll_cdto_change_en_shift                (3)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cpll_cdto_change_mode_shift              (0)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_badedit_noisy_off_en_mask                (0x80000000)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_badedit_phase_lock_en_mask               (0x40000000)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_fast_lock_en_mask                        (0x20000000)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_phase_fast_lock_en_mask                  (0x10000000)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_fixed_cstate_mask                        (0x08000000)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cstate_mask                              (0x07000000)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_chromalock_cstate_en_mask                (0x00800000)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_chromalock_cstate_mask                   (0x00700000)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cresample_signed_en_mask                 (0x00010000)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cagc_mask                                (0x0000FF00)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cagc_pll_input_sel_mask                  (0x000000C0)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cagc_en_mask                             (0x00000020)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_fix_cgain_mask                           (0x00000010)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cpll_cdto_change_en_mask                 (0x00000008)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cpll_cdto_change_mode_mask               (0x00000007)
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_badedit_noisy_off_en(data)               (0x80000000&((data)<<31))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_badedit_phase_lock_en(data)              (0x40000000&((data)<<30))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_fast_lock_en(data)                       (0x20000000&((data)<<29))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_phase_fast_lock_en(data)                 (0x10000000&((data)<<28))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_fixed_cstate(data)                       (0x08000000&((data)<<27))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cstate(data)                             (0x07000000&((data)<<24))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_chromalock_cstate_en(data)               (0x00800000&((data)<<23))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_chromalock_cstate(data)                  (0x00700000&((data)<<20))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cresample_signed_en(data)                (0x00010000&((data)<<16))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cagc(data)                               (0x0000FF00&((data)<<8))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cagc_pll_input_sel(data)                 (0x000000C0&((data)<<6))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cagc_en(data)                            (0x00000020&((data)<<5))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_fix_cgain(data)                          (0x00000010&((data)<<4))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cpll_cdto_change_en(data)                (0x00000008&((data)<<3))
#define  VDTOP_DARK_CPLL_CDETECT_1_dark_cpll_cdto_change_mode(data)              (0x00000007&(data))
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_badedit_noisy_off_en(data)           ((0x80000000&(data))>>31)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_badedit_phase_lock_en(data)          ((0x40000000&(data))>>30)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_fast_lock_en(data)                   ((0x20000000&(data))>>29)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_phase_fast_lock_en(data)             ((0x10000000&(data))>>28)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_fixed_cstate(data)                   ((0x08000000&(data))>>27)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_cstate(data)                         ((0x07000000&(data))>>24)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_chromalock_cstate_en(data)           ((0x00800000&(data))>>23)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_chromalock_cstate(data)              ((0x00700000&(data))>>20)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_cresample_signed_en(data)            ((0x00010000&(data))>>16)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_cagc(data)                           ((0x0000FF00&(data))>>8)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_cagc_pll_input_sel(data)             ((0x000000C0&(data))>>6)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_cagc_en(data)                        ((0x00000020&(data))>>5)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_fix_cgain(data)                      ((0x00000010&(data))>>4)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_cpll_cdto_change_en(data)            ((0x00000008&(data))>>3)
#define  VDTOP_DARK_CPLL_CDETECT_1_get_dark_cpll_cdto_change_mode(data)          (0x00000007&(data))

#define  VDTOP_DARK_CPLL_CDETECT_2                                              0x18019584
#define  VDTOP_DARK_CPLL_CDETECT_2_reg_addr                                      "0xB8019584"
#define  VDTOP_DARK_CPLL_CDETECT_2_reg                                           0xB8019584
#define  VDTOP_DARK_CPLL_CDETECT_2_inst_addr                                     "0x0142"
#define  set_VDTOP_DARK_CPLL_CDETECT_2_reg(data)                                 (*((volatile unsigned int*)VDTOP_DARK_CPLL_CDETECT_2_reg)=data)
#define  get_VDTOP_DARK_CPLL_CDETECT_2_reg                                       (*((volatile unsigned int*)VDTOP_DARK_CPLL_CDETECT_2_reg))
#define  VDTOP_DARK_CPLL_CDETECT_2_dark_cpll_cdto_change_value_shift             (0)
#define  VDTOP_DARK_CPLL_CDETECT_2_dark_cpll_cdto_change_value_mask              (0x3FFFFFFF)
#define  VDTOP_DARK_CPLL_CDETECT_2_dark_cpll_cdto_change_value(data)             (0x3FFFFFFF&(data))
#define  VDTOP_DARK_CPLL_CDETECT_2_get_dark_cpll_cdto_change_value(data)         (0x3FFFFFFF&(data))

#define  VDTOP_DARK_CPLL_PAL                                                    0x18019588
#define  VDTOP_DARK_CPLL_PAL_reg_addr                                            "0xB8019588"
#define  VDTOP_DARK_CPLL_PAL_reg                                                 0xB8019588
#define  VDTOP_DARK_CPLL_PAL_inst_addr                                           "0x0143"
#define  set_VDTOP_DARK_CPLL_PAL_reg(data)                                       (*((volatile unsigned int*)VDTOP_DARK_CPLL_PAL_reg)=data)
#define  get_VDTOP_DARK_CPLL_PAL_reg                                             (*((volatile unsigned int*)VDTOP_DARK_CPLL_PAL_reg))
#define  VDTOP_DARK_CPLL_PAL_dark_palm_flag_counter_shift                        (16)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_flag_phase_adjust_shift                   (8)
#define  VDTOP_DARK_CPLL_PAL_dark_palsw_level_shift                              (5)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_flag_limit_en_shift                       (4)
#define  VDTOP_DARK_CPLL_PAL_dark_pal_sw_acc_input_polar_shift                   (3)
#define  VDTOP_DARK_CPLL_PAL_dark_pal_sw_input_sel_shift                         (2)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_sw_acc_input_polar_shift                  (1)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_sw_input_sel_shift                        (0)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_flag_counter_mask                         (0x00FF0000)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_flag_phase_adjust_mask                    (0x0000FF00)
#define  VDTOP_DARK_CPLL_PAL_dark_palsw_level_mask                               (0x00000060)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_flag_limit_en_mask                        (0x00000010)
#define  VDTOP_DARK_CPLL_PAL_dark_pal_sw_acc_input_polar_mask                    (0x00000008)
#define  VDTOP_DARK_CPLL_PAL_dark_pal_sw_input_sel_mask                          (0x00000004)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_sw_acc_input_polar_mask                   (0x00000002)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_sw_input_sel_mask                         (0x00000001)
#define  VDTOP_DARK_CPLL_PAL_dark_palm_flag_counter(data)                        (0x00FF0000&((data)<<16))
#define  VDTOP_DARK_CPLL_PAL_dark_palm_flag_phase_adjust(data)                   (0x0000FF00&((data)<<8))
#define  VDTOP_DARK_CPLL_PAL_dark_palsw_level(data)                              (0x00000060&((data)<<5))
#define  VDTOP_DARK_CPLL_PAL_dark_palm_flag_limit_en(data)                       (0x00000010&((data)<<4))
#define  VDTOP_DARK_CPLL_PAL_dark_pal_sw_acc_input_polar(data)                   (0x00000008&((data)<<3))
#define  VDTOP_DARK_CPLL_PAL_dark_pal_sw_input_sel(data)                         (0x00000004&((data)<<2))
#define  VDTOP_DARK_CPLL_PAL_dark_palm_sw_acc_input_polar(data)                  (0x00000002&((data)<<1))
#define  VDTOP_DARK_CPLL_PAL_dark_palm_sw_input_sel(data)                        (0x00000001&(data))
#define  VDTOP_DARK_CPLL_PAL_get_dark_palm_flag_counter(data)                    ((0x00FF0000&(data))>>16)
#define  VDTOP_DARK_CPLL_PAL_get_dark_palm_flag_phase_adjust(data)               ((0x0000FF00&(data))>>8)
#define  VDTOP_DARK_CPLL_PAL_get_dark_palsw_level(data)                          ((0x00000060&(data))>>5)
#define  VDTOP_DARK_CPLL_PAL_get_dark_palm_flag_limit_en(data)                   ((0x00000010&(data))>>4)
#define  VDTOP_DARK_CPLL_PAL_get_dark_pal_sw_acc_input_polar(data)               ((0x00000008&(data))>>3)
#define  VDTOP_DARK_CPLL_PAL_get_dark_pal_sw_input_sel(data)                     ((0x00000004&(data))>>2)
#define  VDTOP_DARK_CPLL_PAL_get_dark_palm_sw_acc_input_polar(data)              ((0x00000002&(data))>>1)
#define  VDTOP_DARK_CPLL_PAL_get_dark_palm_sw_input_sel(data)                    (0x00000001&(data))

#define  VDTOP_DARK_CPLL_CHROMALOCK                                             0x1801958C
#define  VDTOP_DARK_CPLL_CHROMALOCK_reg_addr                                     "0xB801958C"
#define  VDTOP_DARK_CPLL_CHROMALOCK_reg                                          0xB801958C
#define  VDTOP_DARK_CPLL_CHROMALOCK_inst_addr                                    "0x0144"
#define  set_VDTOP_DARK_CPLL_CHROMALOCK_reg(data)                                (*((volatile unsigned int*)VDTOP_DARK_CPLL_CHROMALOCK_reg)=data)
#define  get_VDTOP_DARK_CPLL_CHROMALOCK_reg                                      (*((volatile unsigned int*)VDTOP_DARK_CPLL_CHROMALOCK_reg))
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_pal_flag_threshold_shift                (16)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_chromalock_input_acc_en_shift           (14)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_chromalock_input_acc_num_shift          (12)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_lose_acc_chromalock_level_shift         (8)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_lose_chromalock_count_shift             (4)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_lose_chromalock_level_shift             (0)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_pal_flag_threshold_mask                 (0x1FFF0000)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_chromalock_input_acc_en_mask            (0x00004000)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_chromalock_input_acc_num_mask           (0x00003000)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_lose_acc_chromalock_level_mask          (0x00000700)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_lose_chromalock_count_mask              (0x000000F0)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_lose_chromalock_level_mask              (0x00000007)
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_pal_flag_threshold(data)                (0x1FFF0000&((data)<<16))
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_chromalock_input_acc_en(data)           (0x00004000&((data)<<14))
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_chromalock_input_acc_num(data)          (0x00003000&((data)<<12))
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_lose_acc_chromalock_level(data)         (0x00000700&((data)<<8))
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_lose_chromalock_count(data)             (0x000000F0&((data)<<4))
#define  VDTOP_DARK_CPLL_CHROMALOCK_dark_lose_chromalock_level(data)             (0x00000007&(data))
#define  VDTOP_DARK_CPLL_CHROMALOCK_get_dark_pal_flag_threshold(data)            ((0x1FFF0000&(data))>>16)
#define  VDTOP_DARK_CPLL_CHROMALOCK_get_dark_chromalock_input_acc_en(data)       ((0x00004000&(data))>>14)
#define  VDTOP_DARK_CPLL_CHROMALOCK_get_dark_chromalock_input_acc_num(data)      ((0x00003000&(data))>>12)
#define  VDTOP_DARK_CPLL_CHROMALOCK_get_dark_lose_acc_chromalock_level(data)     ((0x00000700&(data))>>8)
#define  VDTOP_DARK_CPLL_CHROMALOCK_get_dark_lose_chromalock_count(data)         ((0x000000F0&(data))>>4)
#define  VDTOP_DARK_CPLL_CHROMALOCK_get_dark_lose_chromalock_level(data)         (0x00000007&(data))

#define  VDTOP_DARK_CPLL_CONTROLL                                               0x18019590
#define  VDTOP_DARK_CPLL_CONTROLL_reg_addr                                       "0xB8019590"
#define  VDTOP_DARK_CPLL_CONTROLL_reg                                            0xB8019590
#define  VDTOP_DARK_CPLL_CONTROLL_inst_addr                                      "0x0145"
#define  set_VDTOP_DARK_CPLL_CONTROLL_reg(data)                                  (*((volatile unsigned int*)VDTOP_DARK_CPLL_CONTROLL_reg)=data)
#define  get_VDTOP_DARK_CPLL_CONTROLL_reg                                        (*((volatile unsigned int*)VDTOP_DARK_CPLL_CONTROLL_reg))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_decide_mode_error_shift              (28)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_decide_mode_shift                    (24)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_vsync_num_shift                      (16)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_chromalock_sel_shift                 (15)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_pali_shift                   (14)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_pal60_shift                  (13)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_ntsc443_shift                (12)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_paln_shift                   (11)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_ntsc50_shift                 (10)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_palm_shift                   (9)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_ntsc_shift                   (8)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_fix_mode_en_shift                    (7)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_user_mode_shift                      (4)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_shift                           (2)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_auto_run_shift                       (1)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_start_shift                          (0)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_decide_mode_error_mask               (0x30000000)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_decide_mode_mask                     (0x07000000)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_vsync_num_mask                       (0x00FF0000)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_chromalock_sel_mask                  (0x00008000)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_pali_mask                    (0x00004000)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_pal60_mask                   (0x00002000)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_ntsc443_mask                 (0x00001000)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_paln_mask                    (0x00000800)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_ntsc50_mask                  (0x00000400)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_palm_mask                    (0x00000200)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_ntsc_mask                    (0x00000100)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_fix_mode_en_mask                     (0x00000080)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_user_mode_mask                       (0x00000070)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_mask                            (0x0000000C)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_auto_run_mask                        (0x00000002)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_start_mask                           (0x00000001)
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_decide_mode_error(data)              (0x30000000&((data)<<28))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_decide_mode(data)                    (0x07000000&((data)<<24))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_vsync_num(data)                      (0x00FF0000&((data)<<16))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_chromalock_sel(data)                 (0x00008000&((data)<<15))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_pali(data)                   (0x00004000&((data)<<14))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_pal60(data)                  (0x00002000&((data)<<13))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_ntsc443(data)                (0x00001000&((data)<<12))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_paln(data)                   (0x00000800&((data)<<11))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_ntsc50(data)                 (0x00000400&((data)<<10))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_palm(data)                   (0x00000200&((data)<<9))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode_en_ntsc(data)                   (0x00000100&((data)<<8))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_fix_mode_en(data)                    (0x00000080&((data)<<7))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_user_mode(data)                      (0x00000070&((data)<<4))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_mode(data)                           (0x0000000C&((data)<<2))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_auto_run(data)                       (0x00000002&((data)<<1))
#define  VDTOP_DARK_CPLL_CONTROLL_dark_cpll_start(data)                          (0x00000001&(data))
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_decide_mode_error(data)          ((0x30000000&(data))>>28)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_decide_mode(data)                ((0x07000000&(data))>>24)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_vsync_num(data)                  ((0x00FF0000&(data))>>16)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_chromalock_sel(data)             ((0x00008000&(data))>>15)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_mode_en_pali(data)               ((0x00004000&(data))>>14)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_mode_en_pal60(data)              ((0x00002000&(data))>>13)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_mode_en_ntsc443(data)            ((0x00001000&(data))>>12)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_mode_en_paln(data)               ((0x00000800&(data))>>11)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_mode_en_ntsc50(data)             ((0x00000400&(data))>>10)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_mode_en_palm(data)               ((0x00000200&(data))>>9)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_mode_en_ntsc(data)               ((0x00000100&(data))>>8)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_fix_mode_en(data)                ((0x00000080&(data))>>7)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_user_mode(data)                  ((0x00000070&(data))>>4)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_mode(data)                       ((0x0000000C&(data))>>2)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_auto_run(data)                   ((0x00000002&(data))>>1)
#define  VDTOP_DARK_CPLL_CONTROLL_get_dark_cpll_start(data)                      (0x00000001&(data))

#define  VDTOP_DARK_CPLL_RESULT                                                 0x18019594
#define  VDTOP_DARK_CPLL_RESULT_reg_addr                                         "0xB8019594"
#define  VDTOP_DARK_CPLL_RESULT_reg                                              0xB8019594
#define  VDTOP_DARK_CPLL_RESULT_inst_addr                                        "0x0146"
#define  set_VDTOP_DARK_CPLL_RESULT_reg(data)                                    (*((volatile unsigned int*)VDTOP_DARK_CPLL_RESULT_reg)=data)
#define  get_VDTOP_DARK_CPLL_RESULT_reg                                          (*((volatile unsigned int*)VDTOP_DARK_CPLL_RESULT_reg))
#define  VDTOP_DARK_CPLL_RESULT_chromalock_acc_dark_shift                        (31)
#define  VDTOP_DARK_CPLL_RESULT_chromalock_dark_shift                            (30)
#define  VDTOP_DARK_CPLL_RESULT_pal_flag_dark_shift                              (29)
#define  VDTOP_DARK_CPLL_RESULT_palm_flag_dark_shift                             (28)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_loop_done_shift                        (24)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pali_palm_flag_shift                   (22)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pal60_palm_flag_shift                  (21)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc443_palm_flag_shift                (20)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_paln_palm_flag_shift                   (19)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc50_palm_flag_shift                 (18)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_palm_palm_flag_shift                   (17)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc_palm_flag_shift                   (16)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pali_pal_flag_shift                    (14)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pal60_pal_flag_shift                   (13)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc443_pal_flag_shift                 (12)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_paln_pal_flag_shift                    (11)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc50_pal_flag_shift                  (10)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_palm_pal_flag_shift                    (9)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc_pal_flag_shift                    (8)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pali_lock_shift                        (6)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pal60_lock_shift                       (5)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc443_lock_shift                     (4)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_paln_lock_shift                        (3)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc50_lock_shift                      (2)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_palm_lock_shift                        (1)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc_lock_shift                        (0)
#define  VDTOP_DARK_CPLL_RESULT_chromalock_acc_dark_mask                         (0x80000000)
#define  VDTOP_DARK_CPLL_RESULT_chromalock_dark_mask                             (0x40000000)
#define  VDTOP_DARK_CPLL_RESULT_pal_flag_dark_mask                               (0x20000000)
#define  VDTOP_DARK_CPLL_RESULT_palm_flag_dark_mask                              (0x10000000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_loop_done_mask                         (0x01000000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pali_palm_flag_mask                    (0x00400000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pal60_palm_flag_mask                   (0x00200000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc443_palm_flag_mask                 (0x00100000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_paln_palm_flag_mask                    (0x00080000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc50_palm_flag_mask                  (0x00040000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_palm_palm_flag_mask                    (0x00020000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc_palm_flag_mask                    (0x00010000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pali_pal_flag_mask                     (0x00004000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pal60_pal_flag_mask                    (0x00002000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc443_pal_flag_mask                  (0x00001000)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_paln_pal_flag_mask                     (0x00000800)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc50_pal_flag_mask                   (0x00000400)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_palm_pal_flag_mask                     (0x00000200)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc_pal_flag_mask                     (0x00000100)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pali_lock_mask                         (0x00000040)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pal60_lock_mask                        (0x00000020)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc443_lock_mask                      (0x00000010)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_paln_lock_mask                         (0x00000008)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc50_lock_mask                       (0x00000004)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_palm_lock_mask                         (0x00000002)
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc_lock_mask                         (0x00000001)
#define  VDTOP_DARK_CPLL_RESULT_chromalock_acc_dark(data)                        (0x80000000&((data)<<31))
#define  VDTOP_DARK_CPLL_RESULT_chromalock_dark(data)                            (0x40000000&((data)<<30))
#define  VDTOP_DARK_CPLL_RESULT_pal_flag_dark(data)                              (0x20000000&((data)<<29))
#define  VDTOP_DARK_CPLL_RESULT_palm_flag_dark(data)                             (0x10000000&((data)<<28))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_loop_done(data)                        (0x01000000&((data)<<24))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pali_palm_flag(data)                   (0x00400000&((data)<<22))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pal60_palm_flag(data)                  (0x00200000&((data)<<21))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc443_palm_flag(data)                (0x00100000&((data)<<20))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_paln_palm_flag(data)                   (0x00080000&((data)<<19))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc50_palm_flag(data)                 (0x00040000&((data)<<18))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_palm_palm_flag(data)                   (0x00020000&((data)<<17))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc_palm_flag(data)                   (0x00010000&((data)<<16))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pali_pal_flag(data)                    (0x00004000&((data)<<14))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pal60_pal_flag(data)                   (0x00002000&((data)<<13))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc443_pal_flag(data)                 (0x00001000&((data)<<12))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_paln_pal_flag(data)                    (0x00000800&((data)<<11))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc50_pal_flag(data)                  (0x00000400&((data)<<10))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_palm_pal_flag(data)                    (0x00000200&((data)<<9))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc_pal_flag(data)                    (0x00000100&((data)<<8))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pali_lock(data)                        (0x00000040&((data)<<6))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_pal60_lock(data)                       (0x00000020&((data)<<5))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc443_lock(data)                     (0x00000010&((data)<<4))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_paln_lock(data)                        (0x00000008&((data)<<3))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc50_lock(data)                      (0x00000004&((data)<<2))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_palm_lock(data)                        (0x00000002&((data)<<1))
#define  VDTOP_DARK_CPLL_RESULT_dark_cpll_ntsc_lock(data)                        (0x00000001&(data))
#define  VDTOP_DARK_CPLL_RESULT_get_chromalock_acc_dark(data)                    ((0x80000000&(data))>>31)
#define  VDTOP_DARK_CPLL_RESULT_get_chromalock_dark(data)                        ((0x40000000&(data))>>30)
#define  VDTOP_DARK_CPLL_RESULT_get_pal_flag_dark(data)                          ((0x20000000&(data))>>29)
#define  VDTOP_DARK_CPLL_RESULT_get_palm_flag_dark(data)                         ((0x10000000&(data))>>28)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_loop_done(data)                    ((0x01000000&(data))>>24)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_pali_palm_flag(data)               ((0x00400000&(data))>>22)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_pal60_palm_flag(data)              ((0x00200000&(data))>>21)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_ntsc443_palm_flag(data)            ((0x00100000&(data))>>20)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_paln_palm_flag(data)               ((0x00080000&(data))>>19)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_ntsc50_palm_flag(data)             ((0x00040000&(data))>>18)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_palm_palm_flag(data)               ((0x00020000&(data))>>17)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_ntsc_palm_flag(data)               ((0x00010000&(data))>>16)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_pali_pal_flag(data)                ((0x00004000&(data))>>14)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_pal60_pal_flag(data)               ((0x00002000&(data))>>13)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_ntsc443_pal_flag(data)             ((0x00001000&(data))>>12)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_paln_pal_flag(data)                ((0x00000800&(data))>>11)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_ntsc50_pal_flag(data)              ((0x00000400&(data))>>10)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_palm_pal_flag(data)                ((0x00000200&(data))>>9)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_ntsc_pal_flag(data)                ((0x00000100&(data))>>8)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_pali_lock(data)                    ((0x00000040&(data))>>6)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_pal60_lock(data)                   ((0x00000020&(data))>>5)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_ntsc443_lock(data)                 ((0x00000010&(data))>>4)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_paln_lock(data)                    ((0x00000008&(data))>>3)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_ntsc50_lock(data)                  ((0x00000004&(data))>>2)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_palm_lock(data)                    ((0x00000002&(data))>>1)
#define  VDTOP_DARK_CPLL_RESULT_get_dark_cpll_ntsc_lock(data)                    (0x00000001&(data))

#define  VDTOP_DARK_CPLL_BURSTMAG                                               0x18019598
#define  VDTOP_DARK_CPLL_BURSTMAG_reg_addr                                       "0xB8019598"
#define  VDTOP_DARK_CPLL_BURSTMAG_reg                                            0xB8019598
#define  VDTOP_DARK_CPLL_BURSTMAG_inst_addr                                      "0x0147"
#define  set_VDTOP_DARK_CPLL_BURSTMAG_reg(data)                                  (*((volatile unsigned int*)VDTOP_DARK_CPLL_BURSTMAG_reg)=data)
#define  get_VDTOP_DARK_CPLL_BURSTMAG_reg                                        (*((volatile unsigned int*)VDTOP_DARK_CPLL_BURSTMAG_reg))
#define  VDTOP_DARK_CPLL_BURSTMAG_dark_cpll_burst_magnitude_shift                (0)
#define  VDTOP_DARK_CPLL_BURSTMAG_dark_cpll_burst_magnitude_mask                 (0x000000FF)
#define  VDTOP_DARK_CPLL_BURSTMAG_dark_cpll_burst_magnitude(data)                (0x000000FF&(data))
#define  VDTOP_DARK_CPLL_BURSTMAG_get_dark_cpll_burst_magnitude(data)            (0x000000FF&(data))

#define  VDTOP_DARK_CLOOP_I_CTRL                                                0x1801959C
#define  VDTOP_DARK_CLOOP_I_CTRL_reg_addr                                        "0xB801959C"
#define  VDTOP_DARK_CLOOP_I_CTRL_reg                                             0xB801959C
#define  VDTOP_DARK_CLOOP_I_CTRL_inst_addr                                       "0x0148"
#define  set_VDTOP_DARK_CLOOP_I_CTRL_reg(data)                                   (*((volatile unsigned int*)VDTOP_DARK_CLOOP_I_CTRL_reg)=data)
#define  get_VDTOP_DARK_CLOOP_I_CTRL_reg                                         (*((volatile unsigned int*)VDTOP_DARK_CLOOP_I_CTRL_reg))
#define  VDTOP_DARK_CLOOP_I_CTRL_dark_cloop_i_ctrl_modify_en_shift               (24)
#define  VDTOP_DARK_CLOOP_I_CTRL_dark_cloop_i_ctrl_modify_range_shift            (0)
#define  VDTOP_DARK_CLOOP_I_CTRL_dark_cloop_i_ctrl_modify_en_mask                (0x01000000)
#define  VDTOP_DARK_CLOOP_I_CTRL_dark_cloop_i_ctrl_modify_range_mask             (0x003FFFFF)
#define  VDTOP_DARK_CLOOP_I_CTRL_dark_cloop_i_ctrl_modify_en(data)               (0x01000000&((data)<<24))
#define  VDTOP_DARK_CLOOP_I_CTRL_dark_cloop_i_ctrl_modify_range(data)            (0x003FFFFF&(data))
#define  VDTOP_DARK_CLOOP_I_CTRL_get_dark_cloop_i_ctrl_modify_en(data)           ((0x01000000&(data))>>24)
#define  VDTOP_DARK_CLOOP_I_CTRL_get_dark_cloop_i_ctrl_modify_range(data)        (0x003FFFFF&(data))

#define  VDTOP_IRQ_MASK1                                                        0x180195A0
#define  VDTOP_IRQ_MASK1_reg_addr                                                "0xB80195A0"
#define  VDTOP_IRQ_MASK1_reg                                                     0xB80195A0
#define  VDTOP_IRQ_MASK1_inst_addr                                               "0x0149"
#define  set_VDTOP_IRQ_MASK1_reg(data)                                           (*((volatile unsigned int*)VDTOP_IRQ_MASK1_reg)=data)
#define  get_VDTOP_IRQ_MASK1_reg                                                 (*((volatile unsigned int*)VDTOP_IRQ_MASK1_reg))
#define  VDTOP_IRQ_MASK1_change_signal_int_en_shift                              (10)
#define  VDTOP_IRQ_MASK1_hstate_err_irq_en_shift                                 (9)
#define  VDTOP_IRQ_MASK1_vd_irq_en_shift                                         (8)
#define  VDTOP_IRQ_MASK1_vcr_irq_en_shift                                        (7)
#define  VDTOP_IRQ_MASK1_nosig_irq_en_shift                                      (6)
#define  VDTOP_IRQ_MASK1_mode_irq_en_shift                                       (5)
#define  VDTOP_IRQ_MASK1_proscan_irq_en_shift                                    (4)
#define  VDTOP_IRQ_MASK1_noisy_irq_en_shift                                      (3)
#define  VDTOP_IRQ_MASK1_chromalock_irq_en_shift                                 (2)
#define  VDTOP_IRQ_MASK1_vlock_irq_en_shift                                      (1)
#define  VDTOP_IRQ_MASK1_hlock_irq_en_shift                                      (0)
#define  VDTOP_IRQ_MASK1_change_signal_int_en_mask                               (0x00000400)
#define  VDTOP_IRQ_MASK1_hstate_err_irq_en_mask                                  (0x00000200)
#define  VDTOP_IRQ_MASK1_vd_irq_en_mask                                          (0x00000100)
#define  VDTOP_IRQ_MASK1_vcr_irq_en_mask                                         (0x00000080)
#define  VDTOP_IRQ_MASK1_nosig_irq_en_mask                                       (0x00000040)
#define  VDTOP_IRQ_MASK1_mode_irq_en_mask                                        (0x00000020)
#define  VDTOP_IRQ_MASK1_proscan_irq_en_mask                                     (0x00000010)
#define  VDTOP_IRQ_MASK1_noisy_irq_en_mask                                       (0x00000008)
#define  VDTOP_IRQ_MASK1_chromalock_irq_en_mask                                  (0x00000004)
#define  VDTOP_IRQ_MASK1_vlock_irq_en_mask                                       (0x00000002)
#define  VDTOP_IRQ_MASK1_hlock_irq_en_mask                                       (0x00000001)
#define  VDTOP_IRQ_MASK1_change_signal_int_en(data)                              (0x00000400&((data)<<10))
#define  VDTOP_IRQ_MASK1_hstate_err_irq_en(data)                                 (0x00000200&((data)<<9))
#define  VDTOP_IRQ_MASK1_vd_irq_en(data)                                         (0x00000100&((data)<<8))
#define  VDTOP_IRQ_MASK1_vcr_irq_en(data)                                        (0x00000080&((data)<<7))
#define  VDTOP_IRQ_MASK1_nosig_irq_en(data)                                      (0x00000040&((data)<<6))
#define  VDTOP_IRQ_MASK1_mode_irq_en(data)                                       (0x00000020&((data)<<5))
#define  VDTOP_IRQ_MASK1_proscan_irq_en(data)                                    (0x00000010&((data)<<4))
#define  VDTOP_IRQ_MASK1_noisy_irq_en(data)                                      (0x00000008&((data)<<3))
#define  VDTOP_IRQ_MASK1_chromalock_irq_en(data)                                 (0x00000004&((data)<<2))
#define  VDTOP_IRQ_MASK1_vlock_irq_en(data)                                      (0x00000002&((data)<<1))
#define  VDTOP_IRQ_MASK1_hlock_irq_en(data)                                      (0x00000001&(data))
#define  VDTOP_IRQ_MASK1_get_change_signal_int_en(data)                          ((0x00000400&(data))>>10)
#define  VDTOP_IRQ_MASK1_get_hstate_err_irq_en(data)                             ((0x00000200&(data))>>9)
#define  VDTOP_IRQ_MASK1_get_vd_irq_en(data)                                     ((0x00000100&(data))>>8)
#define  VDTOP_IRQ_MASK1_get_vcr_irq_en(data)                                    ((0x00000080&(data))>>7)
#define  VDTOP_IRQ_MASK1_get_nosig_irq_en(data)                                  ((0x00000040&(data))>>6)
#define  VDTOP_IRQ_MASK1_get_mode_irq_en(data)                                   ((0x00000020&(data))>>5)
#define  VDTOP_IRQ_MASK1_get_proscan_irq_en(data)                                ((0x00000010&(data))>>4)
#define  VDTOP_IRQ_MASK1_get_noisy_irq_en(data)                                  ((0x00000008&(data))>>3)
#define  VDTOP_IRQ_MASK1_get_chromalock_irq_en(data)                             ((0x00000004&(data))>>2)
#define  VDTOP_IRQ_MASK1_get_vlock_irq_en(data)                                  ((0x00000002&(data))>>1)
#define  VDTOP_IRQ_MASK1_get_hlock_irq_en(data)                                  (0x00000001&(data))

#define  VDTOP_IRQ_MASK2                                                        0x180195A4
#define  VDTOP_IRQ_MASK2_reg_addr                                                "0xB80195A4"
#define  VDTOP_IRQ_MASK2_reg                                                     0xB80195A4
#define  VDTOP_IRQ_MASK2_inst_addr                                               "0x014A"
#define  set_VDTOP_IRQ_MASK2_reg(data)                                           (*((volatile unsigned int*)VDTOP_IRQ_MASK2_reg)=data)
#define  get_VDTOP_IRQ_MASK2_reg                                                 (*((volatile unsigned int*)VDTOP_IRQ_MASK2_reg))
#define  VDTOP_IRQ_MASK2_vd_scene_change_irq_en_shift                            (5)
#define  VDTOP_IRQ_MASK2_ddr_addr_irq_en_shift                                   (4)
#define  VDTOP_IRQ_MASK2_noisy_vbi_irq_en_shift                                  (3)
#define  VDTOP_IRQ_MASK2_coch_irq_en_shift                                       (2)
#define  VDTOP_IRQ_MASK2_mov_irq_en_shift                                        (1)
#define  VDTOP_IRQ_MASK2_field_irq_en_shift                                      (0)
#define  VDTOP_IRQ_MASK2_vd_scene_change_irq_en_mask                             (0x00000020)
#define  VDTOP_IRQ_MASK2_ddr_addr_irq_en_mask                                    (0x00000010)
#define  VDTOP_IRQ_MASK2_noisy_vbi_irq_en_mask                                   (0x00000008)
#define  VDTOP_IRQ_MASK2_coch_irq_en_mask                                        (0x00000004)
#define  VDTOP_IRQ_MASK2_mov_irq_en_mask                                         (0x00000002)
#define  VDTOP_IRQ_MASK2_field_irq_en_mask                                       (0x00000001)
#define  VDTOP_IRQ_MASK2_vd_scene_change_irq_en(data)                            (0x00000020&((data)<<5))
#define  VDTOP_IRQ_MASK2_ddr_addr_irq_en(data)                                   (0x00000010&((data)<<4))
#define  VDTOP_IRQ_MASK2_noisy_vbi_irq_en(data)                                  (0x00000008&((data)<<3))
#define  VDTOP_IRQ_MASK2_coch_irq_en(data)                                       (0x00000004&((data)<<2))
#define  VDTOP_IRQ_MASK2_mov_irq_en(data)                                        (0x00000002&((data)<<1))
#define  VDTOP_IRQ_MASK2_field_irq_en(data)                                      (0x00000001&(data))
#define  VDTOP_IRQ_MASK2_get_vd_scene_change_irq_en(data)                        ((0x00000020&(data))>>5)
#define  VDTOP_IRQ_MASK2_get_ddr_addr_irq_en(data)                               ((0x00000010&(data))>>4)
#define  VDTOP_IRQ_MASK2_get_noisy_vbi_irq_en(data)                              ((0x00000008&(data))>>3)
#define  VDTOP_IRQ_MASK2_get_coch_irq_en(data)                                   ((0x00000004&(data))>>2)
#define  VDTOP_IRQ_MASK2_get_mov_irq_en(data)                                    ((0x00000002&(data))>>1)
#define  VDTOP_IRQ_MASK2_get_field_irq_en(data)                                  (0x00000001&(data))

#define  VDTOP_IRQ_MASK3                                                        0x180195A8
#define  VDTOP_IRQ_MASK3_reg_addr                                                "0xB80195A8"
#define  VDTOP_IRQ_MASK3_reg                                                     0xB80195A8
#define  VDTOP_IRQ_MASK3_inst_addr                                               "0x014B"
#define  set_VDTOP_IRQ_MASK3_reg(data)                                           (*((volatile unsigned int*)VDTOP_IRQ_MASK3_reg)=data)
#define  get_VDTOP_IRQ_MASK3_reg                                                 (*((volatile unsigned int*)VDTOP_IRQ_MASK3_reg))
#define  VDTOP_IRQ_MASK3_ad1_irq_sel_shift                                       (11)
#define  VDTOP_IRQ_MASK3_ad2_irq_sel_shift                                       (10)
#define  VDTOP_IRQ_MASK3_ad3_irq_sel_shift                                       (9)
#define  VDTOP_IRQ_MASK3_ad4_irq_sel_shift                                       (8)
#define  VDTOP_IRQ_MASK3_ad1_over_irq_en_shift                                   (7)
#define  VDTOP_IRQ_MASK3_ad1_under_irq_en_shift                                  (6)
#define  VDTOP_IRQ_MASK3_ad2_over_irq_en_shift                                   (5)
#define  VDTOP_IRQ_MASK3_ad2_under_irq_en_shift                                  (4)
#define  VDTOP_IRQ_MASK3_ad3_over_irq_en_shift                                   (3)
#define  VDTOP_IRQ_MASK3_ad3_under_irq_en_shift                                  (2)
#define  VDTOP_IRQ_MASK3_ad4_over_irq_en_shift                                   (1)
#define  VDTOP_IRQ_MASK3_ad4_under_irq_en_shift                                  (0)
#define  VDTOP_IRQ_MASK3_ad1_irq_sel_mask                                        (0x00000800)
#define  VDTOP_IRQ_MASK3_ad2_irq_sel_mask                                        (0x00000400)
#define  VDTOP_IRQ_MASK3_ad3_irq_sel_mask                                        (0x00000200)
#define  VDTOP_IRQ_MASK3_ad4_irq_sel_mask                                        (0x00000100)
#define  VDTOP_IRQ_MASK3_ad1_over_irq_en_mask                                    (0x00000080)
#define  VDTOP_IRQ_MASK3_ad1_under_irq_en_mask                                   (0x00000040)
#define  VDTOP_IRQ_MASK3_ad2_over_irq_en_mask                                    (0x00000020)
#define  VDTOP_IRQ_MASK3_ad2_under_irq_en_mask                                   (0x00000010)
#define  VDTOP_IRQ_MASK3_ad3_over_irq_en_mask                                    (0x00000008)
#define  VDTOP_IRQ_MASK3_ad3_under_irq_en_mask                                   (0x00000004)
#define  VDTOP_IRQ_MASK3_ad4_over_irq_en_mask                                    (0x00000002)
#define  VDTOP_IRQ_MASK3_ad4_under_irq_en_mask                                   (0x00000001)
#define  VDTOP_IRQ_MASK3_ad1_irq_sel(data)                                       (0x00000800&((data)<<11))
#define  VDTOP_IRQ_MASK3_ad2_irq_sel(data)                                       (0x00000400&((data)<<10))
#define  VDTOP_IRQ_MASK3_ad3_irq_sel(data)                                       (0x00000200&((data)<<9))
#define  VDTOP_IRQ_MASK3_ad4_irq_sel(data)                                       (0x00000100&((data)<<8))
#define  VDTOP_IRQ_MASK3_ad1_over_irq_en(data)                                   (0x00000080&((data)<<7))
#define  VDTOP_IRQ_MASK3_ad1_under_irq_en(data)                                  (0x00000040&((data)<<6))
#define  VDTOP_IRQ_MASK3_ad2_over_irq_en(data)                                   (0x00000020&((data)<<5))
#define  VDTOP_IRQ_MASK3_ad2_under_irq_en(data)                                  (0x00000010&((data)<<4))
#define  VDTOP_IRQ_MASK3_ad3_over_irq_en(data)                                   (0x00000008&((data)<<3))
#define  VDTOP_IRQ_MASK3_ad3_under_irq_en(data)                                  (0x00000004&((data)<<2))
#define  VDTOP_IRQ_MASK3_ad4_over_irq_en(data)                                   (0x00000002&((data)<<1))
#define  VDTOP_IRQ_MASK3_ad4_under_irq_en(data)                                  (0x00000001&(data))
#define  VDTOP_IRQ_MASK3_get_ad1_irq_sel(data)                                   ((0x00000800&(data))>>11)
#define  VDTOP_IRQ_MASK3_get_ad2_irq_sel(data)                                   ((0x00000400&(data))>>10)
#define  VDTOP_IRQ_MASK3_get_ad3_irq_sel(data)                                   ((0x00000200&(data))>>9)
#define  VDTOP_IRQ_MASK3_get_ad4_irq_sel(data)                                   ((0x00000100&(data))>>8)
#define  VDTOP_IRQ_MASK3_get_ad1_over_irq_en(data)                               ((0x00000080&(data))>>7)
#define  VDTOP_IRQ_MASK3_get_ad1_under_irq_en(data)                              ((0x00000040&(data))>>6)
#define  VDTOP_IRQ_MASK3_get_ad2_over_irq_en(data)                               ((0x00000020&(data))>>5)
#define  VDTOP_IRQ_MASK3_get_ad2_under_irq_en(data)                              ((0x00000010&(data))>>4)
#define  VDTOP_IRQ_MASK3_get_ad3_over_irq_en(data)                               ((0x00000008&(data))>>3)
#define  VDTOP_IRQ_MASK3_get_ad3_under_irq_en(data)                              ((0x00000004&(data))>>2)
#define  VDTOP_IRQ_MASK3_get_ad4_over_irq_en(data)                               ((0x00000002&(data))>>1)
#define  VDTOP_IRQ_MASK3_get_ad4_under_irq_en(data)                              (0x00000001&(data))

#define  VDTOP_IRQ_STATUS1                                                      0x180195AC
#define  VDTOP_IRQ_STATUS1_reg_addr                                              "0xB80195AC"
#define  VDTOP_IRQ_STATUS1_reg                                                   0xB80195AC
#define  VDTOP_IRQ_STATUS1_inst_addr                                             "0x014C"
#define  set_VDTOP_IRQ_STATUS1_reg(data)                                         (*((volatile unsigned int*)VDTOP_IRQ_STATUS1_reg)=data)
#define  get_VDTOP_IRQ_STATUS1_reg                                               (*((volatile unsigned int*)VDTOP_IRQ_STATUS1_reg))
#define  VDTOP_IRQ_STATUS1_change_signal_int_shift                               (10)
#define  VDTOP_IRQ_STATUS1_vcr_irq_shift                                         (7)
#define  VDTOP_IRQ_STATUS1_nosig_irq_shift                                       (6)
#define  VDTOP_IRQ_STATUS1_mode_irq_shift                                        (5)
#define  VDTOP_IRQ_STATUS1_proscan_irq_shift                                     (4)
#define  VDTOP_IRQ_STATUS1_noisy_irq_shift                                       (3)
#define  VDTOP_IRQ_STATUS1_chromalock_irq_shift                                  (2)
#define  VDTOP_IRQ_STATUS1_vlock_irq_shift                                       (1)
#define  VDTOP_IRQ_STATUS1_hlock_irq_shift                                       (0)
#define  VDTOP_IRQ_STATUS1_change_signal_int_mask                                (0x00000400)
#define  VDTOP_IRQ_STATUS1_vcr_irq_mask                                          (0x00000080)
#define  VDTOP_IRQ_STATUS1_nosig_irq_mask                                        (0x00000040)
#define  VDTOP_IRQ_STATUS1_mode_irq_mask                                         (0x00000020)
#define  VDTOP_IRQ_STATUS1_proscan_irq_mask                                      (0x00000010)
#define  VDTOP_IRQ_STATUS1_noisy_irq_mask                                        (0x00000008)
#define  VDTOP_IRQ_STATUS1_chromalock_irq_mask                                   (0x00000004)
#define  VDTOP_IRQ_STATUS1_vlock_irq_mask                                        (0x00000002)
#define  VDTOP_IRQ_STATUS1_hlock_irq_mask                                        (0x00000001)
#define  VDTOP_IRQ_STATUS1_change_signal_int(data)                               (0x00000400&((data)<<10))
#define  VDTOP_IRQ_STATUS1_vcr_irq(data)                                         (0x00000080&((data)<<7))
#define  VDTOP_IRQ_STATUS1_nosig_irq(data)                                       (0x00000040&((data)<<6))
#define  VDTOP_IRQ_STATUS1_mode_irq(data)                                        (0x00000020&((data)<<5))
#define  VDTOP_IRQ_STATUS1_proscan_irq(data)                                     (0x00000010&((data)<<4))
#define  VDTOP_IRQ_STATUS1_noisy_irq(data)                                       (0x00000008&((data)<<3))
#define  VDTOP_IRQ_STATUS1_chromalock_irq(data)                                  (0x00000004&((data)<<2))
#define  VDTOP_IRQ_STATUS1_vlock_irq(data)                                       (0x00000002&((data)<<1))
#define  VDTOP_IRQ_STATUS1_hlock_irq(data)                                       (0x00000001&(data))
#define  VDTOP_IRQ_STATUS1_get_change_signal_int(data)                           ((0x00000400&(data))>>10)
#define  VDTOP_IRQ_STATUS1_get_vcr_irq(data)                                     ((0x00000080&(data))>>7)
#define  VDTOP_IRQ_STATUS1_get_nosig_irq(data)                                   ((0x00000040&(data))>>6)
#define  VDTOP_IRQ_STATUS1_get_mode_irq(data)                                    ((0x00000020&(data))>>5)
#define  VDTOP_IRQ_STATUS1_get_proscan_irq(data)                                 ((0x00000010&(data))>>4)
#define  VDTOP_IRQ_STATUS1_get_noisy_irq(data)                                   ((0x00000008&(data))>>3)
#define  VDTOP_IRQ_STATUS1_get_chromalock_irq(data)                              ((0x00000004&(data))>>2)
#define  VDTOP_IRQ_STATUS1_get_vlock_irq(data)                                   ((0x00000002&(data))>>1)
#define  VDTOP_IRQ_STATUS1_get_hlock_irq(data)                                   (0x00000001&(data))

#define  VDTOP_IRQ_STATUS2                                                      0x180195B0
#define  VDTOP_IRQ_STATUS2_reg_addr                                              "0xB80195B0"
#define  VDTOP_IRQ_STATUS2_reg                                                   0xB80195B0
#define  VDTOP_IRQ_STATUS2_inst_addr                                             "0x014D"
#define  set_VDTOP_IRQ_STATUS2_reg(data)                                         (*((volatile unsigned int*)VDTOP_IRQ_STATUS2_reg)=data)
#define  get_VDTOP_IRQ_STATUS2_reg                                               (*((volatile unsigned int*)VDTOP_IRQ_STATUS2_reg))
#define  VDTOP_IRQ_STATUS2_hstate_err_irq_shift                                  (6)
#define  VDTOP_IRQ_STATUS2_vd_scene_change_irq_shift                             (5)
#define  VDTOP_IRQ_STATUS2_ddr_addr_irq_shift                                    (4)
#define  VDTOP_IRQ_STATUS2_noisy_vbi_irq_shift                                   (3)
#define  VDTOP_IRQ_STATUS2_coch_irq_shift                                        (2)
#define  VDTOP_IRQ_STATUS2_mov_irq_shift                                         (1)
#define  VDTOP_IRQ_STATUS2_field_irq_shift                                       (0)
#define  VDTOP_IRQ_STATUS2_hstate_err_irq_mask                                   (0x00000040)
#define  VDTOP_IRQ_STATUS2_vd_scene_change_irq_mask                              (0x00000020)
#define  VDTOP_IRQ_STATUS2_ddr_addr_irq_mask                                     (0x00000010)
#define  VDTOP_IRQ_STATUS2_noisy_vbi_irq_mask                                    (0x00000008)
#define  VDTOP_IRQ_STATUS2_coch_irq_mask                                         (0x00000004)
#define  VDTOP_IRQ_STATUS2_mov_irq_mask                                          (0x00000002)
#define  VDTOP_IRQ_STATUS2_field_irq_mask                                        (0x00000001)
#define  VDTOP_IRQ_STATUS2_hstate_err_irq(data)                                  (0x00000040&((data)<<6))
#define  VDTOP_IRQ_STATUS2_vd_scene_change_irq(data)                             (0x00000020&((data)<<5))
#define  VDTOP_IRQ_STATUS2_ddr_addr_irq(data)                                    (0x00000010&((data)<<4))
#define  VDTOP_IRQ_STATUS2_noisy_vbi_irq(data)                                   (0x00000008&((data)<<3))
#define  VDTOP_IRQ_STATUS2_coch_irq(data)                                        (0x00000004&((data)<<2))
#define  VDTOP_IRQ_STATUS2_mov_irq(data)                                         (0x00000002&((data)<<1))
#define  VDTOP_IRQ_STATUS2_field_irq(data)                                       (0x00000001&(data))
#define  VDTOP_IRQ_STATUS2_get_hstate_err_irq(data)                              ((0x00000040&(data))>>6)
#define  VDTOP_IRQ_STATUS2_get_vd_scene_change_irq(data)                         ((0x00000020&(data))>>5)
#define  VDTOP_IRQ_STATUS2_get_ddr_addr_irq(data)                                ((0x00000010&(data))>>4)
#define  VDTOP_IRQ_STATUS2_get_noisy_vbi_irq(data)                               ((0x00000008&(data))>>3)
#define  VDTOP_IRQ_STATUS2_get_coch_irq(data)                                    ((0x00000004&(data))>>2)
#define  VDTOP_IRQ_STATUS2_get_mov_irq(data)                                     ((0x00000002&(data))>>1)
#define  VDTOP_IRQ_STATUS2_get_field_irq(data)                                   (0x00000001&(data))

#define  VDTOP_IRQ_STATUS3                                                      0x180195B4
#define  VDTOP_IRQ_STATUS3_reg_addr                                              "0xB80195B4"
#define  VDTOP_IRQ_STATUS3_reg                                                   0xB80195B4
#define  VDTOP_IRQ_STATUS3_inst_addr                                             "0x014E"
#define  set_VDTOP_IRQ_STATUS3_reg(data)                                         (*((volatile unsigned int*)VDTOP_IRQ_STATUS3_reg)=data)
#define  get_VDTOP_IRQ_STATUS3_reg                                               (*((volatile unsigned int*)VDTOP_IRQ_STATUS3_reg))
#define  VDTOP_IRQ_STATUS3_ad1_overflow_irq_shift                                (7)
#define  VDTOP_IRQ_STATUS3_ad1_underflow_irq_shift                               (6)
#define  VDTOP_IRQ_STATUS3_ad2_overflow_irq_shift                                (5)
#define  VDTOP_IRQ_STATUS3_ad2_underflow_irq_shift                               (4)
#define  VDTOP_IRQ_STATUS3_ad3_overflow_irq_shift                                (3)
#define  VDTOP_IRQ_STATUS3_ad3_underflow_irq_shift                               (2)
#define  VDTOP_IRQ_STATUS3_ad4_overflow_irq_shift                                (1)
#define  VDTOP_IRQ_STATUS3_ad4_underflow_irq_shift                               (0)
#define  VDTOP_IRQ_STATUS3_ad1_overflow_irq_mask                                 (0x00000080)
#define  VDTOP_IRQ_STATUS3_ad1_underflow_irq_mask                                (0x00000040)
#define  VDTOP_IRQ_STATUS3_ad2_overflow_irq_mask                                 (0x00000020)
#define  VDTOP_IRQ_STATUS3_ad2_underflow_irq_mask                                (0x00000010)
#define  VDTOP_IRQ_STATUS3_ad3_overflow_irq_mask                                 (0x00000008)
#define  VDTOP_IRQ_STATUS3_ad3_underflow_irq_mask                                (0x00000004)
#define  VDTOP_IRQ_STATUS3_ad4_overflow_irq_mask                                 (0x00000002)
#define  VDTOP_IRQ_STATUS3_ad4_underflow_irq_mask                                (0x00000001)
#define  VDTOP_IRQ_STATUS3_ad1_overflow_irq(data)                                (0x00000080&((data)<<7))
#define  VDTOP_IRQ_STATUS3_ad1_underflow_irq(data)                               (0x00000040&((data)<<6))
#define  VDTOP_IRQ_STATUS3_ad2_overflow_irq(data)                                (0x00000020&((data)<<5))
#define  VDTOP_IRQ_STATUS3_ad2_underflow_irq(data)                               (0x00000010&((data)<<4))
#define  VDTOP_IRQ_STATUS3_ad3_overflow_irq(data)                                (0x00000008&((data)<<3))
#define  VDTOP_IRQ_STATUS3_ad3_underflow_irq(data)                               (0x00000004&((data)<<2))
#define  VDTOP_IRQ_STATUS3_ad4_overflow_irq(data)                                (0x00000002&((data)<<1))
#define  VDTOP_IRQ_STATUS3_ad4_underflow_irq(data)                               (0x00000001&(data))
#define  VDTOP_IRQ_STATUS3_get_ad1_overflow_irq(data)                            ((0x00000080&(data))>>7)
#define  VDTOP_IRQ_STATUS3_get_ad1_underflow_irq(data)                           ((0x00000040&(data))>>6)
#define  VDTOP_IRQ_STATUS3_get_ad2_overflow_irq(data)                            ((0x00000020&(data))>>5)
#define  VDTOP_IRQ_STATUS3_get_ad2_underflow_irq(data)                           ((0x00000010&(data))>>4)
#define  VDTOP_IRQ_STATUS3_get_ad3_overflow_irq(data)                            ((0x00000008&(data))>>3)
#define  VDTOP_IRQ_STATUS3_get_ad3_underflow_irq(data)                           ((0x00000004&(data))>>2)
#define  VDTOP_IRQ_STATUS3_get_ad4_overflow_irq(data)                            ((0x00000002&(data))>>1)
#define  VDTOP_IRQ_STATUS3_get_ad4_underflow_irq(data)                           (0x00000001&(data))

#define  VDTOP_ADC_LIMIT_THRESHOLD                                              0x180195B8
#define  VDTOP_ADC_LIMIT_THRESHOLD_reg_addr                                      "0xB80195B8"
#define  VDTOP_ADC_LIMIT_THRESHOLD_reg                                           0xB80195B8
#define  VDTOP_ADC_LIMIT_THRESHOLD_inst_addr                                     "0x014F"
#define  set_VDTOP_ADC_LIMIT_THRESHOLD_reg(data)                                 (*((volatile unsigned int*)VDTOP_ADC_LIMIT_THRESHOLD_reg)=data)
#define  get_VDTOP_ADC_LIMIT_THRESHOLD_reg                                       (*((volatile unsigned int*)VDTOP_ADC_LIMIT_THRESHOLD_reg))
#define  VDTOP_ADC_LIMIT_THRESHOLD_adc_over_threh_shift                          (4)
#define  VDTOP_ADC_LIMIT_THRESHOLD_adc_under_threh_shift                         (0)
#define  VDTOP_ADC_LIMIT_THRESHOLD_adc_over_threh_mask                           (0x000000F0)
#define  VDTOP_ADC_LIMIT_THRESHOLD_adc_under_threh_mask                          (0x0000000F)
#define  VDTOP_ADC_LIMIT_THRESHOLD_adc_over_threh(data)                          (0x000000F0&((data)<<4))
#define  VDTOP_ADC_LIMIT_THRESHOLD_adc_under_threh(data)                         (0x0000000F&(data))
#define  VDTOP_ADC_LIMIT_THRESHOLD_get_adc_over_threh(data)                      ((0x000000F0&(data))>>4)
#define  VDTOP_ADC_LIMIT_THRESHOLD_get_adc_under_threh(data)                     (0x0000000F&(data))

#define  VDTOP_ADC_OVER_UNDER_FLAG                                              0x180195BC
#define  VDTOP_ADC_OVER_UNDER_FLAG_reg_addr                                      "0xB80195BC"
#define  VDTOP_ADC_OVER_UNDER_FLAG_reg                                           0xB80195BC
#define  VDTOP_ADC_OVER_UNDER_FLAG_inst_addr                                     "0x0150"
#define  set_VDTOP_ADC_OVER_UNDER_FLAG_reg(data)                                 (*((volatile unsigned int*)VDTOP_ADC_OVER_UNDER_FLAG_reg)=data)
#define  get_VDTOP_ADC_OVER_UNDER_FLAG_reg                                       (*((volatile unsigned int*)VDTOP_ADC_OVER_UNDER_FLAG_reg))
#define  VDTOP_ADC_OVER_UNDER_FLAG_adc_value_max_thr_shift                       (20)
#define  VDTOP_ADC_OVER_UNDER_FLAG_adc_value_min_thr_shift                       (8)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad1_value_small_shift                         (7)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad1_value_big_shift                           (6)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad2_value_small_shift                         (5)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad2_value_big_shift                           (4)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad3_value_small_shift                         (3)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad3_value_big_shift                           (2)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad4_value_small_shift                         (1)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad4_value_big_shift                           (0)
#define  VDTOP_ADC_OVER_UNDER_FLAG_adc_value_max_thr_mask                        (0x3FF00000)
#define  VDTOP_ADC_OVER_UNDER_FLAG_adc_value_min_thr_mask                        (0x0003FF00)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad1_value_small_mask                          (0x00000080)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad1_value_big_mask                            (0x00000040)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad2_value_small_mask                          (0x00000020)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad2_value_big_mask                            (0x00000010)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad3_value_small_mask                          (0x00000008)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad3_value_big_mask                            (0x00000004)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad4_value_small_mask                          (0x00000002)
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad4_value_big_mask                            (0x00000001)
#define  VDTOP_ADC_OVER_UNDER_FLAG_adc_value_max_thr(data)                       (0x3FF00000&((data)<<20))
#define  VDTOP_ADC_OVER_UNDER_FLAG_adc_value_min_thr(data)                       (0x0003FF00&((data)<<8))
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad1_value_small(data)                         (0x00000080&((data)<<7))
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad1_value_big(data)                           (0x00000040&((data)<<6))
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad2_value_small(data)                         (0x00000020&((data)<<5))
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad2_value_big(data)                           (0x00000010&((data)<<4))
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad3_value_small(data)                         (0x00000008&((data)<<3))
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad3_value_big(data)                           (0x00000004&((data)<<2))
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad4_value_small(data)                         (0x00000002&((data)<<1))
#define  VDTOP_ADC_OVER_UNDER_FLAG_ad4_value_big(data)                           (0x00000001&(data))
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_adc_value_max_thr(data)                   ((0x3FF00000&(data))>>20)
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_adc_value_min_thr(data)                   ((0x0003FF00&(data))>>8)
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_ad1_value_small(data)                     ((0x00000080&(data))>>7)
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_ad1_value_big(data)                       ((0x00000040&(data))>>6)
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_ad2_value_small(data)                     ((0x00000020&(data))>>5)
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_ad2_value_big(data)                       ((0x00000010&(data))>>4)
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_ad3_value_small(data)                     ((0x00000008&(data))>>3)
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_ad3_value_big(data)                       ((0x00000004&(data))>>2)
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_ad4_value_small(data)                     ((0x00000002&(data))>>1)
#define  VDTOP_ADC_OVER_UNDER_FLAG_get_ad4_value_big(data)                       (0x00000001&(data))

#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG                                        0x180195C0
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_reg_addr                                "0xB80195C0"
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_reg                                     0xB80195C0
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_inst_addr                               "0x0151"
#define  set_VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_reg(data)                           (*((volatile unsigned int*)VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_reg)=data)
#define  get_VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_reg                                 (*((volatile unsigned int*)VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_reg))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_y_small_shift               (9)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_y_big_shift                 (8)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_c_small_shift               (7)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_c_big_shift                 (6)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_r_small_shift               (5)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_r_big_shift                 (4)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_g_small_shift               (3)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_g_big_shift                 (2)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_b_small_shift               (1)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_b_big_shift                 (0)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_y_small_mask                (0x00000200)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_y_big_mask                  (0x00000100)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_c_small_mask                (0x00000080)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_c_big_mask                  (0x00000040)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_r_small_mask                (0x00000020)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_r_big_mask                  (0x00000010)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_g_small_mask                (0x00000008)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_g_big_mask                  (0x00000004)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_b_small_mask                (0x00000002)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_b_big_mask                  (0x00000001)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_y_small(data)               (0x00000200&((data)<<9))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_y_big(data)                 (0x00000100&((data)<<8))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_c_small(data)               (0x00000080&((data)<<7))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_c_big(data)                 (0x00000040&((data)<<6))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_r_small(data)               (0x00000020&((data)<<5))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_r_big(data)                 (0x00000010&((data)<<4))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_g_small(data)               (0x00000008&((data)<<3))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_g_big(data)                 (0x00000004&((data)<<2))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_b_small(data)               (0x00000002&((data)<<1))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_clampagc_md_b_big(data)                 (0x00000001&(data))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_y_small(data)           ((0x00000200&(data))>>9)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_y_big(data)             ((0x00000100&(data))>>8)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_c_small(data)           ((0x00000080&(data))>>7)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_c_big(data)             ((0x00000040&(data))>>6)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_r_small(data)           ((0x00000020&(data))>>5)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_r_big(data)             ((0x00000010&(data))>>4)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_g_small(data)           ((0x00000008&(data))>>3)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_g_big(data)             ((0x00000004&(data))>>2)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_b_small(data)           ((0x00000002&(data))>>1)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_FLAG_get_clampagc_md_b_big(data)             (0x00000001&(data))

#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL                                        0x180195C4
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_reg_addr                                "0xB80195C4"
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_reg                                     0xB80195C4
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_inst_addr                               "0x0152"
#define  set_VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_reg(data)                           (*((volatile unsigned int*)VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_reg)=data)
#define  get_VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_reg                                 (*((volatile unsigned int*)VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_reg))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_dgain_out_data_max_thr_shift            (12)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_dgain_out_data_min_thr_shift            (0)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_dgain_out_data_max_thr_mask             (0x00FFF000)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_dgain_out_data_min_thr_mask             (0x00000FFF)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_dgain_out_data_max_thr(data)            (0x00FFF000&((data)<<12))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_dgain_out_data_min_thr(data)            (0x00000FFF&(data))
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_get_dgain_out_data_max_thr(data)        ((0x00FFF000&(data))>>12)
#define  VDTOP_DGAIN_OUT_OVER_UNDER_CNTL_get_dgain_out_data_min_thr(data)        (0x00000FFF&(data))

#define  VDTOP_LDPAUSE_CTRL                                                     0x180195E0
#define  VDTOP_LDPAUSE_CTRL_reg_addr                                             "0xB80195E0"
#define  VDTOP_LDPAUSE_CTRL_reg                                                  0xB80195E0
#define  VDTOP_LDPAUSE_CTRL_inst_addr                                            "0x0153"
#define  set_VDTOP_LDPAUSE_CTRL_reg(data)                                        (*((volatile unsigned int*)VDTOP_LDPAUSE_CTRL_reg)=data)
#define  get_VDTOP_LDPAUSE_CTRL_reg                                              (*((volatile unsigned int*)VDTOP_LDPAUSE_CTRL_reg))
#define  VDTOP_LDPAUSE_CTRL_ld_pause_detect_shift                                (7)
#define  VDTOP_LDPAUSE_CTRL_ldp_det_en_shift                                     (6)
#define  VDTOP_LDPAUSE_CTRL_ldp_switch_en_shift                                  (5)
#define  VDTOP_LDPAUSE_CTRL_ldpaus_th_shift                                      (0)
#define  VDTOP_LDPAUSE_CTRL_ld_pause_detect_mask                                 (0x00000080)
#define  VDTOP_LDPAUSE_CTRL_ldp_det_en_mask                                      (0x00000040)
#define  VDTOP_LDPAUSE_CTRL_ldp_switch_en_mask                                   (0x00000020)
#define  VDTOP_LDPAUSE_CTRL_ldpaus_th_mask                                       (0x0000001F)
#define  VDTOP_LDPAUSE_CTRL_ld_pause_detect(data)                                (0x00000080&((data)<<7))
#define  VDTOP_LDPAUSE_CTRL_ldp_det_en(data)                                     (0x00000040&((data)<<6))
#define  VDTOP_LDPAUSE_CTRL_ldp_switch_en(data)                                  (0x00000020&((data)<<5))
#define  VDTOP_LDPAUSE_CTRL_ldpaus_th(data)                                      (0x0000001F&(data))
#define  VDTOP_LDPAUSE_CTRL_get_ld_pause_detect(data)                            ((0x00000080&(data))>>7)
#define  VDTOP_LDPAUSE_CTRL_get_ldp_det_en(data)                                 ((0x00000040&(data))>>6)
#define  VDTOP_LDPAUSE_CTRL_get_ldp_switch_en(data)                              ((0x00000020&(data))>>5)
#define  VDTOP_LDPAUSE_CTRL_get_ldpaus_th(data)                                  (0x0000001F&(data))

#define  VDTOP_VCR_OPTION                                                       0x180195E4
#define  VDTOP_VCR_OPTION_reg_addr                                               "0xB80195E4"
#define  VDTOP_VCR_OPTION_reg                                                    0xB80195E4
#define  VDTOP_VCR_OPTION_inst_addr                                              "0x0154"
#define  set_VDTOP_VCR_OPTION_reg(data)                                          (*((volatile unsigned int*)VDTOP_VCR_OPTION_reg)=data)
#define  get_VDTOP_VCR_OPTION_reg                                                (*((volatile unsigned int*)VDTOP_VCR_OPTION_reg))
#define  VDTOP_VCR_OPTION_coch_en_shift                                          (7)
#define  VDTOP_VCR_OPTION_disp_freerun_sel_shift                                 (6)
#define  VDTOP_VCR_OPTION_vd_out_dvalid_sel_d1_shift                             (5)
#define  VDTOP_VCR_OPTION_vcr_disable_shift                                      (4)
#define  VDTOP_VCR_OPTION_freerun_sel_shift                                      (3)
#define  VDTOP_VCR_OPTION_lock_h_on_no_signal_shift                              (2)
#define  VDTOP_VCR_OPTION_disable_blue_screen_when_vcr_shift                     (1)
#define  VDTOP_VCR_OPTION_detect_vcr_when_h_unlock_shift                         (0)
#define  VDTOP_VCR_OPTION_coch_en_mask                                           (0x00000080)
#define  VDTOP_VCR_OPTION_disp_freerun_sel_mask                                  (0x00000040)
#define  VDTOP_VCR_OPTION_vd_out_dvalid_sel_d1_mask                              (0x00000020)
#define  VDTOP_VCR_OPTION_vcr_disable_mask                                       (0x00000010)
#define  VDTOP_VCR_OPTION_freerun_sel_mask                                       (0x00000008)
#define  VDTOP_VCR_OPTION_lock_h_on_no_signal_mask                               (0x00000004)
#define  VDTOP_VCR_OPTION_disable_blue_screen_when_vcr_mask                      (0x00000002)
#define  VDTOP_VCR_OPTION_detect_vcr_when_h_unlock_mask                          (0x00000001)
#define  VDTOP_VCR_OPTION_coch_en(data)                                          (0x00000080&((data)<<7))
#define  VDTOP_VCR_OPTION_disp_freerun_sel(data)                                 (0x00000040&((data)<<6))
#define  VDTOP_VCR_OPTION_vd_out_dvalid_sel_d1(data)                             (0x00000020&((data)<<5))
#define  VDTOP_VCR_OPTION_vcr_disable(data)                                      (0x00000010&((data)<<4))
#define  VDTOP_VCR_OPTION_freerun_sel(data)                                      (0x00000008&((data)<<3))
#define  VDTOP_VCR_OPTION_lock_h_on_no_signal(data)                              (0x00000004&((data)<<2))
#define  VDTOP_VCR_OPTION_disable_blue_screen_when_vcr(data)                     (0x00000002&((data)<<1))
#define  VDTOP_VCR_OPTION_detect_vcr_when_h_unlock(data)                         (0x00000001&(data))
#define  VDTOP_VCR_OPTION_get_coch_en(data)                                      ((0x00000080&(data))>>7)
#define  VDTOP_VCR_OPTION_get_disp_freerun_sel(data)                             ((0x00000040&(data))>>6)
#define  VDTOP_VCR_OPTION_get_vd_out_dvalid_sel_d1(data)                         ((0x00000020&(data))>>5)
#define  VDTOP_VCR_OPTION_get_vcr_disable(data)                                  ((0x00000010&(data))>>4)
#define  VDTOP_VCR_OPTION_get_freerun_sel(data)                                  ((0x00000008&(data))>>3)
#define  VDTOP_VCR_OPTION_get_lock_h_on_no_signal(data)                          ((0x00000004&(data))>>2)
#define  VDTOP_VCR_OPTION_get_disable_blue_screen_when_vcr(data)                 ((0x00000002&(data))>>1)
#define  VDTOP_VCR_OPTION_get_detect_vcr_when_h_unlock(data)                     (0x00000001&(data))

#define  VDTOP_CENABLE_LINE_COUNT                                               0x180195E8
#define  VDTOP_CENABLE_LINE_COUNT_reg_addr                                       "0xB80195E8"
#define  VDTOP_CENABLE_LINE_COUNT_reg                                            0xB80195E8
#define  VDTOP_CENABLE_LINE_COUNT_inst_addr                                      "0x0155"
#define  set_VDTOP_CENABLE_LINE_COUNT_reg(data)                                  (*((volatile unsigned int*)VDTOP_CENABLE_LINE_COUNT_reg)=data)
#define  get_VDTOP_CENABLE_LINE_COUNT_reg                                        (*((volatile unsigned int*)VDTOP_CENABLE_LINE_COUNT_reg))
#define  VDTOP_CENABLE_LINE_COUNT_cenable_line_count_shift                       (0)
#define  VDTOP_CENABLE_LINE_COUNT_cenable_line_count_mask                        (0x000000FF)
#define  VDTOP_CENABLE_LINE_COUNT_cenable_line_count(data)                       (0x000000FF&(data))
#define  VDTOP_CENABLE_LINE_COUNT_get_cenable_line_count(data)                   (0x000000FF&(data))

#define  VDTOP_SIGNAL_STM_CONTROL                                               0x180195EC
#define  VDTOP_SIGNAL_STM_CONTROL_reg_addr                                       "0xB80195EC"
#define  VDTOP_SIGNAL_STM_CONTROL_reg                                            0xB80195EC
#define  VDTOP_SIGNAL_STM_CONTROL_inst_addr                                      "0x0156"
#define  set_VDTOP_SIGNAL_STM_CONTROL_reg(data)                                  (*((volatile unsigned int*)VDTOP_SIGNAL_STM_CONTROL_reg)=data)
#define  get_VDTOP_SIGNAL_STM_CONTROL_reg                                        (*((volatile unsigned int*)VDTOP_SIGNAL_STM_CONTROL_reg))
#define  VDTOP_SIGNAL_STM_CONTROL_auto_3dchange_vcr_shift                        (5)
#define  VDTOP_SIGNAL_STM_CONTROL_auto_3dchange_noisy_shift                      (4)
#define  VDTOP_SIGNAL_STM_CONTROL_field_toggle_en_shift                          (3)
#define  VDTOP_SIGNAL_STM_CONTROL_cbcr_ini_mux_shift                             (2)
#define  VDTOP_SIGNAL_STM_CONTROL_auto_3dchange_vcr_mask                         (0x00000020)
#define  VDTOP_SIGNAL_STM_CONTROL_auto_3dchange_noisy_mask                       (0x00000010)
#define  VDTOP_SIGNAL_STM_CONTROL_field_toggle_en_mask                           (0x00000008)
#define  VDTOP_SIGNAL_STM_CONTROL_cbcr_ini_mux_mask                              (0x00000004)
#define  VDTOP_SIGNAL_STM_CONTROL_auto_3dchange_vcr(data)                        (0x00000020&((data)<<5))
#define  VDTOP_SIGNAL_STM_CONTROL_auto_3dchange_noisy(data)                      (0x00000010&((data)<<4))
#define  VDTOP_SIGNAL_STM_CONTROL_field_toggle_en(data)                          (0x00000008&((data)<<3))
#define  VDTOP_SIGNAL_STM_CONTROL_cbcr_ini_mux(data)                             (0x00000004&((data)<<2))
#define  VDTOP_SIGNAL_STM_CONTROL_get_auto_3dchange_vcr(data)                    ((0x00000020&(data))>>5)
#define  VDTOP_SIGNAL_STM_CONTROL_get_auto_3dchange_noisy(data)                  ((0x00000010&(data))>>4)
#define  VDTOP_SIGNAL_STM_CONTROL_get_field_toggle_en(data)                      ((0x00000008&(data))>>3)
#define  VDTOP_SIGNAL_STM_CONTROL_get_cbcr_ini_mux(data)                         ((0x00000004&(data))>>2)

#define  VDTOP_CDETECT_PHASE_ERR_STATUS                                         0x180195F0
#define  VDTOP_CDETECT_PHASE_ERR_STATUS_reg_addr                                 "0xB80195F0"
#define  VDTOP_CDETECT_PHASE_ERR_STATUS_reg                                      0xB80195F0
#define  VDTOP_CDETECT_PHASE_ERR_STATUS_inst_addr                                "0x0157"
#define  set_VDTOP_CDETECT_PHASE_ERR_STATUS_reg(data)                            (*((volatile unsigned int*)VDTOP_CDETECT_PHASE_ERR_STATUS_reg)=data)
#define  get_VDTOP_CDETECT_PHASE_ERR_STATUS_reg                                  (*((volatile unsigned int*)VDTOP_CDETECT_PHASE_ERR_STATUS_reg))
#define  VDTOP_CDETECT_PHASE_ERR_STATUS_cdet_phase_err_status_shift              (0)
#define  VDTOP_CDETECT_PHASE_ERR_STATUS_cdet_phase_err_status_mask               (0x00003FFF)
#define  VDTOP_CDETECT_PHASE_ERR_STATUS_cdet_phase_err_status(data)              (0x00003FFF&(data))
#define  VDTOP_CDETECT_PHASE_ERR_STATUS_get_cdet_phase_err_status(data)          (0x00003FFF&(data))

#define  VDTOP_AD_SW_CTRL0                                                      0x18019608
#define  VDTOP_AD_SW_CTRL0_reg_addr                                              "0xB8019608"
#define  VDTOP_AD_SW_CTRL0_reg                                                   0xB8019608
#define  VDTOP_AD_SW_CTRL0_inst_addr                                             "0x0158"
#define  set_VDTOP_AD_SW_CTRL0_reg(data)                                         (*((volatile unsigned int*)VDTOP_AD_SW_CTRL0_reg)=data)
#define  get_VDTOP_AD_SW_CTRL0_reg                                               (*((volatile unsigned int*)VDTOP_AD_SW_CTRL0_reg))
#define  VDTOP_AD_SW_CTRL0_sw_comp_shift                                         (6)
#define  VDTOP_AD_SW_CTRL0_sw_pr_r_shift                                         (4)
#define  VDTOP_AD_SW_CTRL0_sw_pb_b_shift                                         (2)
#define  VDTOP_AD_SW_CTRL0_sw_g_shift                                            (0)
#define  VDTOP_AD_SW_CTRL0_sw_comp_mask                                          (0x000000C0)
#define  VDTOP_AD_SW_CTRL0_sw_pr_r_mask                                          (0x00000030)
#define  VDTOP_AD_SW_CTRL0_sw_pb_b_mask                                          (0x0000000C)
#define  VDTOP_AD_SW_CTRL0_sw_g_mask                                             (0x00000003)
#define  VDTOP_AD_SW_CTRL0_sw_comp(data)                                         (0x000000C0&((data)<<6))
#define  VDTOP_AD_SW_CTRL0_sw_pr_r(data)                                         (0x00000030&((data)<<4))
#define  VDTOP_AD_SW_CTRL0_sw_pb_b(data)                                         (0x0000000C&((data)<<2))
#define  VDTOP_AD_SW_CTRL0_sw_g(data)                                            (0x00000003&(data))
#define  VDTOP_AD_SW_CTRL0_get_sw_comp(data)                                     ((0x000000C0&(data))>>6)
#define  VDTOP_AD_SW_CTRL0_get_sw_pr_r(data)                                     ((0x00000030&(data))>>4)
#define  VDTOP_AD_SW_CTRL0_get_sw_pb_b(data)                                     ((0x0000000C&(data))>>2)
#define  VDTOP_AD_SW_CTRL0_get_sw_g(data)                                        (0x00000003&(data))

#define  VDTOP_CLAMP_UPDN_EN                                                    0x1801960C
#define  VDTOP_CLAMP_UPDN_EN_reg_addr                                            "0xB801960C"
#define  VDTOP_CLAMP_UPDN_EN_reg                                                 0xB801960C
#define  VDTOP_CLAMP_UPDN_EN_inst_addr                                           "0x0159"
#define  set_VDTOP_CLAMP_UPDN_EN_reg(data)                                       (*((volatile unsigned int*)VDTOP_CLAMP_UPDN_EN_reg)=data)
#define  get_VDTOP_CLAMP_UPDN_EN_reg                                             (*((volatile unsigned int*)VDTOP_CLAMP_UPDN_EN_reg))
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad1_shift                                     (6)
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad2_shift                                     (4)
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad3_shift                                     (2)
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad4_shift                                     (0)
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad1_mask                                      (0x000000C0)
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad2_mask                                      (0x00000030)
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad3_mask                                      (0x0000000C)
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad4_mask                                      (0x00000003)
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad1(data)                                     (0x000000C0&((data)<<6))
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad2(data)                                     (0x00000030&((data)<<4))
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad3(data)                                     (0x0000000C&((data)<<2))
#define  VDTOP_CLAMP_UPDN_EN_clamp_ad4(data)                                     (0x00000003&(data))
#define  VDTOP_CLAMP_UPDN_EN_get_clamp_ad1(data)                                 ((0x000000C0&(data))>>6)
#define  VDTOP_CLAMP_UPDN_EN_get_clamp_ad2(data)                                 ((0x00000030&(data))>>4)
#define  VDTOP_CLAMP_UPDN_EN_get_clamp_ad3(data)                                 ((0x0000000C&(data))>>2)
#define  VDTOP_CLAMP_UPDN_EN_get_clamp_ad4(data)                                 (0x00000003&(data))

#define  VDTOP_CLAMP_RGB_UPDN_EN                                                0x18019610
#define  VDTOP_CLAMP_RGB_UPDN_EN_reg_addr                                        "0xB8019610"
#define  VDTOP_CLAMP_RGB_UPDN_EN_reg                                             0xB8019610
#define  VDTOP_CLAMP_RGB_UPDN_EN_inst_addr                                       "0x015A"
#define  set_VDTOP_CLAMP_RGB_UPDN_EN_reg(data)                                   (*((volatile unsigned int*)VDTOP_CLAMP_RGB_UPDN_EN_reg)=data)
#define  get_VDTOP_CLAMP_RGB_UPDN_EN_reg                                         (*((volatile unsigned int*)VDTOP_CLAMP_RGB_UPDN_EN_reg))
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_a_up_en_shift                             (7)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_a_dn_en_shift                             (6)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_b_up_en_shift                             (5)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_b_dn_en_shift                             (4)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_c_up_en_shift                             (3)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_c_dn_en_shift                             (2)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_d_up_en_shift                             (1)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_d_dn_en_shift                             (0)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_a_up_en_mask                              (0x00000080)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_a_dn_en_mask                              (0x00000040)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_b_up_en_mask                              (0x00000020)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_b_dn_en_mask                              (0x00000010)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_c_up_en_mask                              (0x00000008)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_c_dn_en_mask                              (0x00000004)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_d_up_en_mask                              (0x00000002)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_d_dn_en_mask                              (0x00000001)
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_a_up_en(data)                             (0x00000080&((data)<<7))
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_a_dn_en(data)                             (0x00000040&((data)<<6))
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_b_up_en(data)                             (0x00000020&((data)<<5))
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_b_dn_en(data)                             (0x00000010&((data)<<4))
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_c_up_en(data)                             (0x00000008&((data)<<3))
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_c_dn_en(data)                             (0x00000004&((data)<<2))
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_d_up_en(data)                             (0x00000002&((data)<<1))
#define  VDTOP_CLAMP_RGB_UPDN_EN_clamp_d_dn_en(data)                             (0x00000001&(data))
#define  VDTOP_CLAMP_RGB_UPDN_EN_get_clamp_a_up_en(data)                         ((0x00000080&(data))>>7)
#define  VDTOP_CLAMP_RGB_UPDN_EN_get_clamp_a_dn_en(data)                         ((0x00000040&(data))>>6)
#define  VDTOP_CLAMP_RGB_UPDN_EN_get_clamp_b_up_en(data)                         ((0x00000020&(data))>>5)
#define  VDTOP_CLAMP_RGB_UPDN_EN_get_clamp_b_dn_en(data)                         ((0x00000010&(data))>>4)
#define  VDTOP_CLAMP_RGB_UPDN_EN_get_clamp_c_up_en(data)                         ((0x00000008&(data))>>3)
#define  VDTOP_CLAMP_RGB_UPDN_EN_get_clamp_c_dn_en(data)                         ((0x00000004&(data))>>2)
#define  VDTOP_CLAMP_RGB_UPDN_EN_get_clamp_d_up_en(data)                         ((0x00000002&(data))>>1)
#define  VDTOP_CLAMP_RGB_UPDN_EN_get_clamp_d_dn_en(data)                         (0x00000001&(data))

#define  VDTOP_FSW_CTRL0                                                        0x18019618
#define  VDTOP_FSW_CTRL0_reg_addr                                                "0xB8019618"
#define  VDTOP_FSW_CTRL0_reg                                                     0xB8019618
#define  VDTOP_FSW_CTRL0_inst_addr                                               "0x015B"
#define  set_VDTOP_FSW_CTRL0_reg(data)                                           (*((volatile unsigned int*)VDTOP_FSW_CTRL0_reg)=data)
#define  get_VDTOP_FSW_CTRL0_reg                                                 (*((volatile unsigned int*)VDTOP_FSW_CTRL0_reg))
#define  VDTOP_FSW_CTRL0_aa3_en_shift                                            (7)
#define  VDTOP_FSW_CTRL0_fb_th_shift                                             (4)
#define  VDTOP_FSW_CTRL0_fb_delay_shift                                          (0)
#define  VDTOP_FSW_CTRL0_aa3_en_mask                                             (0x00000080)
#define  VDTOP_FSW_CTRL0_fb_th_mask                                              (0x00000070)
#define  VDTOP_FSW_CTRL0_fb_delay_mask                                           (0x0000000F)
#define  VDTOP_FSW_CTRL0_aa3_en(data)                                            (0x00000080&((data)<<7))
#define  VDTOP_FSW_CTRL0_fb_th(data)                                             (0x00000070&((data)<<4))
#define  VDTOP_FSW_CTRL0_fb_delay(data)                                          (0x0000000F&(data))
#define  VDTOP_FSW_CTRL0_get_aa3_en(data)                                        ((0x00000080&(data))>>7)
#define  VDTOP_FSW_CTRL0_get_fb_th(data)                                         ((0x00000070&(data))>>4)
#define  VDTOP_FSW_CTRL0_get_fb_delay(data)                                      (0x0000000F&(data))

#define  VDTOP_FSW_CTRL1                                                        0x1801961C
#define  VDTOP_FSW_CTRL1_reg_addr                                                "0xB801961C"
#define  VDTOP_FSW_CTRL1_reg                                                     0xB801961C
#define  VDTOP_FSW_CTRL1_inst_addr                                               "0x015C"
#define  set_VDTOP_FSW_CTRL1_reg(data)                                           (*((volatile unsigned int*)VDTOP_FSW_CTRL1_reg)=data)
#define  get_VDTOP_FSW_CTRL1_reg                                                 (*((volatile unsigned int*)VDTOP_FSW_CTRL1_reg))
#define  VDTOP_FSW_CTRL1_fb2rgb_dly_shift                                        (8)
#define  VDTOP_FSW_CTRL1_rgb2cvbs_dly_shift                                      (0)
#define  VDTOP_FSW_CTRL1_fb2rgb_dly_mask                                         (0x00000700)
#define  VDTOP_FSW_CTRL1_rgb2cvbs_dly_mask                                       (0x0000003F)
#define  VDTOP_FSW_CTRL1_fb2rgb_dly(data)                                        (0x00000700&((data)<<8))
#define  VDTOP_FSW_CTRL1_rgb2cvbs_dly(data)                                      (0x0000003F&(data))
#define  VDTOP_FSW_CTRL1_get_fb2rgb_dly(data)                                    ((0x00000700&(data))>>8)
#define  VDTOP_FSW_CTRL1_get_rgb2cvbs_dly(data)                                  (0x0000003F&(data))

#define  VDTOP_FSW_CTRL2                                                        0x18019620
#define  VDTOP_FSW_CTRL2_reg_addr                                                "0xB8019620"
#define  VDTOP_FSW_CTRL2_reg                                                     0xB8019620
#define  VDTOP_FSW_CTRL2_inst_addr                                               "0x015D"
#define  set_VDTOP_FSW_CTRL2_reg(data)                                           (*((volatile unsigned int*)VDTOP_FSW_CTRL2_reg)=data)
#define  get_VDTOP_FSW_CTRL2_reg                                                 (*((volatile unsigned int*)VDTOP_FSW_CTRL2_reg))
#define  VDTOP_FSW_CTRL2_outfifo_444_sel_shift                                   (8)
#define  VDTOP_FSW_CTRL2_scart_en_shift                                          (7)
#define  VDTOP_FSW_CTRL2_yout_limit_shift                                        (6)
#define  VDTOP_FSW_CTRL2_fb_inv_shift                                            (5)
#define  VDTOP_FSW_CTRL2_cout_limit_shift                                        (4)
#define  VDTOP_FSW_CTRL2_out444_sel_shift                                        (3)
#define  VDTOP_FSW_CTRL2_aa422_en_shift                                          (2)
#define  VDTOP_FSW_CTRL2_fb_sw_shift                                             (1)
#define  VDTOP_FSW_CTRL2_fb_en_shift                                             (0)
#define  VDTOP_FSW_CTRL2_outfifo_444_sel_mask                                    (0x00000100)
#define  VDTOP_FSW_CTRL2_scart_en_mask                                           (0x00000080)
#define  VDTOP_FSW_CTRL2_yout_limit_mask                                         (0x00000040)
#define  VDTOP_FSW_CTRL2_fb_inv_mask                                             (0x00000020)
#define  VDTOP_FSW_CTRL2_cout_limit_mask                                         (0x00000010)
#define  VDTOP_FSW_CTRL2_out444_sel_mask                                         (0x00000008)
#define  VDTOP_FSW_CTRL2_aa422_en_mask                                           (0x00000004)
#define  VDTOP_FSW_CTRL2_fb_sw_mask                                              (0x00000002)
#define  VDTOP_FSW_CTRL2_fb_en_mask                                              (0x00000001)
#define  VDTOP_FSW_CTRL2_outfifo_444_sel(data)                                   (0x00000100&((data)<<8))
#define  VDTOP_FSW_CTRL2_scart_en(data)                                          (0x00000080&((data)<<7))
#define  VDTOP_FSW_CTRL2_yout_limit(data)                                        (0x00000040&((data)<<6))
#define  VDTOP_FSW_CTRL2_fb_inv(data)                                            (0x00000020&((data)<<5))
#define  VDTOP_FSW_CTRL2_cout_limit(data)                                        (0x00000010&((data)<<4))
#define  VDTOP_FSW_CTRL2_out444_sel(data)                                        (0x00000008&((data)<<3))
#define  VDTOP_FSW_CTRL2_aa422_en(data)                                          (0x00000004&((data)<<2))
#define  VDTOP_FSW_CTRL2_fb_sw(data)                                             (0x00000002&((data)<<1))
#define  VDTOP_FSW_CTRL2_fb_en(data)                                             (0x00000001&(data))
#define  VDTOP_FSW_CTRL2_get_outfifo_444_sel(data)                               ((0x00000100&(data))>>8)
#define  VDTOP_FSW_CTRL2_get_scart_en(data)                                      ((0x00000080&(data))>>7)
#define  VDTOP_FSW_CTRL2_get_yout_limit(data)                                    ((0x00000040&(data))>>6)
#define  VDTOP_FSW_CTRL2_get_fb_inv(data)                                        ((0x00000020&(data))>>5)
#define  VDTOP_FSW_CTRL2_get_cout_limit(data)                                    ((0x00000010&(data))>>4)
#define  VDTOP_FSW_CTRL2_get_out444_sel(data)                                    ((0x00000008&(data))>>3)
#define  VDTOP_FSW_CTRL2_get_aa422_en(data)                                      ((0x00000004&(data))>>2)
#define  VDTOP_FSW_CTRL2_get_fb_sw(data)                                         ((0x00000002&(data))>>1)
#define  VDTOP_FSW_CTRL2_get_fb_en(data)                                         (0x00000001&(data))

#define  VDTOP_FSW_CTRL3                                                        0x18019624
#define  VDTOP_FSW_CTRL3_reg_addr                                                "0xB8019624"
#define  VDTOP_FSW_CTRL3_reg                                                     0xB8019624
#define  VDTOP_FSW_CTRL3_inst_addr                                               "0x015E"
#define  set_VDTOP_FSW_CTRL3_reg(data)                                           (*((volatile unsigned int*)VDTOP_FSW_CTRL3_reg)=data)
#define  get_VDTOP_FSW_CTRL3_reg                                                 (*((volatile unsigned int*)VDTOP_FSW_CTRL3_reg))
#define  VDTOP_FSW_CTRL3_fb_thmax_shift                                          (4)
#define  VDTOP_FSW_CTRL3_fb_thmin_shift                                          (0)
#define  VDTOP_FSW_CTRL3_fb_thmax_mask                                           (0x000000F0)
#define  VDTOP_FSW_CTRL3_fb_thmin_mask                                           (0x0000000F)
#define  VDTOP_FSW_CTRL3_fb_thmax(data)                                          (0x000000F0&((data)<<4))
#define  VDTOP_FSW_CTRL3_fb_thmin(data)                                          (0x0000000F&(data))
#define  VDTOP_FSW_CTRL3_get_fb_thmax(data)                                      ((0x000000F0&(data))>>4)
#define  VDTOP_FSW_CTRL3_get_fb_thmin(data)                                      (0x0000000F&(data))

#define  VDTOP_LUMA_CONTRAST2_ADJ                                               0x18019628
#define  VDTOP_LUMA_CONTRAST2_ADJ_reg_addr                                       "0xB8019628"
#define  VDTOP_LUMA_CONTRAST2_ADJ_reg                                            0xB8019628
#define  VDTOP_LUMA_CONTRAST2_ADJ_inst_addr                                      "0x015F"
#define  set_VDTOP_LUMA_CONTRAST2_ADJ_reg(data)                                  (*((volatile unsigned int*)VDTOP_LUMA_CONTRAST2_ADJ_reg)=data)
#define  get_VDTOP_LUMA_CONTRAST2_ADJ_reg                                        (*((volatile unsigned int*)VDTOP_LUMA_CONTRAST2_ADJ_reg))
#define  VDTOP_LUMA_CONTRAST2_ADJ_contrast2_shift                                (0)
#define  VDTOP_LUMA_CONTRAST2_ADJ_contrast2_mask                                 (0x000003FF)
#define  VDTOP_LUMA_CONTRAST2_ADJ_contrast2(data)                                (0x000003FF&(data))
#define  VDTOP_LUMA_CONTRAST2_ADJ_get_contrast2(data)                            (0x000003FF&(data))

#define  VDTOP_LUMA_BRIGHTNESS2_ADJ                                             0x1801962C
#define  VDTOP_LUMA_BRIGHTNESS2_ADJ_reg_addr                                     "0xB801962C"
#define  VDTOP_LUMA_BRIGHTNESS2_ADJ_reg                                          0xB801962C
#define  VDTOP_LUMA_BRIGHTNESS2_ADJ_inst_addr                                    "0x0160"
#define  set_VDTOP_LUMA_BRIGHTNESS2_ADJ_reg(data)                                (*((volatile unsigned int*)VDTOP_LUMA_BRIGHTNESS2_ADJ_reg)=data)
#define  get_VDTOP_LUMA_BRIGHTNESS2_ADJ_reg                                      (*((volatile unsigned int*)VDTOP_LUMA_BRIGHTNESS2_ADJ_reg))
#define  VDTOP_LUMA_BRIGHTNESS2_ADJ_brightness2_shift                            (0)
#define  VDTOP_LUMA_BRIGHTNESS2_ADJ_brightness2_mask                             (0x000003FF)
#define  VDTOP_LUMA_BRIGHTNESS2_ADJ_brightness2(data)                            (0x000003FF&(data))
#define  VDTOP_LUMA_BRIGHTNESS2_ADJ_get_brightness2(data)                        (0x000003FF&(data))

#define  VDTOP_CHROMA_SATURATION2_ADJ                                           0x18019630
#define  VDTOP_CHROMA_SATURATION2_ADJ_reg_addr                                   "0xB8019630"
#define  VDTOP_CHROMA_SATURATION2_ADJ_reg                                        0xB8019630
#define  VDTOP_CHROMA_SATURATION2_ADJ_inst_addr                                  "0x0161"
#define  set_VDTOP_CHROMA_SATURATION2_ADJ_reg(data)                              (*((volatile unsigned int*)VDTOP_CHROMA_SATURATION2_ADJ_reg)=data)
#define  get_VDTOP_CHROMA_SATURATION2_ADJ_reg                                    (*((volatile unsigned int*)VDTOP_CHROMA_SATURATION2_ADJ_reg))
#define  VDTOP_CHROMA_SATURATION2_ADJ_cr_saturation_shift                        (0)
#define  VDTOP_CHROMA_SATURATION2_ADJ_cr_saturation_mask                         (0x000003FF)
#define  VDTOP_CHROMA_SATURATION2_ADJ_cr_saturation(data)                        (0x000003FF&(data))
#define  VDTOP_CHROMA_SATURATION2_ADJ_get_cr_saturation(data)                    (0x000003FF&(data))

#define  VDTOP_CB_SAT_ADJ                                                       0x18019634
#define  VDTOP_CB_SAT_ADJ_reg_addr                                               "0xB8019634"
#define  VDTOP_CB_SAT_ADJ_reg                                                    0xB8019634
#define  VDTOP_CB_SAT_ADJ_inst_addr                                              "0x0162"
#define  set_VDTOP_CB_SAT_ADJ_reg(data)                                          (*((volatile unsigned int*)VDTOP_CB_SAT_ADJ_reg)=data)
#define  get_VDTOP_CB_SAT_ADJ_reg                                                (*((volatile unsigned int*)VDTOP_CB_SAT_ADJ_reg))
#define  VDTOP_CB_SAT_ADJ_cb_saturation_shift                                    (0)
#define  VDTOP_CB_SAT_ADJ_cb_saturation_mask                                     (0x000003FF)
#define  VDTOP_CB_SAT_ADJ_cb_saturation(data)                                    (0x000003FF&(data))
#define  VDTOP_CB_SAT_ADJ_get_cb_saturation(data)                                (0x000003FF&(data))

#define  VDTOP_LUMA_PEAKING2                                                    0x18019638
#define  VDTOP_LUMA_PEAKING2_reg_addr                                            "0xB8019638"
#define  VDTOP_LUMA_PEAKING2_reg                                                 0xB8019638
#define  VDTOP_LUMA_PEAKING2_inst_addr                                           "0x0163"
#define  set_VDTOP_LUMA_PEAKING2_reg(data)                                       (*((volatile unsigned int*)VDTOP_LUMA_PEAKING2_reg)=data)
#define  get_VDTOP_LUMA_PEAKING2_reg                                             (*((volatile unsigned int*)VDTOP_LUMA_PEAKING2_reg))
#define  VDTOP_LUMA_PEAKING2_peak_range2_shift                                   (4)
#define  VDTOP_LUMA_PEAKING2_peak_gain2_shift                                    (1)
#define  VDTOP_LUMA_PEAKING2_peak_en2_shift                                      (0)
#define  VDTOP_LUMA_PEAKING2_peak_range2_mask                                    (0x00000030)
#define  VDTOP_LUMA_PEAKING2_peak_gain2_mask                                     (0x0000000E)
#define  VDTOP_LUMA_PEAKING2_peak_en2_mask                                       (0x00000001)
#define  VDTOP_LUMA_PEAKING2_peak_range2(data)                                   (0x00000030&((data)<<4))
#define  VDTOP_LUMA_PEAKING2_peak_gain2(data)                                    (0x0000000E&((data)<<1))
#define  VDTOP_LUMA_PEAKING2_peak_en2(data)                                      (0x00000001&(data))
#define  VDTOP_LUMA_PEAKING2_get_peak_range2(data)                               ((0x00000030&(data))>>4)
#define  VDTOP_LUMA_PEAKING2_get_peak_gain2(data)                                ((0x0000000E&(data))>>1)
#define  VDTOP_LUMA_PEAKING2_get_peak_en2(data)                                  (0x00000001&(data))

#define  VDTOP_FSW_GAIN_CTRL                                                    0x1801963C
#define  VDTOP_FSW_GAIN_CTRL_reg_addr                                            "0xB801963C"
#define  VDTOP_FSW_GAIN_CTRL_reg                                                 0xB801963C
#define  VDTOP_FSW_GAIN_CTRL_inst_addr                                           "0x0164"
#define  set_VDTOP_FSW_GAIN_CTRL_reg(data)                                       (*((volatile unsigned int*)VDTOP_FSW_GAIN_CTRL_reg)=data)
#define  get_VDTOP_FSW_GAIN_CTRL_reg                                             (*((volatile unsigned int*)VDTOP_FSW_GAIN_CTRL_reg))
#define  VDTOP_FSW_GAIN_CTRL_fb_gain_x2_en_shift                                 (8)
#define  VDTOP_FSW_GAIN_CTRL_fbgain_en_shift                                     (7)
#define  VDTOP_FSW_GAIN_CTRL_fbgain_shift                                        (0)
#define  VDTOP_FSW_GAIN_CTRL_fb_gain_x2_en_mask                                  (0x00000100)
#define  VDTOP_FSW_GAIN_CTRL_fbgain_en_mask                                      (0x00000080)
#define  VDTOP_FSW_GAIN_CTRL_fbgain_mask                                         (0x0000007F)
#define  VDTOP_FSW_GAIN_CTRL_fb_gain_x2_en(data)                                 (0x00000100&((data)<<8))
#define  VDTOP_FSW_GAIN_CTRL_fbgain_en(data)                                     (0x00000080&((data)<<7))
#define  VDTOP_FSW_GAIN_CTRL_fbgain(data)                                        (0x0000007F&(data))
#define  VDTOP_FSW_GAIN_CTRL_get_fb_gain_x2_en(data)                             ((0x00000100&(data))>>8)
#define  VDTOP_FSW_GAIN_CTRL_get_fbgain_en(data)                                 ((0x00000080&(data))>>7)
#define  VDTOP_FSW_GAIN_CTRL_get_fbgain(data)                                    (0x0000007F&(data))

#define  VDTOP_FSW_INPUT_STATUS                                                 0x18019640
#define  VDTOP_FSW_INPUT_STATUS_reg_addr                                         "0xB8019640"
#define  VDTOP_FSW_INPUT_STATUS_reg                                              0xB8019640
#define  VDTOP_FSW_INPUT_STATUS_inst_addr                                        "0x0165"
#define  set_VDTOP_FSW_INPUT_STATUS_reg(data)                                    (*((volatile unsigned int*)VDTOP_FSW_INPUT_STATUS_reg)=data)
#define  get_VDTOP_FSW_INPUT_STATUS_reg                                          (*((volatile unsigned int*)VDTOP_FSW_INPUT_STATUS_reg))
#define  VDTOP_FSW_INPUT_STATUS_scart_vbi_rgb_sel_shift                          (4)
#define  VDTOP_FSW_INPUT_STATUS_fb_status_shift                                  (0)
#define  VDTOP_FSW_INPUT_STATUS_scart_vbi_rgb_sel_mask                           (0x00000030)
#define  VDTOP_FSW_INPUT_STATUS_fb_status_mask                                   (0x00000007)
#define  VDTOP_FSW_INPUT_STATUS_scart_vbi_rgb_sel(data)                          (0x00000030&((data)<<4))
#define  VDTOP_FSW_INPUT_STATUS_fb_status(data)                                  (0x00000007&(data))
#define  VDTOP_FSW_INPUT_STATUS_get_scart_vbi_rgb_sel(data)                      ((0x00000030&(data))>>4)
#define  VDTOP_FSW_INPUT_STATUS_get_fb_status(data)                              (0x00000007&(data))

#define  VDTOP_CHROMA_REDUCE_CNTL1                                              0x18019644
#define  VDTOP_CHROMA_REDUCE_CNTL1_reg_addr                                      "0xB8019644"
#define  VDTOP_CHROMA_REDUCE_CNTL1_reg                                           0xB8019644
#define  VDTOP_CHROMA_REDUCE_CNTL1_inst_addr                                     "0x0166"
#define  set_VDTOP_CHROMA_REDUCE_CNTL1_reg(data)                                 (*((volatile unsigned int*)VDTOP_CHROMA_REDUCE_CNTL1_reg)=data)
#define  get_VDTOP_CHROMA_REDUCE_CNTL1_reg                                       (*((volatile unsigned int*)VDTOP_CHROMA_REDUCE_CNTL1_reg))
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_c_shift              (24)
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_r_shift              (16)
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_g_shift              (8)
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_b_shift              (0)
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_c_mask               (0xFF000000)
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_r_mask               (0x00FF0000)
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_g_mask               (0x0000FF00)
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_b_mask               (0x000000FF)
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_c(data)              (0xFF000000&((data)<<24))
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_r(data)              (0x00FF0000&((data)<<16))
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_g(data)              (0x0000FF00&((data)<<8))
#define  VDTOP_CHROMA_REDUCE_CNTL1_chroma_gain_reduce_ratio_b(data)              (0x000000FF&(data))
#define  VDTOP_CHROMA_REDUCE_CNTL1_get_chroma_gain_reduce_ratio_c(data)          ((0xFF000000&(data))>>24)
#define  VDTOP_CHROMA_REDUCE_CNTL1_get_chroma_gain_reduce_ratio_r(data)          ((0x00FF0000&(data))>>16)
#define  VDTOP_CHROMA_REDUCE_CNTL1_get_chroma_gain_reduce_ratio_g(data)          ((0x0000FF00&(data))>>8)
#define  VDTOP_CHROMA_REDUCE_CNTL1_get_chroma_gain_reduce_ratio_b(data)          (0x000000FF&(data))

#define  VDTOP_CHROMA_REDUCE_CNTL2                                              0x18019648
#define  VDTOP_CHROMA_REDUCE_CNTL2_reg_addr                                      "0xB8019648"
#define  VDTOP_CHROMA_REDUCE_CNTL2_reg                                           0xB8019648
#define  VDTOP_CHROMA_REDUCE_CNTL2_inst_addr                                     "0x0167"
#define  set_VDTOP_CHROMA_REDUCE_CNTL2_reg(data)                                 (*((volatile unsigned int*)VDTOP_CHROMA_REDUCE_CNTL2_reg)=data)
#define  get_VDTOP_CHROMA_REDUCE_CNTL2_reg                                       (*((volatile unsigned int*)VDTOP_CHROMA_REDUCE_CNTL2_reg))
#define  VDTOP_CHROMA_REDUCE_CNTL2_rgb_dgain_bypass_shift                        (4)
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_c_en_shift                 (3)
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_r_en_shift                 (2)
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_g_en_shift                 (1)
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_b_en_shift                 (0)
#define  VDTOP_CHROMA_REDUCE_CNTL2_rgb_dgain_bypass_mask                         (0x000000F0)
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_c_en_mask                  (0x00000008)
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_r_en_mask                  (0x00000004)
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_g_en_mask                  (0x00000002)
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_b_en_mask                  (0x00000001)
#define  VDTOP_CHROMA_REDUCE_CNTL2_rgb_dgain_bypass(data)                        (0x000000F0&((data)<<4))
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_c_en(data)                 (0x00000008&((data)<<3))
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_r_en(data)                 (0x00000004&((data)<<2))
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_g_en(data)                 (0x00000002&((data)<<1))
#define  VDTOP_CHROMA_REDUCE_CNTL2_chroma_gain_reduce_b_en(data)                 (0x00000001&(data))
#define  VDTOP_CHROMA_REDUCE_CNTL2_get_rgb_dgain_bypass(data)                    ((0x000000F0&(data))>>4)
#define  VDTOP_CHROMA_REDUCE_CNTL2_get_chroma_gain_reduce_c_en(data)             ((0x00000008&(data))>>3)
#define  VDTOP_CHROMA_REDUCE_CNTL2_get_chroma_gain_reduce_r_en(data)             ((0x00000004&(data))>>2)
#define  VDTOP_CHROMA_REDUCE_CNTL2_get_chroma_gain_reduce_g_en(data)             ((0x00000002&(data))>>1)
#define  VDTOP_CHROMA_REDUCE_CNTL2_get_chroma_gain_reduce_b_en(data)             (0x00000001&(data))

#define  VDTOP_ADCR_CALI_STATUS                                                 0x1801964C
#define  VDTOP_ADCR_CALI_STATUS_reg_addr                                         "0xB801964C"
#define  VDTOP_ADCR_CALI_STATUS_reg                                              0xB801964C
#define  VDTOP_ADCR_CALI_STATUS_inst_addr                                        "0x0168"
#define  set_VDTOP_ADCR_CALI_STATUS_reg(data)                                    (*((volatile unsigned int*)VDTOP_ADCR_CALI_STATUS_reg)=data)
#define  get_VDTOP_ADCR_CALI_STATUS_reg                                          (*((volatile unsigned int*)VDTOP_ADCR_CALI_STATUS_reg))
#define  VDTOP_ADCR_CALI_STATUS_yorr_in_offset_status_shift                      (0)
#define  VDTOP_ADCR_CALI_STATUS_yorr_in_offset_status_mask                       (0x00000FFF)
#define  VDTOP_ADCR_CALI_STATUS_yorr_in_offset_status(data)                      (0x00000FFF&(data))
#define  VDTOP_ADCR_CALI_STATUS_get_yorr_in_offset_status(data)                  (0x00000FFF&(data))

#define  VDTOP_ADCG_CALI_STATUS                                                 0x18019650
#define  VDTOP_ADCG_CALI_STATUS_reg_addr                                         "0xB8019650"
#define  VDTOP_ADCG_CALI_STATUS_reg                                              0xB8019650
#define  VDTOP_ADCG_CALI_STATUS_inst_addr                                        "0x0169"
#define  set_VDTOP_ADCG_CALI_STATUS_reg(data)                                    (*((volatile unsigned int*)VDTOP_ADCG_CALI_STATUS_reg)=data)
#define  get_VDTOP_ADCG_CALI_STATUS_reg                                          (*((volatile unsigned int*)VDTOP_ADCG_CALI_STATUS_reg))
#define  VDTOP_ADCG_CALI_STATUS_uorg_in_offset_status_shift                      (0)
#define  VDTOP_ADCG_CALI_STATUS_uorg_in_offset_status_mask                       (0x00000FFF)
#define  VDTOP_ADCG_CALI_STATUS_uorg_in_offset_status(data)                      (0x00000FFF&(data))
#define  VDTOP_ADCG_CALI_STATUS_get_uorg_in_offset_status(data)                  (0x00000FFF&(data))

#define  VDTOP_ADCB_CALI_STATUS                                                 0x18019654
#define  VDTOP_ADCB_CALI_STATUS_reg_addr                                         "0xB8019654"
#define  VDTOP_ADCB_CALI_STATUS_reg                                              0xB8019654
#define  VDTOP_ADCB_CALI_STATUS_inst_addr                                        "0x016A"
#define  set_VDTOP_ADCB_CALI_STATUS_reg(data)                                    (*((volatile unsigned int*)VDTOP_ADCB_CALI_STATUS_reg)=data)
#define  get_VDTOP_ADCB_CALI_STATUS_reg                                          (*((volatile unsigned int*)VDTOP_ADCB_CALI_STATUS_reg))
#define  VDTOP_ADCB_CALI_STATUS_vorb_in_offset_status_shift                      (0)
#define  VDTOP_ADCB_CALI_STATUS_vorb_in_offset_status_mask                       (0x00000FFF)
#define  VDTOP_ADCB_CALI_STATUS_vorb_in_offset_status(data)                      (0x00000FFF&(data))
#define  VDTOP_ADCB_CALI_STATUS_get_vorb_in_offset_status(data)                  (0x00000FFF&(data))

#define  VDTOP_ADC_GAIN_R1                                                      0x18019658
#define  VDTOP_ADC_GAIN_R1_reg_addr                                              "0xB8019658"
#define  VDTOP_ADC_GAIN_R1_reg                                                   0xB8019658
#define  VDTOP_ADC_GAIN_R1_inst_addr                                             "0x016B"
#define  set_VDTOP_ADC_GAIN_R1_reg(data)                                         (*((volatile unsigned int*)VDTOP_ADC_GAIN_R1_reg)=data)
#define  get_VDTOP_ADC_GAIN_R1_reg                                               (*((volatile unsigned int*)VDTOP_ADC_GAIN_R1_reg))
#define  VDTOP_ADC_GAIN_R1_rgb_output_en_shift                                   (7)
#define  VDTOP_ADC_GAIN_R1_rgb_output_en_mask                                    (0x00000080)
#define  VDTOP_ADC_GAIN_R1_rgb_output_en(data)                                   (0x00000080&((data)<<7))
#define  VDTOP_ADC_GAIN_R1_get_rgb_output_en(data)                               ((0x00000080&(data))>>7)

#define  VDTOP_ADC_GAIN_R                                                       0x1801965C
#define  VDTOP_ADC_GAIN_R_reg_addr                                               "0xB801965C"
#define  VDTOP_ADC_GAIN_R_reg                                                    0xB801965C
#define  VDTOP_ADC_GAIN_R_inst_addr                                              "0x016C"
#define  set_VDTOP_ADC_GAIN_R_reg(data)                                          (*((volatile unsigned int*)VDTOP_ADC_GAIN_R_reg)=data)
#define  get_VDTOP_ADC_GAIN_R_reg                                                (*((volatile unsigned int*)VDTOP_ADC_GAIN_R_reg))
#define  VDTOP_ADC_GAIN_R_offset_r_shift                                         (16)
#define  VDTOP_ADC_GAIN_R_gain_r_shift                                           (0)
#define  VDTOP_ADC_GAIN_R_offset_r_mask                                          (0x00FF0000)
#define  VDTOP_ADC_GAIN_R_gain_r_mask                                            (0x000003FF)
#define  VDTOP_ADC_GAIN_R_offset_r(data)                                         (0x00FF0000&((data)<<16))
#define  VDTOP_ADC_GAIN_R_gain_r(data)                                           (0x000003FF&(data))
#define  VDTOP_ADC_GAIN_R_get_offset_r(data)                                     ((0x00FF0000&(data))>>16)
#define  VDTOP_ADC_GAIN_R_get_gain_r(data)                                       (0x000003FF&(data))

#define  VDTOP_ADC_GAIN_G                                                       0x18019660
#define  VDTOP_ADC_GAIN_G_reg_addr                                               "0xB8019660"
#define  VDTOP_ADC_GAIN_G_reg                                                    0xB8019660
#define  VDTOP_ADC_GAIN_G_inst_addr                                              "0x016D"
#define  set_VDTOP_ADC_GAIN_G_reg(data)                                          (*((volatile unsigned int*)VDTOP_ADC_GAIN_G_reg)=data)
#define  get_VDTOP_ADC_GAIN_G_reg                                                (*((volatile unsigned int*)VDTOP_ADC_GAIN_G_reg))
#define  VDTOP_ADC_GAIN_G_offset_g_shift                                         (16)
#define  VDTOP_ADC_GAIN_G_gain_g_shift                                           (0)
#define  VDTOP_ADC_GAIN_G_offset_g_mask                                          (0x00FF0000)
#define  VDTOP_ADC_GAIN_G_gain_g_mask                                            (0x000003FF)
#define  VDTOP_ADC_GAIN_G_offset_g(data)                                         (0x00FF0000&((data)<<16))
#define  VDTOP_ADC_GAIN_G_gain_g(data)                                           (0x000003FF&(data))
#define  VDTOP_ADC_GAIN_G_get_offset_g(data)                                     ((0x00FF0000&(data))>>16)
#define  VDTOP_ADC_GAIN_G_get_gain_g(data)                                       (0x000003FF&(data))

#define  VDTOP_ADC_GAIN_B                                                       0x18019664
#define  VDTOP_ADC_GAIN_B_reg_addr                                               "0xB8019664"
#define  VDTOP_ADC_GAIN_B_reg                                                    0xB8019664
#define  VDTOP_ADC_GAIN_B_inst_addr                                              "0x016E"
#define  set_VDTOP_ADC_GAIN_B_reg(data)                                          (*((volatile unsigned int*)VDTOP_ADC_GAIN_B_reg)=data)
#define  get_VDTOP_ADC_GAIN_B_reg                                                (*((volatile unsigned int*)VDTOP_ADC_GAIN_B_reg))
#define  VDTOP_ADC_GAIN_B_offset_b_shift                                         (16)
#define  VDTOP_ADC_GAIN_B_gain_b_shift                                           (0)
#define  VDTOP_ADC_GAIN_B_offset_b_mask                                          (0x00FF0000)
#define  VDTOP_ADC_GAIN_B_gain_b_mask                                            (0x000003FF)
#define  VDTOP_ADC_GAIN_B_offset_b(data)                                         (0x00FF0000&((data)<<16))
#define  VDTOP_ADC_GAIN_B_gain_b(data)                                           (0x000003FF&(data))
#define  VDTOP_ADC_GAIN_B_get_offset_b(data)                                     ((0x00FF0000&(data))>>16)
#define  VDTOP_ADC_GAIN_B_get_gain_b(data)                                       (0x000003FF&(data))

#define  VDTOP_COLOR_MATRIX_R                                                   0x18019668
#define  VDTOP_COLOR_MATRIX_R_reg_addr                                           "0xB8019668"
#define  VDTOP_COLOR_MATRIX_R_reg                                                0xB8019668
#define  VDTOP_COLOR_MATRIX_R_inst_addr                                          "0x016F"
#define  set_VDTOP_COLOR_MATRIX_R_reg(data)                                      (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_R_reg)=data)
#define  get_VDTOP_COLOR_MATRIX_R_reg                                            (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_R_reg))
#define  VDTOP_COLOR_MATRIX_R_component_color_matrix_r1_shift                    (16)
#define  VDTOP_COLOR_MATRIX_R_component_color_matrix_r2_shift                    (0)
#define  VDTOP_COLOR_MATRIX_R_component_color_matrix_r1_mask                     (0x07FF0000)
#define  VDTOP_COLOR_MATRIX_R_component_color_matrix_r2_mask                     (0x000007FF)
#define  VDTOP_COLOR_MATRIX_R_component_color_matrix_r1(data)                    (0x07FF0000&((data)<<16))
#define  VDTOP_COLOR_MATRIX_R_component_color_matrix_r2(data)                    (0x000007FF&(data))
#define  VDTOP_COLOR_MATRIX_R_get_component_color_matrix_r1(data)                ((0x07FF0000&(data))>>16)
#define  VDTOP_COLOR_MATRIX_R_get_component_color_matrix_r2(data)                (0x000007FF&(data))

#define  VDTOP_COLOR_MATRIX_RG                                                  0x1801966C
#define  VDTOP_COLOR_MATRIX_RG_reg_addr                                          "0xB801966C"
#define  VDTOP_COLOR_MATRIX_RG_reg                                               0xB801966C
#define  VDTOP_COLOR_MATRIX_RG_inst_addr                                         "0x0170"
#define  set_VDTOP_COLOR_MATRIX_RG_reg(data)                                     (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_RG_reg)=data)
#define  get_VDTOP_COLOR_MATRIX_RG_reg                                           (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_RG_reg))
#define  VDTOP_COLOR_MATRIX_RG_component_color_matrix_r3_shift                   (16)
#define  VDTOP_COLOR_MATRIX_RG_component_color_matrix_g1_shift                   (0)
#define  VDTOP_COLOR_MATRIX_RG_component_color_matrix_r3_mask                    (0x07FF0000)
#define  VDTOP_COLOR_MATRIX_RG_component_color_matrix_g1_mask                    (0x000007FF)
#define  VDTOP_COLOR_MATRIX_RG_component_color_matrix_r3(data)                   (0x07FF0000&((data)<<16))
#define  VDTOP_COLOR_MATRIX_RG_component_color_matrix_g1(data)                   (0x000007FF&(data))
#define  VDTOP_COLOR_MATRIX_RG_get_component_color_matrix_r3(data)               ((0x07FF0000&(data))>>16)
#define  VDTOP_COLOR_MATRIX_RG_get_component_color_matrix_g1(data)               (0x000007FF&(data))

#define  VDTOP_COLOR_MATRIX_G                                                   0x18019670
#define  VDTOP_COLOR_MATRIX_G_reg_addr                                           "0xB8019670"
#define  VDTOP_COLOR_MATRIX_G_reg                                                0xB8019670
#define  VDTOP_COLOR_MATRIX_G_inst_addr                                          "0x0171"
#define  set_VDTOP_COLOR_MATRIX_G_reg(data)                                      (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_G_reg)=data)
#define  get_VDTOP_COLOR_MATRIX_G_reg                                            (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_G_reg))
#define  VDTOP_COLOR_MATRIX_G_component_color_matrix_g2_shift                    (16)
#define  VDTOP_COLOR_MATRIX_G_component_color_matrix_g3_shift                    (0)
#define  VDTOP_COLOR_MATRIX_G_component_color_matrix_g2_mask                     (0x07FF0000)
#define  VDTOP_COLOR_MATRIX_G_component_color_matrix_g3_mask                     (0x000007FF)
#define  VDTOP_COLOR_MATRIX_G_component_color_matrix_g2(data)                    (0x07FF0000&((data)<<16))
#define  VDTOP_COLOR_MATRIX_G_component_color_matrix_g3(data)                    (0x000007FF&(data))
#define  VDTOP_COLOR_MATRIX_G_get_component_color_matrix_g2(data)                ((0x07FF0000&(data))>>16)
#define  VDTOP_COLOR_MATRIX_G_get_component_color_matrix_g3(data)                (0x000007FF&(data))

#define  VDTOP_COLOR_MATRIX_B                                                   0x18019674
#define  VDTOP_COLOR_MATRIX_B_reg_addr                                           "0xB8019674"
#define  VDTOP_COLOR_MATRIX_B_reg                                                0xB8019674
#define  VDTOP_COLOR_MATRIX_B_inst_addr                                          "0x0172"
#define  set_VDTOP_COLOR_MATRIX_B_reg(data)                                      (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_B_reg)=data)
#define  get_VDTOP_COLOR_MATRIX_B_reg                                            (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_B_reg))
#define  VDTOP_COLOR_MATRIX_B_component_color_matrix_b1_shift                    (16)
#define  VDTOP_COLOR_MATRIX_B_component_color_matrix_b2_shift                    (0)
#define  VDTOP_COLOR_MATRIX_B_component_color_matrix_b1_mask                     (0x07FF0000)
#define  VDTOP_COLOR_MATRIX_B_component_color_matrix_b2_mask                     (0x000007FF)
#define  VDTOP_COLOR_MATRIX_B_component_color_matrix_b1(data)                    (0x07FF0000&((data)<<16))
#define  VDTOP_COLOR_MATRIX_B_component_color_matrix_b2(data)                    (0x000007FF&(data))
#define  VDTOP_COLOR_MATRIX_B_get_component_color_matrix_b1(data)                ((0x07FF0000&(data))>>16)
#define  VDTOP_COLOR_MATRIX_B_get_component_color_matrix_b2(data)                (0x000007FF&(data))

#define  VDTOP_COLOR_MATRIX_B3                                                  0x18019678
#define  VDTOP_COLOR_MATRIX_B3_reg_addr                                          "0xB8019678"
#define  VDTOP_COLOR_MATRIX_B3_reg                                               0xB8019678
#define  VDTOP_COLOR_MATRIX_B3_inst_addr                                         "0x0173"
#define  set_VDTOP_COLOR_MATRIX_B3_reg(data)                                     (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_B3_reg)=data)
#define  get_VDTOP_COLOR_MATRIX_B3_reg                                           (*((volatile unsigned int*)VDTOP_COLOR_MATRIX_B3_reg))
#define  VDTOP_COLOR_MATRIX_B3_component_color_matrix_b3_shift                   (0)
#define  VDTOP_COLOR_MATRIX_B3_component_color_matrix_b3_mask                    (0x000007FF)
#define  VDTOP_COLOR_MATRIX_B3_component_color_matrix_b3(data)                   (0x000007FF&(data))
#define  VDTOP_COLOR_MATRIX_B3_get_component_color_matrix_b3(data)               (0x000007FF&(data))

#define  VDTOP_CLAMP_TEST_REG0                                                  0x18019680
#define  VDTOP_CLAMP_TEST_REG0_reg_addr                                          "0xB8019680"
#define  VDTOP_CLAMP_TEST_REG0_reg                                               0xB8019680
#define  VDTOP_CLAMP_TEST_REG0_inst_addr                                         "0x0174"
#define  set_VDTOP_CLAMP_TEST_REG0_reg(data)                                     (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG0_reg)=data)
#define  get_VDTOP_CLAMP_TEST_REG0_reg                                           (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG0_reg))
#define  VDTOP_CLAMP_TEST_REG0_r_prblevel_shift                                  (0)
#define  VDTOP_CLAMP_TEST_REG0_r_prblevel_mask                                   (0x00000FFF)
#define  VDTOP_CLAMP_TEST_REG0_r_prblevel(data)                                  (0x00000FFF&(data))
#define  VDTOP_CLAMP_TEST_REG0_get_r_prblevel(data)                              (0x00000FFF&(data))

#define  VDTOP_CLAMP_TEST_REG2                                                  0x18019684
#define  VDTOP_CLAMP_TEST_REG2_reg_addr                                          "0xB8019684"
#define  VDTOP_CLAMP_TEST_REG2_reg                                               0xB8019684
#define  VDTOP_CLAMP_TEST_REG2_inst_addr                                         "0x0175"
#define  set_VDTOP_CLAMP_TEST_REG2_reg(data)                                     (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG2_reg)=data)
#define  get_VDTOP_CLAMP_TEST_REG2_reg                                           (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG2_reg))
#define  VDTOP_CLAMP_TEST_REG2_g_blevel_shift                                    (0)
#define  VDTOP_CLAMP_TEST_REG2_g_blevel_mask                                     (0x00000FFF)
#define  VDTOP_CLAMP_TEST_REG2_g_blevel(data)                                    (0x00000FFF&(data))
#define  VDTOP_CLAMP_TEST_REG2_get_g_blevel(data)                                (0x00000FFF&(data))

#define  VDTOP_CLAMP_TEST_REG4                                                  0x18019688
#define  VDTOP_CLAMP_TEST_REG4_reg_addr                                          "0xB8019688"
#define  VDTOP_CLAMP_TEST_REG4_reg                                               0xB8019688
#define  VDTOP_CLAMP_TEST_REG4_inst_addr                                         "0x0176"
#define  set_VDTOP_CLAMP_TEST_REG4_reg(data)                                     (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG4_reg)=data)
#define  get_VDTOP_CLAMP_TEST_REG4_reg                                           (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG4_reg))
#define  VDTOP_CLAMP_TEST_REG4_b_pbblevel_shift                                  (0)
#define  VDTOP_CLAMP_TEST_REG4_b_pbblevel_mask                                   (0x00000FFF)
#define  VDTOP_CLAMP_TEST_REG4_b_pbblevel(data)                                  (0x00000FFF&(data))
#define  VDTOP_CLAMP_TEST_REG4_get_b_pbblevel(data)                              (0x00000FFF&(data))

#define  VDTOP_CLAMP_TEST_REG6                                                  0x1801968C
#define  VDTOP_CLAMP_TEST_REG6_reg_addr                                          "0xB801968C"
#define  VDTOP_CLAMP_TEST_REG6_reg                                               0xB801968C
#define  VDTOP_CLAMP_TEST_REG6_inst_addr                                         "0x0177"
#define  set_VDTOP_CLAMP_TEST_REG6_reg(data)                                     (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG6_reg)=data)
#define  get_VDTOP_CLAMP_TEST_REG6_reg                                           (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG6_reg))
#define  VDTOP_CLAMP_TEST_REG6_comp_blevel_shift                                 (0)
#define  VDTOP_CLAMP_TEST_REG6_comp_blevel_mask                                  (0x00000FFF)
#define  VDTOP_CLAMP_TEST_REG6_comp_blevel(data)                                 (0x00000FFF&(data))
#define  VDTOP_CLAMP_TEST_REG6_get_comp_blevel(data)                             (0x00000FFF&(data))

#define  VDTOP_CLAMP_TEST_REG8                                                  0x18019690
#define  VDTOP_CLAMP_TEST_REG8_reg_addr                                          "0xB8019690"
#define  VDTOP_CLAMP_TEST_REG8_reg                                               0xB8019690
#define  VDTOP_CLAMP_TEST_REG8_inst_addr                                         "0x0178"
#define  set_VDTOP_CLAMP_TEST_REG8_reg(data)                                     (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG8_reg)=data)
#define  get_VDTOP_CLAMP_TEST_REG8_reg                                           (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG8_reg))
#define  VDTOP_CLAMP_TEST_REG8_comp_slevel_shift                                 (0)
#define  VDTOP_CLAMP_TEST_REG8_comp_slevel_mask                                  (0x00000FFF)
#define  VDTOP_CLAMP_TEST_REG8_comp_slevel(data)                                 (0x00000FFF&(data))
#define  VDTOP_CLAMP_TEST_REG8_get_comp_slevel(data)                             (0x00000FFF&(data))

#define  VDTOP_CLAMP_TEST_REG11                                                 0x18019694
#define  VDTOP_CLAMP_TEST_REG11_reg_addr                                         "0xB8019694"
#define  VDTOP_CLAMP_TEST_REG11_reg                                              0xB8019694
#define  VDTOP_CLAMP_TEST_REG11_inst_addr                                        "0x0179"
#define  set_VDTOP_CLAMP_TEST_REG11_reg(data)                                    (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG11_reg)=data)
#define  get_VDTOP_CLAMP_TEST_REG11_reg                                          (*((volatile unsigned int*)VDTOP_CLAMP_TEST_REG11_reg))
#define  VDTOP_CLAMP_TEST_REG11_vbi_blevel_shift                                 (0)
#define  VDTOP_CLAMP_TEST_REG11_vbi_blevel_mask                                  (0x00000FFF)
#define  VDTOP_CLAMP_TEST_REG11_vbi_blevel(data)                                 (0x00000FFF&(data))
#define  VDTOP_CLAMP_TEST_REG11_get_vbi_blevel(data)                             (0x00000FFF&(data))

#define  VDTOP_HDETECT_PHASE_ERR_STATUS2                                        0x18019698
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_reg_addr                                "0xB8019698"
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_reg                                     0xB8019698
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_inst_addr                               "0x017A"
#define  set_VDTOP_HDETECT_PHASE_ERR_STATUS2_reg(data)                           (*((volatile unsigned int*)VDTOP_HDETECT_PHASE_ERR_STATUS2_reg)=data)
#define  get_VDTOP_HDETECT_PHASE_ERR_STATUS2_reg                                 (*((volatile unsigned int*)VDTOP_HDETECT_PHASE_ERR_STATUS2_reg))
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_front_porch_level_shift                 (16)
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_hphase_err_status_shift                 (0)
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_front_porch_level_mask                  (0x0FFF0000)
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_hphase_err_status_mask                  (0x00003FFF)
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_front_porch_level(data)                 (0x0FFF0000&((data)<<16))
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_hphase_err_status(data)                 (0x00003FFF&(data))
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_get_front_porch_level(data)             ((0x0FFF0000&(data))>>16)
#define  VDTOP_HDETECT_PHASE_ERR_STATUS2_get_hphase_err_status(data)             (0x00003FFF&(data))

#define  VDTOP_AVOUT_FIFO_RD_PTR                                                0x1801969C
#define  VDTOP_AVOUT_FIFO_RD_PTR_reg_addr                                        "0xB801969C"
#define  VDTOP_AVOUT_FIFO_RD_PTR_reg                                             0xB801969C
#define  VDTOP_AVOUT_FIFO_RD_PTR_inst_addr                                       "0x017B"
#define  set_VDTOP_AVOUT_FIFO_RD_PTR_reg(data)                                   (*((volatile unsigned int*)VDTOP_AVOUT_FIFO_RD_PTR_reg)=data)
#define  get_VDTOP_AVOUT_FIFO_RD_PTR_reg                                         (*((volatile unsigned int*)VDTOP_AVOUT_FIFO_RD_PTR_reg))
#define  VDTOP_AVOUT_FIFO_RD_PTR_avout_fifo_sel_shift                            (11)
#define  VDTOP_AVOUT_FIFO_RD_PTR_avout_fifo_rd_ptr_shift                         (0)
#define  VDTOP_AVOUT_FIFO_RD_PTR_avout_fifo_sel_mask                             (0x00000800)
#define  VDTOP_AVOUT_FIFO_RD_PTR_avout_fifo_rd_ptr_mask                          (0x000007FF)
#define  VDTOP_AVOUT_FIFO_RD_PTR_avout_fifo_sel(data)                            (0x00000800&((data)<<11))
#define  VDTOP_AVOUT_FIFO_RD_PTR_avout_fifo_rd_ptr(data)                         (0x000007FF&(data))
#define  VDTOP_AVOUT_FIFO_RD_PTR_get_avout_fifo_sel(data)                        ((0x00000800&(data))>>11)
#define  VDTOP_AVOUT_FIFO_RD_PTR_get_avout_fifo_rd_ptr(data)                     (0x000007FF&(data))

#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE                                      0x180196A0
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_reg_addr                              "0xB80196A0"
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_reg                                   0xB80196A0
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_inst_addr                             "0x017C"
#define  set_VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_reg(data)                         (*((volatile unsigned int*)VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_reg)=data)
#define  get_VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_reg                               (*((volatile unsigned int*)VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_reg))
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_blank_level_comp_manu_add_shift       (16)
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_blank_level_comp_manu_shift           (0)
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_blank_level_comp_manu_add_mask        (0x0FFF0000)
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_blank_level_comp_manu_mask            (0x00000FFF)
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_blank_level_comp_manu_add(data)       (0x0FFF0000&((data)<<16))
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_blank_level_comp_manu(data)           (0x00000FFF&(data))
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_get_blank_level_comp_manu_add(data)   ((0x0FFF0000&(data))>>16)
#define  VDTOP_BLANK_LEVEL_MANU_COMP_VALUE_get_blank_level_comp_manu(data)       (0x00000FFF&(data))

#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE                                       0x180196A4
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_reg_addr                               "0xB80196A4"
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_reg                                    0xB80196A4
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_inst_addr                              "0x017D"
#define  set_VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_reg(data)                          (*((volatile unsigned int*)VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_reg)=data)
#define  get_VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_reg                                (*((volatile unsigned int*)VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_reg))
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_blank_level_c_manu_shift               (16)
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_blank_level_r_manu_shift               (0)
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_blank_level_c_manu_mask                (0x0FFF0000)
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_blank_level_r_manu_mask                (0x00000FFF)
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_blank_level_c_manu(data)               (0x0FFF0000&((data)<<16))
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_blank_level_r_manu(data)               (0x00000FFF&(data))
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_get_blank_level_c_manu(data)           ((0x0FFF0000&(data))>>16)
#define  VDTOP_BLANK_LEVEL_MANU_C_R_VALUE_get_blank_level_r_manu(data)           (0x00000FFF&(data))

#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE                                       0x180196A8
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_reg_addr                               "0xB80196A8"
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_reg                                    0xB80196A8
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_inst_addr                              "0x017E"
#define  set_VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_reg(data)                          (*((volatile unsigned int*)VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_reg)=data)
#define  get_VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_reg                                (*((volatile unsigned int*)VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_reg))
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_blank_level_g_manu_shift               (16)
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_blank_level_b_manu_shift               (0)
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_blank_level_g_manu_mask                (0x0FFF0000)
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_blank_level_b_manu_mask                (0x00000FFF)
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_blank_level_g_manu(data)               (0x0FFF0000&((data)<<16))
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_blank_level_b_manu(data)               (0x00000FFF&(data))
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_get_blank_level_g_manu(data)           ((0x0FFF0000&(data))>>16)
#define  VDTOP_BLANK_LEVEL_MANU_G_B_VALUE_get_blank_level_b_manu(data)           (0x00000FFF&(data))

#define  VDTOP_FPGA_TEST_REG1                                                   0x180196B0
#define  VDTOP_FPGA_TEST_REG1_reg_addr                                           "0xB80196B0"
#define  VDTOP_FPGA_TEST_REG1_reg                                                0xB80196B0
#define  VDTOP_FPGA_TEST_REG1_inst_addr                                          "0x017F"
#define  set_VDTOP_FPGA_TEST_REG1_reg(data)                                      (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG1_reg)=data)
#define  get_VDTOP_FPGA_TEST_REG1_reg                                            (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG1_reg))
#define  VDTOP_FPGA_TEST_REG1_fpga_test1_shift                                   (8)
#define  VDTOP_FPGA_TEST_REG1_fw_dma_size_shift                                  (5)
#define  VDTOP_FPGA_TEST_REG1_fw_dma_mode_shift                                  (1)
#define  VDTOP_FPGA_TEST_REG1_factory_flag_shift                                 (0)
#define  VDTOP_FPGA_TEST_REG1_fpga_test1_mask                                    (0xFFFFFF00)
#define  VDTOP_FPGA_TEST_REG1_fw_dma_size_mask                                   (0x000000E0)
#define  VDTOP_FPGA_TEST_REG1_fw_dma_mode_mask                                   (0x0000001E)
#define  VDTOP_FPGA_TEST_REG1_factory_flag_mask                                  (0x00000001)
#define  VDTOP_FPGA_TEST_REG1_fpga_test1(data)                                   (0xFFFFFF00&((data)<<8))
#define  VDTOP_FPGA_TEST_REG1_fw_dma_size(data)                                  (0x000000E0&((data)<<5))
#define  VDTOP_FPGA_TEST_REG1_fw_dma_mode(data)                                  (0x0000001E&((data)<<1))
#define  VDTOP_FPGA_TEST_REG1_factory_flag(data)                                 (0x00000001&(data))
#define  VDTOP_FPGA_TEST_REG1_get_fpga_test1(data)                               ((0xFFFFFF00&(data))>>8)
#define  VDTOP_FPGA_TEST_REG1_get_fw_dma_size(data)                              ((0x000000E0&(data))>>5)
#define  VDTOP_FPGA_TEST_REG1_get_fw_dma_mode(data)                              ((0x0000001E&(data))>>1)
#define  VDTOP_FPGA_TEST_REG1_get_factory_flag(data)                             (0x00000001&(data))

#define  VDTOP_FPGA_TEST_REG2                                                   0x180196B4
#define  VDTOP_FPGA_TEST_REG2_reg_addr                                           "0xB80196B4"
#define  VDTOP_FPGA_TEST_REG2_reg                                                0xB80196B4
#define  VDTOP_FPGA_TEST_REG2_inst_addr                                          "0x0180"
#define  set_VDTOP_FPGA_TEST_REG2_reg(data)                                      (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG2_reg)=data)
#define  get_VDTOP_FPGA_TEST_REG2_reg                                            (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG2_reg))
#define  VDTOP_FPGA_TEST_REG2_fpga_test2_shift                                   (0)
#define  VDTOP_FPGA_TEST_REG2_fpga_test2_mask                                    (0xFFFFFFFF)
#define  VDTOP_FPGA_TEST_REG2_fpga_test2(data)                                   (0xFFFFFFFF&(data))
#define  VDTOP_FPGA_TEST_REG2_get_fpga_test2(data)                               (0xFFFFFFFF&(data))

#define  VDTOP_FPGA_TEST_REG3                                                   0x180196B8
#define  VDTOP_FPGA_TEST_REG3_reg_addr                                           "0xB80196B8"
#define  VDTOP_FPGA_TEST_REG3_reg                                                0xB80196B8
#define  VDTOP_FPGA_TEST_REG3_inst_addr                                          "0x0181"
#define  set_VDTOP_FPGA_TEST_REG3_reg(data)                                      (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG3_reg)=data)
#define  get_VDTOP_FPGA_TEST_REG3_reg                                            (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG3_reg))
#define  VDTOP_FPGA_TEST_REG3_fpga_test3_shift                                   (0)
#define  VDTOP_FPGA_TEST_REG3_fpga_test3_mask                                    (0xFFFFFFFF)
#define  VDTOP_FPGA_TEST_REG3_fpga_test3(data)                                   (0xFFFFFFFF&(data))
#define  VDTOP_FPGA_TEST_REG3_get_fpga_test3(data)                               (0xFFFFFFFF&(data))

#define  VDTOP_FPGA_TEST_REG4                                                   0x180196BC
#define  VDTOP_FPGA_TEST_REG4_reg_addr                                           "0xB80196BC"
#define  VDTOP_FPGA_TEST_REG4_reg                                                0xB80196BC
#define  VDTOP_FPGA_TEST_REG4_inst_addr                                          "0x0182"
#define  set_VDTOP_FPGA_TEST_REG4_reg(data)                                      (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG4_reg)=data)
#define  get_VDTOP_FPGA_TEST_REG4_reg                                            (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG4_reg))
#define  VDTOP_FPGA_TEST_REG4_fpga_test4_shift                                   (0)
#define  VDTOP_FPGA_TEST_REG4_fpga_test4_mask                                    (0xFFFFFFFF)
#define  VDTOP_FPGA_TEST_REG4_fpga_test4(data)                                   (0xFFFFFFFF&(data))
#define  VDTOP_FPGA_TEST_REG4_get_fpga_test4(data)                               (0xFFFFFFFF&(data))

#define  VDTOP_FPGA_TEST_REG5                                                   0x180196C0
#define  VDTOP_FPGA_TEST_REG5_reg_addr                                           "0xB80196C0"
#define  VDTOP_FPGA_TEST_REG5_reg                                                0xB80196C0
#define  VDTOP_FPGA_TEST_REG5_inst_addr                                          "0x0183"
#define  set_VDTOP_FPGA_TEST_REG5_reg(data)                                      (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG5_reg)=data)
#define  get_VDTOP_FPGA_TEST_REG5_reg                                            (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG5_reg))
#define  VDTOP_FPGA_TEST_REG5_fpga_test5_shift                                   (0)
#define  VDTOP_FPGA_TEST_REG5_fpga_test5_mask                                    (0xFFFFFFFF)
#define  VDTOP_FPGA_TEST_REG5_fpga_test5(data)                                   (0xFFFFFFFF&(data))
#define  VDTOP_FPGA_TEST_REG5_get_fpga_test5(data)                               (0xFFFFFFFF&(data))

#define  VDTOP_FPGA_TEST_REG6                                                   0x180196C4
#define  VDTOP_FPGA_TEST_REG6_reg_addr                                           "0xB80196C4"
#define  VDTOP_FPGA_TEST_REG6_reg                                                0xB80196C4
#define  VDTOP_FPGA_TEST_REG6_inst_addr                                          "0x0184"
#define  set_VDTOP_FPGA_TEST_REG6_reg(data)                                      (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG6_reg)=data)
#define  get_VDTOP_FPGA_TEST_REG6_reg                                            (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG6_reg))
#define  VDTOP_FPGA_TEST_REG6_fpga_test6_shift                                   (0)
#define  VDTOP_FPGA_TEST_REG6_fpga_test6_mask                                    (0xFFFFFFFF)
#define  VDTOP_FPGA_TEST_REG6_fpga_test6(data)                                   (0xFFFFFFFF&(data))
#define  VDTOP_FPGA_TEST_REG6_get_fpga_test6(data)                               (0xFFFFFFFF&(data))

#define  VDTOP_FPGA_TEST_REG7                                                   0x180196C8
#define  VDTOP_FPGA_TEST_REG7_reg_addr                                           "0xB80196C8"
#define  VDTOP_FPGA_TEST_REG7_reg                                                0xB80196C8
#define  VDTOP_FPGA_TEST_REG7_inst_addr                                          "0x0185"
#define  set_VDTOP_FPGA_TEST_REG7_reg(data)                                      (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG7_reg)=data)
#define  get_VDTOP_FPGA_TEST_REG7_reg                                            (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG7_reg))
#define  VDTOP_FPGA_TEST_REG7_fpga_test7_shift                                   (0)
#define  VDTOP_FPGA_TEST_REG7_fpga_test7_mask                                    (0xFFFFFFFF)
#define  VDTOP_FPGA_TEST_REG7_fpga_test7(data)                                   (0xFFFFFFFF&(data))
#define  VDTOP_FPGA_TEST_REG7_get_fpga_test7(data)                               (0xFFFFFFFF&(data))

#define  VDTOP_FPGA_TEST_REG8                                                   0x180196CC
#define  VDTOP_FPGA_TEST_REG8_reg_addr                                           "0xB80196CC"
#define  VDTOP_FPGA_TEST_REG8_reg                                                0xB80196CC
#define  VDTOP_FPGA_TEST_REG8_inst_addr                                          "0x0186"
#define  set_VDTOP_FPGA_TEST_REG8_reg(data)                                      (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG8_reg)=data)
#define  get_VDTOP_FPGA_TEST_REG8_reg                                            (*((volatile unsigned int*)VDTOP_FPGA_TEST_REG8_reg))
#define  VDTOP_FPGA_TEST_REG8_fpga_test8_shift                                   (0)
#define  VDTOP_FPGA_TEST_REG8_fpga_test8_mask                                    (0xFFFFFFFF)
#define  VDTOP_FPGA_TEST_REG8_fpga_test8(data)                                   (0xFFFFFFFF&(data))
#define  VDTOP_FPGA_TEST_REG8_get_fpga_test8(data)                               (0xFFFFFFFF&(data))

#define  VDTOP_SECAM_CTRL                                                       0x18019700
#define  VDTOP_SECAM_CTRL_reg_addr                                               "0xB8019700"
#define  VDTOP_SECAM_CTRL_reg                                                    0xB8019700
#define  VDTOP_SECAM_CTRL_inst_addr                                              "0x0187"
#define  set_VDTOP_SECAM_CTRL_reg(data)                                          (*((volatile unsigned int*)VDTOP_SECAM_CTRL_reg)=data)
#define  get_VDTOP_SECAM_CTRL_reg                                                (*((volatile unsigned int*)VDTOP_SECAM_CTRL_reg))
#define  VDTOP_SECAM_CTRL_secam_y_fir_en_shift                                   (16)
#define  VDTOP_SECAM_CTRL_secam_y_hpf_sel_shift                                  (12)
#define  VDTOP_SECAM_CTRL_secam_y_lpf_sel_shift                                  (8)
#define  VDTOP_SECAM_CTRL_drdb_freq_const_shift                                  (7)
#define  VDTOP_SECAM_CTRL_drdb_vlpf_en_shift                                     (6)
#define  VDTOP_SECAM_CTRL_drdb_vlpf_en_auto_en_shift                             (5)
#define  VDTOP_SECAM_CTRL_secam_flag_sel_shift                                   (4)
#define  VDTOP_SECAM_CTRL_secam_notch_filter_shift                               (0)
#define  VDTOP_SECAM_CTRL_secam_y_fir_en_mask                                    (0x00010000)
#define  VDTOP_SECAM_CTRL_secam_y_hpf_sel_mask                                   (0x00007000)
#define  VDTOP_SECAM_CTRL_secam_y_lpf_sel_mask                                   (0x00000700)
#define  VDTOP_SECAM_CTRL_drdb_freq_const_mask                                   (0x00000080)
#define  VDTOP_SECAM_CTRL_drdb_vlpf_en_mask                                      (0x00000040)
#define  VDTOP_SECAM_CTRL_drdb_vlpf_en_auto_en_mask                              (0x00000020)
#define  VDTOP_SECAM_CTRL_secam_flag_sel_mask                                    (0x00000010)
#define  VDTOP_SECAM_CTRL_secam_notch_filter_mask                                (0x00000003)
#define  VDTOP_SECAM_CTRL_secam_y_fir_en(data)                                   (0x00010000&((data)<<16))
#define  VDTOP_SECAM_CTRL_secam_y_hpf_sel(data)                                  (0x00007000&((data)<<12))
#define  VDTOP_SECAM_CTRL_secam_y_lpf_sel(data)                                  (0x00000700&((data)<<8))
#define  VDTOP_SECAM_CTRL_drdb_freq_const(data)                                  (0x00000080&((data)<<7))
#define  VDTOP_SECAM_CTRL_drdb_vlpf_en(data)                                     (0x00000040&((data)<<6))
#define  VDTOP_SECAM_CTRL_drdb_vlpf_en_auto_en(data)                             (0x00000020&((data)<<5))
#define  VDTOP_SECAM_CTRL_secam_flag_sel(data)                                   (0x00000010&((data)<<4))
#define  VDTOP_SECAM_CTRL_secam_notch_filter(data)                               (0x00000003&(data))
#define  VDTOP_SECAM_CTRL_get_secam_y_fir_en(data)                               ((0x00010000&(data))>>16)
#define  VDTOP_SECAM_CTRL_get_secam_y_hpf_sel(data)                              ((0x00007000&(data))>>12)
#define  VDTOP_SECAM_CTRL_get_secam_y_lpf_sel(data)                              ((0x00000700&(data))>>8)
#define  VDTOP_SECAM_CTRL_get_drdb_freq_const(data)                              ((0x00000080&(data))>>7)
#define  VDTOP_SECAM_CTRL_get_drdb_vlpf_en(data)                                 ((0x00000040&(data))>>6)
#define  VDTOP_SECAM_CTRL_get_drdb_vlpf_en_auto_en(data)                         ((0x00000020&(data))>>5)
#define  VDTOP_SECAM_CTRL_get_secam_flag_sel(data)                               ((0x00000010&(data))>>4)
#define  VDTOP_SECAM_CTRL_get_secam_notch_filter(data)                           (0x00000003&(data))

#define  VDTOP_SECAM_DRFREQ_OFFSET                                              0x18019704
#define  VDTOP_SECAM_DRFREQ_OFFSET_reg_addr                                      "0xB8019704"
#define  VDTOP_SECAM_DRFREQ_OFFSET_reg                                           0xB8019704
#define  VDTOP_SECAM_DRFREQ_OFFSET_inst_addr                                     "0x0188"
#define  set_VDTOP_SECAM_DRFREQ_OFFSET_reg(data)                                 (*((volatile unsigned int*)VDTOP_SECAM_DRFREQ_OFFSET_reg)=data)
#define  get_VDTOP_SECAM_DRFREQ_OFFSET_reg                                       (*((volatile unsigned int*)VDTOP_SECAM_DRFREQ_OFFSET_reg))
#define  VDTOP_SECAM_DRFREQ_OFFSET_dr_offset_shift                               (0)
#define  VDTOP_SECAM_DRFREQ_OFFSET_dr_offset_mask                                (0x000000FF)
#define  VDTOP_SECAM_DRFREQ_OFFSET_dr_offset(data)                               (0x000000FF&(data))
#define  VDTOP_SECAM_DRFREQ_OFFSET_get_dr_offset(data)                           (0x000000FF&(data))

#define  VDTOP_SECAM_DBFREQ_OFFSET                                              0x18019708
#define  VDTOP_SECAM_DBFREQ_OFFSET_reg_addr                                      "0xB8019708"
#define  VDTOP_SECAM_DBFREQ_OFFSET_reg                                           0xB8019708
#define  VDTOP_SECAM_DBFREQ_OFFSET_inst_addr                                     "0x0189"
#define  set_VDTOP_SECAM_DBFREQ_OFFSET_reg(data)                                 (*((volatile unsigned int*)VDTOP_SECAM_DBFREQ_OFFSET_reg)=data)
#define  get_VDTOP_SECAM_DBFREQ_OFFSET_reg                                       (*((volatile unsigned int*)VDTOP_SECAM_DBFREQ_OFFSET_reg))
#define  VDTOP_SECAM_DBFREQ_OFFSET_db_offset_shift                               (0)
#define  VDTOP_SECAM_DBFREQ_OFFSET_db_offset_mask                                (0x000000FF)
#define  VDTOP_SECAM_DBFREQ_OFFSET_db_offset(data)                               (0x000000FF&(data))
#define  VDTOP_SECAM_DBFREQ_OFFSET_get_db_offset(data)                           (0x000000FF&(data))

#define  VDTOP_SECAM_HCOUNT_RESET_CTRL                                          0x1801970C
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_reg_addr                                  "0xB801970C"
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_reg                                       0xB801970C
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_inst_addr                                 "0x018A"
#define  set_VDTOP_SECAM_HCOUNT_RESET_CTRL_reg(data)                             (*((volatile unsigned int*)VDTOP_SECAM_HCOUNT_RESET_CTRL_reg)=data)
#define  get_VDTOP_SECAM_HCOUNT_RESET_CTRL_reg                                   (*((volatile unsigned int*)VDTOP_SECAM_HCOUNT_RESET_CTRL_reg))
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_secam_phase_diff_hcount_en_shift          (7)
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_secam_phase_diff_hcount_shift             (0)
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_secam_phase_diff_hcount_en_mask           (0x00000080)
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_secam_phase_diff_hcount_mask              (0x0000007F)
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_secam_phase_diff_hcount_en(data)          (0x00000080&((data)<<7))
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_secam_phase_diff_hcount(data)             (0x0000007F&(data))
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_get_secam_phase_diff_hcount_en(data)      ((0x00000080&(data))>>7)
#define  VDTOP_SECAM_HCOUNT_RESET_CTRL_get_secam_phase_diff_hcount(data)         (0x0000007F&(data))

#define  VDTOP_PHASE_DIFF_DR_RST                                                0x18019710
#define  VDTOP_PHASE_DIFF_DR_RST_reg_addr                                        "0xB8019710"
#define  VDTOP_PHASE_DIFF_DR_RST_reg                                             0xB8019710
#define  VDTOP_PHASE_DIFF_DR_RST_inst_addr                                       "0x018B"
#define  set_VDTOP_PHASE_DIFF_DR_RST_reg(data)                                   (*((volatile unsigned int*)VDTOP_PHASE_DIFF_DR_RST_reg)=data)
#define  get_VDTOP_PHASE_DIFF_DR_RST_reg                                         (*((volatile unsigned int*)VDTOP_PHASE_DIFF_DR_RST_reg))
#define  VDTOP_PHASE_DIFF_DR_RST_secam_phase_diff_dr_shift                       (0)
#define  VDTOP_PHASE_DIFF_DR_RST_secam_phase_diff_dr_mask                        (0x000000FF)
#define  VDTOP_PHASE_DIFF_DR_RST_secam_phase_diff_dr(data)                       (0x000000FF&(data))
#define  VDTOP_PHASE_DIFF_DR_RST_get_secam_phase_diff_dr(data)                   (0x000000FF&(data))

#define  VDTOP_PHASE_DIFF_DB_RST                                                0x18019714
#define  VDTOP_PHASE_DIFF_DB_RST_reg_addr                                        "0xB8019714"
#define  VDTOP_PHASE_DIFF_DB_RST_reg                                             0xB8019714
#define  VDTOP_PHASE_DIFF_DB_RST_inst_addr                                       "0x018C"
#define  set_VDTOP_PHASE_DIFF_DB_RST_reg(data)                                   (*((volatile unsigned int*)VDTOP_PHASE_DIFF_DB_RST_reg)=data)
#define  get_VDTOP_PHASE_DIFF_DB_RST_reg                                         (*((volatile unsigned int*)VDTOP_PHASE_DIFF_DB_RST_reg))
#define  VDTOP_PHASE_DIFF_DB_RST_secam_phase_diff_db_shift                       (0)
#define  VDTOP_PHASE_DIFF_DB_RST_secam_phase_diff_db_mask                        (0x000000FF)
#define  VDTOP_PHASE_DIFF_DB_RST_secam_phase_diff_db(data)                       (0x000000FF&(data))
#define  VDTOP_PHASE_DIFF_DB_RST_get_secam_phase_diff_db(data)                   (0x000000FF&(data))

#define  VDTOP_DRDB_GAIN_TABLE_CTRL                                             0x18019718
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_reg_addr                                     "0xB8019718"
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_reg                                          0xB8019718
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_inst_addr                                    "0x018D"
#define  set_VDTOP_DRDB_GAIN_TABLE_CTRL_reg(data)                                (*((volatile unsigned int*)VDTOP_DRDB_GAIN_TABLE_CTRL_reg)=data)
#define  get_VDTOP_DRDB_GAIN_TABLE_CTRL_reg                                      (*((volatile unsigned int*)VDTOP_DRDB_GAIN_TABLE_CTRL_reg))
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_secam_gain_drdb_en_shift                     (7)
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_secam_gain_drdb_shift                        (0)
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_secam_gain_drdb_en_mask                      (0x00000080)
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_secam_gain_drdb_mask                         (0x0000007F)
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_secam_gain_drdb_en(data)                     (0x00000080&((data)<<7))
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_secam_gain_drdb(data)                        (0x0000007F&(data))
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_get_secam_gain_drdb_en(data)                 ((0x00000080&(data))>>7)
#define  VDTOP_DRDB_GAIN_TABLE_CTRL_get_secam_gain_drdb(data)                    (0x0000007F&(data))

#define  VDTOP_Y_GAIN_TABLE_CTRL                                                0x1801971C
#define  VDTOP_Y_GAIN_TABLE_CTRL_reg_addr                                        "0xB801971C"
#define  VDTOP_Y_GAIN_TABLE_CTRL_reg                                             0xB801971C
#define  VDTOP_Y_GAIN_TABLE_CTRL_inst_addr                                       "0x018E"
#define  set_VDTOP_Y_GAIN_TABLE_CTRL_reg(data)                                   (*((volatile unsigned int*)VDTOP_Y_GAIN_TABLE_CTRL_reg)=data)
#define  get_VDTOP_Y_GAIN_TABLE_CTRL_reg                                         (*((volatile unsigned int*)VDTOP_Y_GAIN_TABLE_CTRL_reg))
#define  VDTOP_Y_GAIN_TABLE_CTRL_secam_gain_y_en_shift                           (7)
#define  VDTOP_Y_GAIN_TABLE_CTRL_secam_gain_y_shift                              (0)
#define  VDTOP_Y_GAIN_TABLE_CTRL_secam_gain_y_en_mask                            (0x00000080)
#define  VDTOP_Y_GAIN_TABLE_CTRL_secam_gain_y_mask                               (0x0000007F)
#define  VDTOP_Y_GAIN_TABLE_CTRL_secam_gain_y_en(data)                           (0x00000080&((data)<<7))
#define  VDTOP_Y_GAIN_TABLE_CTRL_secam_gain_y(data)                              (0x0000007F&(data))
#define  VDTOP_Y_GAIN_TABLE_CTRL_get_secam_gain_y_en(data)                       ((0x00000080&(data))>>7)
#define  VDTOP_Y_GAIN_TABLE_CTRL_get_secam_gain_y(data)                          (0x0000007F&(data))

#define  VDTOP_SECAM_GAIN_DLY                                                   0x18019720
#define  VDTOP_SECAM_GAIN_DLY_reg_addr                                           "0xB8019720"
#define  VDTOP_SECAM_GAIN_DLY_reg                                                0xB8019720
#define  VDTOP_SECAM_GAIN_DLY_inst_addr                                          "0x018F"
#define  set_VDTOP_SECAM_GAIN_DLY_reg(data)                                      (*((volatile unsigned int*)VDTOP_SECAM_GAIN_DLY_reg)=data)
#define  get_VDTOP_SECAM_GAIN_DLY_reg                                            (*((volatile unsigned int*)VDTOP_SECAM_GAIN_DLY_reg))
#define  VDTOP_SECAM_GAIN_DLY_secam_gain_delay_shift                             (0)
#define  VDTOP_SECAM_GAIN_DLY_secam_gain_delay_mask                              (0x0000001F)
#define  VDTOP_SECAM_GAIN_DLY_secam_gain_delay(data)                             (0x0000001F&(data))
#define  VDTOP_SECAM_GAIN_DLY_get_secam_gain_delay(data)                         (0x0000001F&(data))

#define  VDTOP_SECAM_GAIN_TABLE_DEBUG                                           0x18019724
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_reg_addr                                   "0xB8019724"
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_reg                                        0xB8019724
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_inst_addr                                  "0x0190"
#define  set_VDTOP_SECAM_GAIN_TABLE_DEBUG_reg(data)                              (*((volatile unsigned int*)VDTOP_SECAM_GAIN_TABLE_DEBUG_reg)=data)
#define  get_VDTOP_SECAM_GAIN_TABLE_DEBUG_reg                                    (*((volatile unsigned int*)VDTOP_SECAM_GAIN_TABLE_DEBUG_reg))
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_secam_gain_debug_en_shift                  (7)
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_secam_gain_debug_shift                     (0)
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_secam_gain_debug_en_mask                   (0x00000080)
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_secam_gain_debug_mask                      (0x0000007F)
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_secam_gain_debug_en(data)                  (0x00000080&((data)<<7))
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_secam_gain_debug(data)                     (0x0000007F&(data))
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_get_secam_gain_debug_en(data)              ((0x00000080&(data))>>7)
#define  VDTOP_SECAM_GAIN_TABLE_DEBUG_get_secam_gain_debug(data)                 (0x0000007F&(data))

#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL                                      0x18019734
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_reg_addr                              "0xB8019734"
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_reg                                   0xB8019734
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_inst_addr                             "0x0191"
#define  set_VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_reg(data)                         (*((volatile unsigned int*)VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_reg)=data)
#define  get_VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_reg                               (*((volatile unsigned int*)VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_reg))
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_new_secam_phase_diff_hcount_en_shift  (7)
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_new_secam_phase_diff_hcount_shift     (0)
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_new_secam_phase_diff_hcount_en_mask   (0x00000080)
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_new_secam_phase_diff_hcount_mask      (0x0000007F)
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_new_secam_phase_diff_hcount_en(data)  (0x00000080&((data)<<7))
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_new_secam_phase_diff_hcount(data)     (0x0000007F&(data))
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_get_new_secam_phase_diff_hcount_en(data) ((0x00000080&(data))>>7)
#define  VDTOP_NEW_SECAM_HCOUNT_RESET_CTRL_get_new_secam_phase_diff_hcount(data) (0x0000007F&(data))

#define  VDTOP_NEW_SECAM_PHASE_DIFF_DR                                          0x18019738
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DR_reg_addr                                  "0xB8019738"
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DR_reg                                       0xB8019738
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DR_inst_addr                                 "0x0192"
#define  set_VDTOP_NEW_SECAM_PHASE_DIFF_DR_reg(data)                             (*((volatile unsigned int*)VDTOP_NEW_SECAM_PHASE_DIFF_DR_reg)=data)
#define  get_VDTOP_NEW_SECAM_PHASE_DIFF_DR_reg                                   (*((volatile unsigned int*)VDTOP_NEW_SECAM_PHASE_DIFF_DR_reg))
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DR_new_secam_phase_diff_dr_shift             (0)
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DR_new_secam_phase_diff_dr_mask              (0x000000FF)
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DR_new_secam_phase_diff_dr(data)             (0x000000FF&(data))
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DR_get_new_secam_phase_diff_dr(data)         (0x000000FF&(data))

#define  VDTOP_NEW_SECAM_PHASE_DIFF_DB                                          0x1801973C
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DB_reg_addr                                  "0xB801973C"
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DB_reg                                       0xB801973C
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DB_inst_addr                                 "0x0193"
#define  set_VDTOP_NEW_SECAM_PHASE_DIFF_DB_reg(data)                             (*((volatile unsigned int*)VDTOP_NEW_SECAM_PHASE_DIFF_DB_reg)=data)
#define  get_VDTOP_NEW_SECAM_PHASE_DIFF_DB_reg                                   (*((volatile unsigned int*)VDTOP_NEW_SECAM_PHASE_DIFF_DB_reg))
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DB_new_secam_phase_diff_db_shift             (0)
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DB_new_secam_phase_diff_db_mask              (0x000000FF)
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DB_new_secam_phase_diff_db(data)             (0x000000FF&(data))
#define  VDTOP_NEW_SECAM_PHASE_DIFF_DB_get_new_secam_phase_diff_db(data)         (0x000000FF&(data))

#define  VDTOP_NEW_SECAM_CDTO_INC                                               0x18019740
#define  VDTOP_NEW_SECAM_CDTO_INC_reg_addr                                       "0xB8019740"
#define  VDTOP_NEW_SECAM_CDTO_INC_reg                                            0xB8019740
#define  VDTOP_NEW_SECAM_CDTO_INC_inst_addr                                      "0x0194"
#define  set_VDTOP_NEW_SECAM_CDTO_INC_reg(data)                                  (*((volatile unsigned int*)VDTOP_NEW_SECAM_CDTO_INC_reg)=data)
#define  get_VDTOP_NEW_SECAM_CDTO_INC_reg                                        (*((volatile unsigned int*)VDTOP_NEW_SECAM_CDTO_INC_reg))
#define  VDTOP_NEW_SECAM_CDTO_INC_new_secam_cdto_inc_shift                       (0)
#define  VDTOP_NEW_SECAM_CDTO_INC_new_secam_cdto_inc_mask                        (0x3FFFFFFF)
#define  VDTOP_NEW_SECAM_CDTO_INC_new_secam_cdto_inc(data)                       (0x3FFFFFFF&(data))
#define  VDTOP_NEW_SECAM_CDTO_INC_get_new_secam_cdto_inc(data)                   (0x3FFFFFFF&(data))

#define  VDTOP_Secam_gp_rm                                                      0x18019744
#define  VDTOP_Secam_gp_rm_reg_addr                                              "0xB8019744"
#define  VDTOP_Secam_gp_rm_reg                                                   0xB8019744
#define  VDTOP_Secam_gp_rm_inst_addr                                             "0x0195"
#define  set_VDTOP_Secam_gp_rm_reg(data)                                         (*((volatile unsigned int*)VDTOP_Secam_gp_rm_reg)=data)
#define  get_VDTOP_Secam_gp_rm_reg                                               (*((volatile unsigned int*)VDTOP_Secam_gp_rm_reg))
#define  VDTOP_Secam_gp_rm_secam_gp_en_shift                                     (31)
#define  VDTOP_Secam_gp_rm_secam_gp_step_shift                                   (12)
#define  VDTOP_Secam_gp_rm_secam_gp_thl_shift                                    (0)
#define  VDTOP_Secam_gp_rm_secam_gp_en_mask                                      (0x80000000)
#define  VDTOP_Secam_gp_rm_secam_gp_step_mask                                    (0x003FF000)
#define  VDTOP_Secam_gp_rm_secam_gp_thl_mask                                     (0x000003FF)
#define  VDTOP_Secam_gp_rm_secam_gp_en(data)                                     (0x80000000&((data)<<31))
#define  VDTOP_Secam_gp_rm_secam_gp_step(data)                                   (0x003FF000&((data)<<12))
#define  VDTOP_Secam_gp_rm_secam_gp_thl(data)                                    (0x000003FF&(data))
#define  VDTOP_Secam_gp_rm_get_secam_gp_en(data)                                 ((0x80000000&(data))>>31)
#define  VDTOP_Secam_gp_rm_get_secam_gp_step(data)                               ((0x003FF000&(data))>>12)
#define  VDTOP_Secam_gp_rm_get_secam_gp_thl(data)                                (0x000003FF&(data))

#define  VDTOP_CHANGE_SIGNAL_CTRL_1                                             0x18019748
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_reg_addr                                     "0xB8019748"
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_reg                                          0xB8019748
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_inst_addr                                    "0x0196"
#define  set_VDTOP_CHANGE_SIGNAL_CTRL_1_reg(data)                                (*((volatile unsigned int*)VDTOP_CHANGE_SIGNAL_CTRL_1_reg)=data)
#define  get_VDTOP_CHANGE_SIGNAL_CTRL_1_reg                                      (*((volatile unsigned int*)VDTOP_CHANGE_SIGNAL_CTRL_1_reg))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_main_debug_sel_shift        (24)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_main_debug_en_shift         (23)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_sub_debug_sel_shift         (22)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_sub_debug_en_shift          (21)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_sub_en_shift           (20)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_main_en_shift          (19)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_27_shift               (18)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_new_vloop_enable_fail_occur_shift            (17)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_old_vloop_enable_fail_occur_shift            (16)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_new_vdetect_count_change_occur_shift         (15)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_old_vdetect_count_change_occur_shift         (14)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_new_vunlock_occur_shift                      (13)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vunlock_occur_shift                          (12)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_hunlock_occur_shift                          (11)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_data_dc_occur_shift                          (10)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_en_shift               (9)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_new_vloop_enable_fail_en_shift (8)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_old_vloop_enable_fail_en_shift (7)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_new_vdetect_count_change_en_shift (6)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_old_vdetect_count_change_en_shift (5)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_new_vunlock_en_shift           (4)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_vunlock_en_shift               (3)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_hunlock_en_shift               (2)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_data_dc_en_shift               (1)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_detect_en_shift                (0)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_main_debug_sel_mask         (0x01000000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_main_debug_en_mask          (0x00800000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_sub_debug_sel_mask          (0x00400000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_sub_debug_en_mask           (0x00200000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_sub_en_mask            (0x00100000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_main_en_mask           (0x00080000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_27_mask                (0x00040000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_new_vloop_enable_fail_occur_mask             (0x00020000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_old_vloop_enable_fail_occur_mask             (0x00010000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_new_vdetect_count_change_occur_mask          (0x00008000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_old_vdetect_count_change_occur_mask          (0x00004000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_new_vunlock_occur_mask                       (0x00002000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vunlock_occur_mask                           (0x00001000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_hunlock_occur_mask                           (0x00000800)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_data_dc_occur_mask                           (0x00000400)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_en_mask                (0x00000200)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_new_vloop_enable_fail_en_mask  (0x00000100)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_old_vloop_enable_fail_en_mask  (0x00000080)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_new_vdetect_count_change_en_mask (0x00000040)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_old_vdetect_count_change_en_mask (0x00000020)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_new_vunlock_en_mask            (0x00000010)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_vunlock_en_mask                (0x00000008)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_hunlock_en_mask                (0x00000004)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_data_dc_en_mask                (0x00000002)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_detect_en_mask                 (0x00000001)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_main_debug_sel(data)        (0x01000000&((data)<<24))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_main_debug_en(data)         (0x00800000&((data)<<23))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_sub_debug_sel(data)         (0x00400000&((data)<<22))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_disp_black_image_sub_debug_en(data)          (0x00200000&((data)<<21))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_sub_en(data)           (0x00100000&((data)<<20))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_main_en(data)          (0x00080000&((data)<<19))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_27(data)               (0x00040000&((data)<<18))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_new_vloop_enable_fail_occur(data)            (0x00020000&((data)<<17))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_old_vloop_enable_fail_occur(data)            (0x00010000&((data)<<16))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_new_vdetect_count_change_occur(data)         (0x00008000&((data)<<15))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_old_vdetect_count_change_occur(data)         (0x00004000&((data)<<14))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_new_vunlock_occur(data)                      (0x00002000&((data)<<13))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vunlock_occur(data)                          (0x00001000&((data)<<12))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_hunlock_occur(data)                          (0x00000800&((data)<<11))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_data_dc_occur(data)                          (0x00000400&((data)<<10))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_vdec_disp_black_image_en(data)               (0x00000200&((data)<<9))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_new_vloop_enable_fail_en(data) (0x00000100&((data)<<8))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_old_vloop_enable_fail_en(data) (0x00000080&((data)<<7))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_new_vdetect_count_change_en(data) (0x00000040&((data)<<6))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_old_vdetect_count_change_en(data) (0x00000020&((data)<<5))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_new_vunlock_en(data)           (0x00000010&((data)<<4))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_vunlock_en(data)               (0x00000008&((data)<<3))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_hunlock_en(data)               (0x00000004&((data)<<2))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_data_dc_en(data)               (0x00000002&((data)<<1))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_change_signal_detect_en(data)                (0x00000001&(data))
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_disp_black_image_main_debug_sel(data)    ((0x01000000&(data))>>24)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_disp_black_image_main_debug_en(data)     ((0x00800000&(data))>>23)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_disp_black_image_sub_debug_sel(data)     ((0x00400000&(data))>>22)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_disp_black_image_sub_debug_en(data)      ((0x00200000&(data))>>21)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_vdec_disp_black_image_sub_en(data)       ((0x00100000&(data))>>20)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_vdec_disp_black_image_main_en(data)      ((0x00080000&(data))>>19)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_vdec_disp_black_image_27(data)           ((0x00040000&(data))>>18)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_new_vloop_enable_fail_occur(data)        ((0x00020000&(data))>>17)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_old_vloop_enable_fail_occur(data)        ((0x00010000&(data))>>16)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_new_vdetect_count_change_occur(data)     ((0x00008000&(data))>>15)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_old_vdetect_count_change_occur(data)     ((0x00004000&(data))>>14)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_new_vunlock_occur(data)                  ((0x00002000&(data))>>13)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_vunlock_occur(data)                      ((0x00001000&(data))>>12)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_hunlock_occur(data)                      ((0x00000800&(data))>>11)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_data_dc_occur(data)                      ((0x00000400&(data))>>10)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_vdec_disp_black_image_en(data)           ((0x00000200&(data))>>9)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_change_signal_new_vloop_enable_fail_en(data) ((0x00000100&(data))>>8)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_change_signal_old_vloop_enable_fail_en(data) ((0x00000080&(data))>>7)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_change_signal_new_vdetect_count_change_en(data) ((0x00000040&(data))>>6)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_change_signal_old_vdetect_count_change_en(data) ((0x00000020&(data))>>5)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_change_signal_new_vunlock_en(data)       ((0x00000010&(data))>>4)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_change_signal_vunlock_en(data)           ((0x00000008&(data))>>3)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_change_signal_hunlock_en(data)           ((0x00000004&(data))>>2)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_change_signal_data_dc_en(data)           ((0x00000002&(data))>>1)
#define  VDTOP_CHANGE_SIGNAL_CTRL_1_get_change_signal_detect_en(data)            (0x00000001&(data))

#define  VDTOP_CHANGE_SIGNAL_CTRL_2                                             0x1801974C
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_reg_addr                                     "0xB801974C"
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_reg                                          0xB801974C
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_inst_addr                                    "0x0197"
#define  set_VDTOP_CHANGE_SIGNAL_CTRL_2_reg(data)                                (*((volatile unsigned int*)VDTOP_CHANGE_SIGNAL_CTRL_2_reg)=data)
#define  get_VDTOP_CHANGE_SIGNAL_CTRL_2_reg                                      (*((volatile unsigned int*)VDTOP_CHANGE_SIGNAL_CTRL_2_reg))
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_data_dc_detect_num_thr_shift                 (24)
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_data_dc_detect_val_thr_up_shift              (12)
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_data_dc_detect_val_thr_low_shift             (0)
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_data_dc_detect_num_thr_mask                  (0x3F000000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_data_dc_detect_val_thr_up_mask               (0x00FFF000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_data_dc_detect_val_thr_low_mask              (0x00000FFF)
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_data_dc_detect_num_thr(data)                 (0x3F000000&((data)<<24))
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_data_dc_detect_val_thr_up(data)              (0x00FFF000&((data)<<12))
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_data_dc_detect_val_thr_low(data)             (0x00000FFF&(data))
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_get_data_dc_detect_num_thr(data)             ((0x3F000000&(data))>>24)
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_get_data_dc_detect_val_thr_up(data)          ((0x00FFF000&(data))>>12)
#define  VDTOP_CHANGE_SIGNAL_CTRL_2_get_data_dc_detect_val_thr_low(data)         (0x00000FFF&(data))

#define  VDTOP_CHANGE_SIGNAL_CTRL_3                                             0x18019750
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_reg_addr                                     "0xB8019750"
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_reg                                          0xB8019750
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_inst_addr                                    "0x0198"
#define  set_VDTOP_CHANGE_SIGNAL_CTRL_3_reg(data)                                (*((volatile unsigned int*)VDTOP_CHANGE_SIGNAL_CTRL_3_reg)=data)
#define  get_VDTOP_CHANGE_SIGNAL_CTRL_3_reg                                      (*((volatile unsigned int*)VDTOP_CHANGE_SIGNAL_CTRL_3_reg))
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_hunlock_line_count_th_shift                  (22)
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_old_vloop_enable_fail_thr_shift              (11)
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_new_vloop_enable_fail_thr_shift              (0)
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_hunlock_line_count_th_mask                   (0x7FC00000)
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_old_vloop_enable_fail_thr_mask               (0x003FF800)
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_new_vloop_enable_fail_thr_mask               (0x000007FF)
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_hunlock_line_count_th(data)                  (0x7FC00000&((data)<<22))
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_old_vloop_enable_fail_thr(data)              (0x003FF800&((data)<<11))
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_new_vloop_enable_fail_thr(data)              (0x000007FF&(data))
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_get_hunlock_line_count_th(data)              ((0x7FC00000&(data))>>22)
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_get_old_vloop_enable_fail_thr(data)          ((0x003FF800&(data))>>11)
#define  VDTOP_CHANGE_SIGNAL_CTRL_3_get_new_vloop_enable_fail_thr(data)          (0x000007FF&(data))

#define  VDTOP_FIFO_CTRL                                                        0x18019758
#define  VDTOP_FIFO_CTRL_reg_addr                                                "0xB8019758"
#define  VDTOP_FIFO_CTRL_reg                                                     0xB8019758
#define  VDTOP_FIFO_CTRL_inst_addr                                               "0x0199"
#define  set_VDTOP_FIFO_CTRL_reg(data)                                           (*((volatile unsigned int*)VDTOP_FIFO_CTRL_reg)=data)
#define  get_VDTOP_FIFO_CTRL_reg                                                 (*((volatile unsigned int*)VDTOP_FIFO_CTRL_reg))
#define  VDTOP_FIFO_CTRL_vdec_ps_disp_27_en_shift                                (31)
#define  VDTOP_FIFO_CTRL_hresampler_combi_delay_shift                            (28)
#define  VDTOP_FIFO_CTRL_vd_output_135_sel_shift                                 (26)
#define  VDTOP_FIFO_CTRL_vd_output_27_repeat_sel_shift                           (25)
#define  VDTOP_FIFO_CTRL_vd_output_27_repeat_en_shift                            (24)
#define  VDTOP_FIFO_CTRL_v8format_sel_shift                                      (7)
#define  VDTOP_FIFO_CTRL_ps_updn_swap_shift                                      (2)
#define  VDTOP_FIFO_CTRL_fifo_initialization_shift                               (0)
#define  VDTOP_FIFO_CTRL_vdec_ps_disp_27_en_mask                                 (0x80000000)
#define  VDTOP_FIFO_CTRL_hresampler_combi_delay_mask                             (0x70000000)
#define  VDTOP_FIFO_CTRL_vd_output_135_sel_mask                                  (0x04000000)
#define  VDTOP_FIFO_CTRL_vd_output_27_repeat_sel_mask                            (0x02000000)
#define  VDTOP_FIFO_CTRL_vd_output_27_repeat_en_mask                             (0x01000000)
#define  VDTOP_FIFO_CTRL_v8format_sel_mask                                       (0x00000080)
#define  VDTOP_FIFO_CTRL_ps_updn_swap_mask                                       (0x00000004)
#define  VDTOP_FIFO_CTRL_fifo_initialization_mask                                (0x00000001)
#define  VDTOP_FIFO_CTRL_vdec_ps_disp_27_en(data)                                (0x80000000&((data)<<31))
#define  VDTOP_FIFO_CTRL_hresampler_combi_delay(data)                            (0x70000000&((data)<<28))
#define  VDTOP_FIFO_CTRL_vd_output_135_sel(data)                                 (0x04000000&((data)<<26))
#define  VDTOP_FIFO_CTRL_vd_output_27_repeat_sel(data)                           (0x02000000&((data)<<25))
#define  VDTOP_FIFO_CTRL_vd_output_27_repeat_en(data)                            (0x01000000&((data)<<24))
#define  VDTOP_FIFO_CTRL_v8format_sel(data)                                      (0x00000080&((data)<<7))
#define  VDTOP_FIFO_CTRL_ps_updn_swap(data)                                      (0x00000004&((data)<<2))
#define  VDTOP_FIFO_CTRL_fifo_initialization(data)                               (0x00000001&(data))
#define  VDTOP_FIFO_CTRL_get_vdec_ps_disp_27_en(data)                            ((0x80000000&(data))>>31)
#define  VDTOP_FIFO_CTRL_get_hresampler_combi_delay(data)                        ((0x70000000&(data))>>28)
#define  VDTOP_FIFO_CTRL_get_vd_output_135_sel(data)                             ((0x04000000&(data))>>26)
#define  VDTOP_FIFO_CTRL_get_vd_output_27_repeat_sel(data)                       ((0x02000000&(data))>>25)
#define  VDTOP_FIFO_CTRL_get_vd_output_27_repeat_en(data)                        ((0x01000000&(data))>>24)
#define  VDTOP_FIFO_CTRL_get_v8format_sel(data)                                  ((0x00000080&(data))>>7)
#define  VDTOP_FIFO_CTRL_get_ps_updn_swap(data)                                  ((0x00000004&(data))>>2)
#define  VDTOP_FIFO_CTRL_get_fifo_initialization(data)                           (0x00000001&(data))

#define  VDTOP_FIFO_STATUS                                                      0x1801975C
#define  VDTOP_FIFO_STATUS_reg_addr                                              "0xB801975C"
#define  VDTOP_FIFO_STATUS_reg                                                   0xB801975C
#define  VDTOP_FIFO_STATUS_inst_addr                                             "0x019A"
#define  set_VDTOP_FIFO_STATUS_reg(data)                                         (*((volatile unsigned int*)VDTOP_FIFO_STATUS_reg)=data)
#define  get_VDTOP_FIFO_STATUS_reg                                               (*((volatile unsigned int*)VDTOP_FIFO_STATUS_reg))
#define  VDTOP_FIFO_STATUS_ps_540_coe_en_shift                                   (24)
#define  VDTOP_FIFO_STATUS_ps_540_select_tap_shift                               (16)
#define  VDTOP_FIFO_STATUS_ps_540_coe_modify_shift                               (8)
#define  VDTOP_FIFO_STATUS_fifo_full_status_shift                                (1)
#define  VDTOP_FIFO_STATUS_fifo_empty_status_shift                               (0)
#define  VDTOP_FIFO_STATUS_ps_540_coe_en_mask                                    (0x01000000)
#define  VDTOP_FIFO_STATUS_ps_540_select_tap_mask                                (0x001F0000)
#define  VDTOP_FIFO_STATUS_ps_540_coe_modify_mask                                (0x00007F00)
#define  VDTOP_FIFO_STATUS_fifo_full_status_mask                                 (0x00000002)
#define  VDTOP_FIFO_STATUS_fifo_empty_status_mask                                (0x00000001)
#define  VDTOP_FIFO_STATUS_ps_540_coe_en(data)                                   (0x01000000&((data)<<24))
#define  VDTOP_FIFO_STATUS_ps_540_select_tap(data)                               (0x001F0000&((data)<<16))
#define  VDTOP_FIFO_STATUS_ps_540_coe_modify(data)                               (0x00007F00&((data)<<8))
#define  VDTOP_FIFO_STATUS_fifo_full_status(data)                                (0x00000002&((data)<<1))
#define  VDTOP_FIFO_STATUS_fifo_empty_status(data)                               (0x00000001&(data))
#define  VDTOP_FIFO_STATUS_get_ps_540_coe_en(data)                               ((0x01000000&(data))>>24)
#define  VDTOP_FIFO_STATUS_get_ps_540_select_tap(data)                           ((0x001F0000&(data))>>16)
#define  VDTOP_FIFO_STATUS_get_ps_540_coe_modify(data)                           ((0x00007F00&(data))>>8)
#define  VDTOP_FIFO_STATUS_get_fifo_full_status(data)                            ((0x00000002&(data))>>1)
#define  VDTOP_FIFO_STATUS_get_fifo_empty_status(data)                           (0x00000001&(data))

#define  VDTOP_I_GAIN_CONTROL                                                   0x18019760
#define  VDTOP_I_GAIN_CONTROL_reg_addr                                           "0xB8019760"
#define  VDTOP_I_GAIN_CONTROL_reg                                                0xB8019760
#define  VDTOP_I_GAIN_CONTROL_inst_addr                                          "0x019B"
#define  set_VDTOP_I_GAIN_CONTROL_reg(data)                                      (*((volatile unsigned int*)VDTOP_I_GAIN_CONTROL_reg)=data)
#define  get_VDTOP_I_GAIN_CONTROL_reg                                            (*((volatile unsigned int*)VDTOP_I_GAIN_CONTROL_reg))
#define  VDTOP_I_GAIN_CONTROL_ps_psel_status_shift                               (20)
#define  VDTOP_I_GAIN_CONTROL_ps_dn_status_shift                                 (17)
#define  VDTOP_I_GAIN_CONTROL_ps_up_status_shift                                 (16)
#define  VDTOP_I_GAIN_CONTROL_ps_ndiv_status_shift                               (8)
#define  VDTOP_I_GAIN_CONTROL_pll_i_gain_shift                                   (0)
#define  VDTOP_I_GAIN_CONTROL_ps_psel_status_mask                                (0x00700000)
#define  VDTOP_I_GAIN_CONTROL_ps_dn_status_mask                                  (0x00020000)
#define  VDTOP_I_GAIN_CONTROL_ps_up_status_mask                                  (0x00010000)
#define  VDTOP_I_GAIN_CONTROL_ps_ndiv_status_mask                                (0x00001F00)
#define  VDTOP_I_GAIN_CONTROL_pll_i_gain_mask                                    (0x000000FF)
#define  VDTOP_I_GAIN_CONTROL_ps_psel_status(data)                               (0x00700000&((data)<<20))
#define  VDTOP_I_GAIN_CONTROL_ps_dn_status(data)                                 (0x00020000&((data)<<17))
#define  VDTOP_I_GAIN_CONTROL_ps_up_status(data)                                 (0x00010000&((data)<<16))
#define  VDTOP_I_GAIN_CONTROL_ps_ndiv_status(data)                               (0x00001F00&((data)<<8))
#define  VDTOP_I_GAIN_CONTROL_pll_i_gain(data)                                   (0x000000FF&(data))
#define  VDTOP_I_GAIN_CONTROL_get_ps_psel_status(data)                           ((0x00700000&(data))>>20)
#define  VDTOP_I_GAIN_CONTROL_get_ps_dn_status(data)                             ((0x00020000&(data))>>17)
#define  VDTOP_I_GAIN_CONTROL_get_ps_up_status(data)                             ((0x00010000&(data))>>16)
#define  VDTOP_I_GAIN_CONTROL_get_ps_ndiv_status(data)                           ((0x00001F00&(data))>>8)
#define  VDTOP_I_GAIN_CONTROL_get_pll_i_gain(data)                               (0x000000FF&(data))

#define  VDTOP_MISC_CONTROL                                                     0x18019764
#define  VDTOP_MISC_CONTROL_reg_addr                                             "0xB8019764"
#define  VDTOP_MISC_CONTROL_reg                                                  0xB8019764
#define  VDTOP_MISC_CONTROL_inst_addr                                            "0x019C"
#define  set_VDTOP_MISC_CONTROL_reg(data)                                        (*((volatile unsigned int*)VDTOP_MISC_CONTROL_reg)=data)
#define  get_VDTOP_MISC_CONTROL_reg                                              (*((volatile unsigned int*)VDTOP_MISC_CONTROL_reg))
#define  VDTOP_MISC_CONTROL_phase_swallow_fix_start_shift                        (21)
#define  VDTOP_MISC_CONTROL_fifo_wo_ps_shift                                     (20)
#define  VDTOP_MISC_CONTROL_fifo_depth_wo_ps_shift                               (12)
#define  VDTOP_MISC_CONTROL_swallow_freq_sel_shift                               (8)
#define  VDTOP_MISC_CONTROL_swallow_on_vsync_shift                               (7)
#define  VDTOP_MISC_CONTROL_ndivload_en_shift                                    (6)
#define  VDTOP_MISC_CONTROL_ps_up_en_shift                                       (5)
#define  VDTOP_MISC_CONTROL_ps_dn_en_shift                                       (4)
#define  VDTOP_MISC_CONTROL_pll_div_shift                                        (0)
#define  VDTOP_MISC_CONTROL_phase_swallow_fix_start_mask                         (0x00200000)
#define  VDTOP_MISC_CONTROL_fifo_wo_ps_mask                                      (0x00100000)
#define  VDTOP_MISC_CONTROL_fifo_depth_wo_ps_mask                                (0x000FF000)
#define  VDTOP_MISC_CONTROL_swallow_freq_sel_mask                                (0x00000700)
#define  VDTOP_MISC_CONTROL_swallow_on_vsync_mask                                (0x00000080)
#define  VDTOP_MISC_CONTROL_ndivload_en_mask                                     (0x00000040)
#define  VDTOP_MISC_CONTROL_ps_up_en_mask                                        (0x00000020)
#define  VDTOP_MISC_CONTROL_ps_dn_en_mask                                        (0x00000010)
#define  VDTOP_MISC_CONTROL_pll_div_mask                                         (0x0000000F)
#define  VDTOP_MISC_CONTROL_phase_swallow_fix_start(data)                        (0x00200000&((data)<<21))
#define  VDTOP_MISC_CONTROL_fifo_wo_ps(data)                                     (0x00100000&((data)<<20))
#define  VDTOP_MISC_CONTROL_fifo_depth_wo_ps(data)                               (0x000FF000&((data)<<12))
#define  VDTOP_MISC_CONTROL_swallow_freq_sel(data)                               (0x00000700&((data)<<8))
#define  VDTOP_MISC_CONTROL_swallow_on_vsync(data)                               (0x00000080&((data)<<7))
#define  VDTOP_MISC_CONTROL_ndivload_en(data)                                    (0x00000040&((data)<<6))
#define  VDTOP_MISC_CONTROL_ps_up_en(data)                                       (0x00000020&((data)<<5))
#define  VDTOP_MISC_CONTROL_ps_dn_en(data)                                       (0x00000010&((data)<<4))
#define  VDTOP_MISC_CONTROL_pll_div(data)                                        (0x0000000F&(data))
#define  VDTOP_MISC_CONTROL_get_phase_swallow_fix_start(data)                    ((0x00200000&(data))>>21)
#define  VDTOP_MISC_CONTROL_get_fifo_wo_ps(data)                                 ((0x00100000&(data))>>20)
#define  VDTOP_MISC_CONTROL_get_fifo_depth_wo_ps(data)                           ((0x000FF000&(data))>>12)
#define  VDTOP_MISC_CONTROL_get_swallow_freq_sel(data)                           ((0x00000700&(data))>>8)
#define  VDTOP_MISC_CONTROL_get_swallow_on_vsync(data)                           ((0x00000080&(data))>>7)
#define  VDTOP_MISC_CONTROL_get_ndivload_en(data)                                ((0x00000040&(data))>>6)
#define  VDTOP_MISC_CONTROL_get_ps_up_en(data)                                   ((0x00000020&(data))>>5)
#define  VDTOP_MISC_CONTROL_get_ps_dn_en(data)                                   ((0x00000010&(data))>>4)
#define  VDTOP_MISC_CONTROL_get_pll_div(data)                                    (0x0000000F&(data))

#define  VDTOP_FIFO_DEPTH_MIN_STATUS                                            0x18019768
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_reg_addr                                    "0xB8019768"
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_reg                                         0xB8019768
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_inst_addr                                   "0x019D"
#define  set_VDTOP_FIFO_DEPTH_MIN_STATUS_reg(data)                               (*((volatile unsigned int*)VDTOP_FIFO_DEPTH_MIN_STATUS_reg)=data)
#define  get_VDTOP_FIFO_DEPTH_MIN_STATUS_reg                                     (*((volatile unsigned int*)VDTOP_FIFO_DEPTH_MIN_STATUS_reg))
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_fifo_depth_min_clr_shift                    (8)
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_fifo_depth_min_status_shift                 (0)
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_fifo_depth_min_clr_mask                     (0x00000100)
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_fifo_depth_min_status_mask                  (0x000000FF)
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_fifo_depth_min_clr(data)                    (0x00000100&((data)<<8))
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_fifo_depth_min_status(data)                 (0x000000FF&(data))
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_get_fifo_depth_min_clr(data)                ((0x00000100&(data))>>8)
#define  VDTOP_FIFO_DEPTH_MIN_STATUS_get_fifo_depth_min_status(data)             (0x000000FF&(data))

#define  VDTOP_FIFO_DEPTH_MAX_STATUS                                            0x1801976C
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_reg_addr                                    "0xB801976C"
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_reg                                         0xB801976C
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_inst_addr                                   "0x019E"
#define  set_VDTOP_FIFO_DEPTH_MAX_STATUS_reg(data)                               (*((volatile unsigned int*)VDTOP_FIFO_DEPTH_MAX_STATUS_reg)=data)
#define  get_VDTOP_FIFO_DEPTH_MAX_STATUS_reg                                     (*((volatile unsigned int*)VDTOP_FIFO_DEPTH_MAX_STATUS_reg))
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_fifo_depth_max_clr_shift                    (8)
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_fifo_depth_max_status_shift                 (0)
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_fifo_depth_max_clr_mask                     (0x00000100)
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_fifo_depth_max_status_mask                  (0x000000FF)
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_fifo_depth_max_clr(data)                    (0x00000100&((data)<<8))
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_fifo_depth_max_status(data)                 (0x000000FF&(data))
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_get_fifo_depth_max_clr(data)                ((0x00000100&(data))>>8)
#define  VDTOP_FIFO_DEPTH_MAX_STATUS_get_fifo_depth_max_status(data)             (0x000000FF&(data))

#define  VDTOP_PLL_DEBUG_CTRL1                                                  0x18019770
#define  VDTOP_PLL_DEBUG_CTRL1_reg_addr                                          "0xB8019770"
#define  VDTOP_PLL_DEBUG_CTRL1_reg                                               0xB8019770
#define  VDTOP_PLL_DEBUG_CTRL1_inst_addr                                         "0x019F"
#define  set_VDTOP_PLL_DEBUG_CTRL1_reg(data)                                     (*((volatile unsigned int*)VDTOP_PLL_DEBUG_CTRL1_reg)=data)
#define  get_VDTOP_PLL_DEBUG_CTRL1_reg                                           (*((volatile unsigned int*)VDTOP_PLL_DEBUG_CTRL1_reg))
#define  VDTOP_PLL_DEBUG_CTRL1_ps_up_i_shift                                     (7)
#define  VDTOP_PLL_DEBUG_CTRL1_ps_dn_i_shift                                     (6)
#define  VDTOP_PLL_DEBUG_CTRL1_ps_divload_shift                                  (1)
#define  VDTOP_PLL_DEBUG_CTRL1_ps_pselload_shift                                 (0)
#define  VDTOP_PLL_DEBUG_CTRL1_ps_up_i_mask                                      (0x00000080)
#define  VDTOP_PLL_DEBUG_CTRL1_ps_dn_i_mask                                      (0x00000040)
#define  VDTOP_PLL_DEBUG_CTRL1_ps_divload_mask                                   (0x00000002)
#define  VDTOP_PLL_DEBUG_CTRL1_ps_pselload_mask                                  (0x00000001)
#define  VDTOP_PLL_DEBUG_CTRL1_ps_up_i(data)                                     (0x00000080&((data)<<7))
#define  VDTOP_PLL_DEBUG_CTRL1_ps_dn_i(data)                                     (0x00000040&((data)<<6))
#define  VDTOP_PLL_DEBUG_CTRL1_ps_divload(data)                                  (0x00000002&((data)<<1))
#define  VDTOP_PLL_DEBUG_CTRL1_ps_pselload(data)                                 (0x00000001&(data))
#define  VDTOP_PLL_DEBUG_CTRL1_get_ps_up_i(data)                                 ((0x00000080&(data))>>7)
#define  VDTOP_PLL_DEBUG_CTRL1_get_ps_dn_i(data)                                 ((0x00000040&(data))>>6)
#define  VDTOP_PLL_DEBUG_CTRL1_get_ps_divload(data)                              ((0x00000002&(data))>>1)
#define  VDTOP_PLL_DEBUG_CTRL1_get_ps_pselload(data)                             (0x00000001&(data))

#define  VDTOP_PLL_DEBUG_CTRL2                                                  0x18019774
#define  VDTOP_PLL_DEBUG_CTRL2_reg_addr                                          "0xB8019774"
#define  VDTOP_PLL_DEBUG_CTRL2_reg                                               0xB8019774
#define  VDTOP_PLL_DEBUG_CTRL2_inst_addr                                         "0x01A0"
#define  set_VDTOP_PLL_DEBUG_CTRL2_reg(data)                                     (*((volatile unsigned int*)VDTOP_PLL_DEBUG_CTRL2_reg)=data)
#define  get_VDTOP_PLL_DEBUG_CTRL2_reg                                           (*((volatile unsigned int*)VDTOP_PLL_DEBUG_CTRL2_reg))
#define  VDTOP_PLL_DEBUG_CTRL2_pll_debug_en_shift                                (7)
#define  VDTOP_PLL_DEBUG_CTRL2_ps_psel_shift                                     (4)
#define  VDTOP_PLL_DEBUG_CTRL2_ps_ndiv_shift                                     (0)
#define  VDTOP_PLL_DEBUG_CTRL2_pll_debug_en_mask                                 (0x00000080)
#define  VDTOP_PLL_DEBUG_CTRL2_ps_psel_mask                                      (0x00000070)
#define  VDTOP_PLL_DEBUG_CTRL2_ps_ndiv_mask                                      (0x0000000F)
#define  VDTOP_PLL_DEBUG_CTRL2_pll_debug_en(data)                                (0x00000080&((data)<<7))
#define  VDTOP_PLL_DEBUG_CTRL2_ps_psel(data)                                     (0x00000070&((data)<<4))
#define  VDTOP_PLL_DEBUG_CTRL2_ps_ndiv(data)                                     (0x0000000F&(data))
#define  VDTOP_PLL_DEBUG_CTRL2_get_pll_debug_en(data)                            ((0x00000080&(data))>>7)
#define  VDTOP_PLL_DEBUG_CTRL2_get_ps_psel(data)                                 ((0x00000070&(data))>>4)
#define  VDTOP_PLL_DEBUG_CTRL2_get_ps_ndiv(data)                                 (0x0000000F&(data))

#define  VDTOP_DISP_FSYNC_CONTROL                                               0x18019778
#define  VDTOP_DISP_FSYNC_CONTROL_reg_addr                                       "0xB8019778"
#define  VDTOP_DISP_FSYNC_CONTROL_reg                                            0xB8019778
#define  VDTOP_DISP_FSYNC_CONTROL_inst_addr                                      "0x01A1"
#define  set_VDTOP_DISP_FSYNC_CONTROL_reg(data)                                  (*((volatile unsigned int*)VDTOP_DISP_FSYNC_CONTROL_reg)=data)
#define  get_VDTOP_DISP_FSYNC_CONTROL_reg                                        (*((volatile unsigned int*)VDTOP_DISP_FSYNC_CONTROL_reg))
#define  VDTOP_DISP_FSYNC_CONTROL_ps_fix_en_shift                                (20)
#define  VDTOP_DISP_FSYNC_CONTROL_ps_fix_value_shift                             (12)
#define  VDTOP_DISP_FSYNC_CONTROL_ps_new_kikp_shift                              (11)
#define  VDTOP_DISP_FSYNC_CONTROL_ps_new_kp_shift                                (8)
#define  VDTOP_DISP_FSYNC_CONTROL_cnt_en_shift                                   (5)
#define  VDTOP_DISP_FSYNC_CONTROL_period_sel_shift                               (3)
#define  VDTOP_DISP_FSYNC_CONTROL_lpf_en_shift                                   (2)
#define  VDTOP_DISP_FSYNC_CONTROL_k_sel_shift                                    (0)
#define  VDTOP_DISP_FSYNC_CONTROL_ps_fix_en_mask                                 (0x00100000)
#define  VDTOP_DISP_FSYNC_CONTROL_ps_fix_value_mask                              (0x000FF000)
#define  VDTOP_DISP_FSYNC_CONTROL_ps_new_kikp_mask                               (0x00000800)
#define  VDTOP_DISP_FSYNC_CONTROL_ps_new_kp_mask                                 (0x00000700)
#define  VDTOP_DISP_FSYNC_CONTROL_cnt_en_mask                                    (0x00000020)
#define  VDTOP_DISP_FSYNC_CONTROL_period_sel_mask                                (0x00000018)
#define  VDTOP_DISP_FSYNC_CONTROL_lpf_en_mask                                    (0x00000004)
#define  VDTOP_DISP_FSYNC_CONTROL_k_sel_mask                                     (0x00000003)
#define  VDTOP_DISP_FSYNC_CONTROL_ps_fix_en(data)                                (0x00100000&((data)<<20))
#define  VDTOP_DISP_FSYNC_CONTROL_ps_fix_value(data)                             (0x000FF000&((data)<<12))
#define  VDTOP_DISP_FSYNC_CONTROL_ps_new_kikp(data)                              (0x00000800&((data)<<11))
#define  VDTOP_DISP_FSYNC_CONTROL_ps_new_kp(data)                                (0x00000700&((data)<<8))
#define  VDTOP_DISP_FSYNC_CONTROL_cnt_en(data)                                   (0x00000020&((data)<<5))
#define  VDTOP_DISP_FSYNC_CONTROL_period_sel(data)                               (0x00000018&((data)<<3))
#define  VDTOP_DISP_FSYNC_CONTROL_lpf_en(data)                                   (0x00000004&((data)<<2))
#define  VDTOP_DISP_FSYNC_CONTROL_k_sel(data)                                    (0x00000003&(data))
#define  VDTOP_DISP_FSYNC_CONTROL_get_ps_fix_en(data)                            ((0x00100000&(data))>>20)
#define  VDTOP_DISP_FSYNC_CONTROL_get_ps_fix_value(data)                         ((0x000FF000&(data))>>12)
#define  VDTOP_DISP_FSYNC_CONTROL_get_ps_new_kikp(data)                          ((0x00000800&(data))>>11)
#define  VDTOP_DISP_FSYNC_CONTROL_get_ps_new_kp(data)                            ((0x00000700&(data))>>8)
#define  VDTOP_DISP_FSYNC_CONTROL_get_cnt_en(data)                               ((0x00000020&(data))>>5)
#define  VDTOP_DISP_FSYNC_CONTROL_get_period_sel(data)                           ((0x00000018&(data))>>3)
#define  VDTOP_DISP_FSYNC_CONTROL_get_lpf_en(data)                               ((0x00000004&(data))>>2)
#define  VDTOP_DISP_FSYNC_CONTROL_get_k_sel(data)                                (0x00000003&(data))

#define  VDTOP_FIFO_WO_PS_FUNC                                                  0x1801977C
#define  VDTOP_FIFO_WO_PS_FUNC_reg_addr                                          "0xB801977C"
#define  VDTOP_FIFO_WO_PS_FUNC_reg                                               0xB801977C
#define  VDTOP_FIFO_WO_PS_FUNC_inst_addr                                         "0x01A2"
#define  set_VDTOP_FIFO_WO_PS_FUNC_reg(data)                                     (*((volatile unsigned int*)VDTOP_FIFO_WO_PS_FUNC_reg)=data)
#define  get_VDTOP_FIFO_WO_PS_FUNC_reg                                           (*((volatile unsigned int*)VDTOP_FIFO_WO_PS_FUNC_reg))
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_read_repeat_en_shift                   (31)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_clk_jump_shift                         (30)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_err_act_shift                          (29)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_adapt_shift                            (28)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_hlen_min_shift                         (16)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_depth_wo_ps_min_shift                        (8)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_depth_wo_ps_max_shift                        (0)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_read_repeat_en_mask                    (0x80000000)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_clk_jump_mask                          (0x40000000)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_err_act_mask                           (0x20000000)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_adapt_mask                             (0x10000000)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_hlen_min_mask                          (0x0FFF0000)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_depth_wo_ps_min_mask                         (0x0000FF00)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_depth_wo_ps_max_mask                         (0x000000FF)
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_read_repeat_en(data)                   (0x80000000&((data)<<31))
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_clk_jump(data)                         (0x40000000&((data)<<30))
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_err_act(data)                          (0x20000000&((data)<<29))
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_adapt(data)                            (0x10000000&((data)<<28))
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_wo_ps_hlen_min(data)                         (0x0FFF0000&((data)<<16))
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_depth_wo_ps_min(data)                        (0x0000FF00&((data)<<8))
#define  VDTOP_FIFO_WO_PS_FUNC_fifo_depth_wo_ps_max(data)                        (0x000000FF&(data))
#define  VDTOP_FIFO_WO_PS_FUNC_get_fifo_wo_ps_read_repeat_en(data)               ((0x80000000&(data))>>31)
#define  VDTOP_FIFO_WO_PS_FUNC_get_fifo_wo_ps_clk_jump(data)                     ((0x40000000&(data))>>30)
#define  VDTOP_FIFO_WO_PS_FUNC_get_fifo_wo_ps_err_act(data)                      ((0x20000000&(data))>>29)
#define  VDTOP_FIFO_WO_PS_FUNC_get_fifo_wo_ps_adapt(data)                        ((0x10000000&(data))>>28)
#define  VDTOP_FIFO_WO_PS_FUNC_get_fifo_wo_ps_hlen_min(data)                     ((0x0FFF0000&(data))>>16)
#define  VDTOP_FIFO_WO_PS_FUNC_get_fifo_depth_wo_ps_min(data)                    ((0x0000FF00&(data))>>8)
#define  VDTOP_FIFO_WO_PS_FUNC_get_fifo_depth_wo_ps_max(data)                    (0x000000FF&(data))

#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER                                   0x18019780
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_reg_addr                           "0xB8019780"
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_reg                                0xB8019780
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_inst_addr                          "0x01A3"
#define  set_VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_reg(data)                      (*((volatile unsigned int*)VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_reg)=data)
#define  get_VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_reg                            (*((volatile unsigned int*)VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_reg))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_up_i1_shift          (23)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_dn_i1_shift          (22)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_pselload1_shift      (21)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_divload1_shift       (20)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_psel1_shift          (17)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_ndiv1_shift          (12)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_up_i0_shift          (11)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_dn_i0_shift          (10)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_pselload0_shift      (9)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_divload0_shift       (8)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_psel0_shift          (5)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_ndiv0_shift          (0)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_up_i1_mask           (0x00800000)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_dn_i1_mask           (0x00400000)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_pselload1_mask       (0x00200000)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_divload1_mask        (0x00100000)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_psel1_mask           (0x000E0000)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_ndiv1_mask           (0x0001F000)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_up_i0_mask           (0x00000800)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_dn_i0_mask           (0x00000400)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_pselload0_mask       (0x00000200)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_divload0_mask        (0x00000100)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_psel0_mask           (0x000000E0)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_ndiv0_mask           (0x0000001F)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_up_i1(data)          (0x00800000&((data)<<23))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_dn_i1(data)          (0x00400000&((data)<<22))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_pselload1(data)      (0x00200000&((data)<<21))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_divload1(data)       (0x00100000&((data)<<20))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_psel1(data)          (0x000E0000&((data)<<17))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_ndiv1(data)          (0x0001F000&((data)<<12))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_up_i0(data)          (0x00000800&((data)<<11))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_dn_i0(data)          (0x00000400&((data)<<10))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_pselload0(data)      (0x00000200&((data)<<9))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_divload0(data)       (0x00000100&((data)<<8))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_psel0(data)          (0x000000E0&((data)<<5))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_fifo_wo_ps_ps_ndiv0(data)          (0x0000001F&(data))
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_up_i1(data)      ((0x00800000&(data))>>23)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_dn_i1(data)      ((0x00400000&(data))>>22)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_pselload1(data)  ((0x00200000&(data))>>21)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_divload1(data)   ((0x00100000&(data))>>20)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_psel1(data)      ((0x000E0000&(data))>>17)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_ndiv1(data)      ((0x0001F000&(data))>>12)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_up_i0(data)      ((0x00000800&(data))>>11)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_dn_i0(data)      ((0x00000400&(data))>>10)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_pselload0(data)  ((0x00000200&(data))>>9)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_divload0(data)   ((0x00000100&(data))>>8)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_psel0(data)      ((0x000000E0&(data))>>5)
#define  VDTOP_FIFO_WO_PS_CLK_STATE_PARAMETER_get_fifo_wo_ps_ps_ndiv0(data)      (0x0000001F&(data))

#define  VDTOP_FIFO_STATUS_NO_PLL                                               0x18019784
#define  VDTOP_FIFO_STATUS_NO_PLL_reg_addr                                       "0xB8019784"
#define  VDTOP_FIFO_STATUS_NO_PLL_reg                                            0xB8019784
#define  VDTOP_FIFO_STATUS_NO_PLL_inst_addr                                      "0x01A4"
#define  set_VDTOP_FIFO_STATUS_NO_PLL_reg(data)                                  (*((volatile unsigned int*)VDTOP_FIFO_STATUS_NO_PLL_reg)=data)
#define  get_VDTOP_FIFO_STATUS_NO_PLL_reg                                        (*((volatile unsigned int*)VDTOP_FIFO_STATUS_NO_PLL_reg))
#define  VDTOP_FIFO_STATUS_NO_PLL_stable_fifo_depth_shift                        (16)
#define  VDTOP_FIFO_STATUS_NO_PLL_fifo_clk_state_shift                           (12)
#define  VDTOP_FIFO_STATUS_NO_PLL_fifo_out_line_len_shift                        (0)
#define  VDTOP_FIFO_STATUS_NO_PLL_stable_fifo_depth_mask                         (0x00FF0000)
#define  VDTOP_FIFO_STATUS_NO_PLL_fifo_clk_state_mask                            (0x00001000)
#define  VDTOP_FIFO_STATUS_NO_PLL_fifo_out_line_len_mask                         (0x00000FFF)
#define  VDTOP_FIFO_STATUS_NO_PLL_stable_fifo_depth(data)                        (0x00FF0000&((data)<<16))
#define  VDTOP_FIFO_STATUS_NO_PLL_fifo_clk_state(data)                           (0x00001000&((data)<<12))
#define  VDTOP_FIFO_STATUS_NO_PLL_fifo_out_line_len(data)                        (0x00000FFF&(data))
#define  VDTOP_FIFO_STATUS_NO_PLL_get_stable_fifo_depth(data)                    ((0x00FF0000&(data))>>16)
#define  VDTOP_FIFO_STATUS_NO_PLL_get_fifo_clk_state(data)                       ((0x00001000&(data))>>12)
#define  VDTOP_FIFO_STATUS_NO_PLL_get_fifo_out_line_len(data)                    (0x00000FFF&(data))

#define  VDTOP_DEBUG_MUX                                                        0x18019788
#define  VDTOP_DEBUG_MUX_reg_addr                                                "0xB8019788"
#define  VDTOP_DEBUG_MUX_reg                                                     0xB8019788
#define  VDTOP_DEBUG_MUX_inst_addr                                               "0x01A5"
#define  set_VDTOP_DEBUG_MUX_reg(data)                                           (*((volatile unsigned int*)VDTOP_DEBUG_MUX_reg)=data)
#define  get_VDTOP_DEBUG_MUX_reg                                                 (*((volatile unsigned int*)VDTOP_DEBUG_MUX_reg))
#define  VDTOP_DEBUG_MUX_data_blue_mode_cb_shift                                 (24)
#define  VDTOP_DEBUG_MUX_data_blue_mode_cr_shift                                 (16)
#define  VDTOP_DEBUG_MUX_data_blue_mode_y_shift                                  (8)
#define  VDTOP_DEBUG_MUX_debug_test_enable_shift                                 (7)
#define  VDTOP_DEBUG_MUX_debug_test_shift                                        (0)
#define  VDTOP_DEBUG_MUX_data_blue_mode_cb_mask                                  (0xFF000000)
#define  VDTOP_DEBUG_MUX_data_blue_mode_cr_mask                                  (0x00FF0000)
#define  VDTOP_DEBUG_MUX_data_blue_mode_y_mask                                   (0x0000FF00)
#define  VDTOP_DEBUG_MUX_debug_test_enable_mask                                  (0x00000080)
#define  VDTOP_DEBUG_MUX_debug_test_mask                                         (0x0000007F)
#define  VDTOP_DEBUG_MUX_data_blue_mode_cb(data)                                 (0xFF000000&((data)<<24))
#define  VDTOP_DEBUG_MUX_data_blue_mode_cr(data)                                 (0x00FF0000&((data)<<16))
#define  VDTOP_DEBUG_MUX_data_blue_mode_y(data)                                  (0x0000FF00&((data)<<8))
#define  VDTOP_DEBUG_MUX_debug_test_enable(data)                                 (0x00000080&((data)<<7))
#define  VDTOP_DEBUG_MUX_debug_test(data)                                        (0x0000007F&(data))
#define  VDTOP_DEBUG_MUX_get_data_blue_mode_cb(data)                             ((0xFF000000&(data))>>24)
#define  VDTOP_DEBUG_MUX_get_data_blue_mode_cr(data)                             ((0x00FF0000&(data))>>16)
#define  VDTOP_DEBUG_MUX_get_data_blue_mode_y(data)                              ((0x0000FF00&(data))>>8)
#define  VDTOP_DEBUG_MUX_get_debug_test_enable(data)                             ((0x00000080&(data))>>7)
#define  VDTOP_DEBUG_MUX_get_debug_test(data)                                    (0x0000007F&(data))

#define  VDTOP_VIDEO_DEBUG_ANALOG                                               0x1801978C
#define  VDTOP_VIDEO_DEBUG_ANALOG_reg_addr                                       "0xB801978C"
#define  VDTOP_VIDEO_DEBUG_ANALOG_reg                                            0xB801978C
#define  VDTOP_VIDEO_DEBUG_ANALOG_inst_addr                                      "0x01A6"
#define  set_VDTOP_VIDEO_DEBUG_ANALOG_reg(data)                                  (*((volatile unsigned int*)VDTOP_VIDEO_DEBUG_ANALOG_reg)=data)
#define  get_VDTOP_VIDEO_DEBUG_ANALOG_reg                                        (*((volatile unsigned int*)VDTOP_VIDEO_DEBUG_ANALOG_reg))
#define  VDTOP_VIDEO_DEBUG_ANALOG_data_blue_mode_sel_shift                       (9)
#define  VDTOP_VIDEO_DEBUG_ANALOG_data_blue_mode_en_shift                        (8)
#define  VDTOP_VIDEO_DEBUG_ANALOG_muxanalogb_shift                               (4)
#define  VDTOP_VIDEO_DEBUG_ANALOG_muxanaloga_shift                               (0)
#define  VDTOP_VIDEO_DEBUG_ANALOG_data_blue_mode_sel_mask                        (0x00000200)
#define  VDTOP_VIDEO_DEBUG_ANALOG_data_blue_mode_en_mask                         (0x00000100)
#define  VDTOP_VIDEO_DEBUG_ANALOG_muxanalogb_mask                                (0x000000F0)
#define  VDTOP_VIDEO_DEBUG_ANALOG_muxanaloga_mask                                (0x0000000F)
#define  VDTOP_VIDEO_DEBUG_ANALOG_data_blue_mode_sel(data)                       (0x00000200&((data)<<9))
#define  VDTOP_VIDEO_DEBUG_ANALOG_data_blue_mode_en(data)                        (0x00000100&((data)<<8))
#define  VDTOP_VIDEO_DEBUG_ANALOG_muxanalogb(data)                               (0x000000F0&((data)<<4))
#define  VDTOP_VIDEO_DEBUG_ANALOG_muxanaloga(data)                               (0x0000000F&(data))
#define  VDTOP_VIDEO_DEBUG_ANALOG_get_data_blue_mode_sel(data)                   ((0x00000200&(data))>>9)
#define  VDTOP_VIDEO_DEBUG_ANALOG_get_data_blue_mode_en(data)                    ((0x00000100&(data))>>8)
#define  VDTOP_VIDEO_DEBUG_ANALOG_get_muxanalogb(data)                           ((0x000000F0&(data))>>4)
#define  VDTOP_VIDEO_DEBUG_ANALOG_get_muxanaloga(data)                           (0x0000000F&(data))

#define  VDTOP_VIDEO_DEBUG_DIGITAL                                              0x18019790
#define  VDTOP_VIDEO_DEBUG_DIGITAL_reg_addr                                      "0xB8019790"
#define  VDTOP_VIDEO_DEBUG_DIGITAL_reg                                           0xB8019790
#define  VDTOP_VIDEO_DEBUG_DIGITAL_inst_addr                                     "0x01A7"
#define  set_VDTOP_VIDEO_DEBUG_DIGITAL_reg(data)                                 (*((volatile unsigned int*)VDTOP_VIDEO_DEBUG_DIGITAL_reg)=data)
#define  get_VDTOP_VIDEO_DEBUG_DIGITAL_reg                                       (*((volatile unsigned int*)VDTOP_VIDEO_DEBUG_DIGITAL_reg))
#define  VDTOP_VIDEO_DEBUG_DIGITAL_clk_dac_polarity_shift                        (7)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_clk_sct_polarity_shift                        (6)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_debug_test_dac_en_shift                       (4)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_muxdigital_shift                              (0)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_clk_dac_polarity_mask                         (0x00000080)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_clk_sct_polarity_mask                         (0x00000040)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_debug_test_dac_en_mask                        (0x00000010)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_muxdigital_mask                               (0x0000000F)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_clk_dac_polarity(data)                        (0x00000080&((data)<<7))
#define  VDTOP_VIDEO_DEBUG_DIGITAL_clk_sct_polarity(data)                        (0x00000040&((data)<<6))
#define  VDTOP_VIDEO_DEBUG_DIGITAL_debug_test_dac_en(data)                       (0x00000010&((data)<<4))
#define  VDTOP_VIDEO_DEBUG_DIGITAL_muxdigital(data)                              (0x0000000F&(data))
#define  VDTOP_VIDEO_DEBUG_DIGITAL_get_clk_dac_polarity(data)                    ((0x00000080&(data))>>7)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_get_clk_sct_polarity(data)                    ((0x00000040&(data))>>6)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_get_debug_test_dac_en(data)                   ((0x00000010&(data))>>4)
#define  VDTOP_VIDEO_DEBUG_DIGITAL_get_muxdigital(data)                          (0x0000000F&(data))

#define  VDTOP_PATTERN_CONTROL                                                  0x18019794
#define  VDTOP_PATTERN_CONTROL_reg_addr                                          "0xB8019794"
#define  VDTOP_PATTERN_CONTROL_reg                                               0xB8019794
#define  VDTOP_PATTERN_CONTROL_inst_addr                                         "0x01A8"
#define  set_VDTOP_PATTERN_CONTROL_reg(data)                                     (*((volatile unsigned int*)VDTOP_PATTERN_CONTROL_reg)=data)
#define  get_VDTOP_PATTERN_CONTROL_reg                                           (*((volatile unsigned int*)VDTOP_PATTERN_CONTROL_reg))
#define  VDTOP_PATTERN_CONTROL_vd_on_shift                                       (30)
#define  VDTOP_PATTERN_CONTROL_patgen_vline_vactive_end_shift                    (20)
#define  VDTOP_PATTERN_CONTROL_patgen_vline_shift                                (8)
#define  VDTOP_PATTERN_CONTROL_patgen_vline_en_shift                             (7)
#define  VDTOP_PATTERN_CONTROL_fifo_out_pattern_gen_en_shift                     (6)
#define  VDTOP_PATTERN_CONTROL_pattern_gen_scart_en_shift                        (5)
#define  VDTOP_PATTERN_CONTROL_crc_chk_sel_shift                                 (4)
#define  VDTOP_PATTERN_CONTROL_pattern_gen_input_mode_sel_shift                  (2)
#define  VDTOP_PATTERN_CONTROL_pattern_gen_cvbs_mode_shift                       (1)
#define  VDTOP_PATTERN_CONTROL_pattern_generator_enable_shift                    (0)
#define  VDTOP_PATTERN_CONTROL_vd_on_mask                                        (0x40000000)
#define  VDTOP_PATTERN_CONTROL_patgen_vline_vactive_end_mask                     (0x3FF00000)
#define  VDTOP_PATTERN_CONTROL_patgen_vline_mask                                 (0x0003FF00)
#define  VDTOP_PATTERN_CONTROL_patgen_vline_en_mask                              (0x00000080)
#define  VDTOP_PATTERN_CONTROL_fifo_out_pattern_gen_en_mask                      (0x00000040)
#define  VDTOP_PATTERN_CONTROL_pattern_gen_scart_en_mask                         (0x00000020)
#define  VDTOP_PATTERN_CONTROL_crc_chk_sel_mask                                  (0x00000010)
#define  VDTOP_PATTERN_CONTROL_pattern_gen_input_mode_sel_mask                   (0x00000004)
#define  VDTOP_PATTERN_CONTROL_pattern_gen_cvbs_mode_mask                        (0x00000002)
#define  VDTOP_PATTERN_CONTROL_pattern_generator_enable_mask                     (0x00000001)
#define  VDTOP_PATTERN_CONTROL_vd_on(data)                                       (0x40000000&((data)<<30))
#define  VDTOP_PATTERN_CONTROL_patgen_vline_vactive_end(data)                    (0x3FF00000&((data)<<20))
#define  VDTOP_PATTERN_CONTROL_patgen_vline(data)                                (0x0003FF00&((data)<<8))
#define  VDTOP_PATTERN_CONTROL_patgen_vline_en(data)                             (0x00000080&((data)<<7))
#define  VDTOP_PATTERN_CONTROL_fifo_out_pattern_gen_en(data)                     (0x00000040&((data)<<6))
#define  VDTOP_PATTERN_CONTROL_pattern_gen_scart_en(data)                        (0x00000020&((data)<<5))
#define  VDTOP_PATTERN_CONTROL_crc_chk_sel(data)                                 (0x00000010&((data)<<4))
#define  VDTOP_PATTERN_CONTROL_pattern_gen_input_mode_sel(data)                  (0x00000004&((data)<<2))
#define  VDTOP_PATTERN_CONTROL_pattern_gen_cvbs_mode(data)                       (0x00000002&((data)<<1))
#define  VDTOP_PATTERN_CONTROL_pattern_generator_enable(data)                    (0x00000001&(data))
#define  VDTOP_PATTERN_CONTROL_get_vd_on(data)                                   ((0x40000000&(data))>>30)
#define  VDTOP_PATTERN_CONTROL_get_patgen_vline_vactive_end(data)                ((0x3FF00000&(data))>>20)
#define  VDTOP_PATTERN_CONTROL_get_patgen_vline(data)                            ((0x0003FF00&(data))>>8)
#define  VDTOP_PATTERN_CONTROL_get_patgen_vline_en(data)                         ((0x00000080&(data))>>7)
#define  VDTOP_PATTERN_CONTROL_get_fifo_out_pattern_gen_en(data)                 ((0x00000040&(data))>>6)
#define  VDTOP_PATTERN_CONTROL_get_pattern_gen_scart_en(data)                    ((0x00000020&(data))>>5)
#define  VDTOP_PATTERN_CONTROL_get_crc_chk_sel(data)                             ((0x00000010&(data))>>4)
#define  VDTOP_PATTERN_CONTROL_get_pattern_gen_input_mode_sel(data)              ((0x00000004&(data))>>2)
#define  VDTOP_PATTERN_CONTROL_get_pattern_gen_cvbs_mode(data)                   ((0x00000002&(data))>>1)
#define  VDTOP_PATTERN_CONTROL_get_pattern_generator_enable(data)                (0x00000001&(data))

#define  VDTOP_CRC_RESULT3                                                      0x18019798
#define  VDTOP_CRC_RESULT3_reg_addr                                              "0xB8019798"
#define  VDTOP_CRC_RESULT3_reg                                                   0xB8019798
#define  VDTOP_CRC_RESULT3_inst_addr                                             "0x01A9"
#define  set_VDTOP_CRC_RESULT3_reg(data)                                         (*((volatile unsigned int*)VDTOP_CRC_RESULT3_reg)=data)
#define  get_VDTOP_CRC_RESULT3_reg                                               (*((volatile unsigned int*)VDTOP_CRC_RESULT3_reg))
#define  VDTOP_CRC_RESULT3_crc_result_shift                                      (0)
#define  VDTOP_CRC_RESULT3_crc_result_mask                                       (0xFFFFFFFF)
#define  VDTOP_CRC_RESULT3_crc_result(data)                                      (0xFFFFFFFF&(data))
#define  VDTOP_CRC_RESULT3_get_crc_result(data)                                  (0xFFFFFFFF&(data))

#define  VDTOP_PATGEN_CTRL                                                      0x1801979C
#define  VDTOP_PATGEN_CTRL_reg_addr                                              "0xB801979C"
#define  VDTOP_PATGEN_CTRL_reg                                                   0xB801979C
#define  VDTOP_PATGEN_CTRL_inst_addr                                             "0x01AA"
#define  set_VDTOP_PATGEN_CTRL_reg(data)                                         (*((volatile unsigned int*)VDTOP_PATGEN_CTRL_reg)=data)
#define  get_VDTOP_PATGEN_CTRL_reg                                               (*((volatile unsigned int*)VDTOP_PATGEN_CTRL_reg))
#define  VDTOP_PATGEN_CTRL_clk_vdadc_polarity_shift                              (8)
#define  VDTOP_PATGEN_CTRL_clk_polarity_shift                                    (7)
#define  VDTOP_PATGEN_CTRL_patgen_sync_gain_shift                                (4)
#define  VDTOP_PATGEN_CTRL_patgen_burst_gain_shift                               (0)
#define  VDTOP_PATGEN_CTRL_clk_vdadc_polarity_mask                               (0x00000100)
#define  VDTOP_PATGEN_CTRL_clk_polarity_mask                                     (0x00000080)
#define  VDTOP_PATGEN_CTRL_patgen_sync_gain_mask                                 (0x00000070)
#define  VDTOP_PATGEN_CTRL_patgen_burst_gain_mask                                (0x00000007)
#define  VDTOP_PATGEN_CTRL_clk_vdadc_polarity(data)                              (0x00000100&((data)<<8))
#define  VDTOP_PATGEN_CTRL_clk_polarity(data)                                    (0x00000080&((data)<<7))
#define  VDTOP_PATGEN_CTRL_patgen_sync_gain(data)                                (0x00000070&((data)<<4))
#define  VDTOP_PATGEN_CTRL_patgen_burst_gain(data)                               (0x00000007&(data))
#define  VDTOP_PATGEN_CTRL_get_clk_vdadc_polarity(data)                          ((0x00000100&(data))>>8)
#define  VDTOP_PATGEN_CTRL_get_clk_polarity(data)                                ((0x00000080&(data))>>7)
#define  VDTOP_PATGEN_CTRL_get_patgen_sync_gain(data)                            ((0x00000070&(data))>>4)
#define  VDTOP_PATGEN_CTRL_get_patgen_burst_gain(data)                           (0x00000007&(data))

#define  VDTOP_BIST_MODE                                                        0x180197A0
#define  VDTOP_BIST_MODE_reg_addr                                                "0xB80197A0"
#define  VDTOP_BIST_MODE_reg                                                     0xB80197A0
#define  VDTOP_BIST_MODE_inst_addr                                               "0x01AB"
#define  set_VDTOP_BIST_MODE_reg(data)                                           (*((volatile unsigned int*)VDTOP_BIST_MODE_reg)=data)
#define  get_VDTOP_BIST_MODE_reg                                                 (*((volatile unsigned int*)VDTOP_BIST_MODE_reg))
#define  VDTOP_BIST_MODE_bist_mode_out_shift                                     (4)
#define  VDTOP_BIST_MODE_bist_mode_fifo_shift                                    (3)
#define  VDTOP_BIST_MODE_bist_mode_dma_shift                                     (2)
#define  VDTOP_BIST_MODE_bist_mode_27_2_shift                                    (1)
#define  VDTOP_BIST_MODE_bist_mode_27_1_shift                                    (0)
#define  VDTOP_BIST_MODE_bist_mode_out_mask                                      (0x00000010)
#define  VDTOP_BIST_MODE_bist_mode_fifo_mask                                     (0x00000008)
#define  VDTOP_BIST_MODE_bist_mode_dma_mask                                      (0x00000004)
#define  VDTOP_BIST_MODE_bist_mode_27_2_mask                                     (0x00000002)
#define  VDTOP_BIST_MODE_bist_mode_27_1_mask                                     (0x00000001)
#define  VDTOP_BIST_MODE_bist_mode_out(data)                                     (0x00000010&((data)<<4))
#define  VDTOP_BIST_MODE_bist_mode_fifo(data)                                    (0x00000008&((data)<<3))
#define  VDTOP_BIST_MODE_bist_mode_dma(data)                                     (0x00000004&((data)<<2))
#define  VDTOP_BIST_MODE_bist_mode_27_2(data)                                    (0x00000002&((data)<<1))
#define  VDTOP_BIST_MODE_bist_mode_27_1(data)                                    (0x00000001&(data))
#define  VDTOP_BIST_MODE_get_bist_mode_out(data)                                 ((0x00000010&(data))>>4)
#define  VDTOP_BIST_MODE_get_bist_mode_fifo(data)                                ((0x00000008&(data))>>3)
#define  VDTOP_BIST_MODE_get_bist_mode_dma(data)                                 ((0x00000004&(data))>>2)
#define  VDTOP_BIST_MODE_get_bist_mode_27_2(data)                                ((0x00000002&(data))>>1)
#define  VDTOP_BIST_MODE_get_bist_mode_27_1(data)                                (0x00000001&(data))

#define  VDTOP_BIST_DONE                                                        0x180197A4
#define  VDTOP_BIST_DONE_reg_addr                                                "0xB80197A4"
#define  VDTOP_BIST_DONE_reg                                                     0xB80197A4
#define  VDTOP_BIST_DONE_inst_addr                                               "0x01AC"
#define  set_VDTOP_BIST_DONE_reg(data)                                           (*((volatile unsigned int*)VDTOP_BIST_DONE_reg)=data)
#define  get_VDTOP_BIST_DONE_reg                                                 (*((volatile unsigned int*)VDTOP_BIST_DONE_reg))
#define  VDTOP_BIST_DONE_bist_done_out_shift                                     (4)
#define  VDTOP_BIST_DONE_bist_done_fifo_shift                                    (3)
#define  VDTOP_BIST_DONE_bist_done_dma_shift                                     (2)
#define  VDTOP_BIST_DONE_bist_done_27_2_shift                                    (1)
#define  VDTOP_BIST_DONE_bist_done_27_1_shift                                    (0)
#define  VDTOP_BIST_DONE_bist_done_out_mask                                      (0x00000010)
#define  VDTOP_BIST_DONE_bist_done_fifo_mask                                     (0x00000008)
#define  VDTOP_BIST_DONE_bist_done_dma_mask                                      (0x00000004)
#define  VDTOP_BIST_DONE_bist_done_27_2_mask                                     (0x00000002)
#define  VDTOP_BIST_DONE_bist_done_27_1_mask                                     (0x00000001)
#define  VDTOP_BIST_DONE_bist_done_out(data)                                     (0x00000010&((data)<<4))
#define  VDTOP_BIST_DONE_bist_done_fifo(data)                                    (0x00000008&((data)<<3))
#define  VDTOP_BIST_DONE_bist_done_dma(data)                                     (0x00000004&((data)<<2))
#define  VDTOP_BIST_DONE_bist_done_27_2(data)                                    (0x00000002&((data)<<1))
#define  VDTOP_BIST_DONE_bist_done_27_1(data)                                    (0x00000001&(data))
#define  VDTOP_BIST_DONE_get_bist_done_out(data)                                 ((0x00000010&(data))>>4)
#define  VDTOP_BIST_DONE_get_bist_done_fifo(data)                                ((0x00000008&(data))>>3)
#define  VDTOP_BIST_DONE_get_bist_done_dma(data)                                 ((0x00000004&(data))>>2)
#define  VDTOP_BIST_DONE_get_bist_done_27_2(data)                                ((0x00000002&(data))>>1)
#define  VDTOP_BIST_DONE_get_bist_done_27_1(data)                                (0x00000001&(data))

#define  VDTOP_BIST_FAIL                                                        0x180197A8
#define  VDTOP_BIST_FAIL_reg_addr                                                "0xB80197A8"
#define  VDTOP_BIST_FAIL_reg                                                     0xB80197A8
#define  VDTOP_BIST_FAIL_inst_addr                                               "0x01AD"
#define  set_VDTOP_BIST_FAIL_reg(data)                                           (*((volatile unsigned int*)VDTOP_BIST_FAIL_reg)=data)
#define  get_VDTOP_BIST_FAIL_reg                                                 (*((volatile unsigned int*)VDTOP_BIST_FAIL_reg))
#define  VDTOP_BIST_FAIL_bist_fail_out_shift                                     (4)
#define  VDTOP_BIST_FAIL_bist_fail_fifo_shift                                    (3)
#define  VDTOP_BIST_FAIL_bist_fail_dma_shift                                     (2)
#define  VDTOP_BIST_FAIL_bist_fail_27_2_shift                                    (1)
#define  VDTOP_BIST_FAIL_bist_fail_27_1_shift                                    (0)
#define  VDTOP_BIST_FAIL_bist_fail_out_mask                                      (0x00000010)
#define  VDTOP_BIST_FAIL_bist_fail_fifo_mask                                     (0x00000008)
#define  VDTOP_BIST_FAIL_bist_fail_dma_mask                                      (0x00000004)
#define  VDTOP_BIST_FAIL_bist_fail_27_2_mask                                     (0x00000002)
#define  VDTOP_BIST_FAIL_bist_fail_27_1_mask                                     (0x00000001)
#define  VDTOP_BIST_FAIL_bist_fail_out(data)                                     (0x00000010&((data)<<4))
#define  VDTOP_BIST_FAIL_bist_fail_fifo(data)                                    (0x00000008&((data)<<3))
#define  VDTOP_BIST_FAIL_bist_fail_dma(data)                                     (0x00000004&((data)<<2))
#define  VDTOP_BIST_FAIL_bist_fail_27_2(data)                                    (0x00000002&((data)<<1))
#define  VDTOP_BIST_FAIL_bist_fail_27_1(data)                                    (0x00000001&(data))
#define  VDTOP_BIST_FAIL_get_bist_fail_out(data)                                 ((0x00000010&(data))>>4)
#define  VDTOP_BIST_FAIL_get_bist_fail_fifo(data)                                ((0x00000008&(data))>>3)
#define  VDTOP_BIST_FAIL_get_bist_fail_dma(data)                                 ((0x00000004&(data))>>2)
#define  VDTOP_BIST_FAIL_get_bist_fail_27_2(data)                                ((0x00000002&(data))>>1)
#define  VDTOP_BIST_FAIL_get_bist_fail_27_1(data)                                (0x00000001&(data))

#define  VDTOP_BIST_DRF_MODE                                                    0x180197AC
#define  VDTOP_BIST_DRF_MODE_reg_addr                                            "0xB80197AC"
#define  VDTOP_BIST_DRF_MODE_reg                                                 0xB80197AC
#define  VDTOP_BIST_DRF_MODE_inst_addr                                           "0x01AE"
#define  set_VDTOP_BIST_DRF_MODE_reg(data)                                       (*((volatile unsigned int*)VDTOP_BIST_DRF_MODE_reg)=data)
#define  get_VDTOP_BIST_DRF_MODE_reg                                             (*((volatile unsigned int*)VDTOP_BIST_DRF_MODE_reg))
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_out_shift                             (4)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_fifo_shift                            (3)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_dma_shift                             (2)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_27_2_shift                            (1)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_27_1_shift                            (0)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_out_mask                              (0x00000010)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_fifo_mask                             (0x00000008)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_dma_mask                              (0x00000004)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_27_2_mask                             (0x00000002)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_27_1_mask                             (0x00000001)
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_out(data)                             (0x00000010&((data)<<4))
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_fifo(data)                            (0x00000008&((data)<<3))
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_dma(data)                             (0x00000004&((data)<<2))
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_27_2(data)                            (0x00000002&((data)<<1))
#define  VDTOP_BIST_DRF_MODE_bist_drf_mode_27_1(data)                            (0x00000001&(data))
#define  VDTOP_BIST_DRF_MODE_get_bist_drf_mode_out(data)                         ((0x00000010&(data))>>4)
#define  VDTOP_BIST_DRF_MODE_get_bist_drf_mode_fifo(data)                        ((0x00000008&(data))>>3)
#define  VDTOP_BIST_DRF_MODE_get_bist_drf_mode_dma(data)                         ((0x00000004&(data))>>2)
#define  VDTOP_BIST_DRF_MODE_get_bist_drf_mode_27_2(data)                        ((0x00000002&(data))>>1)
#define  VDTOP_BIST_DRF_MODE_get_bist_drf_mode_27_1(data)                        (0x00000001&(data))

#define  VDTOP_BIST_DRF_RESUME                                                  0x180197B0
#define  VDTOP_BIST_DRF_RESUME_reg_addr                                          "0xB80197B0"
#define  VDTOP_BIST_DRF_RESUME_reg                                               0xB80197B0
#define  VDTOP_BIST_DRF_RESUME_inst_addr                                         "0x01AF"
#define  set_VDTOP_BIST_DRF_RESUME_reg(data)                                     (*((volatile unsigned int*)VDTOP_BIST_DRF_RESUME_reg)=data)
#define  get_VDTOP_BIST_DRF_RESUME_reg                                           (*((volatile unsigned int*)VDTOP_BIST_DRF_RESUME_reg))
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_out_shift                         (4)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_fifo_shift                        (3)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_dma_shift                         (2)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_27_2_shift                        (1)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_27_1_shift                        (0)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_out_mask                          (0x00000010)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_fifo_mask                         (0x00000008)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_dma_mask                          (0x00000004)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_27_2_mask                         (0x00000002)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_27_1_mask                         (0x00000001)
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_out(data)                         (0x00000010&((data)<<4))
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_fifo(data)                        (0x00000008&((data)<<3))
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_dma(data)                         (0x00000004&((data)<<2))
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_27_2(data)                        (0x00000002&((data)<<1))
#define  VDTOP_BIST_DRF_RESUME_bist_drf_resume_27_1(data)                        (0x00000001&(data))
#define  VDTOP_BIST_DRF_RESUME_get_bist_drf_resume_out(data)                     ((0x00000010&(data))>>4)
#define  VDTOP_BIST_DRF_RESUME_get_bist_drf_resume_fifo(data)                    ((0x00000008&(data))>>3)
#define  VDTOP_BIST_DRF_RESUME_get_bist_drf_resume_dma(data)                     ((0x00000004&(data))>>2)
#define  VDTOP_BIST_DRF_RESUME_get_bist_drf_resume_27_2(data)                    ((0x00000002&(data))>>1)
#define  VDTOP_BIST_DRF_RESUME_get_bist_drf_resume_27_1(data)                    (0x00000001&(data))

#define  VDTOP_BIST_DRF_DONE                                                    0x180197B4
#define  VDTOP_BIST_DRF_DONE_reg_addr                                            "0xB80197B4"
#define  VDTOP_BIST_DRF_DONE_reg                                                 0xB80197B4
#define  VDTOP_BIST_DRF_DONE_inst_addr                                           "0x01B0"
#define  set_VDTOP_BIST_DRF_DONE_reg(data)                                       (*((volatile unsigned int*)VDTOP_BIST_DRF_DONE_reg)=data)
#define  get_VDTOP_BIST_DRF_DONE_reg                                             (*((volatile unsigned int*)VDTOP_BIST_DRF_DONE_reg))
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_out_shift                             (4)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_fifo_shift                            (3)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_dma_shift                             (2)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_27_2_shift                            (1)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_27_1_shift                            (0)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_out_mask                              (0x00000010)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_fifo_mask                             (0x00000008)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_dma_mask                              (0x00000004)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_27_2_mask                             (0x00000002)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_27_1_mask                             (0x00000001)
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_out(data)                             (0x00000010&((data)<<4))
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_fifo(data)                            (0x00000008&((data)<<3))
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_dma(data)                             (0x00000004&((data)<<2))
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_27_2(data)                            (0x00000002&((data)<<1))
#define  VDTOP_BIST_DRF_DONE_bist_drf_done_27_1(data)                            (0x00000001&(data))
#define  VDTOP_BIST_DRF_DONE_get_bist_drf_done_out(data)                         ((0x00000010&(data))>>4)
#define  VDTOP_BIST_DRF_DONE_get_bist_drf_done_fifo(data)                        ((0x00000008&(data))>>3)
#define  VDTOP_BIST_DRF_DONE_get_bist_drf_done_dma(data)                         ((0x00000004&(data))>>2)
#define  VDTOP_BIST_DRF_DONE_get_bist_drf_done_27_2(data)                        ((0x00000002&(data))>>1)
#define  VDTOP_BIST_DRF_DONE_get_bist_drf_done_27_1(data)                        (0x00000001&(data))

#define  VDTOP_BIST_DRF_PAUSE                                                   0x180197B8
#define  VDTOP_BIST_DRF_PAUSE_reg_addr                                           "0xB80197B8"
#define  VDTOP_BIST_DRF_PAUSE_reg                                                0xB80197B8
#define  VDTOP_BIST_DRF_PAUSE_inst_addr                                          "0x01B1"
#define  set_VDTOP_BIST_DRF_PAUSE_reg(data)                                      (*((volatile unsigned int*)VDTOP_BIST_DRF_PAUSE_reg)=data)
#define  get_VDTOP_BIST_DRF_PAUSE_reg                                            (*((volatile unsigned int*)VDTOP_BIST_DRF_PAUSE_reg))
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_out_shift                           (4)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_fifo_shift                          (3)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_dma_shift                           (2)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_27_2_shift                          (1)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_27_1_shift                          (0)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_out_mask                            (0x00000010)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_fifo_mask                           (0x00000008)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_dma_mask                            (0x00000004)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_27_2_mask                           (0x00000002)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_27_1_mask                           (0x00000001)
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_out(data)                           (0x00000010&((data)<<4))
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_fifo(data)                          (0x00000008&((data)<<3))
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_dma(data)                           (0x00000004&((data)<<2))
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_27_2(data)                          (0x00000002&((data)<<1))
#define  VDTOP_BIST_DRF_PAUSE_bist_drf_pause_27_1(data)                          (0x00000001&(data))
#define  VDTOP_BIST_DRF_PAUSE_get_bist_drf_pause_out(data)                       ((0x00000010&(data))>>4)
#define  VDTOP_BIST_DRF_PAUSE_get_bist_drf_pause_fifo(data)                      ((0x00000008&(data))>>3)
#define  VDTOP_BIST_DRF_PAUSE_get_bist_drf_pause_dma(data)                       ((0x00000004&(data))>>2)
#define  VDTOP_BIST_DRF_PAUSE_get_bist_drf_pause_27_2(data)                      ((0x00000002&(data))>>1)
#define  VDTOP_BIST_DRF_PAUSE_get_bist_drf_pause_27_1(data)                      (0x00000001&(data))

#define  VDTOP_BIST_DRF_FAIL                                                    0x180197BC
#define  VDTOP_BIST_DRF_FAIL_reg_addr                                            "0xB80197BC"
#define  VDTOP_BIST_DRF_FAIL_reg                                                 0xB80197BC
#define  VDTOP_BIST_DRF_FAIL_inst_addr                                           "0x01B2"
#define  set_VDTOP_BIST_DRF_FAIL_reg(data)                                       (*((volatile unsigned int*)VDTOP_BIST_DRF_FAIL_reg)=data)
#define  get_VDTOP_BIST_DRF_FAIL_reg                                             (*((volatile unsigned int*)VDTOP_BIST_DRF_FAIL_reg))
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_out_shift                             (4)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_fifo_shift                            (3)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_dma_shift                             (2)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_27_2_shift                            (1)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_27_1_shift                            (0)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_out_mask                              (0x00000010)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_fifo_mask                             (0x00000008)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_dma_mask                              (0x00000004)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_27_2_mask                             (0x00000002)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_27_1_mask                             (0x00000001)
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_out(data)                             (0x00000010&((data)<<4))
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_fifo(data)                            (0x00000008&((data)<<3))
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_dma(data)                             (0x00000004&((data)<<2))
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_27_2(data)                            (0x00000002&((data)<<1))
#define  VDTOP_BIST_DRF_FAIL_bist_drf_fail_27_1(data)                            (0x00000001&(data))
#define  VDTOP_BIST_DRF_FAIL_get_bist_drf_fail_out(data)                         ((0x00000010&(data))>>4)
#define  VDTOP_BIST_DRF_FAIL_get_bist_drf_fail_fifo(data)                        ((0x00000008&(data))>>3)
#define  VDTOP_BIST_DRF_FAIL_get_bist_drf_fail_dma(data)                         ((0x00000004&(data))>>2)
#define  VDTOP_BIST_DRF_FAIL_get_bist_drf_fail_27_2(data)                        ((0x00000002&(data))>>1)
#define  VDTOP_BIST_DRF_FAIL_get_bist_drf_fail_27_1(data)                        (0x00000001&(data))

#define  VDTOP_BIST_FAIL_27_1_2                                                 0x180197C0
#define  VDTOP_BIST_FAIL_27_1_2_reg_addr                                         "0xB80197C0"
#define  VDTOP_BIST_FAIL_27_1_2_reg                                              0xB80197C0
#define  VDTOP_BIST_FAIL_27_1_2_inst_addr                                        "0x01B3"
#define  set_VDTOP_BIST_FAIL_27_1_2_reg(data)                                    (*((volatile unsigned int*)VDTOP_BIST_FAIL_27_1_2_reg)=data)
#define  get_VDTOP_BIST_FAIL_27_1_2_reg                                          (*((volatile unsigned int*)VDTOP_BIST_FAIL_27_1_2_reg))
#define  VDTOP_BIST_FAIL_27_1_2_bist_mem_fail_27_2_shift                         (10)
#define  VDTOP_BIST_FAIL_27_1_2_bist_mem_fail_27_1_shift                         (0)
#define  VDTOP_BIST_FAIL_27_1_2_bist_mem_fail_27_2_mask                          (0x0003FC00)
#define  VDTOP_BIST_FAIL_27_1_2_bist_mem_fail_27_1_mask                          (0x000003FF)
#define  VDTOP_BIST_FAIL_27_1_2_bist_mem_fail_27_2(data)                         (0x0003FC00&((data)<<10))
#define  VDTOP_BIST_FAIL_27_1_2_bist_mem_fail_27_1(data)                         (0x000003FF&(data))
#define  VDTOP_BIST_FAIL_27_1_2_get_bist_mem_fail_27_2(data)                     ((0x0003FC00&(data))>>10)
#define  VDTOP_BIST_FAIL_27_1_2_get_bist_mem_fail_27_1(data)                     (0x000003FF&(data))

#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO                                           0x180197C4
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_reg_addr                                   "0xB80197C4"
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_reg                                        0xB80197C4
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_inst_addr                                  "0x01B4"
#define  set_VDTOP_BIST_FAIL_DMA_OUT_FIFO_reg(data)                              (*((volatile unsigned int*)VDTOP_BIST_FAIL_DMA_OUT_FIFO_reg)=data)
#define  get_VDTOP_BIST_FAIL_DMA_OUT_FIFO_reg                                    (*((volatile unsigned int*)VDTOP_BIST_FAIL_DMA_OUT_FIFO_reg))
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_bist_mem_fail_out_shift                    (6)
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_bist_mem_fail_fifo_shift                   (5)
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_bist_mem_fail_dma_shift                    (0)
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_bist_mem_fail_out_mask                     (0x000003C0)
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_bist_mem_fail_fifo_mask                    (0x00000020)
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_bist_mem_fail_dma_mask                     (0x0000001F)
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_bist_mem_fail_out(data)                    (0x000003C0&((data)<<6))
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_bist_mem_fail_fifo(data)                   (0x00000020&((data)<<5))
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_bist_mem_fail_dma(data)                    (0x0000001F&(data))
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_get_bist_mem_fail_out(data)                ((0x000003C0&(data))>>6)
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_get_bist_mem_fail_fifo(data)               ((0x00000020&(data))>>5)
#define  VDTOP_BIST_FAIL_DMA_OUT_FIFO_get_bist_mem_fail_dma(data)                (0x0000001F&(data))

#define  VDTOP_BIST_DRF_FAIL_27_1_2                                             0x180197C8
#define  VDTOP_BIST_DRF_FAIL_27_1_2_reg_addr                                     "0xB80197C8"
#define  VDTOP_BIST_DRF_FAIL_27_1_2_reg                                          0xB80197C8
#define  VDTOP_BIST_DRF_FAIL_27_1_2_inst_addr                                    "0x01B5"
#define  set_VDTOP_BIST_DRF_FAIL_27_1_2_reg(data)                                (*((volatile unsigned int*)VDTOP_BIST_DRF_FAIL_27_1_2_reg)=data)
#define  get_VDTOP_BIST_DRF_FAIL_27_1_2_reg                                      (*((volatile unsigned int*)VDTOP_BIST_DRF_FAIL_27_1_2_reg))
#define  VDTOP_BIST_DRF_FAIL_27_1_2_bist_drf_mem_fail_27_2_shift                 (10)
#define  VDTOP_BIST_DRF_FAIL_27_1_2_bist_drf_mem_fail_27_1_shift                 (0)
#define  VDTOP_BIST_DRF_FAIL_27_1_2_bist_drf_mem_fail_27_2_mask                  (0x0003FC00)
#define  VDTOP_BIST_DRF_FAIL_27_1_2_bist_drf_mem_fail_27_1_mask                  (0x000003FF)
#define  VDTOP_BIST_DRF_FAIL_27_1_2_bist_drf_mem_fail_27_2(data)                 (0x0003FC00&((data)<<10))
#define  VDTOP_BIST_DRF_FAIL_27_1_2_bist_drf_mem_fail_27_1(data)                 (0x000003FF&(data))
#define  VDTOP_BIST_DRF_FAIL_27_1_2_get_bist_drf_mem_fail_27_2(data)             ((0x0003FC00&(data))>>10)
#define  VDTOP_BIST_DRF_FAIL_27_1_2_get_bist_drf_mem_fail_27_1(data)             (0x000003FF&(data))

#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO                                       0x180197CC
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_reg_addr                               "0xB80197CC"
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_reg                                    0xB80197CC
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_inst_addr                              "0x01B6"
#define  set_VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_reg(data)                          (*((volatile unsigned int*)VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_reg)=data)
#define  get_VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_reg                                (*((volatile unsigned int*)VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_reg))
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_bist_drf_mem_fail_out_shift            (6)
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_bist_drf_mem_fail_fifo_shift           (5)
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_bist_drf_mem_fail_dma_shift            (0)
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_bist_drf_mem_fail_out_mask             (0x000003C0)
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_bist_drf_mem_fail_fifo_mask            (0x00000020)
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_bist_drf_mem_fail_dma_mask             (0x0000001F)
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_bist_drf_mem_fail_out(data)            (0x000003C0&((data)<<6))
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_bist_drf_mem_fail_fifo(data)           (0x00000020&((data)<<5))
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_bist_drf_mem_fail_dma(data)            (0x0000001F&(data))
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_get_bist_drf_mem_fail_out(data)        ((0x000003C0&(data))>>6)
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_get_bist_drf_mem_fail_fifo(data)       ((0x00000020&(data))>>5)
#define  VDTOP_BIST_DRF_FAIL_DMA_OUT_FIFO_get_bist_drf_mem_fail_dma(data)        (0x0000001F&(data))

#define  VDTOP_BIST_TEST_27_1_2                                                 0x180197D0
#define  VDTOP_BIST_TEST_27_1_2_reg_addr                                         "0xB80197D0"
#define  VDTOP_BIST_TEST_27_1_2_reg                                              0xB80197D0
#define  VDTOP_BIST_TEST_27_1_2_inst_addr                                        "0x01B7"
#define  set_VDTOP_BIST_TEST_27_1_2_reg(data)                                    (*((volatile unsigned int*)VDTOP_BIST_TEST_27_1_2_reg)=data)
#define  get_VDTOP_BIST_TEST_27_1_2_reg                                          (*((volatile unsigned int*)VDTOP_BIST_TEST_27_1_2_reg))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_7_shift                          (17)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_6_shift                          (16)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_5_shift                          (15)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_4_shift                          (14)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_3_shift                          (13)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_2_shift                          (12)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_1_shift                          (11)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_0_shift                          (10)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_9_shift                          (9)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_8_shift                          (8)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_7_shift                          (7)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_6_shift                          (6)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_5_shift                          (5)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_4_shift                          (4)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_3_shift                          (3)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_2_shift                          (2)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_1_shift                          (1)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_0_shift                          (0)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_7_mask                           (0x00020000)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_6_mask                           (0x00010000)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_5_mask                           (0x00008000)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_4_mask                           (0x00004000)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_3_mask                           (0x00002000)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_2_mask                           (0x00001000)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_1_mask                           (0x00000800)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_0_mask                           (0x00000400)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_9_mask                           (0x00000200)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_8_mask                           (0x00000100)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_7_mask                           (0x00000080)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_6_mask                           (0x00000040)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_5_mask                           (0x00000020)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_4_mask                           (0x00000010)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_3_mask                           (0x00000008)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_2_mask                           (0x00000004)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_1_mask                           (0x00000002)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_0_mask                           (0x00000001)
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_7(data)                          (0x00020000&((data)<<17))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_6(data)                          (0x00010000&((data)<<16))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_5(data)                          (0x00008000&((data)<<15))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_4(data)                          (0x00004000&((data)<<14))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_3(data)                          (0x00002000&((data)<<13))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_2(data)                          (0x00001000&((data)<<12))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_1(data)                          (0x00000800&((data)<<11))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_2_0(data)                          (0x00000400&((data)<<10))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_9(data)                          (0x00000200&((data)<<9))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_8(data)                          (0x00000100&((data)<<8))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_7(data)                          (0x00000080&((data)<<7))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_6(data)                          (0x00000040&((data)<<6))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_5(data)                          (0x00000020&((data)<<5))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_4(data)                          (0x00000010&((data)<<4))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_3(data)                          (0x00000008&((data)<<3))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_2(data)                          (0x00000004&((data)<<2))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_1(data)                          (0x00000002&((data)<<1))
#define  VDTOP_BIST_TEST_27_1_2_bist_test1_27_1_0(data)                          (0x00000001&(data))
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_2_7(data)                      ((0x00020000&(data))>>17)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_2_6(data)                      ((0x00010000&(data))>>16)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_2_5(data)                      ((0x00008000&(data))>>15)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_2_4(data)                      ((0x00004000&(data))>>14)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_2_3(data)                      ((0x00002000&(data))>>13)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_2_2(data)                      ((0x00001000&(data))>>12)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_2_1(data)                      ((0x00000800&(data))>>11)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_2_0(data)                      ((0x00000400&(data))>>10)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_9(data)                      ((0x00000200&(data))>>9)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_8(data)                      ((0x00000100&(data))>>8)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_7(data)                      ((0x00000080&(data))>>7)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_6(data)                      ((0x00000040&(data))>>6)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_5(data)                      ((0x00000020&(data))>>5)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_4(data)                      ((0x00000010&(data))>>4)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_3(data)                      ((0x00000008&(data))>>3)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_2(data)                      ((0x00000004&(data))>>2)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_1(data)                      ((0x00000002&(data))>>1)
#define  VDTOP_BIST_TEST_27_1_2_get_bist_test1_27_1_0(data)                      (0x00000001&(data))

#define  VDTOP_BIST_TEST_DMA_OUT_FIFO                                           0x180197D4
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_reg_addr                                   "0xB80197D4"
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_reg                                        0xB80197D4
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_inst_addr                                  "0x01B8"
#define  set_VDTOP_BIST_TEST_DMA_OUT_FIFO_reg(data)                              (*((volatile unsigned int*)VDTOP_BIST_TEST_DMA_OUT_FIFO_reg)=data)
#define  get_VDTOP_BIST_TEST_DMA_OUT_FIFO_reg                                    (*((volatile unsigned int*)VDTOP_BIST_TEST_DMA_OUT_FIFO_reg))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_3_shift                     (15)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_2_shift                     (14)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_1_shift                     (13)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_0_shift                     (12)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_4_shift              (11)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_4_shift              (10)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_3_shift              (9)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_3_shift              (8)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_2_shift              (7)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_2_shift              (6)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_1_shift              (5)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_1_shift              (4)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_0_shift              (3)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_0_shift              (2)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_fifo_test1b_0_shift             (1)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_fifo_test1a_0_shift             (0)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_3_mask                      (0x00008000)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_2_mask                      (0x00004000)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_1_mask                      (0x00002000)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_0_mask                      (0x00001000)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_4_mask               (0x00000800)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_4_mask               (0x00000400)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_3_mask               (0x00000200)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_3_mask               (0x00000100)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_2_mask               (0x00000080)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_2_mask               (0x00000040)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_1_mask               (0x00000020)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_1_mask               (0x00000010)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_0_mask               (0x00000008)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_0_mask               (0x00000004)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_fifo_test1b_0_mask              (0x00000002)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_fifo_test1a_0_mask              (0x00000001)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_3(data)                     (0x00008000&((data)<<15))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_2(data)                     (0x00004000&((data)<<14))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_1(data)                     (0x00002000&((data)<<13))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_out_0(data)                     (0x00001000&((data)<<12))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_4(data)              (0x00000800&((data)<<11))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_4(data)              (0x00000400&((data)<<10))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_3(data)              (0x00000200&((data)<<9))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_3(data)              (0x00000100&((data)<<8))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_2(data)              (0x00000080&((data)<<7))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_2(data)              (0x00000040&((data)<<6))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_1(data)              (0x00000020&((data)<<5))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_1(data)              (0x00000010&((data)<<4))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1b_0(data)              (0x00000008&((data)<<3))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_dma_test1a_0(data)              (0x00000004&((data)<<2))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_fifo_test1b_0(data)             (0x00000002&((data)<<1))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_bist_test1_fifo_test1a_0(data)             (0x00000001&(data))
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_out_3(data)                 ((0x00008000&(data))>>15)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_out_2(data)                 ((0x00004000&(data))>>14)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_out_1(data)                 ((0x00002000&(data))>>13)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_out_0(data)                 ((0x00001000&(data))>>12)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1b_4(data)          ((0x00000800&(data))>>11)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1a_4(data)          ((0x00000400&(data))>>10)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1b_3(data)          ((0x00000200&(data))>>9)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1a_3(data)          ((0x00000100&(data))>>8)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1b_2(data)          ((0x00000080&(data))>>7)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1a_2(data)          ((0x00000040&(data))>>6)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1b_1(data)          ((0x00000020&(data))>>5)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1a_1(data)          ((0x00000010&(data))>>4)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1b_0(data)          ((0x00000008&(data))>>3)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_dma_test1a_0(data)          ((0x00000004&(data))>>2)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_fifo_test1b_0(data)         ((0x00000002&(data))>>1)
#define  VDTOP_BIST_TEST_DMA_OUT_FIFO_get_bist_test1_fifo_test1a_0(data)         (0x00000001&(data))

#define  VDTOP_BIST_DVSE_DVS                                                    0x180197E8
#define  VDTOP_BIST_DVSE_DVS_reg_addr                                            "0xB80197E8"
#define  VDTOP_BIST_DVSE_DVS_reg                                                 0xB80197E8
#define  VDTOP_BIST_DVSE_DVS_inst_addr                                           "0x01B9"
#define  set_VDTOP_BIST_DVSE_DVS_reg(data)                                       (*((volatile unsigned int*)VDTOP_BIST_DVSE_DVS_reg)=data)
#define  get_VDTOP_BIST_DVSE_DVS_reg                                             (*((volatile unsigned int*)VDTOP_BIST_DVSE_DVS_reg))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_out_shift                                 (21)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_out_shift                                (20)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_fifo_shift                                (16)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_fifo_shift                               (15)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_dma_shift                                 (11)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_dma_shift                                (10)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_27_2_shift                                (6)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_27_2_shift                               (5)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_27_1_shift                                (1)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_27_1_shift                               (0)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_out_mask                                  (0x01E00000)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_out_mask                                 (0x00100000)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_fifo_mask                                 (0x000F0000)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_fifo_mask                                (0x00008000)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_dma_mask                                  (0x00007800)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_dma_mask                                 (0x00000400)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_27_2_mask                                 (0x000003C0)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_27_2_mask                                (0x00000020)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_27_1_mask                                 (0x0000001E)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_27_1_mask                                (0x00000001)
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_out(data)                                 (0x01E00000&((data)<<21))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_out(data)                                (0x00100000&((data)<<20))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_fifo(data)                                (0x000F0000&((data)<<16))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_fifo(data)                               (0x00008000&((data)<<15))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_dma(data)                                 (0x00007800&((data)<<11))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_dma(data)                                (0x00000400&((data)<<10))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_27_2(data)                                (0x000003C0&((data)<<6))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_27_2(data)                               (0x00000020&((data)<<5))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvs_27_1(data)                                (0x0000001E&((data)<<1))
#define  VDTOP_BIST_DVSE_DVS_mbist_dvse_27_1(data)                               (0x00000001&(data))
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvs_out(data)                             ((0x01E00000&(data))>>21)
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvse_out(data)                            ((0x00100000&(data))>>20)
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvs_fifo(data)                            ((0x000F0000&(data))>>16)
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvse_fifo(data)                           ((0x00008000&(data))>>15)
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvs_dma(data)                             ((0x00007800&(data))>>11)
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvse_dma(data)                            ((0x00000400&(data))>>10)
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvs_27_2(data)                            ((0x000003C0&(data))>>6)
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvse_27_2(data)                           ((0x00000020&(data))>>5)
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvs_27_1(data)                            ((0x0000001E&(data))>>1)
#define  VDTOP_BIST_DVSE_DVS_get_mbist_dvse_27_1(data)                           (0x00000001&(data))

#define  VDTOP_BIST_DVSE_DVS2                                                   0x180197EC
#define  VDTOP_BIST_DVSE_DVS2_reg_addr                                           "0xB80197EC"
#define  VDTOP_BIST_DVSE_DVS2_reg                                                0xB80197EC
#define  VDTOP_BIST_DVSE_DVS2_inst_addr                                          "0x01BA"
#define  set_VDTOP_BIST_DVSE_DVS2_reg(data)                                      (*((volatile unsigned int*)VDTOP_BIST_DVSE_DVS2_reg)=data)
#define  get_VDTOP_BIST_DVSE_DVS2_reg                                            (*((volatile unsigned int*)VDTOP_BIST_DVSE_DVS2_reg))
#define  VDTOP_BIST_DVSE_DVS2_mbist_ls_cntl_shift                                (12)
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvs_fifo_2_shift                             (6)
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvse_fifo_2_shift                            (5)
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvs_dma_2_shift                              (1)
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvse_dma_2_shift                             (0)
#define  VDTOP_BIST_DVSE_DVS2_mbist_ls_cntl_mask                                 (0x00001000)
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvs_fifo_2_mask                              (0x000003C0)
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvse_fifo_2_mask                             (0x00000020)
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvs_dma_2_mask                               (0x0000001E)
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvse_dma_2_mask                              (0x00000001)
#define  VDTOP_BIST_DVSE_DVS2_mbist_ls_cntl(data)                                (0x00001000&((data)<<12))
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvs_fifo_2(data)                             (0x000003C0&((data)<<6))
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvse_fifo_2(data)                            (0x00000020&((data)<<5))
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvs_dma_2(data)                              (0x0000001E&((data)<<1))
#define  VDTOP_BIST_DVSE_DVS2_mbist_dvse_dma_2(data)                             (0x00000001&(data))
#define  VDTOP_BIST_DVSE_DVS2_get_mbist_ls_cntl(data)                            ((0x00001000&(data))>>12)
#define  VDTOP_BIST_DVSE_DVS2_get_mbist_dvs_fifo_2(data)                         ((0x000003C0&(data))>>6)
#define  VDTOP_BIST_DVSE_DVS2_get_mbist_dvse_fifo_2(data)                        ((0x00000020&(data))>>5)
#define  VDTOP_BIST_DVSE_DVS2_get_mbist_dvs_dma_2(data)                          ((0x0000001E&(data))>>1)
#define  VDTOP_BIST_DVSE_DVS2_get_mbist_dvse_dma_2(data)                         (0x00000001&(data))

#define  VDTOP_YCBCR_MONITER_CTRL                                               0x180197F0
#define  VDTOP_YCBCR_MONITER_CTRL_reg_addr                                       "0xB80197F0"
#define  VDTOP_YCBCR_MONITER_CTRL_reg                                            0xB80197F0
#define  VDTOP_YCBCR_MONITER_CTRL_inst_addr                                      "0x01BB"
#define  set_VDTOP_YCBCR_MONITER_CTRL_reg(data)                                  (*((volatile unsigned int*)VDTOP_YCBCR_MONITER_CTRL_reg)=data)
#define  get_VDTOP_YCBCR_MONITER_CTRL_reg                                        (*((volatile unsigned int*)VDTOP_YCBCR_MONITER_CTRL_reg))
#define  VDTOP_YCBCR_MONITER_CTRL_ycbcr_moniter_en_shift                         (31)
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_field_shift                            (30)
#define  VDTOP_YCBCR_MONITER_CTRL_vstate_non_eq_3_flag_shift                     (29)
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_size_shift                             (25)
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_v_addr_shift                           (16)
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_h_addr_shift                           (0)
#define  VDTOP_YCBCR_MONITER_CTRL_ycbcr_moniter_en_mask                          (0x80000000)
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_field_mask                             (0x40000000)
#define  VDTOP_YCBCR_MONITER_CTRL_vstate_non_eq_3_flag_mask                      (0x20000000)
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_size_mask                              (0x1E000000)
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_v_addr_mask                            (0x01FF0000)
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_h_addr_mask                            (0x000007FF)
#define  VDTOP_YCBCR_MONITER_CTRL_ycbcr_moniter_en(data)                         (0x80000000&((data)<<31))
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_field(data)                            (0x40000000&((data)<<30))
#define  VDTOP_YCBCR_MONITER_CTRL_vstate_non_eq_3_flag(data)                     (0x20000000&((data)<<29))
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_size(data)                             (0x1E000000&((data)<<25))
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_v_addr(data)                           (0x01FF0000&((data)<<16))
#define  VDTOP_YCBCR_MONITER_CTRL_moniter_h_addr(data)                           (0x000007FF&(data))
#define  VDTOP_YCBCR_MONITER_CTRL_get_ycbcr_moniter_en(data)                     ((0x80000000&(data))>>31)
#define  VDTOP_YCBCR_MONITER_CTRL_get_moniter_field(data)                        ((0x40000000&(data))>>30)
#define  VDTOP_YCBCR_MONITER_CTRL_get_vstate_non_eq_3_flag(data)                 ((0x20000000&(data))>>29)
#define  VDTOP_YCBCR_MONITER_CTRL_get_moniter_size(data)                         ((0x1E000000&(data))>>25)
#define  VDTOP_YCBCR_MONITER_CTRL_get_moniter_v_addr(data)                       ((0x01FF0000&(data))>>16)
#define  VDTOP_YCBCR_MONITER_CTRL_get_moniter_h_addr(data)                       (0x000007FF&(data))

#define  VDTOP_YCBCR_MONITER_VALUE_Y                                            0x180197F4
#define  VDTOP_YCBCR_MONITER_VALUE_Y_reg_addr                                    "0xB80197F4"
#define  VDTOP_YCBCR_MONITER_VALUE_Y_reg                                         0xB80197F4
#define  VDTOP_YCBCR_MONITER_VALUE_Y_inst_addr                                   "0x01BC"
#define  set_VDTOP_YCBCR_MONITER_VALUE_Y_reg(data)                               (*((volatile unsigned int*)VDTOP_YCBCR_MONITER_VALUE_Y_reg)=data)
#define  get_VDTOP_YCBCR_MONITER_VALUE_Y_reg                                     (*((volatile unsigned int*)VDTOP_YCBCR_MONITER_VALUE_Y_reg))
#define  VDTOP_YCBCR_MONITER_VALUE_Y_vd_yout_moniter_shift                       (0)
#define  VDTOP_YCBCR_MONITER_VALUE_Y_vd_yout_moniter_mask                        (0x000003FF)
#define  VDTOP_YCBCR_MONITER_VALUE_Y_vd_yout_moniter(data)                       (0x000003FF&(data))
#define  VDTOP_YCBCR_MONITER_VALUE_Y_get_vd_yout_moniter(data)                   (0x000003FF&(data))

#define  VDTOP_YCBCR_MONITER_VALUE_CBCR                                         0x180197F8
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_reg_addr                                 "0xB80197F8"
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_reg                                      0xB80197F8
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_inst_addr                                "0x01BD"
#define  set_VDTOP_YCBCR_MONITER_VALUE_CBCR_reg(data)                            (*((volatile unsigned int*)VDTOP_YCBCR_MONITER_VALUE_CBCR_reg)=data)
#define  get_VDTOP_YCBCR_MONITER_VALUE_CBCR_reg                                  (*((volatile unsigned int*)VDTOP_YCBCR_MONITER_VALUE_CBCR_reg))
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_vd_crout_moniter_shift                   (16)
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_vd_cbout_moniter_shift                   (0)
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_vd_crout_moniter_mask                    (0x03FF0000)
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_vd_cbout_moniter_mask                    (0x000003FF)
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_vd_crout_moniter(data)                   (0x03FF0000&((data)<<16))
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_vd_cbout_moniter(data)                   (0x000003FF&(data))
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_get_vd_crout_moniter(data)               ((0x03FF0000&(data))>>16)
#define  VDTOP_YCBCR_MONITER_VALUE_CBCR_get_vd_cbout_moniter(data)               (0x000003FF&(data))

#define  VDTOP_ADC_UPDN_CTRL                                                    0x180197FC
#define  VDTOP_ADC_UPDN_CTRL_reg_addr                                            "0xB80197FC"
#define  VDTOP_ADC_UPDN_CTRL_reg                                                 0xB80197FC
#define  VDTOP_ADC_UPDN_CTRL_inst_addr                                           "0x01BE"
#define  set_VDTOP_ADC_UPDN_CTRL_reg(data)                                       (*((volatile unsigned int*)VDTOP_ADC_UPDN_CTRL_reg)=data)
#define  get_VDTOP_ADC_UPDN_CTRL_reg                                             (*((volatile unsigned int*)VDTOP_ADC_UPDN_CTRL_reg))
#define  VDTOP_ADC_UPDN_CTRL_moniter_y_value_shift                               (24)
#define  VDTOP_ADC_UPDN_CTRL_moniter_cb_value_shift                              (16)
#define  VDTOP_ADC_UPDN_CTRL_moniter_cr_value_shift                              (8)
#define  VDTOP_ADC_UPDN_CTRL_adc_updn_debug_en_shift                             (2)
#define  VDTOP_ADC_UPDN_CTRL_adc_updn_debug_up_shift                             (1)
#define  VDTOP_ADC_UPDN_CTRL_adc_updn_debug_dn_shift                             (0)
#define  VDTOP_ADC_UPDN_CTRL_moniter_y_value_mask                                (0xFF000000)
#define  VDTOP_ADC_UPDN_CTRL_moniter_cb_value_mask                               (0x00FF0000)
#define  VDTOP_ADC_UPDN_CTRL_moniter_cr_value_mask                               (0x0000FF00)
#define  VDTOP_ADC_UPDN_CTRL_adc_updn_debug_en_mask                              (0x00000004)
#define  VDTOP_ADC_UPDN_CTRL_adc_updn_debug_up_mask                              (0x00000002)
#define  VDTOP_ADC_UPDN_CTRL_adc_updn_debug_dn_mask                              (0x00000001)
#define  VDTOP_ADC_UPDN_CTRL_moniter_y_value(data)                               (0xFF000000&((data)<<24))
#define  VDTOP_ADC_UPDN_CTRL_moniter_cb_value(data)                              (0x00FF0000&((data)<<16))
#define  VDTOP_ADC_UPDN_CTRL_moniter_cr_value(data)                              (0x0000FF00&((data)<<8))
#define  VDTOP_ADC_UPDN_CTRL_adc_updn_debug_en(data)                             (0x00000004&((data)<<2))
#define  VDTOP_ADC_UPDN_CTRL_adc_updn_debug_up(data)                             (0x00000002&((data)<<1))
#define  VDTOP_ADC_UPDN_CTRL_adc_updn_debug_dn(data)                             (0x00000001&(data))
#define  VDTOP_ADC_UPDN_CTRL_get_moniter_y_value(data)                           ((0xFF000000&(data))>>24)
#define  VDTOP_ADC_UPDN_CTRL_get_moniter_cb_value(data)                          ((0x00FF0000&(data))>>16)
#define  VDTOP_ADC_UPDN_CTRL_get_moniter_cr_value(data)                          ((0x0000FF00&(data))>>8)
#define  VDTOP_ADC_UPDN_CTRL_get_adc_updn_debug_en(data)                         ((0x00000004&(data))>>2)
#define  VDTOP_ADC_UPDN_CTRL_get_adc_updn_debug_up(data)                         ((0x00000002&(data))>>1)
#define  VDTOP_ADC_UPDN_CTRL_get_adc_updn_debug_dn(data)                         (0x00000001&(data))

#ifndef LITTLE_ENDIAN //apply BIG_ENDIAN

//======VDTOP register structure define==========

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  phase_108_start_set:2;
        RBus_UInt32  secam_eq_share_sel:1;
        RBus_UInt32  res1:21;
        RBus_UInt32  hv_delay:1;
        RBus_UInt32  hpixel:2;
        RBus_UInt32  vline_625:1;
        RBus_UInt32  colour_mode:3;
        RBus_UInt32  res2:1;
    };
}vdtop_video_control0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  ycsep_power_on:1;
        RBus_UInt32  smixer_ycadjust_power_on:1;
        RBus_UInt32  sv_power_on_en:1;
        RBus_UInt32  scart_power_on_en:1;
        RBus_UInt32  secam_power_on_en:1;
        RBus_UInt32  avout_power_on_en:1;
        RBus_UInt32  dark_cpll_power_on_en:1;
        RBus_UInt32  patterngen_power_on_en:1;
        RBus_UInt32  ycsepdata_burstin_en:1;
        RBus_UInt32  vd_pq_bypass_en:1;
        RBus_UInt32  cv_inv:1;
        RBus_UInt32  cv_src:1;
        RBus_UInt32  yc_src:1;
        RBus_UInt32  dark_yc_src:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  ped:1;
    };
}vdtop_video_control1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  if_cr_lock:1;
        RBus_UInt32  hvlock_longtime:1;
        RBus_UInt32  vlock_longtime:1;
        RBus_UInt32  hlock_longtime:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  chromalock_acc:1;
        RBus_UInt32  h_fine_lock:1;
        RBus_UInt32  mov_colour_inverse:3;
        RBus_UInt32  mov_vbi_detected:1;
        RBus_UInt32  chomalock:1;
        RBus_UInt32  vlock:1;
        RBus_UInt32  hlock:1;
        RBus_UInt32  no_signal:1;
    };
}vdtop_video_status_reg1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  new_vdetect_stable:1;
        RBus_UInt32  old_vdetect_stable:1;
        RBus_UInt32  firtst_vsync_detected:1;
        RBus_UInt32  v_detect_flag:1;
        RBus_UInt32  detect358_flag:1;
        RBus_UInt32  vlock_new:1;
        RBus_UInt32  noisy_vbi:1;
        RBus_UInt32  detect443_flag:1;
        RBus_UInt32  burst_detect:1;
        RBus_UInt32  palor_flag:1;
        RBus_UInt32  palm_flag:1;
        RBus_UInt32  proscan_detected:1;
    };
}vdtop_video_status_reg2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vcr_rew:1;
        RBus_UInt32  vcr_ff:1;
        RBus_UInt32  vcr_trick:1;
        RBus_UInt32  vcr:1;
        RBus_UInt32  noisy:1;
        RBus_UInt32  lines_625_detected:1;
        RBus_UInt32  secam_detected:1;
        RBus_UInt32  pal_detected:1;
    };
}vdtop_video_status_reg3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  hdto_inc_status:30;
    };
}vdtop_hdto_inc_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  cdto_inc_status:30;
    };
}vdtop_cdto_inc_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  burst_magnitude:8;
    };
}vdtop_avg_burst_mag_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  agc_dgain:12;
    };
}vdtop_agc_dgain_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  status_cmag:8;
    };
}vdtop_cmag_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  status_cgain_data:14;
        RBus_UInt32  res2:2;
        RBus_UInt32  status_cgain:14;
    };
}vdtop_cgain_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  status_cordiq_freq:8;
    };
}vdtop_cordic_freq_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  v_1st_line:10;
    };
}vdtop_measure_first_v_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  v_2nd_line:10;
    };
}vdtop_measure_second_v_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:19;
        RBus_UInt32  porch_h:13;
    };
}vdtop_porch_height_m_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  status_noise:8;
    };
}vdtop_noise_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  noise_thresh:8;
    };
}vdtop_noise_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  line_count_27x_lower:12;
        RBus_UInt32  res2:4;
        RBus_UInt32  line_count_27x_upper:12;
    };
}vdtop_h_line_measure_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  line_count_27x_avg:12;
    };
}vdtop_h_line_measure_result_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdto_fixed:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  hdto_inc:30;
    };
}vdtop_hsync_dto_inc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cdto_fixed:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  cdto_inc:30;
    };
}vdtop_chroma_dto_inc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  chip_ver:16;
    };
}vdtop_chip_ver_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:19;
        RBus_UInt32  blank_vid_offset_manu_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  blank_vid_offset_value:11;
    };
}vdtop_blank_vid_offset_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  contrast:8;
    };
}vdtop_luma_contrast_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  brightness:8;
    };
}vdtop_luma_brightness_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  saturation:8;
    };
}vdtop_chroma_saturation_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hue:8;
    };
}vdtop_chroma_hue_phase_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  blue_screen_y:8;
    };
}vdtop_blue_screen_y_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  blue_screen_cb:8;
    };
}vdtop_blue_screen_cb_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  blue_screen_cr:8;
    };
}vdtop_blue_screen_cr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  motion_delay:4;
        RBus_UInt32  snow_freerun_en:1;
        RBus_UInt32  cbcr_swap:1;
        RBus_UInt32  blue_mode:2;
        RBus_UInt32  yc_delay:4;
    };
}vdtop_output_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  avout_hsync_start:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  avout_hsync_end:10;
        RBus_UInt32  res3:3;
        RBus_UInt32  fe_bypass_sel:1;
        RBus_UInt32  sw_tu_cvbs:1;
        RBus_UInt32  res4:1;
        RBus_UInt32  clamp_if_up_en:1;
        RBus_UInt32  clamp_if_dn_en:1;
    };
}vdtop_inout_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:5;
        RBus_UInt32  output_fifo_full:1;
        RBus_UInt32  output_fifo_empty:1;
        RBus_UInt32  output_delay_0_180_sw:1;
        RBus_UInt32  avout_test_in:12;
        RBus_UInt32  res2:3;
        RBus_UInt32  avout_mixer_sel:4;
        RBus_UInt32  res3:3;
        RBus_UInt32  avout_fifo_status_full:1;
        RBus_UInt32  avout_fifo_status_empty:1;
    };
}vdtop_avout_fifo_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avout_ifdebug_inv:12;
        RBus_UInt32  avout_ifdebug_mask:12;
        RBus_UInt32  avout_ifdebug_shift:4;
        RBus_UInt32  res1:3;
        RBus_UInt32  avout_ifdebug_sel:1;
    };
}vdtop_avout_ifdebug_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  ramp_en:1;
        RBus_UInt32  ramp_updn_sel:1;
        RBus_UInt32  ramp_counter_num:24;
    };
}vdtop_avout1_ifdebug_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  peak_deb_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  peak_diff_sel:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  peak_data_sel:1;
        RBus_UInt32  peak_deb_limit:9;
        RBus_UInt32  peak_deb_thl:8;
        RBus_UInt32  hagc_err_coring_en:1;
        RBus_UInt32  agc_peak_nominal:7;
    };
}vdtop_agc_peak_nominal_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dgain_i_cntl_without_trunc_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  chroma_path_dgain_after_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  ycsep_data_decrease_en:1;
        RBus_UInt32  ycsep_data_decrease_ratio:3;
        RBus_UInt32  agc_peak_nominal_ycsep:12;
        RBus_UInt32  res3:1;
        RBus_UInt32  agc_gate_kill_mode_sel:2;
        RBus_UInt32  agc_gate_kill_w_hlock:1;
        RBus_UInt32  agc_gate_vsync_coarse:1;
        RBus_UInt32  agc_gate_vsync_stip:1;
        RBus_UInt32  agc_gate_kill_mode:2;
        RBus_UInt32  agc_peak_en:1;
        RBus_UInt32  agc_peak_cntl:3;
    };
}vdtop_agc_peak_and_gate_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  peak_gain:12;
        RBus_UInt32  diff_level:12;
        RBus_UInt32  unlock_peakrst_en:1;
        RBus_UInt32  hagc_err_coring_th:5;
        RBus_UInt32  agc_peak_loop_gain:2;
    };
}vdtop_agc_peak_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  mov_detect_sel:1;
        RBus_UInt32  fix_dgain:1;
        RBus_UInt32  res2:6;
        RBus_UInt32  dgain_state:2;
        RBus_UInt32  under_gain:12;
        RBus_UInt32  hagc_field_mode:1;
        RBus_UInt32  mov_hagc_mode:1;
        RBus_UInt32  dc_clamp_mode:2;
        RBus_UInt32  vclamp_n_gate_sel:1;
        RBus_UInt32  bgate_raw_sel:1;
        RBus_UInt32  cagc_en:1;
        RBus_UInt32  hagc_en:1;
    };
}vdtop_video_control2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  dgain_status_triger:1;
        RBus_UInt32  peak_under_round_en:1;
        RBus_UInt32  peak_under_round_thl:8;
        RBus_UInt32  dgain_status_counter:12;
        RBus_UInt32  hagc:8;
    };
}vdtop_luma_agc_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:9;
        RBus_UInt32  dgain_kp:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  dgain_ki:3;
        RBus_UInt32  res3:1;
        RBus_UInt32  diff_gain_sel:3;
        RBus_UInt32  res4:1;
        RBus_UInt32  agc_gate_start:11;
    };
}vdtop_agc_gate_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  data_path_dgain_limit_up:12;
        RBus_UInt32  data_path_dgain_limit_low:12;
        RBus_UInt32  res1:1;
        RBus_UInt32  agc_gate_width:7;
    };
}vdtop_agc_gate_width_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  agc_bp_delay:8;
    };
}vdtop_agc_bp_delay_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  clampagc_under_th2:6;
    };
}vdtop_clampagc_compluma_new_threshold2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  ypeak_wide_iir_in_coef:8;
        RBus_UInt32  res2:2;
        RBus_UInt32  ypeak_wide_iir_en:1;
        RBus_UInt32  data_path_dgain_div2_en:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  agc_under_loop_gain:3;
        RBus_UInt32  under_flag:1;
        RBus_UInt32  res4:3;
        RBus_UInt32  clampagc_under_th1:4;
    };
}vdtop_clampagc_compluma_new_threshold1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  under_deb_en:1;
        RBus_UInt32  under_gate_en:1;
        RBus_UInt32  under_diff_sel:2;
        RBus_UInt32  res1:3;
        RBus_UInt32  under_deb_limit:9;
        RBus_UInt32  under_deb_thl:8;
        RBus_UInt32  clampagc_under_cntl:6;
        RBus_UInt32  clampagc_under_en:1;
        RBus_UInt32  blank_vid_offset:1;
    };
}vdtop_clampagc_compluma_new_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  under_gate_end:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  under_gate_st:10;
        RBus_UInt32  res3:1;
        RBus_UInt32  vsync_agc_min:7;
    };
}vdtop_vsync_agc_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  peak_gate_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  peak_gate_end:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  peak_gate_st:10;
        RBus_UInt32  vsync_clamp_mode:2;
        RBus_UInt32  vsync_agc_max:6;
    };
}vdtop_vsync_agc_lockout_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:13;
        RBus_UInt32  auto_dc_restore_sel:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  auto_dc_restore_en2:1;
        RBus_UInt32  auto_dc_restore_en1:1;
        RBus_UInt32  auto_dc_restore_en0:1;
        RBus_UInt32  auto_dc_restore_disable_ad4_updn:1;
        RBus_UInt32  auto_dc_restore_disable_ad3_updn:1;
        RBus_UInt32  auto_dc_restore_disable_ad2_updn:1;
        RBus_UInt32  auto_dc_restore_disable_ad1_updn:1;
        RBus_UInt32  cpump_adjust_delay:6;
        RBus_UInt32  cpump_adjust_polarity:1;
        RBus_UInt32  cpump_delay_en:1;
    };
}vdtop_charge_pump_delay_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  bgate_raw_length:8;
        RBus_UInt32  cpump_adjust:8;
    };
}vdtop_charge_pump_adjustment_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  cpump_delay:8;
    };
}vdtop_charge_pump_delay_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  sv_rgb_clamp_length_limit_en:1;
        RBus_UInt32  cvbs_clamp_length_limit_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  sv_rgb_clamp_length_max:7;
        RBus_UInt32  res3:1;
        RBus_UInt32  cvbs_clamp_length_max:7;
        RBus_UInt32  adc_updn_swap:1;
        RBus_UInt32  adc_input_swap:1;
        RBus_UInt32  adc_cbcr_pump_swap:1;
        RBus_UInt32  agc_gate_thresh:5;
    };
}vdtop_agc_gate_th_swap_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  first_dgain_integral_value:20;
        RBus_UInt32  res1:3;
        RBus_UInt32  first_dgain_integral_fw_mode_en:1;
        RBus_UInt32  measure_dc_128_64_sel:1;
        RBus_UInt32  dgain_ignore_fine_lock:1;
        RBus_UInt32  measure_dc_rough:1;
        RBus_UInt32  new_clamp_rc_rate_en:1;
        RBus_UInt32  clampagc_rc_rate:4;
    };
}vdtop_new_clampagc_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  first_dgain_int_value_status:20;
        RBus_UInt32  res1:4;
        RBus_UInt32  measure_dc_rough_dn:8;
    };
}vdtop_measure_dc_rough_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_dgain_integral_value:20;
        RBus_UInt32  res1:3;
        RBus_UInt32  second_dgain_integral_fw_mode_en:1;
        RBus_UInt32  measure_dc_rough_up:8;
    };
}vdtop_measure_dc_rough_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_dgain_int_value_status:20;
        RBus_UInt32  measure_dc_th_dn:12;
    };
}vdtop_measure_dc_th_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  measure_dc_th_up:12;
    };
}vdtop_measure_dc_th_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vsag_rc_input:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  vsag_agc_peak_cntl:6;
    };
}vdtop_vsag_cntl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:19;
        RBus_UInt32  peak_vsag:13;
    };
}vdtop_peak_vsag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  new_total_under_en:1;
        RBus_UInt32  new_under_gain_en:1;
        RBus_UInt32  new_under_th2_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  lose_sgate_flag:1;
        RBus_UInt32  lose_bgate_flag:1;
        RBus_UInt32  field_kill_rst:1;
    };
}vdtop_kill_field_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  field_kill_num:10;
    };
}vdtop_field_kill_mun_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  kill_gate_up:11;
    };
}vdtop_kill_gate_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  kill_gate_dn:11;
    };
}vdtop_kill_gate_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  syncmidpt_add_level_h:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  sync_midpt_lowest_en:1;
        RBus_UInt32  res3:1;
    };
}vdtop_syncmidpt_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  syncmidpt_fix_add_value_h:8;
    };
}vdtop_syncmidpt_fix_add_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  lpfsync_plus_w_hlock:2;
        RBus_UInt32  lpfsync_plus_rm:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  lpfsync_plus_diff:6;
    };
}vdtop_lpfsync_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  spike_min_thresh:8;
    };
}vdtop_spike_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  spike_max_thresh:8;
    };
}vdtop_spike_max_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  spike_detected:1;
        RBus_UInt32  spike_detected_up:10;
    };
}vdtop_spike_detected_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  spike_detected_dn:10;
    };
}vdtop_spike_detected_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  lpfsync_plus_dc:8;
    };
}vdtop_lpfsync_plus_dc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  hstate_error_thl:8;
        RBus_UInt32  hstate_error_dn_count:8;
        RBus_UInt32  hstate_error_rst:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  hdetect_error_avg_interval:2;
        RBus_UInt32  res3:1;
        RBus_UInt32  hdetect_error_avg_length:3;
        RBus_UInt32  res4:3;
        RBus_UInt32  hdetect_error_avg_sel:1;
    };
}vdtop_hdetect_err_var_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_error_var:16;
        RBus_UInt32  hdetect_error_mean:16;
    };
}vdtop_hdetect_err_var_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hstate_vsync_error_num_thr:4;
        RBus_UInt32  res1:1;
        RBus_UInt32  hstate_vsync_error_end:7;
        RBus_UInt32  res2:1;
        RBus_UInt32  hstate_vsync_error_start:7;
        RBus_UInt32  locked_count_vcrtrick_max:4;
        RBus_UInt32  locked_count_noisy_max:4;
        RBus_UInt32  locked_count_clean_max:4;
    };
}vdtop_lock_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  hstate_vsync_error_unbalance_status:1;
        RBus_UInt32  hstate_vsync_error_unbalance_en:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  hstate_vsync_error_sel:2;
        RBus_UInt32  res3:3;
        RBus_UInt32  hstate_vsync_error_value_en:1;
        RBus_UInt32  hstate_vsync_error_num_en:1;
        RBus_UInt32  hstate_vsync_error_noisy_en:1;
        RBus_UInt32  hstate_vsync_error_vlock_en:1;
        RBus_UInt32  hstate_vsync_error_hlock_en:1;
        RBus_UInt32  res4:1;
        RBus_UInt32  hstate_vsync_error_unbalance:3;
        RBus_UInt32  hlock_vsync_mode:2;
        RBus_UInt32  hstate_fixed:1;
        RBus_UInt32  disable_hfine:1;
        RBus_UInt32  hstate_unlocked:1;
        RBus_UInt32  hstate_max:3;
    };
}vdtop_h_loop_maxstate_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  fine_phase_error_thl:10;
        RBus_UInt32  cpll_hpll_use_front_vactive:1;
        RBus_UInt32  hstate_hlock_sel:1;
        RBus_UInt32  hstate_ignore_err:1;
        RBus_UInt32  auto_fine_phase_sel:1;
        RBus_UInt32  fine_hstate_to_5:1;
        RBus_UInt32  auto_fine_phase_sel_en:1;
        RBus_UInt32  hpll_fine_lock_data_sel:1;
        RBus_UInt32  coarse_phase_rising_en:1;
        RBus_UInt32  fine_src_sel:1;
        RBus_UInt32  coarse_src_sel:1;
        RBus_UInt32  fine_gate_sel:1;
        RBus_UInt32  gate_end_thresh:5;
    };
}vdtop_clampagc_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  hstate_vsync_error_noisy_lower_th:8;
        RBus_UInt32  hstate_vsync_error_noisy_upper_th:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  coarse_sync_start:7;
    };
}vdtop_clampagc_new_sync_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  hstate_vsync_error_value_thr:8;
        RBus_UInt32  hstate_vsync_error_abs_thr:8;
        RBus_UInt32  coarse_sync_end:8;
    };
}vdtop_clampagc_new_sync_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  hstate_err:14;
        RBus_UInt32  agc_trailing_sel:1;
        RBus_UInt32  coarse_backporch_start:7;
    };
}vdtop_clampagc_new_backporch_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  hstate_err_in_vcount:10;
        RBus_UInt32  coarse_backporch_end:8;
    };
}vdtop_clampagc_new_backporch_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  lpfsync_force_blank_en:1;
        RBus_UInt32  nosignal_hlock_check_en:1;
        RBus_UInt32  agc_clamping_trailing_sel:1;
        RBus_UInt32  killgate_sel:1;
        RBus_UInt32  coarse_phase_sel:1;
        RBus_UInt32  fine_phase_sel:1;
    };
}vdtop_hdetect_phase_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  lsync_tip_start:8;
    };
}vdtop_hdetect_counter_tip_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  lsync_tip_end:8;
    };
}vdtop_hdetect_counter_tip_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  lporch_start:8;
    };
}vdtop_hdetect_counter_backporch_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  lporch_end:8;
    };
}vdtop_hdetect_counter_backporch_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:30;
        RBus_UInt32  hpll_integral_rst:1;
        RBus_UInt32  hpll_integral_ext:1;
    };
}vdtop_hpll_integral_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc_gate_kill_mode_status:2;
        RBus_UInt32  new_hpll_lpf_sel_status:1;
        RBus_UInt32  gate_iir_h_sel_status:1;
        RBus_UInt32  gate_iir_v_sel_status:1;
        RBus_UInt32  dgain_ignore_fine_lock_status:1;
        RBus_UInt32  second_pll_en_status:1;
        RBus_UInt32  vsync_freerun_when_unstable_en_status:1;
        RBus_UInt32  agc_gate_kill_mode_vcr:2;
        RBus_UInt32  new_hpll_lpf_sel_vcr:1;
        RBus_UInt32  gate_iir_h_sel_vcr:1;
        RBus_UInt32  gate_iir_v_sel_vcr:1;
        RBus_UInt32  dgain_ignore_fine_lock_vcr:1;
        RBus_UInt32  second_pll_en_vcr:1;
        RBus_UInt32  vsync_freerun_when_unstable_en_vcr:1;
        RBus_UInt32  impulsive_noise_disable_pll_en:1;
        RBus_UInt32  cstate_impn_max:3;
        RBus_UInt32  mode_vcr_setting_change_en:1;
        RBus_UInt32  hstate_impn_max:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  hstate_vcr_max:3;
        RBus_UInt32  hstate_loopfilter_sw:1;
        RBus_UInt32  hstate_status:3;
    };
}vdtop_hdetect_loopfilter_sw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hdetect_loopfilter_dctrl1:4;
        RBus_UInt32  hdetect_loopfilter_dctrl2:4;
    };
}vdtop_hdetect_loopfilter_dctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hsync_start:8;
    };
}vdtop_hsync_pulse_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hsync_width:8;
    };
}vdtop_hsync_pulse_width_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:29;
        RBus_UInt32  hresampler_app_alpha_sel:1;
        RBus_UInt32  hresampler_app_sel:1;
        RBus_UInt32  hresampler_2up:1;
    };
}vdtop_chroma_hresampler_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hpll_manu_mode_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  hpll_kp_coef_0:6;
    };
}vdtop_hpll_kp_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  hpll_kp_coef_1:6;
    };
}vdtop_hpll_kp_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  hpll_kp_coef_2:6;
    };
}vdtop_hpll_kp_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  hpll_kp_coef_3:6;
    };
}vdtop_hpll_kp_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  hpll_kp_coef_4:6;
    };
}vdtop_hpll_kp_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  hpll_kp_coef_5:6;
    };
}vdtop_hpll_kp_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hpll_ki_coef_0:8;
    };
}vdtop_hpll_ki_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hpll_ki_coef_1:8;
    };
}vdtop_hpll_ki_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hpll_ki_coef_2:8;
    };
}vdtop_hpll_ki_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hpll_ki_coef_3:8;
    };
}vdtop_hpll_ki_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hpll_ki_coef_4:8;
    };
}vdtop_hpll_ki_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hpll_ki_coef_5:8;
    };
}vdtop_hpll_ki_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  second_pll_level_sel:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  second_pll_gain_sel:2;
        RBus_UInt32  second_pll_clampgate_sel:1;
        RBus_UInt32  second_pll_phase_sel:1;
        RBus_UInt32  second_pll_w_hlock:1;
        RBus_UInt32  second_pll_en:1;
    };
}vdtop_second_pll_gain_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_pll_sync_level:8;
        RBus_UInt32  second_pll_dc_add:12;
        RBus_UInt32  second_pll_dc_rm:12;
    };
}vdtop_second_pll_gain1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  second_comp_blevel:12;
        RBus_UInt32  second_comp_slevel:12;
    };
}vdtop_second_pll_gain2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  second_trailing:8;
        RBus_UInt32  second_dgain:12;
    };
}vdtop_second_pll_gain3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_backporch_start:8;
        RBus_UInt32  second_backporch_end:8;
        RBus_UInt32  second_hsync_tip_start:8;
        RBus_UInt32  second_hsync_tip_end:8;
    };
}vdtop_second_pll_gain4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  headswitch_debounce_en:1;
        RBus_UInt32  second_pll_kill_en:1;
        RBus_UInt32  under_detected_flag:1;
        RBus_UInt32  under_count_reset:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  under_line_err_thl:10;
        RBus_UInt32  res3:2;
        RBus_UInt32  under_min_err_thl:10;
    };
}vdtop_under_new_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  under_field_err_thl:10;
    };
}vdtop_under_new_th2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  under_debounce_thl:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  under_debounce_max:10;
    };
}vdtop_under_new_th3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coch_detected_by_check_dc:1;
        RBus_UInt32  res1:7;
        RBus_UInt32  coch_avg_line1_diff_thre_up:12;
        RBus_UInt32  coch_avg_line1_diff_thre_lo:12;
    };
}vdtop_dc_coch_seperate_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coch_detect_lpf_reset:1;
        RBus_UInt32  res1:9;
        RBus_UInt32  coch_detect_counter_up_thre:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  coch_detect_counter_lo_thre:10;
    };
}vdtop_dc_coch_seperate_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hsync_rising:8;
    };
}vdtop_hsync_rising_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hsync_phase_offset:8;
    };
}vdtop_hsync_phase_offset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  secam_gp_hcount_start:10;
        RBus_UInt32  res2:4;
        RBus_UInt32  hsync_gate_start:8;
    };
}vdtop_hsync_gate_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  secam_gp_hcount_end:10;
        RBus_UInt32  res2:4;
        RBus_UInt32  hsync_gate_end:8;
    };
}vdtop_hsync_gate_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  secam_gp_vcount_start_o:10;
        RBus_UInt32  res2:4;
        RBus_UInt32  hsync_tip_start:8;
    };
}vdtop_hsync_tip_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  secam_gp_vcount_end_o:10;
        RBus_UInt32  res2:4;
        RBus_UInt32  hsync_tip_end:8;
    };
}vdtop_hsync_tip_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  secam_gp_vcount_start_e:10;
        RBus_UInt32  res2:4;
        RBus_UInt32  hsync_rising_start:8;
    };
}vdtop_hsync_rising_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  secam_gp_vcount_end_e:10;
        RBus_UInt32  res2:4;
        RBus_UInt32  hsync_rising_end:8;
    };
}vdtop_hsync_rising_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  front_porch_detect_en:1;
        RBus_UInt32  front_porch_level_data_sel:1;
        RBus_UInt32  front_porch_level_line_sel:1;
        RBus_UInt32  front_porch_level_pixel_sel:3;
        RBus_UInt32  res2:2;
        RBus_UInt32  front_porch_gate_start:10;
        RBus_UInt32  backporch_start:8;
    };
}vdtop_backproch_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  vclamp_n_gate:10;
        RBus_UInt32  backporch_end:8;
    };
}vdtop_backporch_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hblank_start:8;
    };
}vdtop_hblank_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hblank_end:8;
    };
}vdtop_hblank_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  secam_burst_gate_start:8;
        RBus_UInt32  burst_gate_start:8;
    };
}vdtop_burst_gate_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  secam_burst_gate_end:8;
        RBus_UInt32  burst_gate_end:8;
    };
}vdtop_burst_gate_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hactive_start:8;
    };
}vdtop_hactive_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hactive_width:8;
    };
}vdtop_hactive_width_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_hstate_phase_max_en:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  hdetect_hstate_3_phase_max:13;
        RBus_UInt32  res2:3;
        RBus_UInt32  hdetect_hstate_4_phase_max:13;
    };
}vdtop_hdetect_err_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  hdetect_hstate_5_phase_max:13;
        RBus_UInt32  hdetect_err04_th:8;
        RBus_UInt32  hdetect_err00_th:8;
    };
}vdtop_hdetect_err_th2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  cpll_cgain_reset_en:1;
        RBus_UInt32  cpll_use_fine_or_final_hlock:1;
        RBus_UInt32  new_c_state_i:1;
        RBus_UInt32  new_cstate:1;
        RBus_UInt32  cstate_cntl:2;
        RBus_UInt32  res2:1;
        RBus_UInt32  cstate_status:3;
    };
}vdtop_cstate_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:13;
        RBus_UInt32  s_b_level_fir_en:1;
        RBus_UInt32  level_fir_num_32_64_blevel:1;
        RBus_UInt32  level_fir_num_32_64_slevel:1;
        RBus_UInt32  coef_syncmidpt_fir_in:8;
        RBus_UInt32  res2:5;
        RBus_UInt32  new_hpll_lpf_sel:1;
        RBus_UInt32  gate_iir_h_sel:1;
        RBus_UInt32  gate_iir_v_sel:1;
    };
}vdtop_hdetect_gate_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  headswitch_err_sel:2;
        RBus_UInt32  hsync_refind_mask_err:1;
        RBus_UInt32  hsync_refind:1;
        RBus_UInt32  gate_iir_coef1:8;
    };
}vdtop_hdetect_gate_coef1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  hdetect_err07_th:8;
        RBus_UInt32  gate_iir_coef2:8;
    };
}vdtop_hdetect_gate_coef2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  hstate_err_thl:14;
        RBus_UInt32  res2:6;
        RBus_UInt32  hstate_err_counter:2;
        RBus_UInt32  vphase_status:8;
    };
}vdtop_hdetect_vphase_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_err05_th:8;
        RBus_UInt32  hdetect_err10_th:8;
        RBus_UInt32  hdetect_err01_th:8;
        RBus_UInt32  vphasediff_status:8;
    };
}vdtop_hdetect_vphasediff_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  noise_vbi_thresh:8;
    };
}vdtop_noise_vbi_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  coch_detected_status:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  coch_detected_frame:6;
    };
}vdtop_vbi_co_ch_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:28;
        RBus_UInt32  coch_bp_diff_th:4;
    };
}vdtop_vbi_co_ch_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  coch_line_count_th:8;
    };
}vdtop_vbi_co_ch_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  mov_window2_value:8;
    };
}vdtop_mov_detect_window_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  ad_burst_gate_start:8;
    };
}vdtop_mov_burstgate_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  ad_burst_gate_end:8;
    };
}vdtop_mov_burstgate_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:29;
        RBus_UInt32  cinverse_detect_control:3;
    };
}vdtop_color_inverse_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  h_err_constraint_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  h_err_constraint_high_th:14;
        RBus_UInt32  res2:2;
        RBus_UInt32  h_err_constraint_low_th:14;
    };
}vdtop_h_err_constraint_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  h_err_constraint_hstate:3;
        RBus_UInt32  h_err_constraint_val:13;
    };
}vdtop_h_err_constraint_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_restore_hdto_en:1;
        RBus_UInt32  hdetect_set_new_hdto_n:3;
        RBus_UInt32  hdetect_restore_hdto_status:1;
        RBus_UInt32  hdetect_force_hdto_en:1;
        RBus_UInt32  hdetect_set_hdto_start:10;
        RBus_UInt32  res1:3;
        RBus_UInt32  hdetect_restore_vcr_enable:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  hdetect_save_stable_hdto_start:10;
    };
}vdtop_h_restore_hdto_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  hdetect_set_hdto_phase_err_th:14;
    };
}vdtop_h_restore_hdto_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wrong_if_pc_detect_th:8;
        RBus_UInt32  sync_level_manu:8;
        RBus_UInt32  res1:7;
        RBus_UInt32  sync_level_manu_en:1;
        RBus_UInt32  res2:7;
        RBus_UInt32  wrong_if_pc_detect:1;
    };
}vdtop_if_wrong_pc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  cpll_phase_thr_up:14;
        RBus_UInt32  res2:2;
        RBus_UInt32  cpll_phase_thr_dn:14;
    };
}vdtop_cpll_stability_observe_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  cpll_ampl_thr:7;
        RBus_UInt32  res2:2;
        RBus_UInt32  cerror_continune_same_sign_thr:6;
        RBus_UInt32  res3:13;
        RBus_UInt32  cpll_ampl_neg_flag:1;
        RBus_UInt32  cpll_phase_small_flag:1;
        RBus_UInt32  cpll_stable_flag:1;
    };
}vdtop_cpll_stability_observe_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  ampl_out_line_iir:14;
        RBus_UInt32  res2:2;
        RBus_UInt32  phase_out_line_iir:14;
    };
}vdtop_cpll_stability_observe_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  herror_pos_neg_value_diff_thr:16;
        RBus_UInt32  res1:2;
        RBus_UInt32  herror_continune_same_sign_thr:6;
        RBus_UInt32  herror_neg_pos_num_total_thr:4;
        RBus_UInt32  herror_neg_pos_value_total_thr:4;
    };
}vdtop_hpll_stability_observe_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  herror_neg_value:16;
        RBus_UInt32  herror_pos_value:16;
    };
}vdtop_hpll_stability_observe_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  herror_neg_pos_err_th:13;
        RBus_UInt32  res2:1;
        RBus_UInt32  herror_neg_pos_num_win_thr:7;
        RBus_UInt32  res3:5;
        RBus_UInt32  herror_pos_neg_num_even:1;
        RBus_UInt32  herror_pos_neg_value_even:1;
        RBus_UInt32  herror_stable_state_hold_en:1;
    };
}vdtop_hpll_stability_observe_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  statistic_h_phase_diff_sec1_end:9;
        RBus_UInt32  res2:7;
        RBus_UInt32  statistic_h_phase_diff_sec1_start:9;
    };
}vdtop_h_phase_diff_statistics_set_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  statistic_h_phase_diff_sec2_end:9;
        RBus_UInt32  res2:7;
        RBus_UInt32  statistic_h_phase_diff_sec2_start:9;
    };
}vdtop_h_phase_diff_statistics_set_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  statistic_h_phase_diff_hitso_level2:13;
        RBus_UInt32  res2:3;
        RBus_UInt32  statistic_h_phase_diff_hitso_level1:13;
    };
}vdtop_h_phase_diff_statistics_set_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  statistic_h_phase_diff_hitso_level4:13;
        RBus_UInt32  res2:3;
        RBus_UInt32  statistic_h_phase_diff_hitso_level3:13;
    };
}vdtop_h_phase_diff_statistics_set_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:19;
        RBus_UInt32  statistic_h_phase_diff_hitso_level5:13;
    };
}vdtop_h_phase_diff_statistics_set_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_ready:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_2:10;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_1:10;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_0:10;
    };
}vdtop_h_phase_diff_sec1_histogram_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_5:10;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_4:10;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_3:10;
    };
}vdtop_h_phase_diff_sec1_histogram_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_ready:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_2:10;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_1:10;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_0:10;
    };
}vdtop_h_phase_diff_sec2_histogram_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_5:10;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_4:10;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_3:10;
    };
}vdtop_h_phase_diff_sec2_histogram_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  iir_up_speed_on:1;
        RBus_UInt32  data_level_diff_iir_en:1;
        RBus_UInt32  statistic_data_level_diff_th:14;
        RBus_UInt32  res1:10;
        RBus_UInt32  statistic_data_level_line_num:6;
    };
}vdtop_data_level_statistics_set_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_ready:1;
        RBus_UInt32  res1:7;
        RBus_UInt32  statistic_data_level_sec1_min:12;
        RBus_UInt32  statistic_data_level_sec1_max:12;
    };
}vdtop_data_level_statistics_sec1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  statistic_data_level_sec2_min:12;
        RBus_UInt32  statistic_data_level_sec2_max:12;
    };
}vdtop_data_level_statistics_sec2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  statistic_data_level_sec3_min:12;
        RBus_UInt32  statistic_data_level_sec3_max:12;
    };
}vdtop_data_level_statistics_sec3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  statistic_data_level_sec4_min:12;
        RBus_UInt32  statistic_data_level_sec4_max:12;
    };
}vdtop_data_level_statistics_sec4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  statistic_data_level_sec5_min:12;
        RBus_UInt32  statistic_data_level_sec5_max:12;
    };
}vdtop_data_level_statistics_sec5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  statistic_data_level_sec6_min:12;
        RBus_UInt32  statistic_data_level_sec6_max:12;
    };
}vdtop_data_level_statistics_sec6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  statistic_data_level_sec7_min:12;
        RBus_UInt32  statistic_data_level_sec7_max:12;
    };
}vdtop_data_level_statistics_sec7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  statistic_data_level_sec8_min:12;
        RBus_UInt32  statistic_data_level_sec8_max:12;
    };
}vdtop_data_level_statistics_sec8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  hlock_time:22;
    };
}vdtop_hlock_time_polling_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  vlock_time:22;
    };
}vdtop_vlock_time_polling_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  vstate_eq3_time:22;
    };
}vdtop_vstatelock_time_polling_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  no_signal_fall_time:22;
    };
}vdtop_no_signal_fall_time_polling_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  old_vdetect_line_count_max:10;
        RBus_UInt32  num_old_vdetect_stable_fields:8;
        RBus_UInt32  vsync_cntl:2;
        RBus_UInt32  vsync_threshold:6;
    };
}vdtop_vsync_cntl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  num_new_vdetect_stable_fields:8;
        RBus_UInt32  field_polarity:1;
        RBus_UInt32  flip_field:1;
        RBus_UInt32  veven_delayed:1;
        RBus_UInt32  vodd_delayed:1;
        RBus_UInt32  field_detect_mode:2;
        RBus_UInt32  vloop_tc3:2;
    };
}vdtop_vsync_time_const_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  vloop_tc2:7;
    };
}vdtop_vsync_time_const2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vloop_tc1:8;
    };
}vdtop_vsync_time_const1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  serration_threshold:8;
    };
}vdtop_serration_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hvlock_field_cnt:4;
        RBus_UInt32  vlock_field_cnt:4;
        RBus_UInt32  hlock_field_cnt:4;
        RBus_UInt32  res1:2;
        RBus_UInt32  vsync_delay_sel:1;
        RBus_UInt32  vsync_delay_en:1;
        RBus_UInt32  vsync_delay_1d:4;
        RBus_UInt32  vsync_delay_2d:4;
        RBus_UInt32  vsync_delay_2d_delta:4;
        RBus_UInt32  vsync_delay_2d_delta_en:1;
        RBus_UInt32  no_signal_dec:3;
    };
}vdtop_no_signal_dec_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vactive_start:8;
    };
}vdtop_vactive_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vactive_height:8;
    };
}vdtop_vactive_height_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  vsync_h_min:7;
    };
}vdtop_vsync_h_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  vsync_h_max:7;
    };
}vdtop_vsync_h_max_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  vsync_vbi_min:7;
    };
}vdtop_vsync_vbi_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vlock_wide_range:1;
        RBus_UInt32  vsync_vbi_max:7;
    };
}vdtop_vsync_vbi_lockout_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:15;
        RBus_UInt32  vsync_ser_num_bigger_10_en:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  vsync_ser_num_max_def:6;
        RBus_UInt32  syncmidpt_dc_rough:1;
        RBus_UInt32  midpt_625_dc_th_en:1;
        RBus_UInt32  midpt_rough_vdetect_en:1;
        RBus_UInt32  vsync_625_midpt_en:1;
        RBus_UInt32  res3:2;
        RBus_UInt32  syncmidpt_add_level:2;
    };
}vdtop_midpt_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  syncmidpt_fix_add_value:8;
    };
}vdtop_midpt_fix_add_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  midpt_625_dc_th:8;
    };
}vdtop_midpt_625_dc_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  sync_dc_offset_th:12;
    };
}vdtop_sync_dc_offset_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  sync_midpt_625:12;
    };
}vdtop_sync_dc_offset_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  sync_midpt_h:12;
    };
}vdtop_sync_midpt_h_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  sync_midpt_v:12;
    };
}vdtop_sync_midpt_v_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  new_vdetect_feature_max_core:11;
        RBus_UInt32  res2:2;
        RBus_UInt32  raw_vdetect_max_sel:2;
        RBus_UInt32  res3:3;
        RBus_UInt32  no_signal_hpll_out:1;
        RBus_UInt32  res4:1;
        RBus_UInt32  no_signal_to_0_sel:1;
        RBus_UInt32  hpll_no_signal_sel:1;
        RBus_UInt32  vlock_sel:1;
        RBus_UInt32  vdetect_pattern_sel:2;
        RBus_UInt32  res5:2;
        RBus_UInt32  adc_lpf_sel:3;
        RBus_UInt32  new_vdetect_line_length_en:1;
    };
}vdtop_sync_midpt_v2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef1:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  adc_lpf_coef2:10;
    };
}vdtop_adc_27_lpf_coef_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef3:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  adc_lpf_coef4:10;
    };
}vdtop_adc_27_lpf_coef_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef5:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  adc_lpf_coef6:10;
    };
}vdtop_adc_27_lpf_coef_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef7:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  adc_lpf_coef8:10;
    };
}vdtop_adc_27_lpf_coef_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef9:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  adc_lpf_coefa:10;
    };
}vdtop_adc_27_lpf_coef_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coefb:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  adc_lpf_coefc:10;
    };
}vdtop_adc_27_lpf_coef_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  new_vdetect_line_length:8;
    };
}vdtop_vdetect_line_lenght_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:28;
        RBus_UInt32  new_vdetect_force_en:1;
        RBus_UInt32  no_vsync_flag_en:1;
        RBus_UInt32  new_vdetect_window_en:1;
        RBus_UInt32  new_vdetect_window_manu_en:1;
    };
}vdtop_vdetect_window_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  new_vdetect_window:12;
    };
}vdtop_vdetect_window_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_maxmin_data_rc_rate:4;
        RBus_UInt32  res1:3;
        RBus_UInt32  new_vdetect_maxmin_data_rc_en:1;
        RBus_UInt32  new_vdetect_max_limit_value:12;
        RBus_UInt32  res2:1;
        RBus_UInt32  new_vdetect_first_vsync_sel:1;
        RBus_UInt32  new_vdetect_max_limit_en:1;
        RBus_UInt32  new_vdetect_coch_en:1;
        RBus_UInt32  new_vdetect_en:1;
        RBus_UInt32  gate_sel:1;
        RBus_UInt32  vloss_detect_en:1;
        RBus_UInt32  new_vdetect_vcount_window_en:1;
        RBus_UInt32  new_vsync_offset_manul_mode_en:1;
        RBus_UInt32  new_vsync_offset_manul:3;
    };
}vdtop_new_vdetect_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  old_hdetect_lpf_en:1;
        RBus_UInt32  new_vdetect_feature_th_manul_en:1;
        RBus_UInt32  no_vsync_flag:1;
        RBus_UInt32  new_vloss_flag:1;
        RBus_UInt32  force_new_vdetect_fine_window:1;
        RBus_UInt32  vsync_fine_window_state1_en:1;
        RBus_UInt32  res2:2;
    };
}vdtop_new_vdetect_loop_th2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  new_vdetect_loop_core_th:10;
    };
}vdtop_new_vdetect_loop_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  new_vdetect_diff_offset:12;
    };
}vdtop_new_vdetect_diff_offset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  vsync_fine_start1:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  new_vdetect_loss_max:6;
        RBus_UInt32  res3:2;
        RBus_UInt32  vsync_fine_start:10;
    };
}vdtop_vsync_fine_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  vsync_fine_end1:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  new_vdetect_loss_up:6;
        RBus_UInt32  res3:2;
        RBus_UInt32  vsync_fine_end:10;
    };
}vdtop_vsync_fine_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  no_vsync_th_hi:4;
        RBus_UInt32  no_vsync_th_lo:4;
    };
}vdtop_no_vsync_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  new_vdetect_loss_dn:6;
        RBus_UInt32  res2:2;
        RBus_UInt32  new_vdetect_fine_vphase_th:10;
    };
}vdtop_new_vdetect_vphase_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  new_vdetect_feature_th1:8;
    };
}vdtop_new_vdetect_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  new_vdetect_feature_th2:8;
    };
}vdtop_new_vdetect_th2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  new_vdetect_feature_th3:8;
    };
}vdtop_new_vdetect_th3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_feature_th7:8;
        RBus_UInt32  new_vdetect_feature_th6:8;
        RBus_UInt32  new_vdetect_feature_th5:8;
        RBus_UInt32  new_vdetect_feature_th4:8;
    };
}vdtop_new_vdetect_th4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  vstate_to_3:1;
        RBus_UInt32  vphase_error_eq0_num:6;
        RBus_UInt32  vstate_to_3_old_v_stable_en:1;
        RBus_UInt32  vstate_to_3_new_v_stable_en:1;
        RBus_UInt32  vstate_to_3_en:1;
        RBus_UInt32  vpll_hw_reset_time_after_reset:9;
        RBus_UInt32  res2:3;
        RBus_UInt32  vpll_hw_reset_vstate_non_eq_3:1;
        RBus_UInt32  vpll_hw_reset_vstate_reset_to_0:1;
        RBus_UInt32  vpll_hw_reset_vstate_leave_3:1;
        RBus_UInt32  vpll_hw_reset_time:1;
        RBus_UInt32  vpll_hw_reset_flag_625_change:1;
        RBus_UInt32  vpll_hw_reset_i_ctrl_replace:1;
        RBus_UInt32  vpll_hw_reset_old_en:1;
        RBus_UInt32  vpll_hw_reset_new_en:1;
        RBus_UInt32  vpll_hw_reset_function_en:1;
    };
}vdtop_vpll_hw_reset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_refind_sel:2;
        RBus_UInt32  vsync_refind_toggle:1;
        RBus_UInt32  vstate0_direct_vsync:1;
        RBus_UInt32  vstate0_counter_num:8;
        RBus_UInt32  res1:3;
        RBus_UInt32  vsync_stable_en:1;
        RBus_UInt32  vstate_reset:2;
        RBus_UInt32  vsync_refind_con_sel:2;
        RBus_UInt32  res2:3;
        RBus_UInt32  vsync_refind:1;
        RBus_UInt32  res3:4;
        RBus_UInt32  vstate_2to3_er:4;
    };
}vdtop_vstate_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vstate_2to3_th:8;
        RBus_UInt32  vstate_new2to3_en:1;
        RBus_UInt32  hsync_refind_min:7;
        RBus_UInt32  vstate1_err_sel:1;
        RBus_UInt32  hsync_refind_max:7;
        RBus_UInt32  vstate_1to2_er:4;
        RBus_UInt32  vstate_back1_er:4;
    };
}vdtop_vstate_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  hsync_reset_for_vsync:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  hsync_reset_for_data:10;
        RBus_UInt32  vstate_counter_num:8;
    };
}vdtop_vstate_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vphase_error_window:8;
        RBus_UInt32  res1:3;
        RBus_UInt32  vstate3_err_adjust_en:1;
        RBus_UInt32  vstate3_err_adjust_th:4;
        RBus_UInt32  res2:3;
        RBus_UInt32  vsync_vertical_sum_num:5;
        RBus_UInt32  res3:1;
        RBus_UInt32  vstate_back_to_0_at_625_change:1;
        RBus_UInt32  vstate_status:2;
        RBus_UInt32  vstate_sw_en:1;
        RBus_UInt32  vstate_sw:2;
        RBus_UInt32  vcr_back_en:1;
    };
}vdtop_vstate_ctrl3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  vstate3_counter_num:8;
        RBus_UInt32  vloop0_tc1:8;
    };
}vdtop_vloop0_tc1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  vloop0_tc2:7;
    };
}vdtop_vloop0_tc2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vloop2_tc1:8;
    };
}vdtop_vloop2_tc1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  vloop2_tc2:7;
    };
}vdtop_vloop2_tc2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vloop3_tc1:8;
    };
}vdtop_vloop3_tc1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  vloop3_tc2:7;
    };
}vdtop_vloop3_tc2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  vloop0_tc3:2;
        RBus_UInt32  vloop2_tc3:2;
        RBus_UInt32  vloop3_tc3:2;
    };
}vdtop_vloop_tc3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  flag_chrmaunlock_kill:1;
        RBus_UInt32  flag_user_kill:1;
        RBus_UInt32  flag_cgain_too_big_kill:1;
        RBus_UInt32  new_vdetect_lock_en:1;
        RBus_UInt32  vlock_count:3;
    };
}vdtop_vlock_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_detect_rst:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  vsync_detect_crlock_en:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  vsync_detect_count_thl:6;
        RBus_UInt32  res3:1;
        RBus_UInt32  vsync_detect_core_thl:11;
        RBus_UInt32  vlock_window:8;
    };
}vdtop_vlock_window_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vlock_phase_plus:8;
    };
}vdtop_vlock_phase_plus_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vline_adj_cnt_a:8;
    };
}vdtop_vline_adj_cnt_a_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vline_adj_cnt_b:8;
    };
}vdtop_vline_adj_cnt_b_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  table_hactive_width:8;
    };
}vdtop_table_hactive_width_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:12;
        RBus_UInt32  vlines_the_same_cnt_thr:4;
        RBus_UInt32  res2:1;
        RBus_UInt32  vsync_freerun_when_unstable_en:1;
        RBus_UInt32  vlines_the_same_flag:1;
        RBus_UInt32  vlines_diff_flag:1;
        RBus_UInt32  res3:2;
        RBus_UInt32  vlines_freerun:10;
    };
}vdtop_vsync_pll_freerun_mux_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  new_vdetect_line_count:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  old_vdetect_line_count:10;
    };
}vdtop_vsync_old_new_line_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  cloop_i_ctrl_modify_en:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  cloop_i_ctrl_modify_range:22;
    };
}vdtop_cloop_i_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  fix_cgain:1;
        RBus_UInt32  res2:16;
        RBus_UInt32  cagc_pll_input_sel:2;
        RBus_UInt32  cagc_data_input_sel:2;
        RBus_UInt32  cagc:8;
    };
}vdtop_chroma_agc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:23;
        RBus_UInt32  ckill_sel:1;
        RBus_UInt32  user_ckill_mode:2;
        RBus_UInt32  vbi_ckill:1;
        RBus_UInt32  hlock_ckill:1;
        RBus_UInt32  chroma_kill:4;
    };
}vdtop_chroma_kill_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:17;
        RBus_UInt32  lose_acc_chromalock_level:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  chromalock_input_acc_en:1;
        RBus_UInt32  chromalock_input_acc_num:2;
        RBus_UInt32  lose_chromalock_count:4;
        RBus_UInt32  lose_chromalock_level:3;
        RBus_UInt32  lose_chromalock_ckill:1;
    };
}vdtop_chroma_lock_config_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  cnew_gate_en:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  flag358_cresample_lpf_sel:2;
        RBus_UInt32  cagc_igain:2;
    };
}vdtop_chroma_loopfilter_gain_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  cresample_signed_en:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  cloop_freq_offset_limit_en:1;
        RBus_UInt32  cloop_freq_offset_limit:12;
        RBus_UInt32  secam_cresample_lpf_sel:2;
        RBus_UInt32  cresample_lpf_sel:2;
        RBus_UInt32  cstate:3;
        RBus_UInt32  fixed_cstate:1;
    };
}vdtop_chroma_loopfilter_state_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  chroma_burst5or10:1;
        RBus_UInt32  fixed_burstgate:1;
        RBus_UInt32  cautopos:5;
    };
}vdtop_chroma_autopos_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  chromalock_cstate_en:1;
        RBus_UInt32  chromalock_cstate:3;
        RBus_UInt32  res2:2;
        RBus_UInt32  ckill_vsync_delay_en:1;
        RBus_UInt32  ckill_lb_sel:1;
    };
}vdtop_ckill_lb_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ckill_level_user_offset_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  ckill_level_user_offset:14;
        RBus_UInt32  ckill_level_user_mode_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  ckill_level_user_mode_value:14;
    };
}vdtop_ckill_gain_kill_thl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  badedit_noisy_off_en:1;
        RBus_UInt32  badedit_in_noise_thr:8;
        RBus_UInt32  badedit_out_noise_thr:8;
        RBus_UInt32  fast_lock_en:1;
        RBus_UInt32  phase_fast_lock_en:1;
        RBus_UInt32  badedit_phase_lock_en:1;
        RBus_UInt32  badedit_pulse_detect:1;
        RBus_UInt32  bad_phase_detect:1;
        RBus_UInt32  badedit_line_num:3;
    };
}vdtop_cstate_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  badedit_th:8;
    };
}vdtop_badedit_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  badphase_th:8;
    };
}vdtop_badphase_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  cstate_line_num:8;
    };
}vdtop_cstate_line_num_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  cpeak_gain_no_trunc_en:1;
        RBus_UInt32  cpeak_noisy_act_en_pll:1;
        RBus_UInt32  cpeak_noisy_act_en:1;
        RBus_UInt32  cpeak_noise_thr2:8;
        RBus_UInt32  cpeak_noise_thr1:8;
        RBus_UInt32  res2:3;
        RBus_UInt32  chroma_peak_en_pll:1;
        RBus_UInt32  new_cgain_level_en:1;
        RBus_UInt32  chroma_peak_en:1;
        RBus_UInt32  chroma_agc_peak_cnt:6;
    };
}vdtop_chroma_agc_peak_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  chroma_agc_peak_nominal:11;
    };
}vdtop_chroma_agc_peak_nominal_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  close_ckill_loopfilter:1;
        RBus_UInt32  cagc_upper_xroot2_en:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  cagc_upper:14;
    };
}vdtop_close_ckill_loopfilter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  cagc_peak_err_adj_en:1;
        RBus_UInt32  cagc_burst_err_adj_en:1;
        RBus_UInt32  cagc_peak_err_diff_sel:6;
    };
}vdtop_cagc_peak_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  cagc_burst_err_diff_sel:6;
    };
}vdtop_cagc_peak_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  cdata_measure_keep_line_num:10;
        RBus_UInt32  res2:3;
        RBus_UInt32  cdata_measure_thr:9;
        RBus_UInt32  cdata_measure_big:1;
        RBus_UInt32  cdata_measure_lpf_en:1;
        RBus_UInt32  cagc_peak_luma_ratio:6;
    };
}vdtop_cagc_peak_ctrl3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  cb_delay:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  cr_delay:3;
    };
}vdtop_chroma_delay_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:30;
        RBus_UInt32  flag_burst_x4:1;
        RBus_UInt32  burst_cgain_x4_en:1;
    };
}vdtop_burst_cgain_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  burst_cgain_mag_th:8;
    };
}vdtop_burst_cgain_mag_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  flag358_iir_en:1;
        RBus_UInt32  flag358_iir_cunlock_en:1;
        RBus_UInt32  flag358_cdto_inc:30;
    };
}vdtop_flag358_cdto_inc4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_location_fix_en:1;
        RBus_UInt32  burst_location_sel_clock:1;
        RBus_UInt32  burst_location_selreg_en:1;
        RBus_UInt32  normal_burst_locationreg_en:1;
        RBus_UInt32  burst_location_sel_modify_sel:3;
        RBus_UInt32  burst_location_sel_modify_en:1;
        RBus_UInt32  burst_location_center_modify_sel:3;
        RBus_UInt32  burst_location_center_modify_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  burst_location_fix:11;
        RBus_UInt32  res2:2;
        RBus_UInt32  burst_location_sel:2;
        RBus_UInt32  burst_location_lpf_reset:1;
        RBus_UInt32  burst_location_rst_en:1;
        RBus_UInt32  auto_burst_location_en:1;
        RBus_UInt32  new_coef_sel:1;
    };
}vdtop_separate_443_358_new_function_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:5;
        RBus_UInt32  burst_location_result:11;
        RBus_UInt32  res2:5;
        RBus_UInt32  normal_burst_location:11;
    };
}vdtop_separate_443_358_new_function_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wide_burst_location_modify_sel:3;
        RBus_UInt32  wide_burst_location_modify_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  wide_burst_location_end:11;
        RBus_UInt32  res2:2;
        RBus_UInt32  wide_burst_location_endreg_en:1;
        RBus_UInt32  wide_burst_location_startreg_en:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  wide_burst_location_start:11;
    };
}vdtop_separate_443_358_new_function_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  burst_location_sel_status:2;
        RBus_UInt32  res2:1;
        RBus_UInt32  normal_burst_location_status:11;
    };
}vdtop_burst_location_status_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:5;
        RBus_UInt32  wide_burst_location_end_status:11;
        RBus_UInt32  res2:5;
        RBus_UInt32  wide_burst_location_start_status:11;
    };
}vdtop_burst_location_status_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:5;
        RBus_UInt32  sep_hsync_start:11;
        RBus_UInt32  res2:5;
        RBus_UInt32  sep_hsync_end:11;
    };
}vdtop_burst_location_hsync_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  burst_location_auto_en:1;
        RBus_UInt32  res2:4;
        RBus_UInt32  burst_location_enable_mode:8;
        RBus_UInt32  burst_location_magnitude_thr:8;
        RBus_UInt32  burst_location_auto_thr:8;
    };
}vdtop_burst_location_fw_cntl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  y_path_eq_en:1;
        RBus_UInt32  y_path_eq_bypass_sel:1;
        RBus_UInt32  res1:11;
        RBus_UInt32  y_path_coef_num:7;
        RBus_UInt32  res2:1;
        RBus_UInt32  y_path_coef_value:11;
    };
}vdtop_y_path_eq_filter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:13;
        RBus_UInt32  y_path_coef_num_r:7;
        RBus_UInt32  res2:1;
        RBus_UInt32  y_path_coef_value_r:11;
    };
}vdtop_y_path_eq_filter_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  flag625_vsync_l_sel:1;
        RBus_UInt32  flag625_vsync_l_th:1;
        RBus_UInt32  palm_atone_counter:6;
    };
}vdtop_palm_flag_compensation1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  palm_atone_threshold:8;
    };
}vdtop_palm_flag_compensation2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  colour_mode_dark_check:1;
        RBus_UInt32  colour_mode_dark_set:3;
        RBus_UInt32  auto_mode_en:1;
        RBus_UInt32  auto_625only_en:1;
        RBus_UInt32  auto_burst_switch_625only:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  state_machine_reset:1;
        RBus_UInt32  manual_mode_select:3;
    };
}vdtop_manual_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  set_mode_status:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  decision_mode_status:3;
    };
}vdtop_mode_detection_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  disable_mode_en:1;
        RBus_UInt32  disable_mode:1;
        RBus_UInt32  statistic_number:6;
    };
}vdtop_statistic_and_disable_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  prefer_ntsc50_paln:1;
        RBus_UInt32  prefer_ntsc443_pal60:1;
        RBus_UInt32  prefer_secam_pali:1;
        RBus_UInt32  prefer_ntsc_palm:1;
        RBus_UInt32  prefer_ntsc50_paln_en:1;
        RBus_UInt32  prefer_ntsc443_pal60_en:1;
        RBus_UInt32  prefer_secam_pali_en:1;
        RBus_UInt32  prefer_ntsc_palm_en:1;
    };
}vdtop_prefer_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  fix_625flag_en:1;
        RBus_UInt32  fix_443flag_en:1;
        RBus_UInt32  fix_palorflag_en:1;
        RBus_UInt32  fix_secamflag_en:1;
        RBus_UInt32  fix_625_h:1;
        RBus_UInt32  fix_443_h:1;
        RBus_UInt32  fix_palor_h:1;
        RBus_UInt32  fix_secam_h:1;
    };
}vdtop_state_machine_fix_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  hactivestartreg_en:1;
        RBus_UInt32  hpixelreg_en:1;
        RBus_UInt32  colourmodereg_en:1;
        RBus_UInt32  hagcreg_en:1;
        RBus_UInt32  vline625reg_en:1;
        RBus_UInt32  cdtomem_reg_en:1;
        RBus_UInt32  vsyncreg_en:1;
        RBus_UInt32  ped_reg_en:1;
    };
}vdtop_vd_basic_register_enable_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  cpll_demod_region_always_on:1;
        RBus_UInt32  auto_pos_modify_en_cpll:1;
        RBus_UInt32  auto_pos_mode_sel_cpll:3;
        RBus_UInt32  res2:3;
        RBus_UInt32  hactivestartreg_en_cpll:1;
        RBus_UInt32  hactive_start_cpll:8;
        RBus_UInt32  switch_palo_palm_method:2;
        RBus_UInt32  auto_secam_pali_method:2;
        RBus_UInt32  secam_flag_freq_disable:1;
        RBus_UInt32  statistic_multiplier:3;
    };
}vdtop_auto_mode_s_m_statistic_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  fix_358flag_en:1;
        RBus_UInt32  fix_358_h:1;
        RBus_UInt32  auto_443_358_method_625:2;
        RBus_UInt32  auto_443_358_method_525:2;
        RBus_UInt32  auto_sel_no_burst_625:2;
    };
}vdtop_flag358_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  no_burst_mag_th:8;
    };
}vdtop_no_burst_mag_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  no_burst_mag_filter_th:8;
    };
}vdtop_no_burst_mag_filter_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  burst_mag_trig_offset:4;
        RBus_UInt32  no_burst_flag:1;
        RBus_UInt32  paln_flag_new:1;
        RBus_UInt32  burst_win_error:1;
        RBus_UInt32  no_burst_443_en:1;
    };
}vdtop_no_burst_443_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  flag358_secam_phase_diff_hcount_en:1;
        RBus_UInt32  flag358_phase_diff_hcount:7;
    };
}vdtop_flag358_secam_hcount_reset_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  flag358_secam_phase_diff_dr:8;
    };
}vdtop_flag358_secam_phase_diff_dr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  flag358_secam_phase_diff_db:8;
    };
}vdtop_flag358_secam_phase_diff_db_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  burst_mag_th_358:8;
    };
}vdtop_burst_mag_th_358_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  table_cagc_en:1;
        RBus_UInt32  table_vline_625:1;
        RBus_UInt32  table_hpixel:2;
        RBus_UInt32  table_ped:1;
        RBus_UInt32  table_colour_mode:3;
    };
}vdtop_auto_mode_table1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  table_hagc:8;
    };
}vdtop_auto_mode_table2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  table_hactive_start:8;
    };
}vdtop_auto_mode_table3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  table_vactive_start:8;
    };
}vdtop_auto_mode_table4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  table_vactive_height:8;
    };
}vdtop_auto_mode_table5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  table_cdto:30;
    };
}vdtop_auto_mode_table6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vline_625_vloop_clr_en:1;
        RBus_UInt32  vline_625_src_sel:1;
        RBus_UInt32  new_625flag_window:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  new_625flag_div_thr:10;
        RBus_UInt32  flag_625_counter:8;
    };
}vdtop_flag_625_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  flag_443_counter:8;
    };
}vdtop_flag_443_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  secam_flag_counter:8;
    };
}vdtop_secam_flag_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  palm_flag_counter:8;
    };
}vdtop_palm_flag_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  burst_valid_counter:8;
    };
}vdtop_burst_valid_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  midpoint_adjustment:8;
    };
}vdtop_midpoint_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  freq_flag_threshold_tune:8;
    };
}vdtop_freq_flag_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  frequency_valid_upper_limit:8;
    };
}vdtop_freq_valid_max_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  condition_enable:1;
        RBus_UInt32  frequency_valid_inner_limit:7;
    };
}vdtop_freq_valid_inner_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  frequency_valid_lower_limit:8;
    };
}vdtop_freq_valid_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  secam_flag_frequency_upper_limit:8;
    };
}vdtop_secam_flag_counter_max_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  secam_flag_frequency_lower_limit:8;
    };
}vdtop_secam_flag_counter_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  palm_flag_limit_en:1;
        RBus_UInt32  pal_sw_acc_input_polar:1;
        RBus_UInt32  pal_sw_input_sel:1;
        RBus_UInt32  palm_sw_acc_input_polar:1;
        RBus_UInt32  palm_sw_input_sel:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  pal_flag_threshold:13;
        RBus_UInt32  palm_flag_phase_adjust:8;
    };
}vdtop_palm_flag_phase_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  burst_mag_trigger:4;
        RBus_UInt32  burst_mag_threshold:4;
    };
}vdtop_burst_lower_limit_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  vsync_select:1;
        RBus_UInt32  secam_frequency_valid_enable:1;
        RBus_UInt32  auto_noburst_palflag_off:1;
        RBus_UInt32  burst_noise_weighting_auto:1;
        RBus_UInt32  burst_noise_weighting:4;
    };
}vdtop_burst_mag_choice_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  agc_gate_kill_sync_white_en:1;
        RBus_UInt32  new_358_flag_cordic:1;
        RBus_UInt32  new_358_flag_cos_sin:1;
        RBus_UInt32  res2:5;
    };
}vdtop_new_358_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  new_dto_358_cnt_up:11;
    };
}vdtop_new_358_cnt_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  new_dto_358_cnt_dn:11;
    };
}vdtop_new_358_cnt_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  sep_count_th:10;
    };
}vdtop_sep_count_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  sep_burst_start:11;
    };
}vdtop_sep_burst_start0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  sep_burst_end:11;
    };
}vdtop_sep_burst_end0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  sep_core_burst_rst:1;
        RBus_UInt32  sep_core_burst_rst_en:1;
        RBus_UInt32  res2:8;
    };
}vdtop_sep_burst_ro_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sep_443_core_burst_hsync:8;
        RBus_UInt32  sep_358_core_burst_hsync:8;
        RBus_UInt32  sep_443_core_burst:8;
        RBus_UInt32  sep_358_core_burst:8;
    };
}vdtop_sep_burst_ro_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  sep_pal_secam_core_burst_rst:1;
        RBus_UInt32  sep_pal_secam_core_burst_rst_en:1;
        RBus_UInt32  sep_pal_secam_core_burst:8;
    };
}vdtop_sep_burst_ro3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  sep_443_thl:8;
        RBus_UInt32  sep_358_thl:8;
    };
}vdtop_sep_burst_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  secam_new_condition:1;
        RBus_UInt32  sep_secam_f_sel:1;
        RBus_UInt32  sep_secam_thl:8;
        RBus_UInt32  sep_secam_thl_ratio:8;
        RBus_UInt32  res2:5;
        RBus_UInt32  power_secam_flag:1;
        RBus_UInt32  power_443_flag:1;
        RBus_UInt32  power_358_flag:1;
    };
}vdtop_sep_burst_flag1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  pk_foraudio:1;
        RBus_UInt32  mode_secam2_sel:2;
        RBus_UInt32  res2:2;
        RBus_UInt32  mode_443358pk_sel:2;
    };
}vdtop_automode_443358pk_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dark_badedit_noisy_off_en:1;
        RBus_UInt32  dark_badedit_phase_lock_en:1;
        RBus_UInt32  dark_fast_lock_en:1;
        RBus_UInt32  dark_phase_fast_lock_en:1;
        RBus_UInt32  dark_fixed_cstate:1;
        RBus_UInt32  dark_cstate:3;
        RBus_UInt32  dark_chromalock_cstate_en:1;
        RBus_UInt32  dark_chromalock_cstate:3;
        RBus_UInt32  res1:3;
        RBus_UInt32  dark_cresample_signed_en:1;
        RBus_UInt32  dark_cagc:8;
        RBus_UInt32  dark_cagc_pll_input_sel:2;
        RBus_UInt32  dark_cagc_en:1;
        RBus_UInt32  dark_fix_cgain:1;
        RBus_UInt32  dark_cpll_cdto_change_en:1;
        RBus_UInt32  dark_cpll_cdto_change_mode:3;
    };
}vdtop_dark_cpll_cdetect_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  dark_cpll_cdto_change_value:30;
    };
}vdtop_dark_cpll_cdetect_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  dark_palm_flag_counter:8;
        RBus_UInt32  dark_palm_flag_phase_adjust:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  dark_palsw_level:2;
        RBus_UInt32  dark_palm_flag_limit_en:1;
        RBus_UInt32  dark_pal_sw_acc_input_polar:1;
        RBus_UInt32  dark_pal_sw_input_sel:1;
        RBus_UInt32  dark_palm_sw_acc_input_polar:1;
        RBus_UInt32  dark_palm_sw_input_sel:1;
    };
}vdtop_dark_cpll_pal_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:3;
        RBus_UInt32  dark_pal_flag_threshold:13;
        RBus_UInt32  res2:1;
        RBus_UInt32  dark_chromalock_input_acc_en:1;
        RBus_UInt32  dark_chromalock_input_acc_num:2;
        RBus_UInt32  res3:1;
        RBus_UInt32  dark_lose_acc_chromalock_level:3;
        RBus_UInt32  dark_lose_chromalock_count:4;
        RBus_UInt32  res4:1;
        RBus_UInt32  dark_lose_chromalock_level:3;
    };
}vdtop_dark_cpll_chromalock_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  dark_cpll_decide_mode_error:2;
        RBus_UInt32  res2:1;
        RBus_UInt32  dark_cpll_decide_mode:3;
        RBus_UInt32  dark_cpll_vsync_num:8;
        RBus_UInt32  dark_cpll_chromalock_sel:1;
        RBus_UInt32  dark_cpll_mode_en_pali:1;
        RBus_UInt32  dark_cpll_mode_en_pal60:1;
        RBus_UInt32  dark_cpll_mode_en_ntsc443:1;
        RBus_UInt32  dark_cpll_mode_en_paln:1;
        RBus_UInt32  dark_cpll_mode_en_ntsc50:1;
        RBus_UInt32  dark_cpll_mode_en_palm:1;
        RBus_UInt32  dark_cpll_mode_en_ntsc:1;
        RBus_UInt32  dark_cpll_fix_mode_en:1;
        RBus_UInt32  dark_cpll_user_mode:3;
        RBus_UInt32  dark_cpll_mode:2;
        RBus_UInt32  dark_cpll_auto_run:1;
        RBus_UInt32  dark_cpll_start:1;
    };
}vdtop_dark_cpll_controll_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  chromalock_acc_dark:1;
        RBus_UInt32  chromalock_dark:1;
        RBus_UInt32  pal_flag_dark:1;
        RBus_UInt32  palm_flag_dark:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  dark_cpll_loop_done:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  dark_cpll_pali_palm_flag:1;
        RBus_UInt32  dark_cpll_pal60_palm_flag:1;
        RBus_UInt32  dark_cpll_ntsc443_palm_flag:1;
        RBus_UInt32  dark_cpll_paln_palm_flag:1;
        RBus_UInt32  dark_cpll_ntsc50_palm_flag:1;
        RBus_UInt32  dark_cpll_palm_palm_flag:1;
        RBus_UInt32  dark_cpll_ntsc_palm_flag:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  dark_cpll_pali_pal_flag:1;
        RBus_UInt32  dark_cpll_pal60_pal_flag:1;
        RBus_UInt32  dark_cpll_ntsc443_pal_flag:1;
        RBus_UInt32  dark_cpll_paln_pal_flag:1;
        RBus_UInt32  dark_cpll_ntsc50_pal_flag:1;
        RBus_UInt32  dark_cpll_palm_pal_flag:1;
        RBus_UInt32  dark_cpll_ntsc_pal_flag:1;
        RBus_UInt32  res4:1;
        RBus_UInt32  dark_cpll_pali_lock:1;
        RBus_UInt32  dark_cpll_pal60_lock:1;
        RBus_UInt32  dark_cpll_ntsc443_lock:1;
        RBus_UInt32  dark_cpll_paln_lock:1;
        RBus_UInt32  dark_cpll_ntsc50_lock:1;
        RBus_UInt32  dark_cpll_palm_lock:1;
        RBus_UInt32  dark_cpll_ntsc_lock:1;
    };
}vdtop_dark_cpll_result_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  dark_cpll_burst_magnitude:8;
    };
}vdtop_dark_cpll_burstmag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  dark_cloop_i_ctrl_modify_en:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  dark_cloop_i_ctrl_modify_range:22;
    };
}vdtop_dark_cloop_i_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  change_signal_int_en:1;
        RBus_UInt32  hstate_err_irq_en:1;
        RBus_UInt32  vd_irq_en:1;
        RBus_UInt32  vcr_irq_en:1;
        RBus_UInt32  nosig_irq_en:1;
        RBus_UInt32  mode_irq_en:1;
        RBus_UInt32  proscan_irq_en:1;
        RBus_UInt32  noisy_irq_en:1;
        RBus_UInt32  chromalock_irq_en:1;
        RBus_UInt32  vlock_irq_en:1;
        RBus_UInt32  hlock_irq_en:1;
    };
}vdtop_irq_mask1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  vd_scene_change_irq_en:1;
        RBus_UInt32  ddr_addr_irq_en:1;
        RBus_UInt32  noisy_vbi_irq_en:1;
        RBus_UInt32  coch_irq_en:1;
        RBus_UInt32  mov_irq_en:1;
        RBus_UInt32  field_irq_en:1;
    };
}vdtop_irq_mask2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  ad1_irq_sel:1;
        RBus_UInt32  ad2_irq_sel:1;
        RBus_UInt32  ad3_irq_sel:1;
        RBus_UInt32  ad4_irq_sel:1;
        RBus_UInt32  ad1_over_irq_en:1;
        RBus_UInt32  ad1_under_irq_en:1;
        RBus_UInt32  ad2_over_irq_en:1;
        RBus_UInt32  ad2_under_irq_en:1;
        RBus_UInt32  ad3_over_irq_en:1;
        RBus_UInt32  ad3_under_irq_en:1;
        RBus_UInt32  ad4_over_irq_en:1;
        RBus_UInt32  ad4_under_irq_en:1;
    };
}vdtop_irq_mask3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  change_signal_int:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  vcr_irq:1;
        RBus_UInt32  nosig_irq:1;
        RBus_UInt32  mode_irq:1;
        RBus_UInt32  proscan_irq:1;
        RBus_UInt32  noisy_irq:1;
        RBus_UInt32  chromalock_irq:1;
        RBus_UInt32  vlock_irq:1;
        RBus_UInt32  hlock_irq:1;
    };
}vdtop_irq_status1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:25;
        RBus_UInt32  hstate_err_irq:1;
        RBus_UInt32  vd_scene_change_irq:1;
        RBus_UInt32  ddr_addr_irq:1;
        RBus_UInt32  noisy_vbi_irq:1;
        RBus_UInt32  coch_irq:1;
        RBus_UInt32  mov_irq:1;
        RBus_UInt32  field_irq:1;
    };
}vdtop_irq_status2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  ad1_overflow_irq:1;
        RBus_UInt32  ad1_underflow_irq:1;
        RBus_UInt32  ad2_overflow_irq:1;
        RBus_UInt32  ad2_underflow_irq:1;
        RBus_UInt32  ad3_overflow_irq:1;
        RBus_UInt32  ad3_underflow_irq:1;
        RBus_UInt32  ad4_overflow_irq:1;
        RBus_UInt32  ad4_underflow_irq:1;
    };
}vdtop_irq_status3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  adc_over_threh:4;
        RBus_UInt32  adc_under_threh:4;
    };
}vdtop_adc_limit_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  adc_value_max_thr:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  adc_value_min_thr:10;
        RBus_UInt32  ad1_value_small:1;
        RBus_UInt32  ad1_value_big:1;
        RBus_UInt32  ad2_value_small:1;
        RBus_UInt32  ad2_value_big:1;
        RBus_UInt32  ad3_value_small:1;
        RBus_UInt32  ad3_value_big:1;
        RBus_UInt32  ad4_value_small:1;
        RBus_UInt32  ad4_value_big:1;
    };
}vdtop_adc_over_under_flag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  clampagc_md_y_small:1;
        RBus_UInt32  clampagc_md_y_big:1;
        RBus_UInt32  clampagc_md_c_small:1;
        RBus_UInt32  clampagc_md_c_big:1;
        RBus_UInt32  clampagc_md_r_small:1;
        RBus_UInt32  clampagc_md_r_big:1;
        RBus_UInt32  clampagc_md_g_small:1;
        RBus_UInt32  clampagc_md_g_big:1;
        RBus_UInt32  clampagc_md_b_small:1;
        RBus_UInt32  clampagc_md_b_big:1;
    };
}vdtop_dgain_out_over_under_flag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  dgain_out_data_max_thr:12;
        RBus_UInt32  dgain_out_data_min_thr:12;
    };
}vdtop_dgain_out_over_under_cntl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  ld_pause_detect:1;
        RBus_UInt32  ldp_det_en:1;
        RBus_UInt32  ldp_switch_en:1;
        RBus_UInt32  ldpaus_th:5;
    };
}vdtop_ldpause_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  coch_en:1;
        RBus_UInt32  disp_freerun_sel:1;
        RBus_UInt32  vd_out_dvalid_sel_d1:1;
        RBus_UInt32  vcr_disable:1;
        RBus_UInt32  freerun_sel:1;
        RBus_UInt32  lock_h_on_no_signal:1;
        RBus_UInt32  disable_blue_screen_when_vcr:1;
        RBus_UInt32  detect_vcr_when_h_unlock:1;
    };
}vdtop_vcr_option_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  cenable_line_count:8;
    };
}vdtop_cenable_line_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  auto_3dchange_vcr:1;
        RBus_UInt32  auto_3dchange_noisy:1;
        RBus_UInt32  field_toggle_en:1;
        RBus_UInt32  cbcr_ini_mux:1;
        RBus_UInt32  res2:2;
    };
}vdtop_signal_stm_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:18;
        RBus_UInt32  cdet_phase_err_status:14;
    };
}vdtop_cdetect_phase_err_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  sw_comp:2;
        RBus_UInt32  sw_pr_r:2;
        RBus_UInt32  sw_pb_b:2;
        RBus_UInt32  sw_g:2;
    };
}vdtop_ad_sw_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  clamp_ad1:2;
        RBus_UInt32  clamp_ad2:2;
        RBus_UInt32  clamp_ad3:2;
        RBus_UInt32  clamp_ad4:2;
    };
}vdtop_clamp_updn_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  clamp_a_up_en:1;
        RBus_UInt32  clamp_a_dn_en:1;
        RBus_UInt32  clamp_b_up_en:1;
        RBus_UInt32  clamp_b_dn_en:1;
        RBus_UInt32  clamp_c_up_en:1;
        RBus_UInt32  clamp_c_dn_en:1;
        RBus_UInt32  clamp_d_up_en:1;
        RBus_UInt32  clamp_d_dn_en:1;
    };
}vdtop_clamp_rgb_updn_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  aa3_en:1;
        RBus_UInt32  fb_th:3;
        RBus_UInt32  fb_delay:4;
    };
}vdtop_fsw_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  fb2rgb_dly:3;
        RBus_UInt32  res2:2;
        RBus_UInt32  rgb2cvbs_dly:6;
    };
}vdtop_fsw_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:23;
        RBus_UInt32  outfifo_444_sel:1;
        RBus_UInt32  scart_en:1;
        RBus_UInt32  yout_limit:1;
        RBus_UInt32  fb_inv:1;
        RBus_UInt32  cout_limit:1;
        RBus_UInt32  out444_sel:1;
        RBus_UInt32  aa422_en:1;
        RBus_UInt32  fb_sw:1;
        RBus_UInt32  fb_en:1;
    };
}vdtop_fsw_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  fb_thmax:4;
        RBus_UInt32  fb_thmin:4;
    };
}vdtop_fsw_ctrl3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  contrast2:10;
    };
}vdtop_luma_contrast2_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  brightness2:10;
    };
}vdtop_luma_brightness2_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  cr_saturation:10;
    };
}vdtop_chroma_saturation2_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  cb_saturation:10;
    };
}vdtop_cb_sat_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  peak_range2:2;
        RBus_UInt32  peak_gain2:3;
        RBus_UInt32  peak_en2:1;
    };
}vdtop_luma_peaking2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:23;
        RBus_UInt32  fb_gain_x2_en:1;
        RBus_UInt32  fbgain_en:1;
        RBus_UInt32  fbgain:7;
    };
}vdtop_fsw_gain_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:26;
        RBus_UInt32  scart_vbi_rgb_sel:2;
        RBus_UInt32  res2:1;
        RBus_UInt32  fb_status:3;
    };
}vdtop_fsw_input_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  chroma_gain_reduce_ratio_c:8;
        RBus_UInt32  chroma_gain_reduce_ratio_r:8;
        RBus_UInt32  chroma_gain_reduce_ratio_g:8;
        RBus_UInt32  chroma_gain_reduce_ratio_b:8;
    };
}vdtop_chroma_reduce_cntl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  rgb_dgain_bypass:4;
        RBus_UInt32  chroma_gain_reduce_c_en:1;
        RBus_UInt32  chroma_gain_reduce_r_en:1;
        RBus_UInt32  chroma_gain_reduce_g_en:1;
        RBus_UInt32  chroma_gain_reduce_b_en:1;
    };
}vdtop_chroma_reduce_cntl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  yorr_in_offset_status:12;
    };
}vdtop_adcr_cali_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  uorg_in_offset_status:12;
    };
}vdtop_adcg_cali_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  vorb_in_offset_status:12;
    };
}vdtop_adcb_cali_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  rgb_output_en:1;
        RBus_UInt32  res2:7;
    };
}vdtop_adc_gain_r1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  offset_r:8;
        RBus_UInt32  res2:6;
        RBus_UInt32  gain_r:10;
    };
}vdtop_adc_gain_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  offset_g:8;
        RBus_UInt32  res2:6;
        RBus_UInt32  gain_g:10;
    };
}vdtop_adc_gain_g_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  offset_b:8;
        RBus_UInt32  res2:6;
        RBus_UInt32  gain_b:10;
    };
}vdtop_adc_gain_b_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:5;
        RBus_UInt32  component_color_matrix_r1:11;
        RBus_UInt32  res2:5;
        RBus_UInt32  component_color_matrix_r2:11;
    };
}vdtop_color_matrix_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:5;
        RBus_UInt32  component_color_matrix_r3:11;
        RBus_UInt32  res2:5;
        RBus_UInt32  component_color_matrix_g1:11;
    };
}vdtop_color_matrix_rg_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:5;
        RBus_UInt32  component_color_matrix_g2:11;
        RBus_UInt32  res2:5;
        RBus_UInt32  component_color_matrix_g3:11;
    };
}vdtop_color_matrix_g_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:5;
        RBus_UInt32  component_color_matrix_b1:11;
        RBus_UInt32  res2:5;
        RBus_UInt32  component_color_matrix_b2:11;
    };
}vdtop_color_matrix_b_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:21;
        RBus_UInt32  component_color_matrix_b3:11;
    };
}vdtop_color_matrix_b3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  r_prblevel:12;
    };
}vdtop_clamp_test_reg0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  g_blevel:12;
    };
}vdtop_clamp_test_reg2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  b_pbblevel:12;
    };
}vdtop_clamp_test_reg4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  comp_blevel:12;
    };
}vdtop_clamp_test_reg6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  comp_slevel:12;
    };
}vdtop_clamp_test_reg8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  vbi_blevel:12;
    };
}vdtop_clamp_test_reg11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  front_porch_level:12;
        RBus_UInt32  res2:2;
        RBus_UInt32  hphase_err_status:14;
    };
}vdtop_hdetect_phase_err_status2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:20;
        RBus_UInt32  avout_fifo_sel:1;
        RBus_UInt32  avout_fifo_rd_ptr:11;
    };
}vdtop_avout_fifo_rd_ptr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  blank_level_comp_manu_add:12;
        RBus_UInt32  res2:4;
        RBus_UInt32  blank_level_comp_manu:12;
    };
}vdtop_blank_level_manu_comp_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  blank_level_c_manu:12;
        RBus_UInt32  res2:4;
        RBus_UInt32  blank_level_r_manu:12;
    };
}vdtop_blank_level_manu_c_r_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:4;
        RBus_UInt32  blank_level_g_manu:12;
        RBus_UInt32  res2:4;
        RBus_UInt32  blank_level_b_manu:12;
    };
}vdtop_blank_level_manu_g_b_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test1:24;
        RBus_UInt32  fw_dma_size:3;
        RBus_UInt32  fw_dma_mode:4;
        RBus_UInt32  factory_flag:1;
    };
}vdtop_fpga_test_reg1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test2:32;
    };
}vdtop_fpga_test_reg2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test3:32;
    };
}vdtop_fpga_test_reg3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test4:32;
    };
}vdtop_fpga_test_reg4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test5:32;
    };
}vdtop_fpga_test_reg5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test6:32;
    };
}vdtop_fpga_test_reg6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test7:32;
    };
}vdtop_fpga_test_reg7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test8:32;
    };
}vdtop_fpga_test_reg8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:15;
        RBus_UInt32  secam_y_fir_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  secam_y_hpf_sel:3;
        RBus_UInt32  res3:1;
        RBus_UInt32  secam_y_lpf_sel:3;
        RBus_UInt32  drdb_freq_const:1;
        RBus_UInt32  drdb_vlpf_en:1;
        RBus_UInt32  drdb_vlpf_en_auto_en:1;
        RBus_UInt32  secam_flag_sel:1;
        RBus_UInt32  res4:2;
        RBus_UInt32  secam_notch_filter:2;
    };
}vdtop_secam_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  dr_offset:8;
    };
}vdtop_secam_drfreq_offset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  db_offset:8;
    };
}vdtop_secam_dbfreq_offset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  secam_phase_diff_hcount_en:1;
        RBus_UInt32  secam_phase_diff_hcount:7;
    };
}vdtop_secam_hcount_reset_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  secam_phase_diff_dr:8;
    };
}vdtop_phase_diff_dr_rst_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  secam_phase_diff_db:8;
    };
}vdtop_phase_diff_db_rst_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  secam_gain_drdb_en:1;
        RBus_UInt32  secam_gain_drdb:7;
    };
}vdtop_drdb_gain_table_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  secam_gain_y_en:1;
        RBus_UInt32  secam_gain_y:7;
    };
}vdtop_y_gain_table_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  secam_gain_delay:5;
    };
}vdtop_secam_gain_dly_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  secam_gain_debug_en:1;
        RBus_UInt32  secam_gain_debug:7;
    };
}vdtop_secam_gain_table_debug_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  new_secam_phase_diff_hcount_en:1;
        RBus_UInt32  new_secam_phase_diff_hcount:7;
    };
}vdtop_new_secam_hcount_reset_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  new_secam_phase_diff_dr:8;
    };
}vdtop_new_secam_phase_diff_dr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  new_secam_phase_diff_db:8;
    };
}vdtop_new_secam_phase_diff_db_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  new_secam_cdto_inc:30;
    };
}vdtop_new_secam_cdto_inc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_gp_en:1;
        RBus_UInt32  res1:9;
        RBus_UInt32  secam_gp_step:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  secam_gp_thl:10;
    };
}vdtop_secam_gp_rm_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  disp_black_image_main_debug_sel:1;
        RBus_UInt32  disp_black_image_main_debug_en:1;
        RBus_UInt32  disp_black_image_sub_debug_sel:1;
        RBus_UInt32  disp_black_image_sub_debug_en:1;
        RBus_UInt32  vdec_disp_black_image_sub_en:1;
        RBus_UInt32  vdec_disp_black_image_main_en:1;
        RBus_UInt32  vdec_disp_black_image_27:1;
        RBus_UInt32  new_vloop_enable_fail_occur:1;
        RBus_UInt32  old_vloop_enable_fail_occur:1;
        RBus_UInt32  new_vdetect_count_change_occur:1;
        RBus_UInt32  old_vdetect_count_change_occur:1;
        RBus_UInt32  new_vunlock_occur:1;
        RBus_UInt32  vunlock_occur:1;
        RBus_UInt32  hunlock_occur:1;
        RBus_UInt32  data_dc_occur:1;
        RBus_UInt32  vdec_disp_black_image_en:1;
        RBus_UInt32  change_signal_new_vloop_enable_fail_en:1;
        RBus_UInt32  change_signal_old_vloop_enable_fail_en:1;
        RBus_UInt32  change_signal_new_vdetect_count_change_en:1;
        RBus_UInt32  change_signal_old_vdetect_count_change_en:1;
        RBus_UInt32  change_signal_new_vunlock_en:1;
        RBus_UInt32  change_signal_vunlock_en:1;
        RBus_UInt32  change_signal_hunlock_en:1;
        RBus_UInt32  change_signal_data_dc_en:1;
        RBus_UInt32  change_signal_detect_en:1;
    };
}vdtop_change_signal_ctrl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  data_dc_detect_num_thr:6;
        RBus_UInt32  data_dc_detect_val_thr_up:12;
        RBus_UInt32  data_dc_detect_val_thr_low:12;
    };
}vdtop_change_signal_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  hunlock_line_count_th:9;
        RBus_UInt32  old_vloop_enable_fail_thr:11;
        RBus_UInt32  new_vloop_enable_fail_thr:11;
    };
}vdtop_change_signal_ctrl_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vdec_ps_disp_27_en:1;
        RBus_UInt32  hresampler_combi_delay:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  vd_output_135_sel:1;
        RBus_UInt32  vd_output_27_repeat_sel:1;
        RBus_UInt32  vd_output_27_repeat_en:1;
        RBus_UInt32  res2:16;
        RBus_UInt32  v8format_sel:1;
        RBus_UInt32  res3:4;
        RBus_UInt32  ps_updn_swap:1;
        RBus_UInt32  res4:1;
        RBus_UInt32  fifo_initialization:1;
    };
}vdtop_fifo_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  ps_540_coe_en:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  ps_540_select_tap:5;
        RBus_UInt32  res3:1;
        RBus_UInt32  ps_540_coe_modify:7;
        RBus_UInt32  res4:6;
        RBus_UInt32  fifo_full_status:1;
        RBus_UInt32  fifo_empty_status:1;
    };
}vdtop_fifo_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:9;
        RBus_UInt32  ps_psel_status:3;
        RBus_UInt32  res2:2;
        RBus_UInt32  ps_dn_status:1;
        RBus_UInt32  ps_up_status:1;
        RBus_UInt32  res3:3;
        RBus_UInt32  ps_ndiv_status:5;
        RBus_UInt32  pll_i_gain:8;
    };
}vdtop_i_gain_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:10;
        RBus_UInt32  phase_swallow_fix_start:1;
        RBus_UInt32  fifo_wo_ps:1;
        RBus_UInt32  fifo_depth_wo_ps:8;
        RBus_UInt32  res2:1;
        RBus_UInt32  swallow_freq_sel:3;
        RBus_UInt32  swallow_on_vsync:1;
        RBus_UInt32  ndivload_en:1;
        RBus_UInt32  ps_up_en:1;
        RBus_UInt32  ps_dn_en:1;
        RBus_UInt32  pll_div:4;
    };
}vdtop_misc_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:23;
        RBus_UInt32  fifo_depth_min_clr:1;
        RBus_UInt32  fifo_depth_min_status:8;
    };
}vdtop_fifo_depth_min_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:23;
        RBus_UInt32  fifo_depth_max_clr:1;
        RBus_UInt32  fifo_depth_max_status:8;
    };
}vdtop_fifo_depth_max_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  ps_up_i:1;
        RBus_UInt32  ps_dn_i:1;
        RBus_UInt32  res2:4;
        RBus_UInt32  ps_divload:1;
        RBus_UInt32  ps_pselload:1;
    };
}vdtop_pll_debug_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  pll_debug_en:1;
        RBus_UInt32  ps_psel:3;
        RBus_UInt32  ps_ndiv:4;
    };
}vdtop_pll_debug_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:11;
        RBus_UInt32  ps_fix_en:1;
        RBus_UInt32  ps_fix_value:8;
        RBus_UInt32  ps_new_kikp:1;
        RBus_UInt32  ps_new_kp:3;
        RBus_UInt32  res2:2;
        RBus_UInt32  cnt_en:1;
        RBus_UInt32  period_sel:2;
        RBus_UInt32  lpf_en:1;
        RBus_UInt32  k_sel:2;
    };
}vdtop_disp_fsync_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_wo_ps_read_repeat_en:1;
        RBus_UInt32  fifo_wo_ps_clk_jump:1;
        RBus_UInt32  fifo_wo_ps_err_act:1;
        RBus_UInt32  fifo_wo_ps_adapt:1;
        RBus_UInt32  fifo_wo_ps_hlen_min:12;
        RBus_UInt32  fifo_depth_wo_ps_min:8;
        RBus_UInt32  fifo_depth_wo_ps_max:8;
    };
}vdtop_fifo_wo_ps_func_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  fifo_wo_ps_ps_up_i1:1;
        RBus_UInt32  fifo_wo_ps_ps_dn_i1:1;
        RBus_UInt32  fifo_wo_ps_ps_pselload1:1;
        RBus_UInt32  fifo_wo_ps_ps_divload1:1;
        RBus_UInt32  fifo_wo_ps_ps_psel1:3;
        RBus_UInt32  fifo_wo_ps_ps_ndiv1:5;
        RBus_UInt32  fifo_wo_ps_ps_up_i0:1;
        RBus_UInt32  fifo_wo_ps_ps_dn_i0:1;
        RBus_UInt32  fifo_wo_ps_ps_pselload0:1;
        RBus_UInt32  fifo_wo_ps_ps_divload0:1;
        RBus_UInt32  fifo_wo_ps_ps_psel0:3;
        RBus_UInt32  fifo_wo_ps_ps_ndiv0:5;
    };
}vdtop_fifo_wo_ps_clk_state_parameter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  stable_fifo_depth:8;
        RBus_UInt32  res2:3;
        RBus_UInt32  fifo_clk_state:1;
        RBus_UInt32  fifo_out_line_len:12;
    };
}vdtop_fifo_status_no_pll_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  data_blue_mode_cb:8;
        RBus_UInt32  data_blue_mode_cr:8;
        RBus_UInt32  data_blue_mode_y:8;
        RBus_UInt32  debug_test_enable:1;
        RBus_UInt32  debug_test:7;
    };
}vdtop_debug_mux_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  data_blue_mode_sel:1;
        RBus_UInt32  data_blue_mode_en:1;
        RBus_UInt32  muxanalogb:4;
        RBus_UInt32  muxanaloga:4;
    };
}vdtop_video_debug_analog_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:24;
        RBus_UInt32  clk_dac_polarity:1;
        RBus_UInt32  clk_sct_polarity:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  debug_test_dac_en:1;
        RBus_UInt32  muxdigital:4;
    };
}vdtop_video_debug_digital_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  vd_on:1;
        RBus_UInt32  patgen_vline_vactive_end:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  patgen_vline:10;
        RBus_UInt32  patgen_vline_en:1;
        RBus_UInt32  fifo_out_pattern_gen_en:1;
        RBus_UInt32  pattern_gen_scart_en:1;
        RBus_UInt32  crc_chk_sel:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  pattern_gen_input_mode_sel:1;
        RBus_UInt32  pattern_gen_cvbs_mode:1;
        RBus_UInt32  pattern_generator_enable:1;
    };
}vdtop_pattern_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  crc_result:32;
    };
}vdtop_crc_result3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:23;
        RBus_UInt32  clk_vdadc_polarity:1;
        RBus_UInt32  clk_polarity:1;
        RBus_UInt32  patgen_sync_gain:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  patgen_burst_gain:3;
    };
}vdtop_patgen_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  bist_mode_out:1;
        RBus_UInt32  bist_mode_fifo:1;
        RBus_UInt32  bist_mode_dma:1;
        RBus_UInt32  bist_mode_27_2:1;
        RBus_UInt32  bist_mode_27_1:1;
    };
}vdtop_bist_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  bist_done_out:1;
        RBus_UInt32  bist_done_fifo:1;
        RBus_UInt32  bist_done_dma:1;
        RBus_UInt32  bist_done_27_2:1;
        RBus_UInt32  bist_done_27_1:1;
    };
}vdtop_bist_done_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  bist_fail_out:1;
        RBus_UInt32  bist_fail_fifo:1;
        RBus_UInt32  bist_fail_dma:1;
        RBus_UInt32  bist_fail_27_2:1;
        RBus_UInt32  bist_fail_27_1:1;
    };
}vdtop_bist_fail_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  bist_drf_mode_out:1;
        RBus_UInt32  bist_drf_mode_fifo:1;
        RBus_UInt32  bist_drf_mode_dma:1;
        RBus_UInt32  bist_drf_mode_27_2:1;
        RBus_UInt32  bist_drf_mode_27_1:1;
    };
}vdtop_bist_drf_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  bist_drf_resume_out:1;
        RBus_UInt32  bist_drf_resume_fifo:1;
        RBus_UInt32  bist_drf_resume_dma:1;
        RBus_UInt32  bist_drf_resume_27_2:1;
        RBus_UInt32  bist_drf_resume_27_1:1;
    };
}vdtop_bist_drf_resume_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  bist_drf_done_out:1;
        RBus_UInt32  bist_drf_done_fifo:1;
        RBus_UInt32  bist_drf_done_dma:1;
        RBus_UInt32  bist_drf_done_27_2:1;
        RBus_UInt32  bist_drf_done_27_1:1;
    };
}vdtop_bist_drf_done_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  bist_drf_pause_out:1;
        RBus_UInt32  bist_drf_pause_fifo:1;
        RBus_UInt32  bist_drf_pause_dma:1;
        RBus_UInt32  bist_drf_pause_27_2:1;
        RBus_UInt32  bist_drf_pause_27_1:1;
    };
}vdtop_bist_drf_pause_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:27;
        RBus_UInt32  bist_drf_fail_out:1;
        RBus_UInt32  bist_drf_fail_fifo:1;
        RBus_UInt32  bist_drf_fail_dma:1;
        RBus_UInt32  bist_drf_fail_27_2:1;
        RBus_UInt32  bist_drf_fail_27_1:1;
    };
}vdtop_bist_drf_fail_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  bist_mem_fail_27_2:8;
        RBus_UInt32  bist_mem_fail_27_1:10;
    };
}vdtop_bist_fail_27_1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  bist_mem_fail_out:4;
        RBus_UInt32  bist_mem_fail_fifo:1;
        RBus_UInt32  bist_mem_fail_dma:5;
    };
}vdtop_bist_fail_dma_out_fifo_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  bist_drf_mem_fail_27_2:8;
        RBus_UInt32  bist_drf_mem_fail_27_1:10;
    };
}vdtop_bist_drf_fail_27_1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  bist_drf_mem_fail_out:4;
        RBus_UInt32  bist_drf_mem_fail_fifo:1;
        RBus_UInt32  bist_drf_mem_fail_dma:5;
    };
}vdtop_bist_drf_fail_dma_out_fifo_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:14;
        RBus_UInt32  bist_test1_27_2_7:1;
        RBus_UInt32  bist_test1_27_2_6:1;
        RBus_UInt32  bist_test1_27_2_5:1;
        RBus_UInt32  bist_test1_27_2_4:1;
        RBus_UInt32  bist_test1_27_2_3:1;
        RBus_UInt32  bist_test1_27_2_2:1;
        RBus_UInt32  bist_test1_27_2_1:1;
        RBus_UInt32  bist_test1_27_2_0:1;
        RBus_UInt32  bist_test1_27_1_9:1;
        RBus_UInt32  bist_test1_27_1_8:1;
        RBus_UInt32  bist_test1_27_1_7:1;
        RBus_UInt32  bist_test1_27_1_6:1;
        RBus_UInt32  bist_test1_27_1_5:1;
        RBus_UInt32  bist_test1_27_1_4:1;
        RBus_UInt32  bist_test1_27_1_3:1;
        RBus_UInt32  bist_test1_27_1_2:1;
        RBus_UInt32  bist_test1_27_1_1:1;
        RBus_UInt32  bist_test1_27_1_0:1;
    };
}vdtop_bist_test_27_1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:16;
        RBus_UInt32  bist_test1_out_3:1;
        RBus_UInt32  bist_test1_out_2:1;
        RBus_UInt32  bist_test1_out_1:1;
        RBus_UInt32  bist_test1_out_0:1;
        RBus_UInt32  bist_test1_dma_test1b_4:1;
        RBus_UInt32  bist_test1_dma_test1a_4:1;
        RBus_UInt32  bist_test1_dma_test1b_3:1;
        RBus_UInt32  bist_test1_dma_test1a_3:1;
        RBus_UInt32  bist_test1_dma_test1b_2:1;
        RBus_UInt32  bist_test1_dma_test1a_2:1;
        RBus_UInt32  bist_test1_dma_test1b_1:1;
        RBus_UInt32  bist_test1_dma_test1a_1:1;
        RBus_UInt32  bist_test1_dma_test1b_0:1;
        RBus_UInt32  bist_test1_dma_test1a_0:1;
        RBus_UInt32  bist_test1_fifo_test1b_0:1;
        RBus_UInt32  bist_test1_fifo_test1a_0:1;
    };
}vdtop_bist_test_dma_out_fifo_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  mbist_dvs_out:4;
        RBus_UInt32  mbist_dvse_out:1;
        RBus_UInt32  mbist_dvs_fifo:4;
        RBus_UInt32  mbist_dvse_fifo:1;
        RBus_UInt32  mbist_dvs_dma:4;
        RBus_UInt32  mbist_dvse_dma:1;
        RBus_UInt32  mbist_dvs_27_2:4;
        RBus_UInt32  mbist_dvse_27_2:1;
        RBus_UInt32  mbist_dvs_27_1:4;
        RBus_UInt32  mbist_dvse_27_1:1;
    };
}vdtop_bist_dvse_dvs_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:19;
        RBus_UInt32  mbist_ls_cntl:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  mbist_dvs_fifo_2:4;
        RBus_UInt32  mbist_dvse_fifo_2:1;
        RBus_UInt32  mbist_dvs_dma_2:4;
        RBus_UInt32  mbist_dvse_dma_2:1;
    };
}vdtop_bist_dvse_dvs2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ycbcr_moniter_en:1;
        RBus_UInt32  moniter_field:1;
        RBus_UInt32  vstate_non_eq_3_flag:1;
        RBus_UInt32  moniter_size:4;
        RBus_UInt32  moniter_v_addr:9;
        RBus_UInt32  res1:5;
        RBus_UInt32  moniter_h_addr:11;
    };
}vdtop_ycbcr_moniter_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:22;
        RBus_UInt32  vd_yout_moniter:10;
    };
}vdtop_ycbcr_moniter_value_y_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:6;
        RBus_UInt32  vd_crout_moniter:10;
        RBus_UInt32  res2:6;
        RBus_UInt32  vd_cbout_moniter:10;
    };
}vdtop_ycbcr_moniter_value_cbcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  moniter_y_value:8;
        RBus_UInt32  moniter_cb_value:8;
        RBus_UInt32  moniter_cr_value:8;
        RBus_UInt32  res1:5;
        RBus_UInt32  adc_updn_debug_en:1;
        RBus_UInt32  adc_updn_debug_up:1;
        RBus_UInt32  adc_updn_debug_dn:1;
    };
}vdtop_adc_updn_ctrl_RBUS;

#else //apply LITTLE_ENDIAN

//======VDTOP register structure define==========

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  colour_mode:3;
        RBus_UInt32  vline_625:1;
        RBus_UInt32  hpixel:2;
        RBus_UInt32  hv_delay:1;
        RBus_UInt32  res2:21;
        RBus_UInt32  secam_eq_share_sel:1;
        RBus_UInt32  phase_108_start_set:2;
    };
}vdtop_video_control0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ped:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  dark_yc_src:1;
        RBus_UInt32  yc_src:1;
        RBus_UInt32  cv_src:1;
        RBus_UInt32  cv_inv:1;
        RBus_UInt32  vd_pq_bypass_en:1;
        RBus_UInt32  ycsepdata_burstin_en:1;
        RBus_UInt32  patterngen_power_on_en:1;
        RBus_UInt32  dark_cpll_power_on_en:1;
        RBus_UInt32  avout_power_on_en:1;
        RBus_UInt32  secam_power_on_en:1;
        RBus_UInt32  scart_power_on_en:1;
        RBus_UInt32  sv_power_on_en:1;
        RBus_UInt32  smixer_ycadjust_power_on:1;
        RBus_UInt32  ycsep_power_on:1;
        RBus_UInt32  res2:14;
    };
}vdtop_video_control1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  no_signal:1;
        RBus_UInt32  hlock:1;
        RBus_UInt32  vlock:1;
        RBus_UInt32  chomalock:1;
        RBus_UInt32  mov_vbi_detected:1;
        RBus_UInt32  mov_colour_inverse:3;
        RBus_UInt32  h_fine_lock:1;
        RBus_UInt32  chromalock_acc:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  hlock_longtime:1;
        RBus_UInt32  vlock_longtime:1;
        RBus_UInt32  hvlock_longtime:1;
        RBus_UInt32  if_cr_lock:1;
        RBus_UInt32  res2:16;
    };
}vdtop_video_status_reg1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  proscan_detected:1;
        RBus_UInt32  palm_flag:1;
        RBus_UInt32  palor_flag:1;
        RBus_UInt32  burst_detect:1;
        RBus_UInt32  detect443_flag:1;
        RBus_UInt32  noisy_vbi:1;
        RBus_UInt32  vlock_new:1;
        RBus_UInt32  detect358_flag:1;
        RBus_UInt32  v_detect_flag:1;
        RBus_UInt32  firtst_vsync_detected:1;
        RBus_UInt32  old_vdetect_stable:1;
        RBus_UInt32  new_vdetect_stable:1;
        RBus_UInt32  res1:20;
    };
}vdtop_video_status_reg2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pal_detected:1;
        RBus_UInt32  secam_detected:1;
        RBus_UInt32  lines_625_detected:1;
        RBus_UInt32  noisy:1;
        RBus_UInt32  vcr:1;
        RBus_UInt32  vcr_trick:1;
        RBus_UInt32  vcr_ff:1;
        RBus_UInt32  vcr_rew:1;
        RBus_UInt32  res1:24;
    };
}vdtop_video_status_reg3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdto_inc_status:30;
        RBus_UInt32  res1:2;
    };
}vdtop_hdto_inc_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cdto_inc_status:30;
        RBus_UInt32  res1:2;
    };
}vdtop_cdto_inc_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_magnitude:8;
        RBus_UInt32  res1:24;
    };
}vdtop_avg_burst_mag_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc_dgain:12;
        RBus_UInt32  res1:20;
    };
}vdtop_agc_dgain_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  status_cmag:8;
        RBus_UInt32  res1:24;
    };
}vdtop_cmag_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  status_cgain:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  status_cgain_data:14;
        RBus_UInt32  res2:2;
    };
}vdtop_cgain_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  status_cordiq_freq:8;
        RBus_UInt32  res1:24;
    };
}vdtop_cordic_freq_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  v_1st_line:10;
        RBus_UInt32  res1:22;
    };
}vdtop_measure_first_v_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  v_2nd_line:10;
        RBus_UInt32  res1:22;
    };
}vdtop_measure_second_v_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  porch_h:13;
        RBus_UInt32  res1:19;
    };
}vdtop_porch_height_m_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  status_noise:8;
        RBus_UInt32  res1:24;
    };
}vdtop_noise_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  noise_thresh:8;
        RBus_UInt32  res1:24;
    };
}vdtop_noise_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  line_count_27x_upper:12;
        RBus_UInt32  res1:4;
        RBus_UInt32  line_count_27x_lower:12;
        RBus_UInt32  res2:4;
    };
}vdtop_h_line_measure_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  line_count_27x_avg:12;
        RBus_UInt32  res1:20;
    };
}vdtop_h_line_measure_result_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdto_inc:30;
        RBus_UInt32  res1:1;
        RBus_UInt32  hdto_fixed:1;
    };
}vdtop_hsync_dto_inc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cdto_inc:30;
        RBus_UInt32  res1:1;
        RBus_UInt32  cdto_fixed:1;
    };
}vdtop_chroma_dto_inc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  chip_ver:16;
        RBus_UInt32  res1:16;
    };
}vdtop_chip_ver_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  blank_vid_offset_value:11;
        RBus_UInt32  res1:1;
        RBus_UInt32  blank_vid_offset_manu_en:1;
        RBus_UInt32  res2:19;
    };
}vdtop_blank_vid_offset_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  contrast:8;
        RBus_UInt32  res1:24;
    };
}vdtop_luma_contrast_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  brightness:8;
        RBus_UInt32  res1:24;
    };
}vdtop_luma_brightness_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  saturation:8;
        RBus_UInt32  res1:24;
    };
}vdtop_chroma_saturation_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hue:8;
        RBus_UInt32  res1:24;
    };
}vdtop_chroma_hue_phase_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  blue_screen_y:8;
        RBus_UInt32  res1:24;
    };
}vdtop_blue_screen_y_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  blue_screen_cb:8;
        RBus_UInt32  res1:24;
    };
}vdtop_blue_screen_cb_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  blue_screen_cr:8;
        RBus_UInt32  res1:24;
    };
}vdtop_blue_screen_cr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  yc_delay:4;
        RBus_UInt32  blue_mode:2;
        RBus_UInt32  cbcr_swap:1;
        RBus_UInt32  snow_freerun_en:1;
        RBus_UInt32  motion_delay:4;
        RBus_UInt32  res1:20;
    };
}vdtop_output_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  clamp_if_dn_en:1;
        RBus_UInt32  clamp_if_up_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  sw_tu_cvbs:1;
        RBus_UInt32  fe_bypass_sel:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  avout_hsync_end:10;
        RBus_UInt32  res3:2;
        RBus_UInt32  avout_hsync_start:10;
        RBus_UInt32  res4:2;
    };
}vdtop_inout_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avout_fifo_status_empty:1;
        RBus_UInt32  avout_fifo_status_full:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  avout_mixer_sel:4;
        RBus_UInt32  res2:3;
        RBus_UInt32  avout_test_in:12;
        RBus_UInt32  output_delay_0_180_sw:1;
        RBus_UInt32  output_fifo_empty:1;
        RBus_UInt32  output_fifo_full:1;
        RBus_UInt32  res3:5;
    };
}vdtop_avout_fifo_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avout_ifdebug_sel:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  avout_ifdebug_shift:4;
        RBus_UInt32  avout_ifdebug_mask:12;
        RBus_UInt32  avout_ifdebug_inv:12;
    };
}vdtop_avout_ifdebug_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ramp_counter_num:24;
        RBus_UInt32  ramp_updn_sel:1;
        RBus_UInt32  ramp_en:1;
        RBus_UInt32  res1:6;
    };
}vdtop_avout1_ifdebug_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc_peak_nominal:7;
        RBus_UInt32  hagc_err_coring_en:1;
        RBus_UInt32  peak_deb_thl:8;
        RBus_UInt32  peak_deb_limit:9;
        RBus_UInt32  peak_data_sel:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  peak_diff_sel:2;
        RBus_UInt32  res2:1;
        RBus_UInt32  peak_deb_en:1;
    };
}vdtop_agc_peak_nominal_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc_peak_cntl:3;
        RBus_UInt32  agc_peak_en:1;
        RBus_UInt32  agc_gate_kill_mode:2;
        RBus_UInt32  agc_gate_vsync_stip:1;
        RBus_UInt32  agc_gate_vsync_coarse:1;
        RBus_UInt32  agc_gate_kill_w_hlock:1;
        RBus_UInt32  agc_gate_kill_mode_sel:2;
        RBus_UInt32  res1:1;
        RBus_UInt32  agc_peak_nominal_ycsep:12;
        RBus_UInt32  ycsep_data_decrease_ratio:3;
        RBus_UInt32  ycsep_data_decrease_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  chroma_path_dgain_after_en:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  dgain_i_cntl_without_trunc_en:1;
    };
}vdtop_agc_peak_and_gate_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc_peak_loop_gain:2;
        RBus_UInt32  hagc_err_coring_th:5;
        RBus_UInt32  unlock_peakrst_en:1;
        RBus_UInt32  diff_level:12;
        RBus_UInt32  peak_gain:12;
    };
}vdtop_agc_peak_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hagc_en:1;
        RBus_UInt32  cagc_en:1;
        RBus_UInt32  bgate_raw_sel:1;
        RBus_UInt32  vclamp_n_gate_sel:1;
        RBus_UInt32  dc_clamp_mode:2;
        RBus_UInt32  mov_hagc_mode:1;
        RBus_UInt32  hagc_field_mode:1;
        RBus_UInt32  under_gain:12;
        RBus_UInt32  dgain_state:2;
        RBus_UInt32  res1:6;
        RBus_UInt32  fix_dgain:1;
        RBus_UInt32  mov_detect_sel:1;
        RBus_UInt32  res2:2;
    };
}vdtop_video_control2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hagc:8;
        RBus_UInt32  dgain_status_counter:12;
        RBus_UInt32  peak_under_round_thl:8;
        RBus_UInt32  peak_under_round_en:1;
        RBus_UInt32  dgain_status_triger:1;
        RBus_UInt32  res1:2;
    };
}vdtop_luma_agc_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc_gate_start:11;
        RBus_UInt32  res1:1;
        RBus_UInt32  diff_gain_sel:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  dgain_ki:3;
        RBus_UInt32  res3:1;
        RBus_UInt32  dgain_kp:3;
        RBus_UInt32  res4:9;
    };
}vdtop_agc_gate_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc_gate_width:7;
        RBus_UInt32  res1:1;
        RBus_UInt32  data_path_dgain_limit_low:12;
        RBus_UInt32  data_path_dgain_limit_up:12;
    };
}vdtop_agc_gate_width_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc_bp_delay:8;
        RBus_UInt32  res1:24;
    };
}vdtop_agc_bp_delay_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  clampagc_under_th2:6;
        RBus_UInt32  res1:26;
    };
}vdtop_clampagc_compluma_new_threshold2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  clampagc_under_th1:4;
        RBus_UInt32  res1:3;
        RBus_UInt32  under_flag:1;
        RBus_UInt32  agc_under_loop_gain:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  data_path_dgain_div2_en:1;
        RBus_UInt32  ypeak_wide_iir_en:1;
        RBus_UInt32  res3:2;
        RBus_UInt32  ypeak_wide_iir_in_coef:8;
        RBus_UInt32  res4:8;
    };
}vdtop_clampagc_compluma_new_threshold1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  blank_vid_offset:1;
        RBus_UInt32  clampagc_under_en:1;
        RBus_UInt32  clampagc_under_cntl:6;
        RBus_UInt32  under_deb_thl:8;
        RBus_UInt32  under_deb_limit:9;
        RBus_UInt32  res1:3;
        RBus_UInt32  under_diff_sel:2;
        RBus_UInt32  under_gate_en:1;
        RBus_UInt32  under_deb_en:1;
    };
}vdtop_clampagc_compluma_new_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_agc_min:7;
        RBus_UInt32  res1:1;
        RBus_UInt32  under_gate_st:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  under_gate_end:10;
        RBus_UInt32  res3:2;
    };
}vdtop_vsync_agc_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_agc_max:6;
        RBus_UInt32  vsync_clamp_mode:2;
        RBus_UInt32  peak_gate_st:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  peak_gate_end:10;
        RBus_UInt32  res2:1;
        RBus_UInt32  peak_gate_en:1;
    };
}vdtop_vsync_agc_lockout_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cpump_delay_en:1;
        RBus_UInt32  cpump_adjust_polarity:1;
        RBus_UInt32  cpump_adjust_delay:6;
        RBus_UInt32  auto_dc_restore_disable_ad1_updn:1;
        RBus_UInt32  auto_dc_restore_disable_ad2_updn:1;
        RBus_UInt32  auto_dc_restore_disable_ad3_updn:1;
        RBus_UInt32  auto_dc_restore_disable_ad4_updn:1;
        RBus_UInt32  auto_dc_restore_en0:1;
        RBus_UInt32  auto_dc_restore_en1:1;
        RBus_UInt32  auto_dc_restore_en2:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  auto_dc_restore_sel:3;
        RBus_UInt32  res2:13;
    };
}vdtop_charge_pump_delay_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cpump_adjust:8;
        RBus_UInt32  bgate_raw_length:8;
        RBus_UInt32  res1:16;
    };
}vdtop_charge_pump_adjustment_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cpump_delay:8;
        RBus_UInt32  res1:24;
    };
}vdtop_charge_pump_delay_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  agc_gate_thresh:5;
        RBus_UInt32  adc_cbcr_pump_swap:1;
        RBus_UInt32  adc_input_swap:1;
        RBus_UInt32  adc_updn_swap:1;
        RBus_UInt32  cvbs_clamp_length_max:7;
        RBus_UInt32  res1:1;
        RBus_UInt32  sv_rgb_clamp_length_max:7;
        RBus_UInt32  res2:1;
        RBus_UInt32  cvbs_clamp_length_limit_en:1;
        RBus_UInt32  sv_rgb_clamp_length_limit_en:1;
        RBus_UInt32  res3:6;
    };
}vdtop_agc_gate_th_swap_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  clampagc_rc_rate:4;
        RBus_UInt32  new_clamp_rc_rate_en:1;
        RBus_UInt32  measure_dc_rough:1;
        RBus_UInt32  dgain_ignore_fine_lock:1;
        RBus_UInt32  measure_dc_128_64_sel:1;
        RBus_UInt32  first_dgain_integral_fw_mode_en:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  first_dgain_integral_value:20;
    };
}vdtop_new_clampagc_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  measure_dc_rough_dn:8;
        RBus_UInt32  res1:4;
        RBus_UInt32  first_dgain_int_value_status:20;
    };
}vdtop_measure_dc_rough_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  measure_dc_rough_up:8;
        RBus_UInt32  second_dgain_integral_fw_mode_en:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  second_dgain_integral_value:20;
    };
}vdtop_measure_dc_rough_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  measure_dc_th_dn:12;
        RBus_UInt32  second_dgain_int_value_status:20;
    };
}vdtop_measure_dc_th_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  measure_dc_th_up:12;
        RBus_UInt32  res1:20;
    };
}vdtop_measure_dc_th_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsag_agc_peak_cntl:6;
        RBus_UInt32  res1:1;
        RBus_UInt32  vsag_rc_input:1;
        RBus_UInt32  res2:24;
    };
}vdtop_vsag_cntl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  peak_vsag:13;
        RBus_UInt32  res1:19;
    };
}vdtop_peak_vsag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  field_kill_rst:1;
        RBus_UInt32  lose_bgate_flag:1;
        RBus_UInt32  lose_sgate_flag:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  new_under_th2_en:1;
        RBus_UInt32  new_under_gain_en:1;
        RBus_UInt32  new_total_under_en:1;
        RBus_UInt32  res2:25;
    };
}vdtop_kill_field_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  field_kill_num:10;
        RBus_UInt32  res1:22;
    };
}vdtop_field_kill_mun_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  kill_gate_up:11;
        RBus_UInt32  res1:21;
    };
}vdtop_kill_gate_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  kill_gate_dn:11;
        RBus_UInt32  res1:21;
    };
}vdtop_kill_gate_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:1;
        RBus_UInt32  sync_midpt_lowest_en:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  syncmidpt_add_level_h:2;
        RBus_UInt32  res3:26;
    };
}vdtop_syncmidpt_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  syncmidpt_fix_add_value_h:8;
        RBus_UInt32  res1:24;
    };
}vdtop_syncmidpt_fix_add_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lpfsync_plus_diff:6;
        RBus_UInt32  res1:1;
        RBus_UInt32  lpfsync_plus_rm:1;
        RBus_UInt32  lpfsync_plus_w_hlock:2;
        RBus_UInt32  res2:22;
    };
}vdtop_lpfsync_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  spike_min_thresh:8;
        RBus_UInt32  res1:24;
    };
}vdtop_spike_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  spike_max_thresh:8;
        RBus_UInt32  res1:24;
    };
}vdtop_spike_max_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  spike_detected_up:10;
        RBus_UInt32  spike_detected:1;
        RBus_UInt32  res1:21;
    };
}vdtop_spike_detected_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  spike_detected_dn:10;
        RBus_UInt32  res1:22;
    };
}vdtop_spike_detected_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lpfsync_plus_dc:8;
        RBus_UInt32  res1:24;
    };
}vdtop_lpfsync_plus_dc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_error_avg_sel:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  hdetect_error_avg_length:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  hdetect_error_avg_interval:2;
        RBus_UInt32  res3:1;
        RBus_UInt32  hstate_error_rst:1;
        RBus_UInt32  hstate_error_dn_count:8;
        RBus_UInt32  hstate_error_thl:8;
        RBus_UInt32  res4:4;
    };
}vdtop_hdetect_err_var_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_error_mean:16;
        RBus_UInt32  hdetect_error_var:16;
    };
}vdtop_hdetect_err_var_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  locked_count_clean_max:4;
        RBus_UInt32  locked_count_noisy_max:4;
        RBus_UInt32  locked_count_vcrtrick_max:4;
        RBus_UInt32  hstate_vsync_error_start:7;
        RBus_UInt32  res1:1;
        RBus_UInt32  hstate_vsync_error_end:7;
        RBus_UInt32  res2:1;
        RBus_UInt32  hstate_vsync_error_num_thr:4;
    };
}vdtop_lock_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hstate_max:3;
        RBus_UInt32  hstate_unlocked:1;
        RBus_UInt32  disable_hfine:1;
        RBus_UInt32  hstate_fixed:1;
        RBus_UInt32  hlock_vsync_mode:2;
        RBus_UInt32  hstate_vsync_error_unbalance:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  hstate_vsync_error_hlock_en:1;
        RBus_UInt32  hstate_vsync_error_vlock_en:1;
        RBus_UInt32  hstate_vsync_error_noisy_en:1;
        RBus_UInt32  hstate_vsync_error_num_en:1;
        RBus_UInt32  hstate_vsync_error_value_en:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  hstate_vsync_error_sel:2;
        RBus_UInt32  res3:2;
        RBus_UInt32  hstate_vsync_error_unbalance_en:1;
        RBus_UInt32  hstate_vsync_error_unbalance_status:1;
        RBus_UInt32  res4:6;
    };
}vdtop_h_loop_maxstate_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gate_end_thresh:5;
        RBus_UInt32  fine_gate_sel:1;
        RBus_UInt32  coarse_src_sel:1;
        RBus_UInt32  fine_src_sel:1;
        RBus_UInt32  coarse_phase_rising_en:1;
        RBus_UInt32  hpll_fine_lock_data_sel:1;
        RBus_UInt32  auto_fine_phase_sel_en:1;
        RBus_UInt32  fine_hstate_to_5:1;
        RBus_UInt32  auto_fine_phase_sel:1;
        RBus_UInt32  hstate_ignore_err:1;
        RBus_UInt32  hstate_hlock_sel:1;
        RBus_UInt32  cpll_hpll_use_front_vactive:1;
        RBus_UInt32  fine_phase_error_thl:10;
        RBus_UInt32  res1:6;
    };
}vdtop_clampagc_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coarse_sync_start:7;
        RBus_UInt32  res1:1;
        RBus_UInt32  hstate_vsync_error_noisy_upper_th:8;
        RBus_UInt32  hstate_vsync_error_noisy_lower_th:8;
        RBus_UInt32  res2:8;
    };
}vdtop_clampagc_new_sync_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coarse_sync_end:8;
        RBus_UInt32  hstate_vsync_error_abs_thr:8;
        RBus_UInt32  hstate_vsync_error_value_thr:8;
        RBus_UInt32  res1:8;
    };
}vdtop_clampagc_new_sync_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coarse_backporch_start:7;
        RBus_UInt32  agc_trailing_sel:1;
        RBus_UInt32  hstate_err:14;
        RBus_UInt32  res1:10;
    };
}vdtop_clampagc_new_backporch_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coarse_backporch_end:8;
        RBus_UInt32  hstate_err_in_vcount:10;
        RBus_UInt32  res1:14;
    };
}vdtop_clampagc_new_backporch_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fine_phase_sel:1;
        RBus_UInt32  coarse_phase_sel:1;
        RBus_UInt32  killgate_sel:1;
        RBus_UInt32  agc_clamping_trailing_sel:1;
        RBus_UInt32  nosignal_hlock_check_en:1;
        RBus_UInt32  lpfsync_force_blank_en:1;
        RBus_UInt32  res1:26;
    };
}vdtop_hdetect_phase_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsync_tip_start:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hdetect_counter_tip_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lsync_tip_end:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hdetect_counter_tip_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lporch_start:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hdetect_counter_backporch_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lporch_end:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hdetect_counter_backporch_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_integral_ext:1;
        RBus_UInt32  hpll_integral_rst:1;
        RBus_UInt32  res1:30;
    };
}vdtop_hpll_integral_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hstate_status:3;
        RBus_UInt32  hstate_loopfilter_sw:1;
        RBus_UInt32  hstate_vcr_max:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  hstate_impn_max:3;
        RBus_UInt32  mode_vcr_setting_change_en:1;
        RBus_UInt32  cstate_impn_max:3;
        RBus_UInt32  impulsive_noise_disable_pll_en:1;
        RBus_UInt32  vsync_freerun_when_unstable_en_vcr:1;
        RBus_UInt32  second_pll_en_vcr:1;
        RBus_UInt32  dgain_ignore_fine_lock_vcr:1;
        RBus_UInt32  gate_iir_v_sel_vcr:1;
        RBus_UInt32  gate_iir_h_sel_vcr:1;
        RBus_UInt32  new_hpll_lpf_sel_vcr:1;
        RBus_UInt32  agc_gate_kill_mode_vcr:2;
        RBus_UInt32  vsync_freerun_when_unstable_en_status:1;
        RBus_UInt32  second_pll_en_status:1;
        RBus_UInt32  dgain_ignore_fine_lock_status:1;
        RBus_UInt32  gate_iir_v_sel_status:1;
        RBus_UInt32  gate_iir_h_sel_status:1;
        RBus_UInt32  new_hpll_lpf_sel_status:1;
        RBus_UInt32  agc_gate_kill_mode_status:2;
    };
}vdtop_hdetect_loopfilter_sw_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_loopfilter_dctrl2:4;
        RBus_UInt32  hdetect_loopfilter_dctrl1:4;
        RBus_UInt32  res1:24;
    };
}vdtop_hdetect_loopfilter_dctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_start:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hsync_pulse_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_width:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hsync_pulse_width_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hresampler_2up:1;
        RBus_UInt32  hresampler_app_sel:1;
        RBus_UInt32  hresampler_app_alpha_sel:1;
        RBus_UInt32  res1:29;
    };
}vdtop_chroma_hresampler_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_kp_coef_0:6;
        RBus_UInt32  res1:1;
        RBus_UInt32  hpll_manu_mode_en:1;
        RBus_UInt32  res2:24;
    };
}vdtop_hpll_kp_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_kp_coef_1:6;
        RBus_UInt32  res1:26;
    };
}vdtop_hpll_kp_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_kp_coef_2:6;
        RBus_UInt32  res1:26;
    };
}vdtop_hpll_kp_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_kp_coef_3:6;
        RBus_UInt32  res1:26;
    };
}vdtop_hpll_kp_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_kp_coef_4:6;
        RBus_UInt32  res1:26;
    };
}vdtop_hpll_kp_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_kp_coef_5:6;
        RBus_UInt32  res1:26;
    };
}vdtop_hpll_kp_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_ki_coef_0:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hpll_ki_0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_ki_coef_1:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hpll_ki_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_ki_coef_2:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hpll_ki_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_ki_coef_3:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hpll_ki_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_ki_coef_4:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hpll_ki_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hpll_ki_coef_5:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hpll_ki_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_pll_en:1;
        RBus_UInt32  second_pll_w_hlock:1;
        RBus_UInt32  second_pll_phase_sel:1;
        RBus_UInt32  second_pll_clampgate_sel:1;
        RBus_UInt32  second_pll_gain_sel:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  second_pll_level_sel:2;
        RBus_UInt32  res2:22;
    };
}vdtop_second_pll_gain_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_pll_dc_rm:12;
        RBus_UInt32  second_pll_dc_add:12;
        RBus_UInt32  second_pll_sync_level:8;
    };
}vdtop_second_pll_gain1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_comp_slevel:12;
        RBus_UInt32  second_comp_blevel:12;
        RBus_UInt32  res1:8;
    };
}vdtop_second_pll_gain2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_dgain:12;
        RBus_UInt32  second_trailing:8;
        RBus_UInt32  res1:12;
    };
}vdtop_second_pll_gain3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  second_hsync_tip_end:8;
        RBus_UInt32  second_hsync_tip_start:8;
        RBus_UInt32  second_backporch_end:8;
        RBus_UInt32  second_backporch_start:8;
    };
}vdtop_second_pll_gain4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  under_min_err_thl:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  under_line_err_thl:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  under_count_reset:1;
        RBus_UInt32  under_detected_flag:1;
        RBus_UInt32  second_pll_kill_en:1;
        RBus_UInt32  headswitch_debounce_en:1;
        RBus_UInt32  res3:4;
    };
}vdtop_under_new_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  under_field_err_thl:10;
        RBus_UInt32  res1:22;
    };
}vdtop_under_new_th2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  under_debounce_max:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  under_debounce_thl:10;
        RBus_UInt32  res2:10;
    };
}vdtop_under_new_th3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coch_avg_line1_diff_thre_lo:12;
        RBus_UInt32  coch_avg_line1_diff_thre_up:12;
        RBus_UInt32  res1:7;
        RBus_UInt32  coch_detected_by_check_dc:1;
    };
}vdtop_dc_coch_seperate_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coch_detect_counter_lo_thre:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  coch_detect_counter_up_thre:10;
        RBus_UInt32  res2:9;
        RBus_UInt32  coch_detect_lpf_reset:1;
    };
}vdtop_dc_coch_seperate_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_rising:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hsync_rising_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_phase_offset:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hsync_phase_offset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_gate_start:8;
        RBus_UInt32  res1:4;
        RBus_UInt32  secam_gp_hcount_start:10;
        RBus_UInt32  res2:10;
    };
}vdtop_hsync_gate_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_gate_end:8;
        RBus_UInt32  res1:4;
        RBus_UInt32  secam_gp_hcount_end:10;
        RBus_UInt32  res2:10;
    };
}vdtop_hsync_gate_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_tip_start:8;
        RBus_UInt32  res1:4;
        RBus_UInt32  secam_gp_vcount_start_o:10;
        RBus_UInt32  res2:10;
    };
}vdtop_hsync_tip_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_tip_end:8;
        RBus_UInt32  res1:4;
        RBus_UInt32  secam_gp_vcount_end_o:10;
        RBus_UInt32  res2:10;
    };
}vdtop_hsync_tip_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_rising_start:8;
        RBus_UInt32  res1:4;
        RBus_UInt32  secam_gp_vcount_start_e:10;
        RBus_UInt32  res2:10;
    };
}vdtop_hsync_rising_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hsync_rising_end:8;
        RBus_UInt32  res1:4;
        RBus_UInt32  secam_gp_vcount_end_e:10;
        RBus_UInt32  res2:10;
    };
}vdtop_hsync_rising_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  backporch_start:8;
        RBus_UInt32  front_porch_gate_start:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  front_porch_level_pixel_sel:3;
        RBus_UInt32  front_porch_level_line_sel:1;
        RBus_UInt32  front_porch_level_data_sel:1;
        RBus_UInt32  front_porch_detect_en:1;
        RBus_UInt32  res2:6;
    };
}vdtop_backproch_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  backporch_end:8;
        RBus_UInt32  vclamp_n_gate:10;
        RBus_UInt32  res1:14;
    };
}vdtop_backporch_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hblank_start:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hblank_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hblank_end:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hblank_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_gate_start:8;
        RBus_UInt32  secam_burst_gate_start:8;
        RBus_UInt32  res1:16;
    };
}vdtop_burst_gate_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_gate_end:8;
        RBus_UInt32  secam_burst_gate_end:8;
        RBus_UInt32  res1:16;
    };
}vdtop_burst_gate_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hactive_start:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hactive_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hactive_width:8;
        RBus_UInt32  res1:24;
    };
}vdtop_hactive_width_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_hstate_4_phase_max:13;
        RBus_UInt32  res1:3;
        RBus_UInt32  hdetect_hstate_3_phase_max:13;
        RBus_UInt32  res2:2;
        RBus_UInt32  hdetect_hstate_phase_max_en:1;
    };
}vdtop_hdetect_err_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_err00_th:8;
        RBus_UInt32  hdetect_err04_th:8;
        RBus_UInt32  hdetect_hstate_5_phase_max:13;
        RBus_UInt32  res1:3;
    };
}vdtop_hdetect_err_th2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cstate_status:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  cstate_cntl:2;
        RBus_UInt32  new_cstate:1;
        RBus_UInt32  new_c_state_i:1;
        RBus_UInt32  cpll_use_fine_or_final_hlock:1;
        RBus_UInt32  cpll_cgain_reset_en:1;
        RBus_UInt32  res2:22;
    };
}vdtop_cstate_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gate_iir_v_sel:1;
        RBus_UInt32  gate_iir_h_sel:1;
        RBus_UInt32  new_hpll_lpf_sel:1;
        RBus_UInt32  res1:5;
        RBus_UInt32  coef_syncmidpt_fir_in:8;
        RBus_UInt32  level_fir_num_32_64_slevel:1;
        RBus_UInt32  level_fir_num_32_64_blevel:1;
        RBus_UInt32  s_b_level_fir_en:1;
        RBus_UInt32  res2:13;
    };
}vdtop_hdetect_gate_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gate_iir_coef1:8;
        RBus_UInt32  hsync_refind:1;
        RBus_UInt32  hsync_refind_mask_err:1;
        RBus_UInt32  headswitch_err_sel:2;
        RBus_UInt32  res1:20;
    };
}vdtop_hdetect_gate_coef1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gate_iir_coef2:8;
        RBus_UInt32  hdetect_err07_th:8;
        RBus_UInt32  res1:16;
    };
}vdtop_hdetect_gate_coef2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vphase_status:8;
        RBus_UInt32  hstate_err_counter:2;
        RBus_UInt32  res1:6;
        RBus_UInt32  hstate_err_thl:14;
        RBus_UInt32  res2:2;
    };
}vdtop_hdetect_vphase_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vphasediff_status:8;
        RBus_UInt32  hdetect_err01_th:8;
        RBus_UInt32  hdetect_err10_th:8;
        RBus_UInt32  hdetect_err05_th:8;
    };
}vdtop_hdetect_vphasediff_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  noise_vbi_thresh:8;
        RBus_UInt32  res1:24;
    };
}vdtop_noise_vbi_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coch_detected_frame:6;
        RBus_UInt32  res1:1;
        RBus_UInt32  coch_detected_status:1;
        RBus_UInt32  res2:24;
    };
}vdtop_vbi_co_ch_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coch_bp_diff_th:4;
        RBus_UInt32  res1:28;
    };
}vdtop_vbi_co_ch_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  coch_line_count_th:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vbi_co_ch_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mov_window2_value:8;
        RBus_UInt32  res1:24;
    };
}vdtop_mov_detect_window_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ad_burst_gate_start:8;
        RBus_UInt32  res1:24;
    };
}vdtop_mov_burstgate_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ad_burst_gate_end:8;
        RBus_UInt32  res1:24;
    };
}vdtop_mov_burstgate_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cinverse_detect_control:3;
        RBus_UInt32  res1:29;
    };
}vdtop_color_inverse_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  h_err_constraint_low_th:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  h_err_constraint_high_th:14;
        RBus_UInt32  res2:1;
        RBus_UInt32  h_err_constraint_en:1;
    };
}vdtop_h_err_constraint_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  h_err_constraint_val:13;
        RBus_UInt32  h_err_constraint_hstate:3;
        RBus_UInt32  res1:16;
    };
}vdtop_h_err_constraint_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_save_stable_hdto_start:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  hdetect_restore_vcr_enable:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  hdetect_set_hdto_start:10;
        RBus_UInt32  hdetect_force_hdto_en:1;
        RBus_UInt32  hdetect_restore_hdto_status:1;
        RBus_UInt32  hdetect_set_new_hdto_n:3;
        RBus_UInt32  hdetect_restore_hdto_en:1;
    };
}vdtop_h_restore_hdto_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hdetect_set_hdto_phase_err_th:14;
        RBus_UInt32  res1:18;
    };
}vdtop_h_restore_hdto_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wrong_if_pc_detect:1;
        RBus_UInt32  res1:7;
        RBus_UInt32  sync_level_manu_en:1;
        RBus_UInt32  res2:7;
        RBus_UInt32  sync_level_manu:8;
        RBus_UInt32  wrong_if_pc_detect_th:8;
    };
}vdtop_if_wrong_pc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cpll_phase_thr_dn:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  cpll_phase_thr_up:14;
        RBus_UInt32  res2:2;
    };
}vdtop_cpll_stability_observe_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cpll_stable_flag:1;
        RBus_UInt32  cpll_phase_small_flag:1;
        RBus_UInt32  cpll_ampl_neg_flag:1;
        RBus_UInt32  res1:13;
        RBus_UInt32  cerror_continune_same_sign_thr:6;
        RBus_UInt32  res2:2;
        RBus_UInt32  cpll_ampl_thr:7;
        RBus_UInt32  res3:1;
    };
}vdtop_cpll_stability_observe_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  phase_out_line_iir:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  ampl_out_line_iir:14;
        RBus_UInt32  res2:2;
    };
}vdtop_cpll_stability_observe_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  herror_neg_pos_value_total_thr:4;
        RBus_UInt32  herror_neg_pos_num_total_thr:4;
        RBus_UInt32  herror_continune_same_sign_thr:6;
        RBus_UInt32  res1:2;
        RBus_UInt32  herror_pos_neg_value_diff_thr:16;
    };
}vdtop_hpll_stability_observe_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  herror_pos_value:16;
        RBus_UInt32  herror_neg_value:16;
    };
}vdtop_hpll_stability_observe_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  herror_stable_state_hold_en:1;
        RBus_UInt32  herror_pos_neg_value_even:1;
        RBus_UInt32  herror_pos_neg_num_even:1;
        RBus_UInt32  res1:5;
        RBus_UInt32  herror_neg_pos_num_win_thr:7;
        RBus_UInt32  res2:1;
        RBus_UInt32  herror_neg_pos_err_th:13;
        RBus_UInt32  res3:3;
    };
}vdtop_hpll_stability_observe_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_sec1_start:9;
        RBus_UInt32  res1:7;
        RBus_UInt32  statistic_h_phase_diff_sec1_end:9;
        RBus_UInt32  res2:7;
    };
}vdtop_h_phase_diff_statistics_set_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_sec2_start:9;
        RBus_UInt32  res1:7;
        RBus_UInt32  statistic_h_phase_diff_sec2_end:9;
        RBus_UInt32  res2:7;
    };
}vdtop_h_phase_diff_statistics_set_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_hitso_level1:13;
        RBus_UInt32  res1:3;
        RBus_UInt32  statistic_h_phase_diff_hitso_level2:13;
        RBus_UInt32  res2:3;
    };
}vdtop_h_phase_diff_statistics_set_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_hitso_level3:13;
        RBus_UInt32  res1:3;
        RBus_UInt32  statistic_h_phase_diff_hitso_level4:13;
        RBus_UInt32  res2:3;
    };
}vdtop_h_phase_diff_statistics_set_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_hitso_level5:13;
        RBus_UInt32  res1:19;
    };
}vdtop_h_phase_diff_statistics_set_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_0:10;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_1:10;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_2:10;
        RBus_UInt32  res1:1;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_ready:1;
    };
}vdtop_h_phase_diff_sec1_histogram_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_3:10;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_4:10;
        RBus_UInt32  statistic_h_phase_diff_sec1_histo_5:10;
        RBus_UInt32  res1:2;
    };
}vdtop_h_phase_diff_sec1_histogram_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_0:10;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_1:10;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_2:10;
        RBus_UInt32  res1:1;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_ready:1;
    };
}vdtop_h_phase_diff_sec2_histogram_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_3:10;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_4:10;
        RBus_UInt32  statistic_h_phase_diff_sec2_histo_5:10;
        RBus_UInt32  res1:2;
    };
}vdtop_h_phase_diff_sec2_histogram_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_line_num:6;
        RBus_UInt32  res1:10;
        RBus_UInt32  statistic_data_level_diff_th:14;
        RBus_UInt32  data_level_diff_iir_en:1;
        RBus_UInt32  iir_up_speed_on:1;
    };
}vdtop_data_level_statistics_set_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_sec1_max:12;
        RBus_UInt32  statistic_data_level_sec1_min:12;
        RBus_UInt32  res1:7;
        RBus_UInt32  statistic_data_level_ready:1;
    };
}vdtop_data_level_statistics_sec1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_sec2_max:12;
        RBus_UInt32  statistic_data_level_sec2_min:12;
        RBus_UInt32  res1:8;
    };
}vdtop_data_level_statistics_sec2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_sec3_max:12;
        RBus_UInt32  statistic_data_level_sec3_min:12;
        RBus_UInt32  res1:8;
    };
}vdtop_data_level_statistics_sec3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_sec4_max:12;
        RBus_UInt32  statistic_data_level_sec4_min:12;
        RBus_UInt32  res1:8;
    };
}vdtop_data_level_statistics_sec4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_sec5_max:12;
        RBus_UInt32  statistic_data_level_sec5_min:12;
        RBus_UInt32  res1:8;
    };
}vdtop_data_level_statistics_sec5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_sec6_max:12;
        RBus_UInt32  statistic_data_level_sec6_min:12;
        RBus_UInt32  res1:8;
    };
}vdtop_data_level_statistics_sec6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_sec7_max:12;
        RBus_UInt32  statistic_data_level_sec7_min:12;
        RBus_UInt32  res1:8;
    };
}vdtop_data_level_statistics_sec7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_data_level_sec8_max:12;
        RBus_UInt32  statistic_data_level_sec8_min:12;
        RBus_UInt32  res1:8;
    };
}vdtop_data_level_statistics_sec8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hlock_time:22;
        RBus_UInt32  res1:10;
    };
}vdtop_hlock_time_polling_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vlock_time:22;
        RBus_UInt32  res1:10;
    };
}vdtop_vlock_time_polling_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vstate_eq3_time:22;
        RBus_UInt32  res1:10;
    };
}vdtop_vstatelock_time_polling_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  no_signal_fall_time:22;
        RBus_UInt32  res1:10;
    };
}vdtop_no_signal_fall_time_polling_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_threshold:6;
        RBus_UInt32  vsync_cntl:2;
        RBus_UInt32  num_old_vdetect_stable_fields:8;
        RBus_UInt32  old_vdetect_line_count_max:10;
        RBus_UInt32  res1:6;
    };
}vdtop_vsync_cntl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop_tc3:2;
        RBus_UInt32  field_detect_mode:2;
        RBus_UInt32  vodd_delayed:1;
        RBus_UInt32  veven_delayed:1;
        RBus_UInt32  flip_field:1;
        RBus_UInt32  field_polarity:1;
        RBus_UInt32  num_new_vdetect_stable_fields:8;
        RBus_UInt32  res1:16;
    };
}vdtop_vsync_time_const_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop_tc2:7;
        RBus_UInt32  res1:25;
    };
}vdtop_vsync_time_const2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop_tc1:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vsync_time_const1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  serration_threshold:8;
        RBus_UInt32  res1:24;
    };
}vdtop_serration_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  no_signal_dec:3;
        RBus_UInt32  vsync_delay_2d_delta_en:1;
        RBus_UInt32  vsync_delay_2d_delta:4;
        RBus_UInt32  vsync_delay_2d:4;
        RBus_UInt32  vsync_delay_1d:4;
        RBus_UInt32  vsync_delay_en:1;
        RBus_UInt32  vsync_delay_sel:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  hlock_field_cnt:4;
        RBus_UInt32  vlock_field_cnt:4;
        RBus_UInt32  hvlock_field_cnt:4;
    };
}vdtop_no_signal_dec_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vactive_start:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vactive_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vactive_height:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vactive_height_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_h_min:7;
        RBus_UInt32  res1:25;
    };
}vdtop_vsync_h_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_h_max:7;
        RBus_UInt32  res1:25;
    };
}vdtop_vsync_h_max_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_vbi_min:7;
        RBus_UInt32  res1:25;
    };
}vdtop_vsync_vbi_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_vbi_max:7;
        RBus_UInt32  vlock_wide_range:1;
        RBus_UInt32  res1:24;
    };
}vdtop_vsync_vbi_lockout_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  syncmidpt_add_level:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  vsync_625_midpt_en:1;
        RBus_UInt32  midpt_rough_vdetect_en:1;
        RBus_UInt32  midpt_625_dc_th_en:1;
        RBus_UInt32  syncmidpt_dc_rough:1;
        RBus_UInt32  vsync_ser_num_max_def:6;
        RBus_UInt32  res2:2;
        RBus_UInt32  vsync_ser_num_bigger_10_en:1;
        RBus_UInt32  res3:15;
    };
}vdtop_midpt_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  syncmidpt_fix_add_value:8;
        RBus_UInt32  res1:24;
    };
}vdtop_midpt_fix_add_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  midpt_625_dc_th:8;
        RBus_UInt32  res1:24;
    };
}vdtop_midpt_625_dc_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sync_dc_offset_th:12;
        RBus_UInt32  res1:20;
    };
}vdtop_sync_dc_offset_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sync_midpt_625:12;
        RBus_UInt32  res1:20;
    };
}vdtop_sync_dc_offset_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sync_midpt_h:12;
        RBus_UInt32  res1:20;
    };
}vdtop_sync_midpt_h_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sync_midpt_v:12;
        RBus_UInt32  res1:20;
    };
}vdtop_sync_midpt_v_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_line_length_en:1;
        RBus_UInt32  adc_lpf_sel:3;
        RBus_UInt32  res1:2;
        RBus_UInt32  vdetect_pattern_sel:2;
        RBus_UInt32  vlock_sel:1;
        RBus_UInt32  hpll_no_signal_sel:1;
        RBus_UInt32  no_signal_to_0_sel:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  no_signal_hpll_out:1;
        RBus_UInt32  res3:3;
        RBus_UInt32  raw_vdetect_max_sel:2;
        RBus_UInt32  res4:2;
        RBus_UInt32  new_vdetect_feature_max_core:11;
        RBus_UInt32  res5:1;
    };
}vdtop_sync_midpt_v2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_lpf_coef2:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef1:10;
        RBus_UInt32  res2:6;
    };
}vdtop_adc_27_lpf_coef_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_lpf_coef4:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef3:10;
        RBus_UInt32  res2:6;
    };
}vdtop_adc_27_lpf_coef_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_lpf_coef6:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef5:10;
        RBus_UInt32  res2:6;
    };
}vdtop_adc_27_lpf_coef_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_lpf_coef8:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef7:10;
        RBus_UInt32  res2:6;
    };
}vdtop_adc_27_lpf_coef_4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_lpf_coefa:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coef9:10;
        RBus_UInt32  res2:6;
    };
}vdtop_adc_27_lpf_coef_5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_lpf_coefc:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  adc_lpf_coefb:10;
        RBus_UInt32  res2:6;
    };
}vdtop_adc_27_lpf_coef_6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_line_length:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vdetect_line_lenght_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_window_manu_en:1;
        RBus_UInt32  new_vdetect_window_en:1;
        RBus_UInt32  no_vsync_flag_en:1;
        RBus_UInt32  new_vdetect_force_en:1;
        RBus_UInt32  res1:28;
    };
}vdtop_vdetect_window_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_window:12;
        RBus_UInt32  res1:20;
    };
}vdtop_vdetect_window_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vsync_offset_manul:3;
        RBus_UInt32  new_vsync_offset_manul_mode_en:1;
        RBus_UInt32  new_vdetect_vcount_window_en:1;
        RBus_UInt32  vloss_detect_en:1;
        RBus_UInt32  gate_sel:1;
        RBus_UInt32  new_vdetect_en:1;
        RBus_UInt32  new_vdetect_coch_en:1;
        RBus_UInt32  new_vdetect_max_limit_en:1;
        RBus_UInt32  new_vdetect_first_vsync_sel:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  new_vdetect_max_limit_value:12;
        RBus_UInt32  new_vdetect_maxmin_data_rc_en:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  new_vdetect_maxmin_data_rc_rate:4;
    };
}vdtop_new_vdetect_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  vsync_fine_window_state1_en:1;
        RBus_UInt32  force_new_vdetect_fine_window:1;
        RBus_UInt32  new_vloss_flag:1;
        RBus_UInt32  no_vsync_flag:1;
        RBus_UInt32  new_vdetect_feature_th_manul_en:1;
        RBus_UInt32  old_hdetect_lpf_en:1;
        RBus_UInt32  res2:24;
    };
}vdtop_new_vdetect_loop_th2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_loop_core_th:10;
        RBus_UInt32  res1:22;
    };
}vdtop_new_vdetect_loop_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_diff_offset:12;
        RBus_UInt32  res1:20;
    };
}vdtop_new_vdetect_diff_offset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_fine_start:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  new_vdetect_loss_max:6;
        RBus_UInt32  res2:2;
        RBus_UInt32  vsync_fine_start1:10;
        RBus_UInt32  res3:2;
    };
}vdtop_vsync_fine_start_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vsync_fine_end:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  new_vdetect_loss_up:6;
        RBus_UInt32  res2:2;
        RBus_UInt32  vsync_fine_end1:10;
        RBus_UInt32  res3:2;
    };
}vdtop_vsync_fine_end_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  no_vsync_th_lo:4;
        RBus_UInt32  no_vsync_th_hi:4;
        RBus_UInt32  res1:24;
    };
}vdtop_no_vsync_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_fine_vphase_th:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  new_vdetect_loss_dn:6;
        RBus_UInt32  res2:14;
    };
}vdtop_new_vdetect_vphase_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_feature_th1:8;
        RBus_UInt32  res1:24;
    };
}vdtop_new_vdetect_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_feature_th2:8;
        RBus_UInt32  res1:24;
    };
}vdtop_new_vdetect_th2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_feature_th3:8;
        RBus_UInt32  res1:24;
    };
}vdtop_new_vdetect_th3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vdetect_feature_th4:8;
        RBus_UInt32  new_vdetect_feature_th5:8;
        RBus_UInt32  new_vdetect_feature_th6:8;
        RBus_UInt32  new_vdetect_feature_th7:8;
    };
}vdtop_new_vdetect_th4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vpll_hw_reset_function_en:1;
        RBus_UInt32  vpll_hw_reset_new_en:1;
        RBus_UInt32  vpll_hw_reset_old_en:1;
        RBus_UInt32  vpll_hw_reset_i_ctrl_replace:1;
        RBus_UInt32  vpll_hw_reset_flag_625_change:1;
        RBus_UInt32  vpll_hw_reset_time:1;
        RBus_UInt32  vpll_hw_reset_vstate_leave_3:1;
        RBus_UInt32  vpll_hw_reset_vstate_reset_to_0:1;
        RBus_UInt32  vpll_hw_reset_vstate_non_eq_3:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  vpll_hw_reset_time_after_reset:9;
        RBus_UInt32  vstate_to_3_en:1;
        RBus_UInt32  vstate_to_3_new_v_stable_en:1;
        RBus_UInt32  vstate_to_3_old_v_stable_en:1;
        RBus_UInt32  vphase_error_eq0_num:6;
        RBus_UInt32  vstate_to_3:1;
        RBus_UInt32  res2:1;
    };
}vdtop_vpll_hw_reset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vstate_2to3_er:4;
        RBus_UInt32  res1:4;
        RBus_UInt32  vsync_refind:1;
        RBus_UInt32  res2:3;
        RBus_UInt32  vsync_refind_con_sel:2;
        RBus_UInt32  vstate_reset:2;
        RBus_UInt32  vsync_stable_en:1;
        RBus_UInt32  res3:3;
        RBus_UInt32  vstate0_counter_num:8;
        RBus_UInt32  vstate0_direct_vsync:1;
        RBus_UInt32  vsync_refind_toggle:1;
        RBus_UInt32  vsync_refind_sel:2;
    };
}vdtop_vstate_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vstate_back1_er:4;
        RBus_UInt32  vstate_1to2_er:4;
        RBus_UInt32  hsync_refind_max:7;
        RBus_UInt32  vstate1_err_sel:1;
        RBus_UInt32  hsync_refind_min:7;
        RBus_UInt32  vstate_new2to3_en:1;
        RBus_UInt32  vstate_2to3_th:8;
    };
}vdtop_vstate_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vstate_counter_num:8;
        RBus_UInt32  hsync_reset_for_data:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  hsync_reset_for_vsync:10;
        RBus_UInt32  res2:2;
    };
}vdtop_vstate_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vcr_back_en:1;
        RBus_UInt32  vstate_sw:2;
        RBus_UInt32  vstate_sw_en:1;
        RBus_UInt32  vstate_status:2;
        RBus_UInt32  vstate_back_to_0_at_625_change:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  vsync_vertical_sum_num:5;
        RBus_UInt32  res2:3;
        RBus_UInt32  vstate3_err_adjust_th:4;
        RBus_UInt32  vstate3_err_adjust_en:1;
        RBus_UInt32  res3:3;
        RBus_UInt32  vphase_error_window:8;
    };
}vdtop_vstate_ctrl3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop0_tc1:8;
        RBus_UInt32  vstate3_counter_num:8;
        RBus_UInt32  res1:16;
    };
}vdtop_vloop0_tc1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop0_tc2:7;
        RBus_UInt32  res1:25;
    };
}vdtop_vloop0_tc2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop2_tc1:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vloop2_tc1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop2_tc2:7;
        RBus_UInt32  res1:25;
    };
}vdtop_vloop2_tc2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop3_tc1:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vloop3_tc1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop3_tc2:7;
        RBus_UInt32  res1:25;
    };
}vdtop_vloop3_tc2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vloop3_tc3:2;
        RBus_UInt32  vloop2_tc3:2;
        RBus_UInt32  vloop0_tc3:2;
        RBus_UInt32  res1:26;
    };
}vdtop_vloop_tc3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vlock_count:3;
        RBus_UInt32  new_vdetect_lock_en:1;
        RBus_UInt32  flag_cgain_too_big_kill:1;
        RBus_UInt32  flag_user_kill:1;
        RBus_UInt32  flag_chrmaunlock_kill:1;
        RBus_UInt32  res1:25;
    };
}vdtop_vlock_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vlock_window:8;
        RBus_UInt32  vsync_detect_core_thl:11;
        RBus_UInt32  res1:1;
        RBus_UInt32  vsync_detect_count_thl:6;
        RBus_UInt32  res2:2;
        RBus_UInt32  vsync_detect_crlock_en:1;
        RBus_UInt32  res3:2;
        RBus_UInt32  vsync_detect_rst:1;
    };
}vdtop_vlock_window_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vlock_phase_plus:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vlock_phase_plus_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vline_adj_cnt_a:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vline_adj_cnt_a_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vline_adj_cnt_b:8;
        RBus_UInt32  res1:24;
    };
}vdtop_vline_adj_cnt_b_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  table_hactive_width:8;
        RBus_UInt32  res1:24;
    };
}vdtop_table_hactive_width_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vlines_freerun:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  vlines_diff_flag:1;
        RBus_UInt32  vlines_the_same_flag:1;
        RBus_UInt32  vsync_freerun_when_unstable_en:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  vlines_the_same_cnt_thr:4;
        RBus_UInt32  res3:12;
    };
}vdtop_vsync_pll_freerun_mux_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  old_vdetect_line_count:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  new_vdetect_line_count:10;
        RBus_UInt32  res2:6;
    };
}vdtop_vsync_old_new_line_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cloop_i_ctrl_modify_range:22;
        RBus_UInt32  res1:2;
        RBus_UInt32  cloop_i_ctrl_modify_en:1;
        RBus_UInt32  res2:7;
    };
}vdtop_cloop_i_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cagc:8;
        RBus_UInt32  cagc_data_input_sel:2;
        RBus_UInt32  cagc_pll_input_sel:2;
        RBus_UInt32  res1:16;
        RBus_UInt32  fix_cgain:1;
        RBus_UInt32  res2:3;
    };
}vdtop_chroma_agc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  chroma_kill:4;
        RBus_UInt32  hlock_ckill:1;
        RBus_UInt32  vbi_ckill:1;
        RBus_UInt32  user_ckill_mode:2;
        RBus_UInt32  ckill_sel:1;
        RBus_UInt32  res1:23;
    };
}vdtop_chroma_kill_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  lose_chromalock_ckill:1;
        RBus_UInt32  lose_chromalock_level:3;
        RBus_UInt32  lose_chromalock_count:4;
        RBus_UInt32  chromalock_input_acc_num:2;
        RBus_UInt32  chromalock_input_acc_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  lose_acc_chromalock_level:3;
        RBus_UInt32  res2:17;
    };
}vdtop_chroma_lock_config_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cagc_igain:2;
        RBus_UInt32  flag358_cresample_lpf_sel:2;
        RBus_UInt32  res1:3;
        RBus_UInt32  cnew_gate_en:1;
        RBus_UInt32  res2:24;
    };
}vdtop_chroma_loopfilter_gain_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fixed_cstate:1;
        RBus_UInt32  cstate:3;
        RBus_UInt32  cresample_lpf_sel:2;
        RBus_UInt32  secam_cresample_lpf_sel:2;
        RBus_UInt32  cloop_freq_offset_limit:12;
        RBus_UInt32  cloop_freq_offset_limit_en:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  cresample_signed_en:1;
        RBus_UInt32  res2:7;
    };
}vdtop_chroma_loopfilter_state_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cautopos:5;
        RBus_UInt32  fixed_burstgate:1;
        RBus_UInt32  chroma_burst5or10:1;
        RBus_UInt32  res1:25;
    };
}vdtop_chroma_autopos_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ckill_lb_sel:1;
        RBus_UInt32  ckill_vsync_delay_en:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  chromalock_cstate:3;
        RBus_UInt32  chromalock_cstate_en:1;
        RBus_UInt32  res2:24;
    };
}vdtop_ckill_lb_sel_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ckill_level_user_mode_value:14;
        RBus_UInt32  res1:1;
        RBus_UInt32  ckill_level_user_mode_en:1;
        RBus_UInt32  ckill_level_user_offset:14;
        RBus_UInt32  res2:1;
        RBus_UInt32  ckill_level_user_offset_en:1;
    };
}vdtop_ckill_gain_kill_thl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  badedit_line_num:3;
        RBus_UInt32  bad_phase_detect:1;
        RBus_UInt32  badedit_pulse_detect:1;
        RBus_UInt32  badedit_phase_lock_en:1;
        RBus_UInt32  phase_fast_lock_en:1;
        RBus_UInt32  fast_lock_en:1;
        RBus_UInt32  badedit_out_noise_thr:8;
        RBus_UInt32  badedit_in_noise_thr:8;
        RBus_UInt32  badedit_noisy_off_en:1;
        RBus_UInt32  res1:7;
    };
}vdtop_cstate_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  badedit_th:8;
        RBus_UInt32  res1:24;
    };
}vdtop_badedit_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  badphase_th:8;
        RBus_UInt32  res1:24;
    };
}vdtop_badphase_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cstate_line_num:8;
        RBus_UInt32  res1:24;
    };
}vdtop_cstate_line_num_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  chroma_agc_peak_cnt:6;
        RBus_UInt32  chroma_peak_en:1;
        RBus_UInt32  new_cgain_level_en:1;
        RBus_UInt32  chroma_peak_en_pll:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  cpeak_noise_thr1:8;
        RBus_UInt32  cpeak_noise_thr2:8;
        RBus_UInt32  cpeak_noisy_act_en:1;
        RBus_UInt32  cpeak_noisy_act_en_pll:1;
        RBus_UInt32  cpeak_gain_no_trunc_en:1;
        RBus_UInt32  res2:1;
    };
}vdtop_chroma_agc_peak_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  chroma_agc_peak_nominal:11;
        RBus_UInt32  res1:21;
    };
}vdtop_chroma_agc_peak_nominal_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cagc_upper:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  cagc_upper_xroot2_en:1;
        RBus_UInt32  close_ckill_loopfilter:1;
        RBus_UInt32  res2:14;
    };
}vdtop_close_ckill_loopfilter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cagc_peak_err_diff_sel:6;
        RBus_UInt32  cagc_burst_err_adj_en:1;
        RBus_UInt32  cagc_peak_err_adj_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_cagc_peak_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cagc_burst_err_diff_sel:6;
        RBus_UInt32  res1:26;
    };
}vdtop_cagc_peak_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cagc_peak_luma_ratio:6;
        RBus_UInt32  cdata_measure_lpf_en:1;
        RBus_UInt32  cdata_measure_big:1;
        RBus_UInt32  cdata_measure_thr:9;
        RBus_UInt32  res1:3;
        RBus_UInt32  cdata_measure_keep_line_num:10;
        RBus_UInt32  res2:2;
    };
}vdtop_cagc_peak_ctrl3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cr_delay:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  cb_delay:3;
        RBus_UInt32  res2:25;
    };
}vdtop_chroma_delay_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_cgain_x4_en:1;
        RBus_UInt32  flag_burst_x4:1;
        RBus_UInt32  res1:30;
    };
}vdtop_burst_cgain_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_cgain_mag_th:8;
        RBus_UInt32  res1:24;
    };
}vdtop_burst_cgain_mag_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  flag358_cdto_inc:30;
        RBus_UInt32  flag358_iir_cunlock_en:1;
        RBus_UInt32  flag358_iir_en:1;
    };
}vdtop_flag358_cdto_inc4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_coef_sel:1;
        RBus_UInt32  auto_burst_location_en:1;
        RBus_UInt32  burst_location_rst_en:1;
        RBus_UInt32  burst_location_lpf_reset:1;
        RBus_UInt32  burst_location_sel:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  burst_location_fix:11;
        RBus_UInt32  res2:1;
        RBus_UInt32  burst_location_center_modify_en:1;
        RBus_UInt32  burst_location_center_modify_sel:3;
        RBus_UInt32  burst_location_sel_modify_en:1;
        RBus_UInt32  burst_location_sel_modify_sel:3;
        RBus_UInt32  normal_burst_locationreg_en:1;
        RBus_UInt32  burst_location_selreg_en:1;
        RBus_UInt32  burst_location_sel_clock:1;
        RBus_UInt32  burst_location_fix_en:1;
    };
}vdtop_separate_443_358_new_function_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  normal_burst_location:11;
        RBus_UInt32  res1:5;
        RBus_UInt32  burst_location_result:11;
        RBus_UInt32  res2:5;
    };
}vdtop_separate_443_358_new_function_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wide_burst_location_start:11;
        RBus_UInt32  res1:1;
        RBus_UInt32  wide_burst_location_startreg_en:1;
        RBus_UInt32  wide_burst_location_endreg_en:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  wide_burst_location_end:11;
        RBus_UInt32  res3:1;
        RBus_UInt32  wide_burst_location_modify_en:1;
        RBus_UInt32  wide_burst_location_modify_sel:3;
    };
}vdtop_separate_443_358_new_function_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  normal_burst_location_status:11;
        RBus_UInt32  res1:1;
        RBus_UInt32  burst_location_sel_status:2;
        RBus_UInt32  res2:18;
    };
}vdtop_burst_location_status_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  wide_burst_location_start_status:11;
        RBus_UInt32  res1:5;
        RBus_UInt32  wide_burst_location_end_status:11;
        RBus_UInt32  res2:5;
    };
}vdtop_burst_location_status_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sep_hsync_end:11;
        RBus_UInt32  res1:5;
        RBus_UInt32  sep_hsync_start:11;
        RBus_UInt32  res2:5;
    };
}vdtop_burst_location_hsync_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_location_auto_thr:8;
        RBus_UInt32  burst_location_magnitude_thr:8;
        RBus_UInt32  burst_location_enable_mode:8;
        RBus_UInt32  res1:4;
        RBus_UInt32  burst_location_auto_en:1;
        RBus_UInt32  res2:3;
    };
}vdtop_burst_location_fw_cntl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  y_path_coef_value:11;
        RBus_UInt32  res1:1;
        RBus_UInt32  y_path_coef_num:7;
        RBus_UInt32  res2:11;
        RBus_UInt32  y_path_eq_bypass_sel:1;
        RBus_UInt32  y_path_eq_en:1;
    };
}vdtop_y_path_eq_filter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  y_path_coef_value_r:11;
        RBus_UInt32  res1:1;
        RBus_UInt32  y_path_coef_num_r:7;
        RBus_UInt32  res2:13;
    };
}vdtop_y_path_eq_filter_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  palm_atone_counter:6;
        RBus_UInt32  flag625_vsync_l_th:1;
        RBus_UInt32  flag625_vsync_l_sel:1;
        RBus_UInt32  res1:24;
    };
}vdtop_palm_flag_compensation1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  palm_atone_threshold:8;
        RBus_UInt32  res1:24;
    };
}vdtop_palm_flag_compensation2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  manual_mode_select:3;
        RBus_UInt32  state_machine_reset:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  auto_burst_switch_625only:1;
        RBus_UInt32  auto_625only_en:1;
        RBus_UInt32  auto_mode_en:1;
        RBus_UInt32  colour_mode_dark_set:3;
        RBus_UInt32  colour_mode_dark_check:1;
        RBus_UInt32  res2:20;
    };
}vdtop_manual_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  decision_mode_status:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  set_mode_status:3;
        RBus_UInt32  res2:25;
    };
}vdtop_mode_detection_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_number:6;
        RBus_UInt32  disable_mode:1;
        RBus_UInt32  disable_mode_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_statistic_and_disable_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  prefer_ntsc_palm_en:1;
        RBus_UInt32  prefer_secam_pali_en:1;
        RBus_UInt32  prefer_ntsc443_pal60_en:1;
        RBus_UInt32  prefer_ntsc50_paln_en:1;
        RBus_UInt32  prefer_ntsc_palm:1;
        RBus_UInt32  prefer_secam_pali:1;
        RBus_UInt32  prefer_ntsc443_pal60:1;
        RBus_UInt32  prefer_ntsc50_paln:1;
        RBus_UInt32  res1:24;
    };
}vdtop_prefer_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fix_secam_h:1;
        RBus_UInt32  fix_palor_h:1;
        RBus_UInt32  fix_443_h:1;
        RBus_UInt32  fix_625_h:1;
        RBus_UInt32  fix_secamflag_en:1;
        RBus_UInt32  fix_palorflag_en:1;
        RBus_UInt32  fix_443flag_en:1;
        RBus_UInt32  fix_625flag_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_state_machine_fix_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ped_reg_en:1;
        RBus_UInt32  vsyncreg_en:1;
        RBus_UInt32  cdtomem_reg_en:1;
        RBus_UInt32  vline625reg_en:1;
        RBus_UInt32  hagcreg_en:1;
        RBus_UInt32  colourmodereg_en:1;
        RBus_UInt32  hpixelreg_en:1;
        RBus_UInt32  hactivestartreg_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_vd_basic_register_enable_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  statistic_multiplier:3;
        RBus_UInt32  secam_flag_freq_disable:1;
        RBus_UInt32  auto_secam_pali_method:2;
        RBus_UInt32  switch_palo_palm_method:2;
        RBus_UInt32  hactive_start_cpll:8;
        RBus_UInt32  hactivestartreg_en_cpll:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  auto_pos_mode_sel_cpll:3;
        RBus_UInt32  auto_pos_modify_en_cpll:1;
        RBus_UInt32  cpll_demod_region_always_on:1;
        RBus_UInt32  res2:7;
    };
}vdtop_auto_mode_s_m_statistic_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  auto_sel_no_burst_625:2;
        RBus_UInt32  auto_443_358_method_525:2;
        RBus_UInt32  auto_443_358_method_625:2;
        RBus_UInt32  fix_358_h:1;
        RBus_UInt32  fix_358flag_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_flag358_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  no_burst_mag_th:8;
        RBus_UInt32  res1:24;
    };
}vdtop_no_burst_mag_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  no_burst_mag_filter_th:8;
        RBus_UInt32  res1:24;
    };
}vdtop_no_burst_mag_filter_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  no_burst_443_en:1;
        RBus_UInt32  burst_win_error:1;
        RBus_UInt32  paln_flag_new:1;
        RBus_UInt32  no_burst_flag:1;
        RBus_UInt32  burst_mag_trig_offset:4;
        RBus_UInt32  res1:24;
    };
}vdtop_no_burst_443_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  flag358_phase_diff_hcount:7;
        RBus_UInt32  flag358_secam_phase_diff_hcount_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_flag358_secam_hcount_reset_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  flag358_secam_phase_diff_dr:8;
        RBus_UInt32  res1:24;
    };
}vdtop_flag358_secam_phase_diff_dr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  flag358_secam_phase_diff_db:8;
        RBus_UInt32  res1:24;
    };
}vdtop_flag358_secam_phase_diff_db_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_mag_th_358:8;
        RBus_UInt32  res1:24;
    };
}vdtop_burst_mag_th_358_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  table_colour_mode:3;
        RBus_UInt32  table_ped:1;
        RBus_UInt32  table_hpixel:2;
        RBus_UInt32  table_vline_625:1;
        RBus_UInt32  table_cagc_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_auto_mode_table1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  table_hagc:8;
        RBus_UInt32  res1:24;
    };
}vdtop_auto_mode_table2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  table_hactive_start:8;
        RBus_UInt32  res1:24;
    };
}vdtop_auto_mode_table3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  table_vactive_start:8;
        RBus_UInt32  res1:24;
    };
}vdtop_auto_mode_table4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  table_vactive_height:8;
        RBus_UInt32  res1:24;
    };
}vdtop_auto_mode_table5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  table_cdto:30;
        RBus_UInt32  res1:2;
    };
}vdtop_auto_mode_table6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  flag_625_counter:8;
        RBus_UInt32  new_625flag_div_thr:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  new_625flag_window:10;
        RBus_UInt32  vline_625_src_sel:1;
        RBus_UInt32  vline_625_vloop_clr_en:1;
    };
}vdtop_flag_625_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  flag_443_counter:8;
        RBus_UInt32  res1:24;
    };
}vdtop_flag_443_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_flag_counter:8;
        RBus_UInt32  res1:24;
    };
}vdtop_secam_flag_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  palm_flag_counter:8;
        RBus_UInt32  res1:24;
    };
}vdtop_palm_flag_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_valid_counter:8;
        RBus_UInt32  res1:24;
    };
}vdtop_burst_valid_counter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  midpoint_adjustment:8;
        RBus_UInt32  res1:24;
    };
}vdtop_midpoint_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  freq_flag_threshold_tune:8;
        RBus_UInt32  res1:24;
    };
}vdtop_freq_flag_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  frequency_valid_upper_limit:8;
        RBus_UInt32  res1:24;
    };
}vdtop_freq_valid_max_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  frequency_valid_inner_limit:7;
        RBus_UInt32  condition_enable:1;
        RBus_UInt32  res1:24;
    };
}vdtop_freq_valid_inner_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  frequency_valid_lower_limit:8;
        RBus_UInt32  res1:24;
    };
}vdtop_freq_valid_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_flag_frequency_upper_limit:8;
        RBus_UInt32  res1:24;
    };
}vdtop_secam_flag_counter_max_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_flag_frequency_lower_limit:8;
        RBus_UInt32  res1:24;
    };
}vdtop_secam_flag_counter_min_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  palm_flag_phase_adjust:8;
        RBus_UInt32  pal_flag_threshold:13;
        RBus_UInt32  res1:3;
        RBus_UInt32  palm_sw_input_sel:1;
        RBus_UInt32  palm_sw_acc_input_polar:1;
        RBus_UInt32  pal_sw_input_sel:1;
        RBus_UInt32  pal_sw_acc_input_polar:1;
        RBus_UInt32  palm_flag_limit_en:1;
        RBus_UInt32  res2:3;
    };
}vdtop_palm_flag_phase_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_mag_threshold:4;
        RBus_UInt32  burst_mag_trigger:4;
        RBus_UInt32  res1:24;
    };
}vdtop_burst_lower_limit_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  burst_noise_weighting:4;
        RBus_UInt32  burst_noise_weighting_auto:1;
        RBus_UInt32  auto_noburst_palflag_off:1;
        RBus_UInt32  secam_frequency_valid_enable:1;
        RBus_UInt32  vsync_select:1;
        RBus_UInt32  res1:24;
    };
}vdtop_burst_mag_choice_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:5;
        RBus_UInt32  new_358_flag_cos_sin:1;
        RBus_UInt32  new_358_flag_cordic:1;
        RBus_UInt32  agc_gate_kill_sync_white_en:1;
        RBus_UInt32  res2:24;
    };
}vdtop_new_358_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_dto_358_cnt_up:11;
        RBus_UInt32  res1:21;
    };
}vdtop_new_358_cnt_up_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_dto_358_cnt_dn:11;
        RBus_UInt32  res1:21;
    };
}vdtop_new_358_cnt_dn_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sep_count_th:10;
        RBus_UInt32  res1:22;
    };
}vdtop_sep_count_th_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sep_burst_start:11;
        RBus_UInt32  res1:21;
    };
}vdtop_sep_burst_start0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sep_burst_end:11;
        RBus_UInt32  res1:21;
    };
}vdtop_sep_burst_end0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:8;
        RBus_UInt32  sep_core_burst_rst_en:1;
        RBus_UInt32  sep_core_burst_rst:1;
        RBus_UInt32  res2:22;
    };
}vdtop_sep_burst_ro_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sep_358_core_burst:8;
        RBus_UInt32  sep_443_core_burst:8;
        RBus_UInt32  sep_358_core_burst_hsync:8;
        RBus_UInt32  sep_443_core_burst_hsync:8;
    };
}vdtop_sep_burst_ro_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sep_pal_secam_core_burst:8;
        RBus_UInt32  sep_pal_secam_core_burst_rst_en:1;
        RBus_UInt32  sep_pal_secam_core_burst_rst:1;
        RBus_UInt32  res1:22;
    };
}vdtop_sep_burst_ro3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sep_358_thl:8;
        RBus_UInt32  sep_443_thl:8;
        RBus_UInt32  res1:16;
    };
}vdtop_sep_burst_th1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  power_358_flag:1;
        RBus_UInt32  power_443_flag:1;
        RBus_UInt32  power_secam_flag:1;
        RBus_UInt32  res1:5;
        RBus_UInt32  sep_secam_thl_ratio:8;
        RBus_UInt32  sep_secam_thl:8;
        RBus_UInt32  sep_secam_f_sel:1;
        RBus_UInt32  secam_new_condition:1;
        RBus_UInt32  res2:6;
    };
}vdtop_sep_burst_flag1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mode_443358pk_sel:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  mode_secam2_sel:2;
        RBus_UInt32  pk_foraudio:1;
        RBus_UInt32  res2:25;
    };
}vdtop_automode_443358pk_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dark_cpll_cdto_change_mode:3;
        RBus_UInt32  dark_cpll_cdto_change_en:1;
        RBus_UInt32  dark_fix_cgain:1;
        RBus_UInt32  dark_cagc_en:1;
        RBus_UInt32  dark_cagc_pll_input_sel:2;
        RBus_UInt32  dark_cagc:8;
        RBus_UInt32  dark_cresample_signed_en:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  dark_chromalock_cstate:3;
        RBus_UInt32  dark_chromalock_cstate_en:1;
        RBus_UInt32  dark_cstate:3;
        RBus_UInt32  dark_fixed_cstate:1;
        RBus_UInt32  dark_phase_fast_lock_en:1;
        RBus_UInt32  dark_fast_lock_en:1;
        RBus_UInt32  dark_badedit_phase_lock_en:1;
        RBus_UInt32  dark_badedit_noisy_off_en:1;
    };
}vdtop_dark_cpll_cdetect_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dark_cpll_cdto_change_value:30;
        RBus_UInt32  res1:2;
    };
}vdtop_dark_cpll_cdetect_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dark_palm_sw_input_sel:1;
        RBus_UInt32  dark_palm_sw_acc_input_polar:1;
        RBus_UInt32  dark_pal_sw_input_sel:1;
        RBus_UInt32  dark_pal_sw_acc_input_polar:1;
        RBus_UInt32  dark_palm_flag_limit_en:1;
        RBus_UInt32  dark_palsw_level:2;
        RBus_UInt32  res1:1;
        RBus_UInt32  dark_palm_flag_phase_adjust:8;
        RBus_UInt32  dark_palm_flag_counter:8;
        RBus_UInt32  res2:8;
    };
}vdtop_dark_cpll_pal_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dark_lose_chromalock_level:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  dark_lose_chromalock_count:4;
        RBus_UInt32  dark_lose_acc_chromalock_level:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  dark_chromalock_input_acc_num:2;
        RBus_UInt32  dark_chromalock_input_acc_en:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  dark_pal_flag_threshold:13;
        RBus_UInt32  res4:3;
    };
}vdtop_dark_cpll_chromalock_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dark_cpll_start:1;
        RBus_UInt32  dark_cpll_auto_run:1;
        RBus_UInt32  dark_cpll_mode:2;
        RBus_UInt32  dark_cpll_user_mode:3;
        RBus_UInt32  dark_cpll_fix_mode_en:1;
        RBus_UInt32  dark_cpll_mode_en_ntsc:1;
        RBus_UInt32  dark_cpll_mode_en_palm:1;
        RBus_UInt32  dark_cpll_mode_en_ntsc50:1;
        RBus_UInt32  dark_cpll_mode_en_paln:1;
        RBus_UInt32  dark_cpll_mode_en_ntsc443:1;
        RBus_UInt32  dark_cpll_mode_en_pal60:1;
        RBus_UInt32  dark_cpll_mode_en_pali:1;
        RBus_UInt32  dark_cpll_chromalock_sel:1;
        RBus_UInt32  dark_cpll_vsync_num:8;
        RBus_UInt32  dark_cpll_decide_mode:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  dark_cpll_decide_mode_error:2;
        RBus_UInt32  res2:2;
    };
}vdtop_dark_cpll_controll_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dark_cpll_ntsc_lock:1;
        RBus_UInt32  dark_cpll_palm_lock:1;
        RBus_UInt32  dark_cpll_ntsc50_lock:1;
        RBus_UInt32  dark_cpll_paln_lock:1;
        RBus_UInt32  dark_cpll_ntsc443_lock:1;
        RBus_UInt32  dark_cpll_pal60_lock:1;
        RBus_UInt32  dark_cpll_pali_lock:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  dark_cpll_ntsc_pal_flag:1;
        RBus_UInt32  dark_cpll_palm_pal_flag:1;
        RBus_UInt32  dark_cpll_ntsc50_pal_flag:1;
        RBus_UInt32  dark_cpll_paln_pal_flag:1;
        RBus_UInt32  dark_cpll_ntsc443_pal_flag:1;
        RBus_UInt32  dark_cpll_pal60_pal_flag:1;
        RBus_UInt32  dark_cpll_pali_pal_flag:1;
        RBus_UInt32  res2:1;
        RBus_UInt32  dark_cpll_ntsc_palm_flag:1;
        RBus_UInt32  dark_cpll_palm_palm_flag:1;
        RBus_UInt32  dark_cpll_ntsc50_palm_flag:1;
        RBus_UInt32  dark_cpll_paln_palm_flag:1;
        RBus_UInt32  dark_cpll_ntsc443_palm_flag:1;
        RBus_UInt32  dark_cpll_pal60_palm_flag:1;
        RBus_UInt32  dark_cpll_pali_palm_flag:1;
        RBus_UInt32  res3:1;
        RBus_UInt32  dark_cpll_loop_done:1;
        RBus_UInt32  res4:3;
        RBus_UInt32  palm_flag_dark:1;
        RBus_UInt32  pal_flag_dark:1;
        RBus_UInt32  chromalock_dark:1;
        RBus_UInt32  chromalock_acc_dark:1;
    };
}vdtop_dark_cpll_result_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dark_cpll_burst_magnitude:8;
        RBus_UInt32  res1:24;
    };
}vdtop_dark_cpll_burstmag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dark_cloop_i_ctrl_modify_range:22;
        RBus_UInt32  res1:2;
        RBus_UInt32  dark_cloop_i_ctrl_modify_en:1;
        RBus_UInt32  res2:7;
    };
}vdtop_dark_cloop_i_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hlock_irq_en:1;
        RBus_UInt32  vlock_irq_en:1;
        RBus_UInt32  chromalock_irq_en:1;
        RBus_UInt32  noisy_irq_en:1;
        RBus_UInt32  proscan_irq_en:1;
        RBus_UInt32  mode_irq_en:1;
        RBus_UInt32  nosig_irq_en:1;
        RBus_UInt32  vcr_irq_en:1;
        RBus_UInt32  vd_irq_en:1;
        RBus_UInt32  hstate_err_irq_en:1;
        RBus_UInt32  change_signal_int_en:1;
        RBus_UInt32  res1:21;
    };
}vdtop_irq_mask1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  field_irq_en:1;
        RBus_UInt32  mov_irq_en:1;
        RBus_UInt32  coch_irq_en:1;
        RBus_UInt32  noisy_vbi_irq_en:1;
        RBus_UInt32  ddr_addr_irq_en:1;
        RBus_UInt32  vd_scene_change_irq_en:1;
        RBus_UInt32  res1:26;
    };
}vdtop_irq_mask2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ad4_under_irq_en:1;
        RBus_UInt32  ad4_over_irq_en:1;
        RBus_UInt32  ad3_under_irq_en:1;
        RBus_UInt32  ad3_over_irq_en:1;
        RBus_UInt32  ad2_under_irq_en:1;
        RBus_UInt32  ad2_over_irq_en:1;
        RBus_UInt32  ad1_under_irq_en:1;
        RBus_UInt32  ad1_over_irq_en:1;
        RBus_UInt32  ad4_irq_sel:1;
        RBus_UInt32  ad3_irq_sel:1;
        RBus_UInt32  ad2_irq_sel:1;
        RBus_UInt32  ad1_irq_sel:1;
        RBus_UInt32  res1:20;
    };
}vdtop_irq_mask3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hlock_irq:1;
        RBus_UInt32  vlock_irq:1;
        RBus_UInt32  chromalock_irq:1;
        RBus_UInt32  noisy_irq:1;
        RBus_UInt32  proscan_irq:1;
        RBus_UInt32  mode_irq:1;
        RBus_UInt32  nosig_irq:1;
        RBus_UInt32  vcr_irq:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  change_signal_int:1;
        RBus_UInt32  res2:21;
    };
}vdtop_irq_status1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  field_irq:1;
        RBus_UInt32  mov_irq:1;
        RBus_UInt32  coch_irq:1;
        RBus_UInt32  noisy_vbi_irq:1;
        RBus_UInt32  ddr_addr_irq:1;
        RBus_UInt32  vd_scene_change_irq:1;
        RBus_UInt32  hstate_err_irq:1;
        RBus_UInt32  res1:25;
    };
}vdtop_irq_status2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ad4_underflow_irq:1;
        RBus_UInt32  ad4_overflow_irq:1;
        RBus_UInt32  ad3_underflow_irq:1;
        RBus_UInt32  ad3_overflow_irq:1;
        RBus_UInt32  ad2_underflow_irq:1;
        RBus_UInt32  ad2_overflow_irq:1;
        RBus_UInt32  ad1_underflow_irq:1;
        RBus_UInt32  ad1_overflow_irq:1;
        RBus_UInt32  res1:24;
    };
}vdtop_irq_status3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_under_threh:4;
        RBus_UInt32  adc_over_threh:4;
        RBus_UInt32  res1:24;
    };
}vdtop_adc_limit_threshold_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ad4_value_big:1;
        RBus_UInt32  ad4_value_small:1;
        RBus_UInt32  ad3_value_big:1;
        RBus_UInt32  ad3_value_small:1;
        RBus_UInt32  ad2_value_big:1;
        RBus_UInt32  ad2_value_small:1;
        RBus_UInt32  ad1_value_big:1;
        RBus_UInt32  ad1_value_small:1;
        RBus_UInt32  adc_value_min_thr:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  adc_value_max_thr:10;
        RBus_UInt32  res2:2;
    };
}vdtop_adc_over_under_flag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  clampagc_md_b_big:1;
        RBus_UInt32  clampagc_md_b_small:1;
        RBus_UInt32  clampagc_md_g_big:1;
        RBus_UInt32  clampagc_md_g_small:1;
        RBus_UInt32  clampagc_md_r_big:1;
        RBus_UInt32  clampagc_md_r_small:1;
        RBus_UInt32  clampagc_md_c_big:1;
        RBus_UInt32  clampagc_md_c_small:1;
        RBus_UInt32  clampagc_md_y_big:1;
        RBus_UInt32  clampagc_md_y_small:1;
        RBus_UInt32  res1:22;
    };
}vdtop_dgain_out_over_under_flag_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dgain_out_data_min_thr:12;
        RBus_UInt32  dgain_out_data_max_thr:12;
        RBus_UInt32  res1:8;
    };
}vdtop_dgain_out_over_under_cntl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ldpaus_th:5;
        RBus_UInt32  ldp_switch_en:1;
        RBus_UInt32  ldp_det_en:1;
        RBus_UInt32  ld_pause_detect:1;
        RBus_UInt32  res1:24;
    };
}vdtop_ldpause_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  detect_vcr_when_h_unlock:1;
        RBus_UInt32  disable_blue_screen_when_vcr:1;
        RBus_UInt32  lock_h_on_no_signal:1;
        RBus_UInt32  freerun_sel:1;
        RBus_UInt32  vcr_disable:1;
        RBus_UInt32  vd_out_dvalid_sel_d1:1;
        RBus_UInt32  disp_freerun_sel:1;
        RBus_UInt32  coch_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_vcr_option_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cenable_line_count:8;
        RBus_UInt32  res1:24;
    };
}vdtop_cenable_line_count_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:2;
        RBus_UInt32  cbcr_ini_mux:1;
        RBus_UInt32  field_toggle_en:1;
        RBus_UInt32  auto_3dchange_noisy:1;
        RBus_UInt32  auto_3dchange_vcr:1;
        RBus_UInt32  res2:26;
    };
}vdtop_signal_stm_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cdet_phase_err_status:14;
        RBus_UInt32  res1:18;
    };
}vdtop_cdetect_phase_err_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  sw_g:2;
        RBus_UInt32  sw_pb_b:2;
        RBus_UInt32  sw_pr_r:2;
        RBus_UInt32  sw_comp:2;
        RBus_UInt32  res1:24;
    };
}vdtop_ad_sw_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  clamp_ad4:2;
        RBus_UInt32  clamp_ad3:2;
        RBus_UInt32  clamp_ad2:2;
        RBus_UInt32  clamp_ad1:2;
        RBus_UInt32  res1:24;
    };
}vdtop_clamp_updn_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  clamp_d_dn_en:1;
        RBus_UInt32  clamp_d_up_en:1;
        RBus_UInt32  clamp_c_dn_en:1;
        RBus_UInt32  clamp_c_up_en:1;
        RBus_UInt32  clamp_b_dn_en:1;
        RBus_UInt32  clamp_b_up_en:1;
        RBus_UInt32  clamp_a_dn_en:1;
        RBus_UInt32  clamp_a_up_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_clamp_rgb_updn_en_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fb_delay:4;
        RBus_UInt32  fb_th:3;
        RBus_UInt32  aa3_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_fsw_ctrl0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  rgb2cvbs_dly:6;
        RBus_UInt32  res1:2;
        RBus_UInt32  fb2rgb_dly:3;
        RBus_UInt32  res2:21;
    };
}vdtop_fsw_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fb_en:1;
        RBus_UInt32  fb_sw:1;
        RBus_UInt32  aa422_en:1;
        RBus_UInt32  out444_sel:1;
        RBus_UInt32  cout_limit:1;
        RBus_UInt32  fb_inv:1;
        RBus_UInt32  yout_limit:1;
        RBus_UInt32  scart_en:1;
        RBus_UInt32  outfifo_444_sel:1;
        RBus_UInt32  res1:23;
    };
}vdtop_fsw_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fb_thmin:4;
        RBus_UInt32  fb_thmax:4;
        RBus_UInt32  res1:24;
    };
}vdtop_fsw_ctrl3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  contrast2:10;
        RBus_UInt32  res1:22;
    };
}vdtop_luma_contrast2_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  brightness2:10;
        RBus_UInt32  res1:22;
    };
}vdtop_luma_brightness2_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cr_saturation:10;
        RBus_UInt32  res1:22;
    };
}vdtop_chroma_saturation2_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  cb_saturation:10;
        RBus_UInt32  res1:22;
    };
}vdtop_cb_sat_adj_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  peak_en2:1;
        RBus_UInt32  peak_gain2:3;
        RBus_UInt32  peak_range2:2;
        RBus_UInt32  res1:26;
    };
}vdtop_luma_peaking2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fbgain:7;
        RBus_UInt32  fbgain_en:1;
        RBus_UInt32  fb_gain_x2_en:1;
        RBus_UInt32  res1:23;
    };
}vdtop_fsw_gain_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fb_status:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  scart_vbi_rgb_sel:2;
        RBus_UInt32  res2:26;
    };
}vdtop_fsw_input_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  chroma_gain_reduce_ratio_b:8;
        RBus_UInt32  chroma_gain_reduce_ratio_g:8;
        RBus_UInt32  chroma_gain_reduce_ratio_r:8;
        RBus_UInt32  chroma_gain_reduce_ratio_c:8;
    };
}vdtop_chroma_reduce_cntl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  chroma_gain_reduce_b_en:1;
        RBus_UInt32  chroma_gain_reduce_g_en:1;
        RBus_UInt32  chroma_gain_reduce_r_en:1;
        RBus_UInt32  chroma_gain_reduce_c_en:1;
        RBus_UInt32  rgb_dgain_bypass:4;
        RBus_UInt32  res1:24;
    };
}vdtop_chroma_reduce_cntl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  yorr_in_offset_status:12;
        RBus_UInt32  res1:20;
    };
}vdtop_adcr_cali_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  uorg_in_offset_status:12;
        RBus_UInt32  res1:20;
    };
}vdtop_adcg_cali_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vorb_in_offset_status:12;
        RBus_UInt32  res1:20;
    };
}vdtop_adcb_cali_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  res1:7;
        RBus_UInt32  rgb_output_en:1;
        RBus_UInt32  res2:24;
    };
}vdtop_adc_gain_r1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gain_r:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  offset_r:8;
        RBus_UInt32  res2:8;
    };
}vdtop_adc_gain_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gain_g:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  offset_g:8;
        RBus_UInt32  res2:8;
    };
}vdtop_adc_gain_g_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  gain_b:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  offset_b:8;
        RBus_UInt32  res2:8;
    };
}vdtop_adc_gain_b_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  component_color_matrix_r2:11;
        RBus_UInt32  res1:5;
        RBus_UInt32  component_color_matrix_r1:11;
        RBus_UInt32  res2:5;
    };
}vdtop_color_matrix_r_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  component_color_matrix_g1:11;
        RBus_UInt32  res1:5;
        RBus_UInt32  component_color_matrix_r3:11;
        RBus_UInt32  res2:5;
    };
}vdtop_color_matrix_rg_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  component_color_matrix_g3:11;
        RBus_UInt32  res1:5;
        RBus_UInt32  component_color_matrix_g2:11;
        RBus_UInt32  res2:5;
    };
}vdtop_color_matrix_g_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  component_color_matrix_b2:11;
        RBus_UInt32  res1:5;
        RBus_UInt32  component_color_matrix_b1:11;
        RBus_UInt32  res2:5;
    };
}vdtop_color_matrix_b_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  component_color_matrix_b3:11;
        RBus_UInt32  res1:21;
    };
}vdtop_color_matrix_b3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  r_prblevel:12;
        RBus_UInt32  res1:20;
    };
}vdtop_clamp_test_reg0_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  g_blevel:12;
        RBus_UInt32  res1:20;
    };
}vdtop_clamp_test_reg2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  b_pbblevel:12;
        RBus_UInt32  res1:20;
    };
}vdtop_clamp_test_reg4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  comp_blevel:12;
        RBus_UInt32  res1:20;
    };
}vdtop_clamp_test_reg6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  comp_slevel:12;
        RBus_UInt32  res1:20;
    };
}vdtop_clamp_test_reg8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vbi_blevel:12;
        RBus_UInt32  res1:20;
    };
}vdtop_clamp_test_reg11_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  hphase_err_status:14;
        RBus_UInt32  res1:2;
        RBus_UInt32  front_porch_level:12;
        RBus_UInt32  res2:4;
    };
}vdtop_hdetect_phase_err_status2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  avout_fifo_rd_ptr:11;
        RBus_UInt32  avout_fifo_sel:1;
        RBus_UInt32  res1:20;
    };
}vdtop_avout_fifo_rd_ptr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  blank_level_comp_manu:12;
        RBus_UInt32  res1:4;
        RBus_UInt32  blank_level_comp_manu_add:12;
        RBus_UInt32  res2:4;
    };
}vdtop_blank_level_manu_comp_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  blank_level_r_manu:12;
        RBus_UInt32  res1:4;
        RBus_UInt32  blank_level_c_manu:12;
        RBus_UInt32  res2:4;
    };
}vdtop_blank_level_manu_c_r_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  blank_level_b_manu:12;
        RBus_UInt32  res1:4;
        RBus_UInt32  blank_level_g_manu:12;
        RBus_UInt32  res2:4;
    };
}vdtop_blank_level_manu_g_b_value_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  factory_flag:1;
        RBus_UInt32  fw_dma_mode:4;
        RBus_UInt32  fw_dma_size:3;
        RBus_UInt32  fpga_test1:24;
    };
}vdtop_fpga_test_reg1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test2:32;
    };
}vdtop_fpga_test_reg2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test3:32;
    };
}vdtop_fpga_test_reg3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test4:32;
    };
}vdtop_fpga_test_reg4_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test5:32;
    };
}vdtop_fpga_test_reg5_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test6:32;
    };
}vdtop_fpga_test_reg6_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test7:32;
    };
}vdtop_fpga_test_reg7_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fpga_test8:32;
    };
}vdtop_fpga_test_reg8_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_notch_filter:2;
        RBus_UInt32  res1:2;
        RBus_UInt32  secam_flag_sel:1;
        RBus_UInt32  drdb_vlpf_en_auto_en:1;
        RBus_UInt32  drdb_vlpf_en:1;
        RBus_UInt32  drdb_freq_const:1;
        RBus_UInt32  secam_y_lpf_sel:3;
        RBus_UInt32  res2:1;
        RBus_UInt32  secam_y_hpf_sel:3;
        RBus_UInt32  res3:1;
        RBus_UInt32  secam_y_fir_en:1;
        RBus_UInt32  res4:15;
    };
}vdtop_secam_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  dr_offset:8;
        RBus_UInt32  res1:24;
    };
}vdtop_secam_drfreq_offset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  db_offset:8;
        RBus_UInt32  res1:24;
    };
}vdtop_secam_dbfreq_offset_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_phase_diff_hcount:7;
        RBus_UInt32  secam_phase_diff_hcount_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_secam_hcount_reset_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_phase_diff_dr:8;
        RBus_UInt32  res1:24;
    };
}vdtop_phase_diff_dr_rst_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_phase_diff_db:8;
        RBus_UInt32  res1:24;
    };
}vdtop_phase_diff_db_rst_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_gain_drdb:7;
        RBus_UInt32  secam_gain_drdb_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_drdb_gain_table_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_gain_y:7;
        RBus_UInt32  secam_gain_y_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_y_gain_table_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_gain_delay:5;
        RBus_UInt32  res1:27;
    };
}vdtop_secam_gain_dly_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_gain_debug:7;
        RBus_UInt32  secam_gain_debug_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_secam_gain_table_debug_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_secam_phase_diff_hcount:7;
        RBus_UInt32  new_secam_phase_diff_hcount_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_new_secam_hcount_reset_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_secam_phase_diff_dr:8;
        RBus_UInt32  res1:24;
    };
}vdtop_new_secam_phase_diff_dr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_secam_phase_diff_db:8;
        RBus_UInt32  res1:24;
    };
}vdtop_new_secam_phase_diff_db_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_secam_cdto_inc:30;
        RBus_UInt32  res1:2;
    };
}vdtop_new_secam_cdto_inc_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  secam_gp_thl:10;
        RBus_UInt32  res1:2;
        RBus_UInt32  secam_gp_step:10;
        RBus_UInt32  res2:9;
        RBus_UInt32  secam_gp_en:1;
    };
}vdtop_secam_gp_rm_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  change_signal_detect_en:1;
        RBus_UInt32  change_signal_data_dc_en:1;
        RBus_UInt32  change_signal_hunlock_en:1;
        RBus_UInt32  change_signal_vunlock_en:1;
        RBus_UInt32  change_signal_new_vunlock_en:1;
        RBus_UInt32  change_signal_old_vdetect_count_change_en:1;
        RBus_UInt32  change_signal_new_vdetect_count_change_en:1;
        RBus_UInt32  change_signal_old_vloop_enable_fail_en:1;
        RBus_UInt32  change_signal_new_vloop_enable_fail_en:1;
        RBus_UInt32  vdec_disp_black_image_en:1;
        RBus_UInt32  data_dc_occur:1;
        RBus_UInt32  hunlock_occur:1;
        RBus_UInt32  vunlock_occur:1;
        RBus_UInt32  new_vunlock_occur:1;
        RBus_UInt32  old_vdetect_count_change_occur:1;
        RBus_UInt32  new_vdetect_count_change_occur:1;
        RBus_UInt32  old_vloop_enable_fail_occur:1;
        RBus_UInt32  new_vloop_enable_fail_occur:1;
        RBus_UInt32  vdec_disp_black_image_27:1;
        RBus_UInt32  vdec_disp_black_image_main_en:1;
        RBus_UInt32  vdec_disp_black_image_sub_en:1;
        RBus_UInt32  disp_black_image_sub_debug_en:1;
        RBus_UInt32  disp_black_image_sub_debug_sel:1;
        RBus_UInt32  disp_black_image_main_debug_en:1;
        RBus_UInt32  disp_black_image_main_debug_sel:1;
        RBus_UInt32  res1:7;
    };
}vdtop_change_signal_ctrl_1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  data_dc_detect_val_thr_low:12;
        RBus_UInt32  data_dc_detect_val_thr_up:12;
        RBus_UInt32  data_dc_detect_num_thr:6;
        RBus_UInt32  res1:2;
    };
}vdtop_change_signal_ctrl_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  new_vloop_enable_fail_thr:11;
        RBus_UInt32  old_vloop_enable_fail_thr:11;
        RBus_UInt32  hunlock_line_count_th:9;
        RBus_UInt32  res1:1;
    };
}vdtop_change_signal_ctrl_3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_initialization:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  ps_updn_swap:1;
        RBus_UInt32  res2:4;
        RBus_UInt32  v8format_sel:1;
        RBus_UInt32  res3:16;
        RBus_UInt32  vd_output_27_repeat_en:1;
        RBus_UInt32  vd_output_27_repeat_sel:1;
        RBus_UInt32  vd_output_135_sel:1;
        RBus_UInt32  res4:1;
        RBus_UInt32  hresampler_combi_delay:3;
        RBus_UInt32  vdec_ps_disp_27_en:1;
    };
}vdtop_fifo_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_empty_status:1;
        RBus_UInt32  fifo_full_status:1;
        RBus_UInt32  res1:6;
        RBus_UInt32  ps_540_coe_modify:7;
        RBus_UInt32  res2:1;
        RBus_UInt32  ps_540_select_tap:5;
        RBus_UInt32  res3:3;
        RBus_UInt32  ps_540_coe_en:1;
        RBus_UInt32  res4:7;
    };
}vdtop_fifo_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pll_i_gain:8;
        RBus_UInt32  ps_ndiv_status:5;
        RBus_UInt32  res1:3;
        RBus_UInt32  ps_up_status:1;
        RBus_UInt32  ps_dn_status:1;
        RBus_UInt32  res2:2;
        RBus_UInt32  ps_psel_status:3;
        RBus_UInt32  res3:9;
    };
}vdtop_i_gain_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pll_div:4;
        RBus_UInt32  ps_dn_en:1;
        RBus_UInt32  ps_up_en:1;
        RBus_UInt32  ndivload_en:1;
        RBus_UInt32  swallow_on_vsync:1;
        RBus_UInt32  swallow_freq_sel:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  fifo_depth_wo_ps:8;
        RBus_UInt32  fifo_wo_ps:1;
        RBus_UInt32  phase_swallow_fix_start:1;
        RBus_UInt32  res2:10;
    };
}vdtop_misc_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_depth_min_status:8;
        RBus_UInt32  fifo_depth_min_clr:1;
        RBus_UInt32  res1:23;
    };
}vdtop_fifo_depth_min_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_depth_max_status:8;
        RBus_UInt32  fifo_depth_max_clr:1;
        RBus_UInt32  res1:23;
    };
}vdtop_fifo_depth_max_status_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ps_pselload:1;
        RBus_UInt32  ps_divload:1;
        RBus_UInt32  res1:4;
        RBus_UInt32  ps_dn_i:1;
        RBus_UInt32  ps_up_i:1;
        RBus_UInt32  res2:24;
    };
}vdtop_pll_debug_ctrl1_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  ps_ndiv:4;
        RBus_UInt32  ps_psel:3;
        RBus_UInt32  pll_debug_en:1;
        RBus_UInt32  res1:24;
    };
}vdtop_pll_debug_ctrl2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  k_sel:2;
        RBus_UInt32  lpf_en:1;
        RBus_UInt32  period_sel:2;
        RBus_UInt32  cnt_en:1;
        RBus_UInt32  res1:2;
        RBus_UInt32  ps_new_kp:3;
        RBus_UInt32  ps_new_kikp:1;
        RBus_UInt32  ps_fix_value:8;
        RBus_UInt32  ps_fix_en:1;
        RBus_UInt32  res2:11;
    };
}vdtop_disp_fsync_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_depth_wo_ps_max:8;
        RBus_UInt32  fifo_depth_wo_ps_min:8;
        RBus_UInt32  fifo_wo_ps_hlen_min:12;
        RBus_UInt32  fifo_wo_ps_adapt:1;
        RBus_UInt32  fifo_wo_ps_err_act:1;
        RBus_UInt32  fifo_wo_ps_clk_jump:1;
        RBus_UInt32  fifo_wo_ps_read_repeat_en:1;
    };
}vdtop_fifo_wo_ps_func_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_wo_ps_ps_ndiv0:5;
        RBus_UInt32  fifo_wo_ps_ps_psel0:3;
        RBus_UInt32  fifo_wo_ps_ps_divload0:1;
        RBus_UInt32  fifo_wo_ps_ps_pselload0:1;
        RBus_UInt32  fifo_wo_ps_ps_dn_i0:1;
        RBus_UInt32  fifo_wo_ps_ps_up_i0:1;
        RBus_UInt32  fifo_wo_ps_ps_ndiv1:5;
        RBus_UInt32  fifo_wo_ps_ps_psel1:3;
        RBus_UInt32  fifo_wo_ps_ps_divload1:1;
        RBus_UInt32  fifo_wo_ps_ps_pselload1:1;
        RBus_UInt32  fifo_wo_ps_ps_dn_i1:1;
        RBus_UInt32  fifo_wo_ps_ps_up_i1:1;
        RBus_UInt32  res1:8;
    };
}vdtop_fifo_wo_ps_clk_state_parameter_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  fifo_out_line_len:12;
        RBus_UInt32  fifo_clk_state:1;
        RBus_UInt32  res1:3;
        RBus_UInt32  stable_fifo_depth:8;
        RBus_UInt32  res2:8;
    };
}vdtop_fifo_status_no_pll_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  debug_test:7;
        RBus_UInt32  debug_test_enable:1;
        RBus_UInt32  data_blue_mode_y:8;
        RBus_UInt32  data_blue_mode_cr:8;
        RBus_UInt32  data_blue_mode_cb:8;
    };
}vdtop_debug_mux_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  muxanaloga:4;
        RBus_UInt32  muxanalogb:4;
        RBus_UInt32  data_blue_mode_en:1;
        RBus_UInt32  data_blue_mode_sel:1;
        RBus_UInt32  res1:22;
    };
}vdtop_video_debug_analog_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  muxdigital:4;
        RBus_UInt32  debug_test_dac_en:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  clk_sct_polarity:1;
        RBus_UInt32  clk_dac_polarity:1;
        RBus_UInt32  res2:24;
    };
}vdtop_video_debug_digital_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  pattern_generator_enable:1;
        RBus_UInt32  pattern_gen_cvbs_mode:1;
        RBus_UInt32  pattern_gen_input_mode_sel:1;
        RBus_UInt32  res1:1;
        RBus_UInt32  crc_chk_sel:1;
        RBus_UInt32  pattern_gen_scart_en:1;
        RBus_UInt32  fifo_out_pattern_gen_en:1;
        RBus_UInt32  patgen_vline_en:1;
        RBus_UInt32  patgen_vline:10;
        RBus_UInt32  res2:2;
        RBus_UInt32  patgen_vline_vactive_end:10;
        RBus_UInt32  vd_on:1;
        RBus_UInt32  res3:1;
    };
}vdtop_pattern_control_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  crc_result:32;
    };
}vdtop_crc_result3_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  patgen_burst_gain:3;
        RBus_UInt32  res1:1;
        RBus_UInt32  patgen_sync_gain:3;
        RBus_UInt32  clk_polarity:1;
        RBus_UInt32  clk_vdadc_polarity:1;
        RBus_UInt32  res2:23;
    };
}vdtop_patgen_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_mode_27_1:1;
        RBus_UInt32  bist_mode_27_2:1;
        RBus_UInt32  bist_mode_dma:1;
        RBus_UInt32  bist_mode_fifo:1;
        RBus_UInt32  bist_mode_out:1;
        RBus_UInt32  res1:27;
    };
}vdtop_bist_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_done_27_1:1;
        RBus_UInt32  bist_done_27_2:1;
        RBus_UInt32  bist_done_dma:1;
        RBus_UInt32  bist_done_fifo:1;
        RBus_UInt32  bist_done_out:1;
        RBus_UInt32  res1:27;
    };
}vdtop_bist_done_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_fail_27_1:1;
        RBus_UInt32  bist_fail_27_2:1;
        RBus_UInt32  bist_fail_dma:1;
        RBus_UInt32  bist_fail_fifo:1;
        RBus_UInt32  bist_fail_out:1;
        RBus_UInt32  res1:27;
    };
}vdtop_bist_fail_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_drf_mode_27_1:1;
        RBus_UInt32  bist_drf_mode_27_2:1;
        RBus_UInt32  bist_drf_mode_dma:1;
        RBus_UInt32  bist_drf_mode_fifo:1;
        RBus_UInt32  bist_drf_mode_out:1;
        RBus_UInt32  res1:27;
    };
}vdtop_bist_drf_mode_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_drf_resume_27_1:1;
        RBus_UInt32  bist_drf_resume_27_2:1;
        RBus_UInt32  bist_drf_resume_dma:1;
        RBus_UInt32  bist_drf_resume_fifo:1;
        RBus_UInt32  bist_drf_resume_out:1;
        RBus_UInt32  res1:27;
    };
}vdtop_bist_drf_resume_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_drf_done_27_1:1;
        RBus_UInt32  bist_drf_done_27_2:1;
        RBus_UInt32  bist_drf_done_dma:1;
        RBus_UInt32  bist_drf_done_fifo:1;
        RBus_UInt32  bist_drf_done_out:1;
        RBus_UInt32  res1:27;
    };
}vdtop_bist_drf_done_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_drf_pause_27_1:1;
        RBus_UInt32  bist_drf_pause_27_2:1;
        RBus_UInt32  bist_drf_pause_dma:1;
        RBus_UInt32  bist_drf_pause_fifo:1;
        RBus_UInt32  bist_drf_pause_out:1;
        RBus_UInt32  res1:27;
    };
}vdtop_bist_drf_pause_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_drf_fail_27_1:1;
        RBus_UInt32  bist_drf_fail_27_2:1;
        RBus_UInt32  bist_drf_fail_dma:1;
        RBus_UInt32  bist_drf_fail_fifo:1;
        RBus_UInt32  bist_drf_fail_out:1;
        RBus_UInt32  res1:27;
    };
}vdtop_bist_drf_fail_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_mem_fail_27_1:10;
        RBus_UInt32  bist_mem_fail_27_2:8;
        RBus_UInt32  res1:14;
    };
}vdtop_bist_fail_27_1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_mem_fail_dma:5;
        RBus_UInt32  bist_mem_fail_fifo:1;
        RBus_UInt32  bist_mem_fail_out:4;
        RBus_UInt32  res1:22;
    };
}vdtop_bist_fail_dma_out_fifo_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_drf_mem_fail_27_1:10;
        RBus_UInt32  bist_drf_mem_fail_27_2:8;
        RBus_UInt32  res1:14;
    };
}vdtop_bist_drf_fail_27_1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_drf_mem_fail_dma:5;
        RBus_UInt32  bist_drf_mem_fail_fifo:1;
        RBus_UInt32  bist_drf_mem_fail_out:4;
        RBus_UInt32  res1:22;
    };
}vdtop_bist_drf_fail_dma_out_fifo_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_test1_27_1_0:1;
        RBus_UInt32  bist_test1_27_1_1:1;
        RBus_UInt32  bist_test1_27_1_2:1;
        RBus_UInt32  bist_test1_27_1_3:1;
        RBus_UInt32  bist_test1_27_1_4:1;
        RBus_UInt32  bist_test1_27_1_5:1;
        RBus_UInt32  bist_test1_27_1_6:1;
        RBus_UInt32  bist_test1_27_1_7:1;
        RBus_UInt32  bist_test1_27_1_8:1;
        RBus_UInt32  bist_test1_27_1_9:1;
        RBus_UInt32  bist_test1_27_2_0:1;
        RBus_UInt32  bist_test1_27_2_1:1;
        RBus_UInt32  bist_test1_27_2_2:1;
        RBus_UInt32  bist_test1_27_2_3:1;
        RBus_UInt32  bist_test1_27_2_4:1;
        RBus_UInt32  bist_test1_27_2_5:1;
        RBus_UInt32  bist_test1_27_2_6:1;
        RBus_UInt32  bist_test1_27_2_7:1;
        RBus_UInt32  res1:14;
    };
}vdtop_bist_test_27_1_2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  bist_test1_fifo_test1a_0:1;
        RBus_UInt32  bist_test1_fifo_test1b_0:1;
        RBus_UInt32  bist_test1_dma_test1a_0:1;
        RBus_UInt32  bist_test1_dma_test1b_0:1;
        RBus_UInt32  bist_test1_dma_test1a_1:1;
        RBus_UInt32  bist_test1_dma_test1b_1:1;
        RBus_UInt32  bist_test1_dma_test1a_2:1;
        RBus_UInt32  bist_test1_dma_test1b_2:1;
        RBus_UInt32  bist_test1_dma_test1a_3:1;
        RBus_UInt32  bist_test1_dma_test1b_3:1;
        RBus_UInt32  bist_test1_dma_test1a_4:1;
        RBus_UInt32  bist_test1_dma_test1b_4:1;
        RBus_UInt32  bist_test1_out_0:1;
        RBus_UInt32  bist_test1_out_1:1;
        RBus_UInt32  bist_test1_out_2:1;
        RBus_UInt32  bist_test1_out_3:1;
        RBus_UInt32  res1:16;
    };
}vdtop_bist_test_dma_out_fifo_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mbist_dvse_27_1:1;
        RBus_UInt32  mbist_dvs_27_1:4;
        RBus_UInt32  mbist_dvse_27_2:1;
        RBus_UInt32  mbist_dvs_27_2:4;
        RBus_UInt32  mbist_dvse_dma:1;
        RBus_UInt32  mbist_dvs_dma:4;
        RBus_UInt32  mbist_dvse_fifo:1;
        RBus_UInt32  mbist_dvs_fifo:4;
        RBus_UInt32  mbist_dvse_out:1;
        RBus_UInt32  mbist_dvs_out:4;
        RBus_UInt32  res1:7;
    };
}vdtop_bist_dvse_dvs_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  mbist_dvse_dma_2:1;
        RBus_UInt32  mbist_dvs_dma_2:4;
        RBus_UInt32  mbist_dvse_fifo_2:1;
        RBus_UInt32  mbist_dvs_fifo_2:4;
        RBus_UInt32  res1:2;
        RBus_UInt32  mbist_ls_cntl:1;
        RBus_UInt32  res2:19;
    };
}vdtop_bist_dvse_dvs2_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  moniter_h_addr:11;
        RBus_UInt32  res1:5;
        RBus_UInt32  moniter_v_addr:9;
        RBus_UInt32  moniter_size:4;
        RBus_UInt32  vstate_non_eq_3_flag:1;
        RBus_UInt32  moniter_field:1;
        RBus_UInt32  ycbcr_moniter_en:1;
    };
}vdtop_ycbcr_moniter_ctrl_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vd_yout_moniter:10;
        RBus_UInt32  res1:22;
    };
}vdtop_ycbcr_moniter_value_y_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  vd_cbout_moniter:10;
        RBus_UInt32  res1:6;
        RBus_UInt32  vd_crout_moniter:10;
        RBus_UInt32  res2:6;
    };
}vdtop_ycbcr_moniter_value_cbcr_RBUS;

typedef union
{
    RBus_UInt32 regValue;
    struct{
        RBus_UInt32  adc_updn_debug_dn:1;
        RBus_UInt32  adc_updn_debug_up:1;
        RBus_UInt32  adc_updn_debug_en:1;
        RBus_UInt32  res1:5;
        RBus_UInt32  moniter_cr_value:8;
        RBus_UInt32  moniter_cb_value:8;
        RBus_UInt32  moniter_y_value:8;
    };
}vdtop_adc_updn_ctrl_RBUS;




#endif 


#endif 
