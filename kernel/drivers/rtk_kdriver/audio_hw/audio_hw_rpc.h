#ifndef AUDIO_HW_RPC_H
#define AUDIO_HW_RPC_H

#include <linux/types.h>

#include <sound/core.h> //confirm
//#include <sound/control.h>
//#include <sound/pcm.h>
//#include <sound/rawmidi.h>
//#include <sound/initval.h>
//#include <sound/asound.h>
#include <uapi/sound/asound.h> //confirm
//#include <sound/rtk_snd.h> //confirm
#include <linux/dma-mapping.h> //confirm
#if 0
enum AUDIO_CONFIG_CMD_MSG {
	AUDIO_CONFIG_CMD_SPEAKER = 0,
	AUDIO_CONFIG_CMD_AGC = 1,
	AUDIO_CONFIG_CMD_SPDIF = 2,
	AUDIO_CONFIG_CMD_VOLUME = 3,
	AUDIO_CONFIG_CMD_MUTE = 4,
	AUDIO_CONFIG_CMD_AO_MIC = 5,
	AUDIO_CONFIG_CMD_AO_AUX = 6,
	AUDIO_CONFIG_CMD_AO_ECHO_REVERB = 7,
	AUDIO_CONFIG_CMD_AO_MIC1_VOLUME = 8,
	AUDIO_CONFIG_CMD_AO_MIC2_VOLUME = 9,
	AUDIO_CONFIG_CMD_AO_DEC_VOLUME = 10,
	AUDIO_CONFIG_CMD_AO_AUX_VOLUME = 11,
	AUDIO_CONFIG_CMD_DAC_SWITCH = 12,
	AUDIO_CONFIG_CMD_DD_DUALMONO = 13,
	AUDIO_CONFIG_CMD_DD_SCALE = 14,
	AUDIO_CONFIG_CMD_DD_DOWNMIXMODE = 15,
	AUDIO_CONFIG_CMD_DD_COMP = 16,
	AUDIO_CONFIG_CMD_DD_LFE = 17,
	AUDIO_CONFIG_CMD_DD_STEREOMIX = 18,
	AUDIO_CONFIG_CMD_DIGITAL_OUT = 19,
	AUDIO_CONFIG_CMD_EXCLUSIVE = 20,
	AUDIO_CONFIG_CMD_AC3_SPDIF_RAW = 21,
	AUDIO_CONFIG_CMD_AC3_HDMI_RAW = 22,
	AUDIO_CONFIG_CMD_DTS_SPDIF_RAW = 23,
	AUDIO_CONFIG_CMD_DTS_HDMI_RAW = 24,
	AUDIO_CONFIG_CMD_MPG_SPDIF_RAW = 25,
	AUDIO_CONFIG_CMD_MPG_HDMI_RAW = 26,
	AUDIO_CONFIG_CMD_AAC_SPDIF_RAW = 27,
	AUDIO_CONFIG_CMD_AAC_HDMI_RAW = 28,
	AUDIO_CONFIG_CMD_MLP_HDMI_RAW = 29,
	AUDIO_CONFIG_CMD_DDP_HDMI_RAW = 30,
	AUDIO_CONFIG_CMD_HDMI_CHANNEL_OUT = 31,
	AUDIO_CONFIG_CMD_FORCE_CHANNEL_CODEC = 32,
	AUDIO_CONFIG_CMD_MLP_SPDIF_RAW = 33,
	AUDIO_CONFIG_CMD_DDP_SPDIF_RAW = 34,
	AUDIO_CONFIG_CMD_MAX_OUTPUT_SAMPLERATE = 35,
	AUDIO_CONFIG_CMD_USB_DEVICE_SUPPORT_SAMPLERATE = 36,
	AUDIO_CONFIG_CMD_KARAOKE_MODE = 37,
	AUDIO_CONFIG_CMD_BRAZIL_LATM_AAC = 38,
	AUDIO_CONFIG_CMD_DRC_PERCENT = 39,
	AUDIO_CONFIG_CMD_LICENSE_MODE = 40,
	AUDIO_CONFIG_CMD_AUDIO_TYPE_PRIORITY = 41,
	AUDIO_CONFIG_CMD_SPDIF_OUTPUT_SWITCH = 42,
	AUDIO_CONFIG_CMD_CUSTOMIZE_REQUEST = 43,
	AUDIO_CONFIG_CMD_DEC_PLAYBACK_RATE = 44,
	AUDIO_CONFIG_CMD_SAMPLERATE_TOLERANCE = 45,
	AUDIO_CONFIG_CMD_KARAOKE_GENDER_CHANGE = 46,
	AUDIO_CONFIG_CMD_SET_DEC_DELAY_RP = 47,
	AUDIO_CONFIG_CMD_AO_OUTPUT_CONFIG = 48,
	AUDIO_CONFIG_CMD_SET_AI_VOLUME = 49,
	AUDIO_CONFIG_CMD_AO_DEC_MUTE = 50,
	AUDIO_CONFIG_TFAGC_DEBUG_PRINT = 51,
	AUDIO_CONFIG_ASF_DEBUG_PRINT = 52,
	AUDIO_CONFIG_CMD_AO_OUTPUT_VOLUME = 53,
	AUDIO_CONFIG_CMD_KARAOKE_MODE_FORTV_PROJECT = 54,
	AUDIO_CONFIG_CMD_AVOUT_FROM_HW = 56,
	AUDIO_CONFIG_CMD_CONFIG_AIO_AIO1 = 57,
	AUDIO_CONFIG_CMD_CONFIG_AIO_AIO2 = 58,
	AUDIO_CONFIG_CMD_CONFIG_AIO_HEADPHONE = 59,
	AUDIO_CONFIG_CMD_AO_DEC_MULTI_CH_VOLUME = 60,
	AUDIO_CONFIG_CMD_AO_DEC_MULTI_CH_MUTE = 61,
	AUDIO_CONFIG_CMD_SET_SPDIF_CS_INFO = 62,
	AUDIO_CONFIG_CMD_HDMI_ARC = 63,
	AUDIO_CONFIG_CMD_AO_DEC_MULTI_CH_PB_VOLUME = 64,
	AUDIO_CONFIG_CMD_AO_DEC_MULTI_CH_PB_MUTE = 65,
	AUDIO_CONFIG_CMD_AO_DEC_MULTI_CH_TS_VOLUME = 66,
	AUDIO_CONFIG_CMD_AO_DEC_MULTI_CH_TS_MUTE = 67,
	AUDIO_CONFIG_CMD_AO_FLASH_PB_VOLUME = 68,
	AUDIO_CONFIG_CMD_AO_FLASH_PB_MUTE = 69,
	AUDIO_CONFIG_CMD_AO_FLASH_TS_VOLUME = 70,
	AUDIO_CONFIG_CMD_AO_FLASH_TS_MUTE = 71,
	AUDIO_CONFIG_CMD_AI_CEI_ENABLE = 72,
	AUDIO_CONFIG_CMD_AI_CEI_SETMODE = 73,
	AUDIO_CONFIG_CMD_AD_DESCRIPTOR = 74,
	AUDIO_CONFIG_CMD_DEFAULT_DIALNORM = 75,
	AUDIO_CONFIG_CMD_AI_CEI_SET_PARAMETER = 76,
	AUDIO_CONFIG_CMD_AI_CEI_GET_PARAMETER = 77,
	AUDIO_CONFIG_CMD_AI_TRANSFER_MATRIX = 78,
	AUDIO_CONFIG_CMD_AO_LGSE_MUX = 79,
	AUDIO_CONFIG_CMD_SET_VOLUME = 100,
	AUDIO_CONFIG_CMD_SET_MUTE = 101,
	AUDIO_CONFIG_CMD_SET_DELAY = 102,
	AUDIO_CONFIG_CMD_SET_SCART_ON = 103,
	AUDIO_CONFIG_CMD_SET_NO_DELAY_PARAM = 104,
	AUDIO_CONFIG_CMD_SET_SPDIF_CS_ALL = 105,
	AUDIO_CONFIG_CMD_ARC = 106,
	AUDIO_CONFIG_CMD_NTFY_HAL_HDMI_FMT = 107,
	AUDIO_CONFIG_CMD_AANDROID_DOLBY_DYN_RANGE = 108,
	AUDIO_CONFIG_CMD_AANDROID_HEAAC_DYN_RANGE = 109,
	AUDIO_CONFIG_CMD_AANDROID_MPEG_AUD_LEVEL = 110,
	AUDIO_CONFIG_CMD_AANDROID_HEAAC_AUD_LEVEL = 111,
};
typedef enum AUDIO_CONFIG_CMD_MSG AUDIO_CONFIG_CMD_MSG;

//For setting ATV clock RPC(defined in AudioRPCBaseDS_data.h)
typedef struct {
	long instanceID;
	int atv_type;
} AUDIO_RPC_SET_ATV_CLOCK;

typedef struct {
	enum AUDIO_CONFIG_CMD_MSG msg_id;
	unsigned int value[15];
} AUDIO_CONFIG_COMMAND;

enum ENUM_AI_PATH {
	ENUM_AI_PB_PATH = 0,
	ENUM_AI_TS_PATH = 1,
};
typedef enum ENUM_AI_PATH ENUM_AI_PATH;
#endif
int32_t rtk_snd_set_atv_clock(AUDIO_RPC_SET_ATV_CLOCK *atv_clk_info);
int32_t rtk_snd_set_decoder_mute(bool mute, ENUM_AI_PATH path_sel);
int32_t rtk_snd_enhance_btsc_separation(bool enable);

#endif
