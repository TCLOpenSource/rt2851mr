/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _VIDEORPC_AGENT_DATA_H_RPCGEN
#define _VIDEORPC_AGENT_DATA_H_RPCGEN

#include <RPCBaseDS.h>
#include <VideoRPCBaseDS.h>

struct VIDEO_RPC_SUBPIC_INFO {
	enum ENUM_VIDEO_SUBPIC_INFO_TYPE infoType;
	u_char pixel_depth;
	u_char st_mode;
	u_char last_in_page;
	u_char buf_idx;
	u_short start_x;
	u_short start_y;
	u_short width;
	u_short height;
	u_short pitch;
	u_int pixel_addr;
	u_int pixel_addr_end;
	u_int CLUT[256];
	u_short video_width;
	u_short video_height;
	uint64_t sPTS;
	uint64_t ePTS;
	u_short dst_x;
	u_short dst_y;
	u_short dst_width;
	u_short dst_height;
	u_char valid;
};
typedef struct VIDEO_RPC_SUBPIC_INFO VIDEO_RPC_SUBPIC_INFO;

struct VIDEO_RPC_ENC_ELEM_GEN_INFO {
	enum ENUM_DVD_VIDEO_ENCODER_OUTPUT_INFO_TYPE infoType;
	u_char videoInputSource;
	u_char encoderType;
	u_char TVSystemFormat;
	u_char videoRCMode;
	int horizontalResolusion;
	u_int video_STD_buffer_size;
	u_int init_STD_buffer_fullness;
	u_int videoBitRate;
	u_char gop_M;
	u_char gop_N;
	u_char numOfGOPsPerVOBU;
};
typedef struct VIDEO_RPC_ENC_ELEM_GEN_INFO VIDEO_RPC_ENC_ELEM_GEN_INFO;

struct VIDEO_RPC_ENC_ELEM_FRAME_INFO {
	enum ENUM_DVD_VIDEO_ENCODER_OUTPUT_INFO_TYPE infoType;
	u_int pictureNumber;
	u_char pictureType;
	u_char topFieldFirst;
	u_char numOfField;
	u_char newScene;
	u_int PTShigh;
	u_int PTSlow;
	u_int DTShigh;
	u_int DTSlow;
	u_int VBIData;
	u_int VBVfullness;
	u_char resumedVideoFrame;
	u_char newVOBUStart;
	u_char KeyFrame;
	u_char AGCDetection;
	u_int CCData;
	u_int CCStatus;
	int frameSize;
};
typedef struct VIDEO_RPC_ENC_ELEM_FRAME_INFO VIDEO_RPC_ENC_ELEM_FRAME_INFO;

struct VIDEO_RPC_ENDOFSTREAM {
	long SP_instanceID;
};
typedef struct VIDEO_RPC_ENDOFSTREAM VIDEO_RPC_ENDOFSTREAM;

struct VIDEO_RPC_DEC_JPEG_INFO {
	long instanceID;
	long destWidth;
	long destHeight;
	long eventID;
	long reserved2;
	long reserved3;
};
typedef struct VIDEO_RPC_DEC_JPEG_INFO VIDEO_RPC_DEC_JPEG_INFO;

struct VIDEO_RPC_DEC_JPEG_CTRL {
	long decodedWidth;
	long decodedHeight;
	long bitstreamEnd;
	long cancel;
	long status;
	long orgJpegWidth;
	long orgJpegHeight;
	long croppedJpegX;
	long croppedJpegY;
	long croppedJpegWidth;
	long croppedJpegHeight;
	enum VIDEO_JPEG_ROTATION orientation;
	long percentage;
	long reserved3;
	long JPEG_CTRL;
	long BITMAP_CTRL;
	long TIFF_CTRL;
	long GIF_CTRL;
	long PNG_CTRL;
	long Format1_CTRL;
	long Format2_CTRL;
	long Format3_CTRL;
	long bitstreamStart;
	long outInstanceID;
	enum VIDEO_IMG_TYPE imgType;
	long pScratchBase;
	long scratchSize;
	long WEBP_CTRL;
	long PSEUDOIMG_CTRL;
	long HEIF_CTRL;
};
typedef struct VIDEO_RPC_DEC_JPEG_CTRL VIDEO_RPC_DEC_JPEG_CTRL;

struct VIDEO_RPC_ENC_VBID_WSS_INFO {
	enum ENUM_DVD_VIDEO_ENCODER_OUTPUT_INFO_TYPE infoType;
	enum ENUM_TVD_VIDEO_FORMAT video_format;
	u_int flg_no_signal;
	u_int copy_protected;
	enum VO_VBI_ASPECT_RATIO vbi_aspect_ratio;
};
typedef struct VIDEO_RPC_ENC_VBID_WSS_INFO VIDEO_RPC_ENC_VBID_WSS_INFO;

struct VIDEO_RPC_ENC_PAUSE_INFO {
	enum ENUM_DVD_VIDEO_ENCODER_OUTPUT_INFO_TYPE infoType;
	u_int pausedPTSHigh;
	u_int pausedPTSLow;
	u_int pausedDTSHigh;
	u_int pausedDTSLow;
	u_int resumedPTSHigh;
	u_int resumedPTSLow;
	u_int resumedDTSHigh;
	u_int resumedDTSLow;
	u_char pictureType;
};
typedef struct VIDEO_RPC_ENC_PAUSE_INFO VIDEO_RPC_ENC_PAUSE_INFO;

struct VIDEO_RPC_ENC_AUTOPAUSE_INFO {
	enum ENUM_DVD_VIDEO_ENCODER_OUTPUT_INFO_TYPE infoType;
	u_char isFinish;
};
typedef struct VIDEO_RPC_ENC_AUTOPAUSE_INFO VIDEO_RPC_ENC_AUTOPAUSE_INFO;

struct VIDEO_RPC_DEC_ERROR_INFO {
	long instanceID;
	long errCode;
};
typedef struct VIDEO_RPC_DEC_ERROR_INFO VIDEO_RPC_DEC_ERROR_INFO;

struct VIDEO_RPC_ENC_AUTOPAUSE {
	long instanceID;
	u_char isFinish;
};
typedef struct VIDEO_RPC_ENC_AUTOPAUSE VIDEO_RPC_ENC_AUTOPAUSE;

struct VIDEO_DEC_FRM_MSG {
	ENUM_VIDEO_MSG_INFO_TYPE msgType;
	u_int frame_type;
	u_int PTSL;
	u_int PTSH;
	u_int reserved1;
	u_int reserved2;
	u_int reserved3;
	u_int reserved4;
	u_int reserved5;
	u_int reserved6;
	u_int reserved7;
	u_int reserved8;
	u_int reserved9;
	u_int reserved10;
	u_int reserved11;
	u_int reserved12;
	u_int reserved13;
	u_int reserved14;
	u_int reserved15;
	u_int reserved16;
	u_int reserved17;
	u_int reserved18;
	u_int reserved19;
};
typedef struct VIDEO_DEC_FRM_MSG VIDEO_DEC_FRM_MSG;

struct VIDEO_DEC_PIC_MSG {
	ENUM_VIDEO_MSG_INFO_TYPE msgType;
	u_int frame_rate;
	u_int bit_rate;
	u_int resol;
	u_int disp_resol;
	u_int actXY;
	u_int actWH;
	u_int sarWH;
	u_int prog_info;
	u_int ratio_info;
	u_int afd_3d;
	u_int PTSL;
	u_int PTSH;
	u_int color_transf;
	u_int coeffs_overscan;
	u_int dispXY0;
	u_int dispXY1;
	u_int dispXY2;
	u_int whitePointXY;
	u_int maxL;
	u_int minL;
	u_int videoFullRangeFlag;
	u_int reserved1;
};
typedef struct VIDEO_DEC_PIC_MSG VIDEO_DEC_PIC_MSG;

struct VIDEO_RPC_SCALER_MESSAGE {
	u_int msgType;
	u_int msgSubType;
	u_int msgIntData;
	u_int msgBodyByteSize;
	u_int msgDataPtrAddr;
	u_int isValidate;
	u_int isSmoothtoggle;
};
typedef struct VIDEO_RPC_SCALER_MESSAGE VIDEO_RPC_SCALER_MESSAGE;

struct VIDEO_RPC_DEC_MESSAGE {
	long instanceID;
	long message;
};
typedef struct VIDEO_RPC_DEC_MESSAGE VIDEO_RPC_DEC_MESSAGE;

struct VIDEO_RPC_VOUT_MESSAGE {
	long instanceID;
	long message;
	u_int PTShigh;
	u_int PTSlow;
	u_int reserved1;
	u_int reserved2;
	u_int reserved3;
	u_int reserved4;
};
typedef struct VIDEO_RPC_VOUT_MESSAGE VIDEO_RPC_VOUT_MESSAGE;

struct VIDEO_RPC_DEC_FRAME_INFO {
	long instanceID;
	u_int PTSH;
	u_int PTSL;
	u_char frame_type;
};
typedef struct VIDEO_RPC_DEC_FRAME_INFO VIDEO_RPC_DEC_FRAME_INFO;

struct VIDEO_RPC_DEC_PIC_INFO {
	long instanceID;
	u_short frame_rate;
	u_short aspect_ratio;
	u_short hor_size;
	u_short ver_size;
	u_int bit_rate;
	u_char afd;
	u_char prog_seq;
	u_char prog_frame;
	u_short activeX;
	u_short activeY;
	u_short activeW;
	u_short activeH;
	u_short disp_hor_size;
	u_short disp_ver_size;
	u_char aspect_ratio_idc;
	u_int sar_width;
	u_int sar_height;
	u_char info_3D;
};
typedef struct VIDEO_RPC_DEC_PIC_INFO VIDEO_RPC_DEC_PIC_INFO;

struct VIDEO_RPC_DEC_MEDIA_INFO {
	long instanceID;
	u_int width;
	u_int height;
	u_int frame_rate;
	u_int aspect_ratio_n;
	u_int aspect_ratio_d;
	u_int level;
	u_int profile;
	u_int type_3D;
	u_int par_width;
	u_int par_height;
	u_int type_LR;
	u_int type_Scan;
	u_int afd;
};
typedef struct VIDEO_RPC_DEC_MEDIA_INFO VIDEO_RPC_DEC_MEDIA_INFO;

struct VIDEO_RPC_TO_KERNEL_PARAMETER {
	u_int command;
	u_int param1;
	u_int param2;
};
typedef struct VIDEO_RPC_TO_KERNEL_PARAMETER VIDEO_RPC_TO_KERNEL_PARAMETER;

struct VIDEO_RPC_TRANSITION_EFFECT_CTRL {
	long cancel;
	long percentage;
	VO_RECTANGLE winStart_A;
	VO_RECTANGLE winEnd_A;
	VO_RECTANGLE winStart_B;
	VO_RECTANGLE winEnd_B;
	long timeForKenBurns;
};
typedef struct VIDEO_RPC_TRANSITION_EFFECT_CTRL VIDEO_RPC_TRANSITION_EFFECT_CTRL;

#endif /* !_VIDEORPC_AGENT_DATA_H_RPCGEN */
