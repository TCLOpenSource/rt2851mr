/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _VIDEORPCBASEDS_H_RPCGEN
#define _VIDEORPCBASEDS_H_RPCGEN

#include <rt/misc/RPCstruct.h>

#include "VideoRPCBaseDS_data.h"

#ifdef __cplusplus
extern "C" {
#endif

#define printf(str)

#include <rpc_common.h>

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_RPC_RINGBUFFER (XDR *, RPC_RINGBUFFER*);
extern  bool_t xdr_VIDEO_VF_TYPE (XDR *, VIDEO_VF_TYPE*);
extern  bool_t xdr_VIDEO_LOW_DELAY (XDR *, VIDEO_LOW_DELAY*);
extern  bool_t xdr_VIDEO_IMG_TYPE (XDR *, VIDEO_IMG_TYPE*);
extern  bool_t xdr_VIDEO_RATE_CONTROL_MODE (XDR *, VIDEO_RATE_CONTROL_MODE*);
extern  bool_t xdr_VIDEO_SOURCE (XDR *, VIDEO_SOURCE*);
extern  bool_t xdr_VIDEO_JPEG_ROTATION (XDR *, VIDEO_JPEG_ROTATION*);
extern  bool_t xdr_VIDEO_JPEG_MIRROR (XDR *, VIDEO_JPEG_MIRROR*);
extern  bool_t xdr_IMG_TARGET_FORMAT (XDR *, IMG_TARGET_FORMAT*);
extern  bool_t xdr_IMG_TARGET_POSITION (XDR *, IMG_TARGET_POSITION*);
extern  bool_t xdr_IMG_SOURCE_PICTURE_SELECT (XDR *, IMG_SOURCE_PICTURE_SELECT*);
extern  bool_t xdr_IMG_STATUS (XDR *, IMG_STATUS*);
extern  bool_t xdr_VIDEO_COLOR_FMT (XDR *, VIDEO_COLOR_FMT*);
extern  bool_t xdr_VIDEO_TRANSITION_TYPE (XDR *, VIDEO_TRANSITION_TYPE*);
extern  bool_t xdr_VIDEO_FORMAT (XDR *, VIDEO_FORMAT*);
extern  bool_t xdr_VIDEO_STREAM_TYPE (XDR *, VIDEO_STREAM_TYPE*);
extern  bool_t xdr_VIDEO_DECODER_CC_BYPASS_MODE (XDR *, VIDEO_DECODER_CC_BYPASS_MODE*);
extern  bool_t xdr_CMPRS_RATIO (XDR *, CMPRS_RATIO*);
extern  bool_t xdr_ENUM_VIDEO_SUBPIC_INFO_TYPE (XDR *, ENUM_VIDEO_SUBPIC_INFO_TYPE*);
extern  bool_t xdr_ENUM_DVD_VIDEO_ENCODER_OUTPUT_INFO_TYPE (XDR *, ENUM_DVD_VIDEO_ENCODER_OUTPUT_INFO_TYPE*);
extern  bool_t xdr_ENUM_VIDEO_ENCODER_RC_MODE (XDR *, ENUM_VIDEO_ENCODER_RC_MODE*);
extern  bool_t xdr_ENUM_VIDEO_MSG_INFO_TYPE (XDR *, ENUM_VIDEO_MSG_INFO_TYPE*);
extern  bool_t xdr_VO_STANDARD (XDR *, VO_STANDARD*);
extern  bool_t xdr_VO_PEDESTAL_TYPE (XDR *, VO_PEDESTAL_TYPE*);
extern  bool_t xdr_VO_TV_TYPE (XDR *, VO_TV_TYPE*);
extern  bool_t xdr_VO_HDMI_MODE (XDR *, VO_HDMI_MODE*);
extern  bool_t xdr_VO_HDMI_AUDIO_SAMPLE_FREQ (XDR *, VO_HDMI_AUDIO_SAMPLE_FREQ*);
extern  bool_t xdr_VO_HDMI_COLOR_FMT (XDR *, VO_HDMI_COLOR_FMT*);
extern  bool_t xdr_VO_VBI_ASPECT_RATIO (XDR *, VO_VBI_ASPECT_RATIO*);
extern  bool_t xdr_VO_VBI_COPY_MODE (XDR *, VO_VBI_COPY_MODE*);
extern  bool_t xdr_VO_VBI_APS (XDR *, VO_VBI_APS*);
extern  bool_t xdr_VO_VBI_SUBTITLE_MODE (XDR *, VO_VBI_SUBTITLE_MODE*);
extern  bool_t xdr_VO_VIDEO_PLANE (XDR *, VO_VIDEO_PLANE*);
extern  bool_t xdr_VO_RESCALE_MODE (XDR *, VO_RESCALE_MODE*);
extern  bool_t xdr_VO_DEINT_MODE (XDR *, VO_DEINT_MODE*);
extern  bool_t xdr_VO_OSD_LPF_TYPE (XDR *, VO_OSD_LPF_TYPE*);
extern  bool_t xdr_VO_OSD_COLOR_FORMAT (XDR *, VO_OSD_COLOR_FORMAT*);
extern  bool_t xdr_VO_OSD_RGB_ORDER (XDR *, VO_OSD_RGB_ORDER*);
extern  bool_t xdr_VO_GRAPHIC_PLANE (XDR *, VO_GRAPHIC_PLANE*);
extern  bool_t xdr_VO_GRAPHIC_STORAGE_MODE (XDR *, VO_GRAPHIC_STORAGE_MODE*);
extern  bool_t xdr_PVIN_MODE (XDR *, PVIN_MODE*);
extern  bool_t xdr_VO_COLOR (XDR *, VO_COLOR*);
extern  bool_t xdr_VO_RECTANGLE (XDR *, VO_RECTANGLE*);
extern  bool_t xdr_VO_SUBPIC_COLORMAP (XDR *, VO_SUBPIC_COLORMAP*);
extern  bool_t xdr_SP_STREAM_TYPE (XDR *, SP_STREAM_TYPE*);
extern  bool_t xdr_ENUM_TVD_VIDEO_FORMAT (XDR *, ENUM_TVD_VIDEO_FORMAT*);
extern  bool_t xdr_ENUM_TVD_INPUT_FORMAT (XDR *, ENUM_TVD_INPUT_FORMAT*);
extern  bool_t xdr_ENUM_TVD_YC_SEP_MODE (XDR *, ENUM_TVD_YC_SEP_MODE*);
extern  bool_t xdr_ENUM_TVD_VBI_DATA (XDR *, ENUM_TVD_VBI_DATA*);
extern  bool_t xdr_TVE_BOARD_TYPE (XDR *, TVE_BOARD_TYPE*);
extern  bool_t xdr_VIDEO_BUFFER_TYPE (XDR *, VIDEO_BUFFER_TYPE*);
extern  bool_t xdr_VIDEO_DNR_MODE (XDR *, VIDEO_DNR_MODE*);
extern  bool_t xdr_VIDEO_CODEC_CONTROL_BIT (XDR *, VIDEO_CODEC_CONTROL_BIT*);
extern  bool_t xdr_VIDEO_PHOTO_DEC_JPEG_CTRL (XDR *, VIDEO_PHOTO_DEC_JPEG_CTRL*);
extern  bool_t xdr_VIDEO_PHOTO_DEC_BITMAP_CTRL (XDR *, VIDEO_PHOTO_DEC_BITMAP_CTRL*);
extern  bool_t xdr_VIDEO_PHOTO_DEC_TIFF_CTRL (XDR *, VIDEO_PHOTO_DEC_TIFF_CTRL*);
extern  bool_t xdr_VIDEO_PHOTO_DEC_GIF_CTRL (XDR *, VIDEO_PHOTO_DEC_GIF_CTRL*);
extern  bool_t xdr_VIDEO_PHOTO_DEC_PNG_CTRL (XDR *, VIDEO_PHOTO_DEC_PNG_CTRL*);
extern  bool_t xdr_VIDEO_PHOTO_DEC_WEBP_CTRL (XDR *, VIDEO_PHOTO_DEC_WEBP_CTRL*);
extern  bool_t xdr_VIDEO_PHOTO_DEC_PSEUDOIMG_CTRL (XDR *, VIDEO_PHOTO_DEC_PSEUDOIMG_CTRL*);
extern  bool_t xdr_VIDEO_PHOTO_DEC_HEIF_CTRL (XDR *, VIDEO_PHOTO_DEC_HEIF_CTRL*);
extern  bool_t xdr_MIXER_WIN (XDR *, MIXER_WIN*);
extern  bool_t xdr_YUV_FMT (XDR *, YUV_FMT*);
extern  bool_t xdr_CAP_FRAME_FMT (XDR *, CAP_FRAME_FMT*);
extern  bool_t xdr_CAP_IN_SEL (XDR *, CAP_IN_SEL*);
extern  bool_t xdr_VIDEO_ENC_PROFILE (XDR *, VIDEO_ENC_PROFILE*);
extern  bool_t xdr_VO_CHROMA_FMT (XDR *, VO_CHROMA_FMT*);
extern  bool_t xdr_VO_3D_MODE_TYPE (XDR *, VO_3D_MODE_TYPE*);
extern  bool_t xdr_VO_3D_OUTPUT_MODE (XDR *, VO_3D_OUTPUT_MODE*);
extern  bool_t xdr_VO_FORCE2D_MODE (XDR *, VO_FORCE2D_MODE*);
extern  bool_t xdr_PANEL_3D_TYPE (XDR *, PANEL_3D_TYPE*);
extern  bool_t xdr_VO_SOURCE_TYPE (XDR *, VO_SOURCE_TYPE*);
extern  bool_t xdr_VO_FORCEBG_TYPE (XDR *, VO_FORCEBG_TYPE*);
extern  bool_t xdr_VO_SCALER_AR_MODE (XDR *, VO_SCALER_AR_MODE*);
extern  bool_t xdr_VO_4K2K_MODE_TYPE (XDR *, VO_4K2K_MODE_TYPE*);
extern  bool_t xdr_OSD_4K2K_MODE_TYPE (XDR *, OSD_4K2K_MODE_TYPE*);
extern  bool_t xdr_VO_HACK_CANVAS_MODE (XDR *, VO_HACK_CANVAS_MODE*);
extern  bool_t xdr_DIRECT_VO_FRAME_QUEUE_SIZE_VALUE (XDR *, DIRECT_VO_FRAME_QUEUE_SIZE_VALUE*);
extern  bool_t xdr_DIRECT_VO_FRAME_FORMAT (XDR *, DIRECT_VO_FRAME_FORMAT*);
extern  bool_t xdr_DIRECT_VO_FRAME_LAYOUT (XDR *, DIRECT_VO_FRAME_LAYOUT*);
extern  bool_t xdr_DIRECT_VO_FRAME_SCAN_MODE (XDR *, DIRECT_VO_FRAME_SCAN_MODE*);
extern  bool_t xdr_DIRECT_VO_FRAME_CLOCK_TYPE (XDR *, DIRECT_VO_FRAME_CLOCK_TYPE*);
extern  bool_t xdr_DIRECT_VO_FRAME_FLAG (XDR *, DIRECT_VO_FRAME_FLAG*);
extern  bool_t xdr_DIRECT_VO_FRAME_3D_TYPE (XDR *, DIRECT_VO_FRAME_3D_TYPE*);
extern  bool_t xdr_VSGEN_IV_SRC (XDR *, VSGEN_IV_SRC*);
extern  bool_t xdr_VIDEO_RESOURCE_CORE_TYPE (XDR *, VIDEO_RESOURCE_CORE_TYPE*);
extern  bool_t xdr_VIDEO_RENDER_MODE_TYPE (XDR *, VIDEO_RENDER_MODE_TYPE*);
extern  bool_t xdr_VIDEO_RESOURCE_CTRL_TYPE (XDR *, VIDEO_RESOURCE_CTRL_TYPE*);
extern  bool_t xdr_VO_VSC_SRC_TYPE (XDR *, VO_VSC_SRC_TYPE*);
extern  bool_t xdr_DIRECT_VO_FRAME_ORIENTATION (XDR *, DIRECT_VO_FRAME_ORIENTATION*);
extern  bool_t xdr_RPC_VODMA_DDOMAIN_CHROMA_FMT (XDR *, RPC_VODMA_DDOMAIN_CHROMA_FMT*);
extern  bool_t xdr_RPC_SLR_AFD_TYPE (XDR *, RPC_SLR_AFD_TYPE*);
extern  bool_t xdr_HDR_TYPE (XDR *, HDR_TYPE*);
extern  bool_t xdr_VO_APP_TYPE (XDR *, VO_APP_TYPE*);
extern  bool_t xdr_HAL_VO_P_STATE_T (XDR *, HAL_VO_P_STATE_T*);
extern  bool_t xdr_HAL_VO_P_PIXEL_FORMAT (XDR *, HAL_VO_P_PIXEL_FORMAT*);
extern  bool_t xdr_HAL_VO_P_PANEL_TYPE (XDR *, HAL_VO_P_PANEL_TYPE*);
extern  bool_t xdr_HAL_VO_P_CFG_TYPE (XDR *, HAL_VO_P_CFG_TYPE*);
extern  bool_t xdr_HAL_VO_P_SUPPORT_PIXEL_FORMAT_T (XDR *, HAL_VO_P_SUPPORT_PIXEL_FORMAT_T*);
extern  bool_t xdr_HAL_VO_P_SUPPORT_PANEL_TYPE_T (XDR *, HAL_VO_P_SUPPORT_PANEL_TYPE_T*);
extern  bool_t xdr_HAL_VO_P_FB_FRAMEBUFFER_PROPERTY_FLAGS_T (XDR *, HAL_VO_P_FB_FRAMEBUFFER_PROPERTY_FLAGS_T*);

#else /* K&R C */
extern bool_t xdr_RPC_RINGBUFFER ();
extern bool_t xdr_VIDEO_VF_TYPE ();
extern bool_t xdr_VIDEO_LOW_DELAY ();
extern bool_t xdr_VIDEO_IMG_TYPE ();
extern bool_t xdr_VIDEO_RATE_CONTROL_MODE ();
extern bool_t xdr_VIDEO_SOURCE ();
extern bool_t xdr_VIDEO_JPEG_ROTATION ();
extern bool_t xdr_VIDEO_JPEG_MIRROR ();
extern bool_t xdr_IMG_TARGET_FORMAT ();
extern bool_t xdr_IMG_TARGET_POSITION ();
extern bool_t xdr_IMG_SOURCE_PICTURE_SELECT ();
extern bool_t xdr_IMG_STATUS ();
extern bool_t xdr_VIDEO_COLOR_FMT ();
extern bool_t xdr_VIDEO_TRANSITION_TYPE ();
extern bool_t xdr_VIDEO_FORMAT ();
extern bool_t xdr_VIDEO_STREAM_TYPE ();
extern bool_t xdr_VIDEO_DECODER_CC_BYPASS_MODE ();
extern bool_t xdr_CMPRS_RATIO ();
extern bool_t xdr_ENUM_VIDEO_SUBPIC_INFO_TYPE ();
extern bool_t xdr_ENUM_DVD_VIDEO_ENCODER_OUTPUT_INFO_TYPE ();
extern bool_t xdr_ENUM_VIDEO_ENCODER_RC_MODE ();
extern bool_t xdr_ENUM_VIDEO_MSG_INFO_TYPE ();
extern bool_t xdr_VO_STANDARD ();
extern bool_t xdr_VO_PEDESTAL_TYPE ();
extern bool_t xdr_VO_TV_TYPE ();
extern bool_t xdr_VO_HDMI_MODE ();
extern bool_t xdr_VO_HDMI_AUDIO_SAMPLE_FREQ ();
extern bool_t xdr_VO_HDMI_COLOR_FMT ();
extern bool_t xdr_VO_VBI_ASPECT_RATIO ();
extern bool_t xdr_VO_VBI_COPY_MODE ();
extern bool_t xdr_VO_VBI_APS ();
extern bool_t xdr_VO_VBI_SUBTITLE_MODE ();
extern bool_t xdr_VO_VIDEO_PLANE ();
extern bool_t xdr_VO_RESCALE_MODE ();
extern bool_t xdr_VO_DEINT_MODE ();
extern bool_t xdr_VO_OSD_LPF_TYPE ();
extern bool_t xdr_VO_OSD_COLOR_FORMAT ();
extern bool_t xdr_VO_OSD_RGB_ORDER ();
extern bool_t xdr_VO_GRAPHIC_PLANE ();
extern bool_t xdr_VO_GRAPHIC_STORAGE_MODE ();
extern bool_t xdr_PVIN_MODE ();
extern bool_t xdr_VO_COLOR ();
extern bool_t xdr_VO_RECTANGLE ();
extern bool_t xdr_VO_SUBPIC_COLORMAP ();
extern bool_t xdr_SP_STREAM_TYPE ();
extern bool_t xdr_ENUM_TVD_VIDEO_FORMAT ();
extern bool_t xdr_ENUM_TVD_INPUT_FORMAT ();
extern bool_t xdr_ENUM_TVD_YC_SEP_MODE ();
extern bool_t xdr_ENUM_TVD_VBI_DATA ();
extern bool_t xdr_TVE_BOARD_TYPE ();
extern bool_t xdr_VIDEO_BUFFER_TYPE ();
extern bool_t xdr_VIDEO_DNR_MODE ();
extern bool_t xdr_VIDEO_CODEC_CONTROL_BIT ();
extern bool_t xdr_VIDEO_PHOTO_DEC_JPEG_CTRL ();
extern bool_t xdr_VIDEO_PHOTO_DEC_BITMAP_CTRL ();
extern bool_t xdr_VIDEO_PHOTO_DEC_TIFF_CTRL ();
extern bool_t xdr_VIDEO_PHOTO_DEC_GIF_CTRL ();
extern bool_t xdr_VIDEO_PHOTO_DEC_PNG_CTRL ();
extern bool_t xdr_VIDEO_PHOTO_DEC_WEBP_CTRL ();
extern bool_t xdr_VIDEO_PHOTO_DEC_PSEUDOIMG_CTRL ();
extern bool_t xdr_VIDEO_PHOTO_DEC_HEIF_CTRL ();
extern bool_t xdr_MIXER_WIN ();
extern bool_t xdr_YUV_FMT ();
extern bool_t xdr_CAP_FRAME_FMT ();
extern bool_t xdr_CAP_IN_SEL ();
extern bool_t xdr_VIDEO_ENC_PROFILE ();
extern bool_t xdr_VO_CHROMA_FMT ();
extern bool_t xdr_VO_3D_MODE_TYPE ();
extern bool_t xdr_VO_3D_OUTPUT_MODE ();
extern bool_t xdr_VO_FORCE2D_MODE ();
extern bool_t xdr_PANEL_3D_TYPE ();
extern bool_t xdr_VO_SOURCE_TYPE ();
extern bool_t xdr_VO_FORCEBG_TYPE ();
extern bool_t xdr_VO_SCALER_AR_MODE ();
extern bool_t xdr_VO_4K2K_MODE_TYPE ();
extern bool_t xdr_OSD_4K2K_MODE_TYPE ();
extern bool_t xdr_VO_HACK_CANVAS_MODE ();
extern bool_t xdr_DIRECT_VO_FRAME_QUEUE_SIZE_VALUE ();
extern bool_t xdr_DIRECT_VO_FRAME_FORMAT ();
extern bool_t xdr_DIRECT_VO_FRAME_LAYOUT ();
extern bool_t xdr_DIRECT_VO_FRAME_SCAN_MODE ();
extern bool_t xdr_DIRECT_VO_FRAME_CLOCK_TYPE ();
extern bool_t xdr_DIRECT_VO_FRAME_FLAG ();
extern bool_t xdr_DIRECT_VO_FRAME_3D_TYPE ();
extern bool_t xdr_VSGEN_IV_SRC ();
extern bool_t xdr_VIDEO_RESOURCE_CORE_TYPE ();
extern bool_t xdr_VIDEO_RENDER_MODE_TYPE ();
extern bool_t xdr_VIDEO_RESOURCE_CTRL_TYPE ();
extern bool_t xdr_VO_VSC_SRC_TYPE ();
extern bool_t xdr_DIRECT_VO_FRAME_ORIENTATION ();
extern bool_t xdr_RPC_VODMA_DDOMAIN_CHROMA_FMT ();
extern bool_t xdr_RPC_SLR_AFD_TYPE ();
extern bool_t xdr_HDR_TYPE ();
extern bool_t xdr_VO_APP_TYPE ();
extern bool_t xdr_HAL_VO_P_STATE_T ();
extern bool_t xdr_HAL_VO_P_PIXEL_FORMAT ();
extern bool_t xdr_HAL_VO_P_PANEL_TYPE ();
extern bool_t xdr_HAL_VO_P_CFG_TYPE ();
extern bool_t xdr_HAL_VO_P_SUPPORT_PIXEL_FORMAT_T ();
extern bool_t xdr_HAL_VO_P_SUPPORT_PANEL_TYPE_T ();
extern bool_t xdr_HAL_VO_P_FB_FRAMEBUFFER_PROPERTY_FLAGS_T ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_VIDEORPCBASEDS_H_RPCGEN */
