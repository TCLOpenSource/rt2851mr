/******************************************************************************
*
*   Copyright(c) 2017 Realtek Semiconductor Corp. All rights reserved.
*
*   @author baker.cheng@realtek.com
*
******************************************************************************/
#ifndef _SE_LIB_H_
#define _SE_LIB_H_

#define SEINFO_ERROR_INTERRUPT_STATUS_MASK		0x0000FFF4
#define SEINFO_STRETCH_COEFF_TABLE_MAX_TAP		3
#define SEINFO_STRETCH_COEFF_TABLE_MAX_RATIO		5
#define SEINFO_STRETCH_COEFF_TABLE_MAX_COEFF		32
#define SEINFO_STRETCH_VSCALING_COEFF_MAX		16
#define SEINFO_STRETCH_HSCALING_COEFF_MAX		32
#define SE20INFO_STRETCH_VSCALING_COEFF_MAX		16
#define SE20INFO_STRETCH_HSCALING_COEFF_MAX		16
#define SEINFO_STRETCH_DELTA_PHASE			163840000
#define SEINFO_STRETCH_SECTION_1			30000
#define SEINFO_STRETCH_SECTION_2			60000

#if SE_SE20_EXT
typedef enum _SEINFO_WRITEREG
{
	SEINFO_REG_COLOR_FORMAT = 0x060,
	SEINFO_REG_COLOR_KEY = 0x070,
	SEINFO_REG_DEST_COLOR_KEY = 0x80,
	SEINFO_REG_SRC_COLOR = 0x0D0,
	SEINFO_REG_SRC_ALPHA = 0x0E0,
	SEINFO_REG_DEST_ALPHA = 0x0F0,
	SEINFO_REG_RESULT_ALPHA = 0x100,
	SEINFO_REG_RESULT_COLOR = 0x110,
	SEINFO_REG_BASE_ADDR1 = 0x180,
	SEINFO_REG_PITCH1 = 0x190,
	SEINFO_REG_BASE_ADDR2 = 0x1a0,
	SEINFO_REG_PITCH2 = 0x1b0,
	SEINFO_REG_LOCK_CLUT = 0x1C0,
	SEINFO_REG_CONV_SCALING = 0x1D0,
	SEINFO_REG_CONV_COEF1 = 0x1E0,
	SEINFO_REG_CONV_COEF2 = 0x1F0,
	SEINFO_REG_CONV_COEF3 = 0x200,
	SEINFO_REG_CONV_COEF4 = 0x210,
	SEINFO_REG_CONV_COEF5 = 0x220,
	SEINFO_REG_CONV_COEF6 = 0x230,
	SEINFO_REG_FORMAT_CONVERT_BITBLIT_COLOR_KEY = 0x240,
	SEINFO_REG_SRC_CLR_RED = 0x250,
	SEINFO_REG_SRC_CLR_GREEN = 0x260,
	SEINFO_REG_SRC_CLR_BLUE = 0x270,
	SEINFO_REG_SRC_CLR_ALPHA = 0x280,
	SEINFO_REG_DFB_COLORALPHA = 0x2C0,
	SEINFO_REG_STRETCH = 0x2F0,
	SEINFO_REG_HDHS = 0x300,
	SEINFO_REG_VDHS = 0x310,
	SE20INFO_REG_STRETCH = 0x320,
	SE20INFO_REG_HDHS = 0x330,
	SE20INFO_REG_VDHS = 0x340,
	SEINFO_REG_HCOEF0 = 0x380,
	SEINFO_REG_HCOEF0_32  = 0x400,
	SEINFO_REG_VCOEF0 = 0x480,
	SEINFO_REG_VCOEF0_16  = 0x4C0,
	SEINFO_REG_HCOEF2 = 0x500,
	SEINFO_REG_HCOEF2_32  = 0x580,
	SEINFO_REG_VCOEF2 = 0x600,
	SEINFO_REG_VCOEF2_16  = 0x640,
	SE20INFO_REG_HCOEF1_32 = 0x680,
	SE20INFO_REG_HCOEF1_32_2 = 0x780,
	SE20INFO_REG_VCOEF1_32 = 0x880,
	SE20INFO_REG_VCOEF1_32_2 = 0x980,
	SEINFO_REG_SC_BITBLIT_COLOR_KEY = 0xA80,
	SE20INFO_REG_BASE_ADDR0 = 0xB80,
	SE20INFO_REG_BASE_ADDR1 = 0xB90,
	SE20INFO_REG_BASE_ADDR2 = 0xBA0,
	SE20INFO_REG_BASE_ADDR3 = 0xBB0,
	SE20INFO_REG_BASE_ADDR4 = 0xBC0,
	SE20INFO_REG_BASE_ADDR5 = 0xBD0,
	SE20INFO_REG_BASE_ADDR6 = 0xBE0,
	SE20INFO_REG_BASE_ADDR7 = 0xBF0,
	SE20INFO_REG_BASE_ADDR8 = 0xC00,
	SE20INFO_REG_BASE_ADDR9 = 0xC10,
	SE20INFO_REG_BASE_ADDR10 = 0xC20,
	SE20INFO_REG_BASE_ADDR11 = 0xC30,
	SE20INFO_REG_BASE_ADDR12 = 0xC40,
	SE20INFO_REG_BASE_ADDR13 = 0xC50,
	SE20INFO_REG_BASE_ADDR14 = 0xC60,
	SE20INFO_REG_BASE_ADDR15 = 0xC70,
	SE20INFO_REG_PITCH0 = 0xC80,
	SE20INFO_REG_PITCH1 = 0xC90,
	SE20INFO_REG_PITCH2 = 0xCA0,
	SE20INFO_REG_PITCH3 = 0xCB0,
	SE20INFO_REG_PITCH4 = 0xCC0,
	SE20INFO_REG_PITCH5 = 0xCD0,
	SE20INFO_REG_PITCH6 = 0xCE0,
	SE20INFO_REG_PITCH7 = 0xCF0,
	SE20INFO_REG_PITCH8 = 0xD00,
	SE20INFO_REG_PITCH9 = 0xD10,
	SE20INFO_REG_PITCH10 = 0xD20,
	SE20INFO_REG_PITCH11 = 0xD30,
	SE20INFO_REG_PITCH12 = 0xD40,
	SE20INFO_REG_PITCH13 = 0xD50,
	SE20INFO_REG_PITCH14 = 0xD60,
	SE20INFO_REG_PITCH15 = 0xD70,
	SEINFO_REG_SWAP_FBDC = 0xD80,
	SEINFO_REG_SE20_DUMMY = 0xE20,
	SEINFO_REG_CTRL = 0xE80,
	SEINFO_REG_IDLE = 0xE90,
} SEINFO_WRITEREG;
#else

typedef enum _SEINFO_WRITEREG
{
	SEINFO_REG_COLOR_FORMAT = 0x060,
	SEINFO_REG_COLOR_KEY = 0x070,
	SEINFO_REG_DEST_COLOR_KEY = 0x80,
	SEINFO_REG_SRC_COLOR = 0x090,
	SEINFO_REG_SRC_ALPHA = 0x0A0,
	SEINFO_REG_DEST_ALPHA = 0x0B0,
	SEINFO_REG_RESULT_ALPHA = 0x0C0,
	SEINFO_REG_BASE_ADDR1 = 0x0D0,
	SEINFO_REG_PITCH1 = 0x0E0,
	SEINFO_REG_COLOR_KEY2 = 0x140,
	SEINFO_REG_DEST_COLOR_KEY2 = 0x150,
	SEINFO_REG_COLOR_KEY3 = 0x160,
	SEINFO_REG_DEST_COLOR_KEY3 = 0x170,
	SEINFO_REG_RESULT_COLOR = 0x180,
	SEINFO_REG_SRC_COLOR3 = 0x190,
	SEINFO_REG_SRC_ALPHA3 = 0x1A0,
	SEINFO_REG_DEST_ALPHA3 = 0x1B0,
	SEINFO_REG_SRC_COLOR4 = 0x1C0,
	SEINFO_REG_SRC_ALPHA4 = 0x120,
	SEINFO_REG_DEST_ALPHA4 = 0x130,
	SEINFO_REG_CONV_SCALING = 0x1E0,
	SEINFO_REG_CONV_COEF1 = 0x1F0,
	SEINFO_REG_CONV_COEF2 = 0x200,
	SEINFO_REG_CONV_COEF3 = 0x210,
	SEINFO_REG_CONV_COEF4 = 0x220,
	SEINFO_REG_CONV_COEF5 = 0x230,
	SEINFO_REG_CONV_COEF6 = 0x240,
	SEINFO_REG_FORMAT_CONVERT_BITBLIT_COLOR_KEY = 0x250,
	SEINFO_REG_SRC_CLR_RED = 0x260,
	SEINFO_REG_SRC_CLR_GREEN = 0x270,
	SEINFO_REG_SRC_CLR_BLUE = 0x280,
	SEINFO_REG_SRC_CLR_ALPHA = 0x290,
	SEINFO_REG_SYNC_VO_MARGIN = 0x2A0,
	SEINFO_REG_STRETCH = 0x2C0,
	SEINFO_REG_HDHS = 0x2D0,
	SEINFO_REG_VDHS = 0x2E0,
	SEINFO_REG_HCOEF0 = 0x300,
	SEINFO_REG_HCOEF1 = 0x304,
	SEINFO_REG_HCOEF2 = 0x308,
	SEINFO_REG_HCOEF3 = 0x30C,
	SEINFO_REG_HCOEF4 = 0x310,
	SEINFO_REG_HCOEF5 = 0x314,
	SEINFO_REG_HCOEF6 = 0x318,
	SEINFO_REG_HCOEF7 = 0x31C,
	SEINFO_REG_HCOEF8 = 0x320,
	SEINFO_REG_HCOEF9 = 0x324,
	SEINFO_REG_HCOEF10 = 0x328,
	SEINFO_REG_HCOEF11 = 0x32C,
	SEINFO_REG_HCOEF12 = 0x330,
	SEINFO_REG_HCOEF13 = 0x334,
	SEINFO_REG_HCOEF14 = 0x338,
	SEINFO_REG_HCOEF15 = 0x33C,
	SEINFO_REG_HCOEF16 = 0x340,
	SEINFO_REG_HCOEF17 = 0x344,
	SEINFO_REG_HCOEF18 = 0x348,
	SEINFO_REG_HCOEF19 = 0x34C,
	SEINFO_REG_HCOEF20 = 0x350,
	SEINFO_REG_HCOEF21 = 0x354,
	SEINFO_REG_HCOEF22 = 0x358,
	SEINFO_REG_HCOEF23 = 0x35C,
	SEINFO_REG_HCOEF24 = 0x360,
	SEINFO_REG_HCOEF25 = 0x364,
	SEINFO_REG_HCOEF26 = 0x368,
	SEINFO_REG_HCOEF27 = 0x36C,
	SEINFO_REG_HCOEF28 = 0x370,
	SEINFO_REG_HCOEF29 = 0x374,
	SEINFO_REG_HCOEF30 = 0x378,
	SEINFO_REG_HCOEF31 = 0x37C,
	SEINFO_REG_HCOEF0_32  = 0x380,
	SEINFO_REG_HCOEF1_32  = 0x384,
	SEINFO_REG_HCOEF2_32  = 0x388,
	SEINFO_REG_HCOEF3_32  = 0x38C,
	SEINFO_REG_HCOEF4_32  = 0x390,
	SEINFO_REG_HCOEF5_32  = 0x394,
	SEINFO_REG_HCOEF6_32  = 0x398,
	SEINFO_REG_HCOEF7_32  = 0x39C,
	SEINFO_REG_HCOEF8_32  = 0x3A0,
	SEINFO_REG_HCOEF9_32  = 0x3A4,
	SEINFO_REG_HCOEF10_32 = 0x3A8,
	SEINFO_REG_HCOEF11_32 = 0x3AC,
	SEINFO_REG_HCOEF12_32 = 0x3B0,
	SEINFO_REG_HCOEF13_32 = 0x3B4,
	SEINFO_REG_HCOEF14_32 = 0x3B8,
	SEINFO_REG_HCOEF15_32 = 0x3BC,
	SEINFO_REG_HCOEF16_32 = 0x3C0,
	SEINFO_REG_HCOEF17_32 = 0x3C4,
	SEINFO_REG_HCOEF18_32 = 0x3C8,
	SEINFO_REG_HCOEF19_32 = 0x3CC,
	SEINFO_REG_HCOEF20_32 = 0x3D0,
	SEINFO_REG_HCOEF21_32 = 0x3D4,
	SEINFO_REG_HCOEF22_32 = 0x3D8,
	SEINFO_REG_HCOEF23_32 = 0x3DC,
	SEINFO_REG_HCOEF24_32 = 0x3E0,
	SEINFO_REG_HCOEF25_32 = 0x3E4,
	SEINFO_REG_HCOEF26_32 = 0x3E8,
	SEINFO_REG_HCOEF27_32 = 0x3EC,
	SEINFO_REG_HCOEF28_32 = 0x3F0,
	SEINFO_REG_HCOEF29_32 = 0x3F4,
	SEINFO_REG_HCOEF30_32 = 0x3F8,
	SEINFO_REG_HCOEF31_32 = 0x3FC,
	SEINFO_REG_VCOEF0 = 0x400,
	SEINFO_REG_VCOEF1 = 0x404,
	SEINFO_REG_VCOEF2 = 0x408,
	SEINFO_REG_VCOEF3 = 0x40C,
	SEINFO_REG_VCOEF4 = 0x410,
	SEINFO_REG_VCOEF5 = 0x414,
	SEINFO_REG_VCOEF6 = 0x418,
	SEINFO_REG_VCOEF7 = 0x41C,
	SEINFO_REG_VCOEF8 = 0x420,
	SEINFO_REG_VCOEF9 = 0x424,
	SEINFO_REG_VCOEF10 = 0x428,
	SEINFO_REG_VCOEF11 = 0x42C,
	SEINFO_REG_VCOEF12 = 0x430,
	SEINFO_REG_VCOEF13 = 0x434,
	SEINFO_REG_VCOEF14 = 0x438,
	SEINFO_REG_VCOEF15 = 0x43C,
	SEINFO_REG_VCOEF0_16  = 0x440,
	SEINFO_REG_VCOEF1_16  = 0x444,
	SEINFO_REG_VCOEF2_16  = 0x448,
	SEINFO_REG_VCOEF3_16  = 0x44C,
	SEINFO_REG_VCOEF4_16  = 0x450,
	SEINFO_REG_VCOEF5_16  = 0x454,
	SEINFO_REG_VCOEF6_16  = 0x458,
	SEINFO_REG_VCOEF7_16  = 0x45C,
	SEINFO_REG_VCOEF8_16  = 0x460,
	SEINFO_REG_VCOEF9_16  = 0x464,
	SEINFO_REG_VCOEF10_16 = 0x468,
	SEINFO_REG_VCOEF11_16 = 0x46C,
	SEINFO_REG_VCOEF12_16 = 0x470,
	SEINFO_REG_VCOEF13_16 = 0x474,
	SEINFO_REG_VCOEF14_16 = 0x478,
	SEINFO_REG_VCOEF15_16 = 0x47C,
	SEINFO_REG_SC_BITBLIT_COLOR_KEY = 0x900,
	SEINFO_REG_INTS = 0x990,

	SEINFO_REG_DFB_COLORALPHA = 0xB50,
#if SE_SE20
	SEINFO_REG_QT_INV_MATRIX_SCALING = 0xB00,
	SEINFO_REG_QT_INV_MATRIX_SHEARING = 0xB10,
	SEINFO_REG_QT_INV_MATRIX_MOVING = 0xB20,
	SEINFO_REG_QT_INV_MATRIX_PROJECTION_0 = 0xB30,
	SEINFO_REG_QT_INV_MATRIX_PROJECTION_1 = 0xB40,
	SEINFO_REG_DFB_COLORALPHA2 = 0xB70,
	SEINFO_REG_DFB_COLORALPHA3 = 0xB70,
	SEINFO_REG_SE20_DUMMY = 0xE20,
	SEINFO_REG_SWAP_FBDC = 0xDC0,
	SEINFO_REG_BASE_ADDR3 = 0xD00,
	SEINFO_REG_PITCH3 = 0xD10
#endif
} SEINFO_WRITEREG;
#endif

typedef enum _SEINFO_OPCODE
{
	SEINFO_OPCODE_WRITE_REGISTER = 0x01,
	SEINFO_OPCODE_FETCH_CLUT = 0x02,
	SEINFO_OPCODE_FORMAT_CONVERSION = 0x03,
	SEINFO_OPCODE_DRAW_LINE = 0x04,
	SEINFO_OPCODE_LOCK_CLUT = 0x04,
	SEINFO_OPCODE_BITBLT = 0x05,
	SEINFO_OPCODE_STRETCH = 0x06,
	SEINFO_OPCODE_MIRROR = 0x07,
	SEINFO_OPCODE_DECODE_DVB = 0x08,
	SEINFO_OPCODE_WAIT_VO_VSYNC = 0x08,
	SEINFO_OPCODE_REPEAT_BITBLIT = 0x09,
	SEINFO_OPCODE_ROTATE = 0x0A,
	SEINFO_OPCODE_EXT_FMT = 0x0B,
	SEINFO_OPCODE_QTRANSFORM = 0x0C,
	SEINFO_OPCODE_DECIMATE = 0x0D,
	SEINFO_OPCODE_BIBLIT_EX = 0x0D,
	SEINFO_OPCODE_ALPHA = 0x0E,
	SEINFO_OPCODE_NOP = 0x0F
} SEINFO_OPCODE;


typedef enum _SEINFO_REGMODE
{
	SEINFO_REGMODE_REGISTER	= 0,
	SEINFO_REGMODE_CLUT	= 1
} SEINFO_REGMODE;

typedef enum _SEINFO_ROPCODE
{
	SEINFO_ROPCODE_BLACK = 0,
	SEINFO_ROPCODE_AND = 1,
	SEINFO_ROPCODE_AND_NOT = 2,
	SEINFO_ROPCODE_COPY = 3,
	SEINFO_ROPCODE_NOT_AND = 4,
	SEINFO_ROPCODE_B = 5,
	SEINFO_ROPCODE_XOR = 6,
	SEINFO_ROPCODE_OR = 7,
	SEINFO_ROPCODE_NOR = 8,
	SEINFO_ROPCODE_XNOR = 9,
	SEINFO_ROPCODE_NOT_B = 10,
	SEINFO_ROPCODE_OR_NOT = 11,
	SEINFO_ROPCODE_NOT_A = 12,
	SEINFO_ROPCODE_NOT_OR = 13,
	SEINFO_ROPCODE_NAND = 14,
	SEINFO_ROPCODE_WHITE = 15,
	SEINFO_ROPCODE_NONE = SEINFO_ROPCODE_B
} SEINFO_ROPCODE;

typedef enum _SEINFO_DFB_OPERATION
{
	SEINFO_DFB_OP_WRITE_TMP_SRC_DATA_TO_DDR = 0,
	SEINFO_DFB_OP_COPY_SRC_DATA_TO_DEST = 1,
	SEINFO_DFB_OP_DISABLED = 4
} SEINFO_DFB_OPERATION;

typedef enum _SEINFO_MIRRORMODE
{
	SEINFO_MIRROR_X = 1,
	SEINFO_MIRROR_Y = 2,
	SEINFO_MIRROR_XY = 3
} SEINFO_MIRRORMODE;

typedef enum _SE20INFO_MIRRORMODE
{
	SE20INFO_MIRROR_0 = 0,
	SE20INFO_MIRROR_X = 1,
	SE20INFO_MIRROR_Y = 2,
	SE20INFO_MIRROR_XY = 3
} SE20INFO_MIRRORMODE;

typedef enum _SEINFO_CLUT
{
	SEINFO_FETCH_CLUT_4ARGB = 0,
	SEINFO_FETCH_CLUT_16ARGB = 1,
	SEINFO_FETCH_CLUT_256ARGB = 2
} SEINFO_CLUT;

typedef enum _SEINFO_SETUPMODE
{
	SEINFO_BITBLT_SETUP_CONST = 0,
	SEINFO_BITBLT_SETUP_MANUAL = 1
} SEINFO_SETUPMODE;

typedef enum _SEINFO_EXT_SETUPMODE
{
	SEINFO_BITBLT_EXT_SELECT_MANUAL = 0,
	SEINFO_BITBLT_EXT_SELECT_CONST = 1
} SEINFO_EXT_SETUPMODE;

typedef enum _SEINFO_VSCALING_EN
{
	SEINFO_VSCALING_ENABLE = true,
	SEINFO_VSCALING_DISABLE = false
} SEINFO_VSCALING_EN;

typedef enum _SEINFO_HSCALING_EN
{
	SEINFO_HSCALING_ENABLE = true,
	SEINFO_HSCALING_DISABLE = false
} SEINFO_HSCALING_EN;

typedef enum _SEINFO_ALPHAPROC_EN
{
	SEINFO_ALPHAPROC_ENABLE = true,
	SEINFO_ALPHAPROC_DISABLE = false
} SEINFO_ALPHAPROC_EN;

typedef enum _SEINFO_CONVERT_YUV_EN
{
	SEINFO_CONVERT_YUV_ENABLE = true,
	SEINFO_CONVERT_YUV_DISABLE = false
} SEINFO_CONVERT_YUV_EN;

typedef enum _SEINFO_ROPMODE
{
	SEINFO_ALPHA_BLENDING = 0,
	SEINFO_ROP_MODE = 1
} SEINFO_ROPMODE;

typedef enum _SEINFO_CORNER
{
	SEINFO_BITBLT_CORNER_TOP_LEFT = 0,
	SEINFO_BITBLT_CORNER_TOP_RIGHT = 1,
	SEINFO_BITBLT_CORNER_BOTTOM_LEFT = 2,
	SEINFO_BITBLT_CORNER_BOTTOM_RIGHT = 3,
	SEINFO_BITBLT_CORNER_NONE = 4
} SEINFO_CORNER;

typedef enum _SEINFO_ALPHAMODE_T
{
	SEINFO_BITBLT_ALPHA_CONST = 0,
	SEINFO_BITBLT_ALPHA_1_CONST = 1,
	SEINFO_BITBLT_ALPHA_DEST = 2,
	SEINFO_BITBLT_ALPHA_1_DEST = 3,
	SEINFO_BITBLT_ALPHA_SRC = 4,
	SEINFO_BITBLT_ALPHA_1_SRC = 5,
	SEINFO_BITBLT_ALPHA_DFB_CONSTANT_0 = 6,
	SEINFO_BITBLT_ALPHA_DFB_CONSTANT_1 = 7,
	SEINFO_BITBLT_ALPHA_DISABLE = 8
} SEINFO_ALPHAMODE_T;

typedef enum _SEINFO_OUTPUT_ALPHAMODE
{
	SEINFO_OUTPUT_ALPHA_NORMAL = 0,
	SEINFO_OUTPUT_ALPHA_CONST = 1
} SEINFO_OUTPUT_ALPHAMODE;

typedef enum _SEINFO_ALPHA_CMD_ALPHA_MODE
{
	SEINFO_ALPHA_CMD_ALPHA_CONST = 0,
	SEINFO_ALPHA_CMD_ALPHA_INDEX = 1
} SEINFO_ALPHA_CMD_ALPHA_MODE;

typedef enum _SEINFO_ALPHA_CMD_STREAM_MODE
{
	SEINFO_ALPHA_CMD_STREAM_ALPHA_ONLY = 0,
	SEINFO_ALPHA_CMD_STREAM_RGB565 = 1,
	SEINFO_ALPHA_CMD_STREAM_ARGB8888 = 2,
	SEINFO_ALPHA_CMD_STREAM_DISABLED = 3
} SEINFO_ALPHA_CMD_STREAM_MODE;

typedef enum _SEINFO_STRETCH
{
	SEINFO_STRETCH_FIR = 1,
	SEINFO_STRETCH_REPEAT_DROP = 2,
	SEINFO_STRETCH_DIRECTIONAL = 3
} SEINFO_STRETCH;

typedef enum _SEINFO_SACLING_TYPE
{
	SEINFO_SCALING_UP = 0,
	SEINFO_SCALING_DOWN = 1,
	SEINFO_SCALING_DISABLE = 2
} SEINFO_SACLING_TYPE;

typedef enum _SEINFO_SACLING_TABLE
{
	SEINFO_SCALING_UP_2X = 0,
	SEINFO_SCALING_UP_4X = 1,
	SEINFO_SCALING_UP_8X = 2,
	SEINFO_SCALING_DOWN_2X = 3,
	SEINFO_SCALING_DOWN_4X = 4
} SEINFO_SACLING_TABLE;

typedef enum _SEINFO_STRETCH_HTAP
{
	SEINFO_HSCALING_2TAP = 0,
	SEINFO_HSCALING_4TAP = 1,
	SEINFO_HSCALING_8TAP = 2
} SEINFO_STRETCH_HTAP;

typedef enum _SEINFO_STRETCH_VTAP
{
	SEINFO_VSCALING_2TAP = 0,
	SEINFO_VSCALING_4TAP = 1
} SEINFO_STRETCH_VTAP;

typedef enum _SEINFO_COLORKEY
{
	SEINFO_COLORKEY_NONE = 0,
	SEINFO_COLORKEY_SOURCE = 1,
	SEINFO_COLORKEY_DESTINATION = 2,
	SEINFO_COLORKEY_BOTH = 3
} SEINFO_COLORKEY;

typedef enum _SEINFO_COLORKEY_DRAWLINE
{
	SEINFO_COLORKEY_DRAWLINE_NONE = 0,
	SEINFO_COLORKEY_DRAWLINE_DESTINATION = 1
} SEINFO_COLORKEY_DRAWLINE;

typedef enum _SEINFO_CONVERSION
{
	SEINFO_CONVERSION_INDEX_ARGB = 0,
	SEINFO_CONVERSION_ARGB_ARGB = 1,
	SEINFO_CONVERSION_YUV_ARGB = 2,
	SEINFO_CONVERSION_ARGB_YUV = 3
} SEINFO_CONVERSION;

typedef enum _SEINFO_INDEX_FORMAT
{
	SEINFO_FORMAT_INDEX2 = 0,
	SEINFO_FORMAT_INDEX4 = 1,
	SEINFO_FORMAT_INDEX8 = 2
} SEINFO_INDEX_FORMAT;

typedef enum _SEINFO_RGB_FORMAT
{
	SEINFO_FORMAT_RGB332 = 0,
	SEINFO_FORMAT_RGB565 = 1,
	SEINFO_FORMAT_ARGB1555 = 2,
	SEINFO_FORMAT_ARGB4444 = 3,
	SEINFO_FORMAT_ARGB8888 = 4
} SEINFO_RGB_FORMAT;

typedef enum _SEINFO_YUV_FORMAT
{
	SEINFO_FORMAT_YUV420 = 0,
	SEINFO_FORMAT_YUV422 = 1,
	SEINFO_FORMAT_YUV444 = 2
} SEINFO_YUV_FORMAT;

typedef enum _SEINFO_COLOR_FORMAT_T
{
	SEINFO_COLOR_FORMAT_INDEX2 = 0,
	SEINFO_COLOR_FORMAT_HSI = 1,
	SEINFO_COLOR_FORMAT_INDEX8 = 2,
	SEINFO_COLOR_FORMAT_RGB332 = 3,
	SEINFO_COLOR_FORMAT_RGB565 = 4,
	SEINFO_COLOR_FORMAT_ARGB1555 = 5,
	SEINFO_COLOR_FORMAT_ARGB4444 = 6,
	SEINFO_COLOR_FORMAT_ARGB8888 = 7,
	SEINFO_COLOR_FORMAT_Y = 8,
	SEINFO_COLOR_FORMAT_UV = 9,
	SEINFO_COLOR_FORMAT_YUV420 = 10,
	SEINFO_COLOR_FORMAT_YUV422 = 11,
	SEINFO_COLOR_FORMAT_YUV444 = 12,
	SEINFO_COLOR_FORMAT_RGB888 = 15
} SEINFO_COLOR_FORMAT_T;

typedef enum _SEINFO_EXT_COLOR_FORMAT_T
{
	SEINFO_EXT_COLOR_FORMAT_reserved = 0x0,
	SEINFO_EXT_COLOR_FORMAT_reserved1 = 0x1,
	SEINFO_EXT_COLOR_FORMAT_FBDC_U8U8U8 = 0x2,
	SEINFO_EXT_COLOR_FORMAT_FBDC_U8U8U8U8 = 0x3,
	SEINFO_EXT_COLOR_FORMAT_FBDC_RGB565 = 0x4,
	SEINFO_EXT_COLOR_FORMAT_FBDC_ARGB1555 = 0x5,
	SEINFO_EXT_COLOR_FORMAT_FBDC_ARGB4444 = 0x6,
	SEINFO_EXT_COLOR_FORMAT_reserved2 = 0x7,
	SEINFO_EXT_COLOR_FORMAT_RGB565 = 0x8,
	SEINFO_EXT_COLOR_FORMAT_RGB888 = 0x9,
	SEINFO_EXT_COLOR_FORMAT_ARGB1555 = 0xA,
	SEINFO_EXT_COLOR_FORMAT_ARGB4444 = 0xB,
	SEINFO_EXT_COLOR_FORMAT_ARGB8888 = 0xC,
	SEINFO_EXT_COLOR_FORMAT_reserved3 = 0xD,
	SEINFO_EXT_COLOR_FORMAT_INDEX8 = 0xE,
	SEINFO_EXT_COLOR_FORMAT_reserved5 = 0xF,
	SEINFO_EXT_COLOR_FORMAT_YUV444 = 0x10,
	SEINFO_EXT_COLOR_FORMAT_reserved6 = 0x11,
	SEINFO_EXT_COLOR_FORMAT_reserved7 = 0x12,
	SEINFO_EXT_COLOR_FORMAT_reserved8 = 0x13,
	SEINFO_EXT_COLOR_FORMAT_YV12_422 = 0x14,
	SEINFO_EXT_COLOR_FORMAT_NV12_422 = 0x15,
	SEINFO_EXT_COLOR_FORMAT_YUY2_422 = 0x16,
	SEINFO_EXT_COLOR_FORMAT_reserved9 = 0x17,
	SEINFO_EXT_COLOR_FORMAT_YV12_420 = 0x18,
	SEINFO_EXT_COLOR_FORMAT_NV12_420 = 0x19,
	SEINFO_EXT_COLOR_FORMAT_VE_422_8b = 0x1A,
	SEINFO_EXT_COLOR_FORMAT_VE_420_8b = 0x1B,
	SEINFO_EXT_COLOR_FORMAT_VE_420_10b = 0x1C,
	SEINFO_EXT_COLOR_FORMAT_VE_420_8b_VP9 = 0x1D
} SEINFO_EXT_COLOR_FORMAT_T;

typedef enum _SEINFO_EXT_SWAP_CHROMA_T
{
	SEINFO_SWAP_CHROMA_CB = 0x0,
	SEINFO_SWAP_CHROMA_CR = 0x1,
	SEINFO_SWAP_CHROMA_YUYV = 0x0,
	SEINFO_SWAP_CHROMA_YVYU = 0x1,
	SEINFO_SWAP_CHROMA_UYVY = 0x2,
	SEINFO_SWAP_CHROMA_VYUY = 0x3
} SEINFO_EXT_SWAP_CHROMA_T;

typedef enum _SEINFO_ARGB_ALPHA_LOCATION
{
	SEINFO_ARGB_ALPHA_LEFTMOST = 0,
	SEINFO_ARGB_ALPHA_RIGHTMOST = 1,
	SEINFO_ARGB_ALPHA_NONE = 2
} SEINFO_ARGB_ALPHA_LOCATION;

typedef enum _SEINFO_RGB_LOCATION
{
	SEINFO_RGB_LOCATION_LEFTMOST = 0,
	SEINFO_RGB_LOCATION_MIDDLE = 1,
	SEINFO_RGB_LOCATION_RIGHTMOST = 2,
	SEINFO_RGB_LOCATION_NONE = 3
} SEINFO_RGB_LOCATION;

typedef enum _SEINFO_SRC_FORMAT
{
	SEINFO_SRC_FORMAT_INDEX2 = 0,
	SEINFO_SRC_FORMAT_INDEX4 = 1,
	SEINFO_SRC_FORMAT_INDEX8 = 2,
	SEINFO_SRC_FORMAT_RGB332 = 0,
	SEINFO_SRC_FORMAT_RGB565 = 1,
	SEINFO_SRC_FORMAT_ARGB1555 = 2,
	SEINFO_SRC_FORMAT_ARGB4444 = 3,
	SEINFO_SRC_FORMAT_ARGB8888 = 4,
	SEINFO_SRC_FORMAT_RGB888 = 5,
	SEINFO_SRC_FORMAT_YUV420 = 0,
	SEINFO_SRC_FORMAT_YUV422 = 1,
	SEINFO_SRC_FORMAT_YUV444 = 2
} SEINFO_SRC_FORMAT;

typedef enum _SEINFO_DEST_FORMAT
{
	SEINFO_DEST_FORMAT_RGB332 = 0,
	SEINFO_DEST_FORMAT_RGB565 = 1,
	SEINFO_DEST_FORMAT_ARGB1555 = 2,
	SEINFO_DEST_FORMAT_ARGB4444 = 3,
	SEINFO_DEST_FORMAT_ARGB8888 = 4,
	SEINFO_DEST_FORMAT_RGB888 = 5,
	SEINFO_DEST_FORMAT_ARGB8565 = 6,
	SEINFO_DEST_FORMAT_YUV420 = 0,
	SEINFO_DEST_FORMAT_YUV422 = 1,
	SEINFO_DEST_FORMAT_YUV444 = 2
} SEINFO_DEST_FORMAT;

typedef enum _SEINFO_GRADIENT
{
	SEINFO_GRADIENT_LEFT_TO_RIGHT = 0,
	SEINFO_GRADIENT_TOP_TO_BOTTOM = 1,
	SEINFO_GRADIENT_TOP_LEFT_TO_BOTTOM_RIGHT = 2,
	SEINFO_GRADIENT_TOP_RIGHT_TO_BOTTOM_LEFT = 3,
	SEINFO_GRADIENT_DISABLE = 4
} SEINFO_GRADIENT;

typedef enum _SEINFO_ROTATE
{
	SEINFO_ROTATE_90 = 0,
	SEINFO_ROTATE_180 = 1,
	SEINFO_ROTATE_270 = 2,
	SEINFO_ROTATE_DISABLE = 3
} SEINFO_ROTATE;

typedef enum _SE20INFO_ROTATE
{
	SE20INFO_ROTATE_0 = 0,
	SE20INFO_ROTATE_90 = 1,
	SE20INFO_ROTATE_180 = 2,
	SE20INFO_ROTATE_270 = 3,
} SE20INFO_ROTATE;

typedef enum _SEINFO_INTERLEAVING_MODE
{
	SEINFO_INTERLEAVING_MODE_ENABLE = true,
	SEINFO_INTERLEAVING_MODE_DISABLE = false
} SEINFO_INTERLEAVING_MODE;

typedef enum _SEINFO_SRC_CLR_TRANSFORM
{
	SEINFO_SRC_CLR_TRANSFORM_DISABLE = 0,
	SEINFO_SRC_CLR_TRANSFORM_ENABLE_FOR_ALPHA_ONLY = 1,
	SEINFO_SRC_CLR_TRANSFORM_ENABLE_FOR_ALL = 2
} SEINFO_SOURCE_COLOR_TRANSFORM;

typedef enum _SEINFO_DFB_CLR_BLEND_MODE
{
	SEINFO_DFB_BLEND_CONST_0 = 0,
	SEINFO_DFB_BLEND_CONST_1 = 1,
	SEINFO_DFB_BLEND_ALPHA_DEST = 2,
	SEINFO_DFB_BLEND_ALPHA_1_DEST = 3,
	SEINFO_DFB_BLEND_ALPHA_SRC = 4,
	SEINFO_DFB_BLEND_ALPHA_1_SRC = 5,
	SEINFO_DFB_BLEND_RGB_SRC = 6,
	SEINFO_DFB_BLEND_RGB_1_SRC = 7,
	SEINFO_DFB_BLEND_RGB_DEST = 8,
	SEINFO_DFB_BLEND_RGB_1_DEST = 9,
	SEINFO_DFB_BLEND_MIN_ALPHA_SRC_1_DEST = 10,
} SEINFO_DFB_CLR_BLEND_MODE;

typedef enum _SEINFO_STRETCH_REPLACE_ALPHA
{
	SEINFO_STRETCH_REPLACE_ALPHA_DISABLE = 0,
	SEINFO_STRETCH_REPLACE_ALPHA_ENABLE = 1
} SEINFO_STRETCH_REPLACE_ALPHA;

typedef enum _SEINFO_STRETCH_REPLACE_COLOR
{
	SEINFO_STRETCH_REPLACE_COLOR_DISABLE = 0,
	SEINFO_STRETCH_REPLACE_COLOR_ENABLE = 1
} SEINFO_STRETCH_REPLACE_COLOR;

typedef struct _SE_PROCINFO_T
{
	UINT16	wDataX;
	UINT16	wDataY;
	UINT16	wDataHeight;
	UINT16	wDataWidth;
	UINT8	byCommandQueueSelect;
	bool	bInterruptService;
	UINT8	byBaseAddressIndex;
	UINT8	byChronmaAddressIndex;
	bool	bInterleavingModeEnable;
	UINT32	uAddr;
	UINT32	uPitch;
	UINT32	uAddr_c1;
	UINT32	uPitch_c1;
} SE_PROCINFO_T;

typedef struct _SE_COLOR_FORMAT_EX_T
{
	SEINFO_COLOR_FORMAT_T byColorFormat;
	SEINFO_ARGB_ALPHA_LOCATION byArgbAlphaLocation;
	SEINFO_ARGB_ALPHA_LOCATION byOutputArgbAlphaLocation;
	bool bInputSrcColorFormatBigEndian;
	bool bInputDestColorFormatBigEndian;
	bool bOutputColorFormatBigEndian;
	bool bEnableRoundingOption;
} SE_COLOR_FORMAT_EX_T;

typedef struct _SE_BLEND_EX_T
{
	bool bSyncVO;
	bool bEnableWithBitblit;
	bool bEnableSrcClrTransparency;
	bool bEnableDirectFB;
	bool bEnableDfbDstPremultiply;
	bool bEnableDfbSrcPremulcolor;
	bool bEnableDfbSrcPremultiply;
	bool bEnableDfbXor;
	bool bEnableDfbColorize;
	bool bEnableDfbReplaceSrcAlphaWithConstAlpha;
	bool bEnableDfbModulateSrcAlphaWithConstAlpha;
	bool bEnableDfbDemultiply;
	bool bEnableAlphaStreamMode;
	SEINFO_ALPHAMODE_T destAlphaModeSelect;
	UINT8 destAplhaValue;
	SEINFO_ALPHAMODE_T srcAlphaModeSelect;
	UINT8 srcAplhaValue;
	SEINFO_DFB_CLR_BLEND_MODE selSrcClrBlend;
	SEINFO_DFB_CLR_BLEND_MODE selDestClrBlend;
	UINT8 constAplhaValue;
	UINT32 constColorValue;
	UINT8 constAlphaValueForBlendColorAlpha;
	UINT32 constSrcColorKeyValue;
	UINT32 constDstColorKeyValue;

	SEINFO_OUTPUT_ALPHAMODE outputAlphaModeSelect;
	SEINFO_DFB_OPERATION dfbOperation;
	SEINFO_ROPMODE ropMode;//format Conv only
	SEINFO_ROPCODE ropCode;
	SEINFO_COLORKEY colorKeySelect;
	SEINFO_SOURCE_COLOR_TRANSFORM srcClrTranform;

	SEINFO_STRETCH_REPLACE_ALPHA replaceAlpha;
	SEINFO_STRETCH_REPLACE_COLOR replaceColor;

	UINT32 srcColorRed;
	UINT32 srcColorGreen;
	UINT32 srcColorBlue;
	UINT32 srcColorAlpha;
	SE_COLOR_FORMAT_EX_T stcolorfmt;

	SE20INFO_ROTATE		rot;
	SE20INFO_MIRRORMODE	mir;
} SE_BLEND_EX_T;

typedef struct _SE_EXT_FMT_CONV_T
{
	SE_BLEND_EX_T			st_blend_layer0;
	SEINFO_EXT_COLOR_FORMAT_T	result_format;
	SEINFO_EXT_COLOR_FORMAT_T	src1_format;
	SEINFO_EXT_COLOR_FORMAT_T	src2_format;
	SEINFO_EXT_SETUPMODE		src1_select;
	SEINFO_EXT_SETUPMODE		src2_select;
	SEINFO_EXT_SETUPMODE		rslt_select;
} SE_EXT_FMT_CONV_T;

UINT32 SE_Get_mem(void);
bool SE_Set_mem(UINT32 i8ddr);

bool SE_BitBltEx(
	SE_PROCINFO_T	*pSeDestinationProcInfo,
	SE_PROCINFO_T	*pSeSourceProcInfo,
	SEINFO_OUTPUT_ALPHAMODE byOutputAlphaModeSelect,
	UINT8		byOutputAlphaValue,
	SEINFO_SETUPMODE	bSetupModeSelect,
	SEINFO_CORNER	byStartingCorner,
	SEINFO_ROPCODE	byRopCode,
	void*		pExtraParam,
	UINT32			vo_sync
);

bool SE_Stretch(
	SE_PROCINFO_T	 	*pSeDestinationProcInfo,
	SE_PROCINFO_T	 	*pSeSourceProcInfo,
	SEINFO_SACLING_TYPE byVerticalScalingType,
	UINT32  			dwVerticalScalingRatio,
	SEINFO_STRETCH_VTAP	byVerticalTapNumber,
	SEINFO_SACLING_TYPE byHorizontalScalingType,
	UINT32  			dwHorizontalScalingRatio,
	SEINFO_STRETCH_HTAP	byHorizontalTapNumber,
	SEINFO_STRETCH		byScalingAlgorithmSelect,
	SEINFO_ALPHAPROC_EN bAlphaEnable,
	UINT8				iVerticalScalingOffset,
	void*	   pExtraParam
	);
bool SE_Stretch_ext(
	SE_PROCINFO_T	 	*pSeDestinationProcInfo,
	SE_PROCINFO_T	 	*pSeSourceProcInfo,
	SEINFO_SACLING_TYPE byVerticalScalingType,
	UINT32  			dwVerticalScalingRatio,
	SEINFO_STRETCH_VTAP	byVerticalTapNumber,
	SEINFO_SACLING_TYPE byHorizontalScalingType,
	UINT32  			dwHorizontalScalingRatio,
	SEINFO_STRETCH_HTAP	byHorizontalTapNumber,
	SEINFO_STRETCH		byScalingAlgorithmSelect,
	SEINFO_ALPHAPROC_EN bAlphaEnable,
	UINT8				iVerticalScalingOffset,
	void*	   pExtraParam
	);

bool SE_FetchClut(
	SEINFO_CLUT		byFetchModeSelect,
	UINT32	  	dwStartingAddress
	);

void SE_LockClut(
	bool	bLock
	);


bool SE_FormatConversion(
	SE_PROCINFO_T	 	*pSeDestinationProcInfo,
	SE_PROCINFO_T	 	*pSeSourceProcInfo,
	SEINFO_CONVERSION  	byConversionModeSelect,
	SEINFO_DEST_FORMAT 	byDestinationFormatSelect,
	SEINFO_SRC_FORMAT  	bySourceFormatSelect,
	SEINFO_COLORKEY		byColorKeySelect,
	SEINFO_OUTPUT_ALPHAMODE byOutputAlphaModeSelect,
	UINT8				byOutputAlphaValue,
	void*		   pExtraParam
	);

bool SE_EXT_FormatConversion(
	SE_PROCINFO_T		*pSeDestinationProcInfo,
	SE_PROCINFO_T		*pSeSourceProcInfo,
	void*			pExtraParam
);

bool SE_WriteClut(
	UINT32* pale,
	UINT32  size,
	UINT32  startpale

);
bool SE_ExecCmd(
	UINT32 mode);
bool SE_WaitCmdDone(
	UINT32 uTimeoutCnt,
	UINT32 uMode
	);
bool SE_WaitCmdDone_mode(
    UINT32 uTimeoutCnt,
    UINT32 uMode
    );

bool SE_SetColorFormat(
	SEINFO_COLOR_FORMAT_T byColorFormat,
	SEINFO_ARGB_ALPHA_LOCATION byArgbAlphaLocation,
	SEINFO_ARGB_ALPHA_LOCATION byOutputArgbAlphaLocation,
	void* pExtraParam
	);

bool SE_Mirror(
	SE_PROCINFO_T*		pSeDestinationProcInfo,
	SE_PROCINFO_T*		pSeSourceProcInfo,
	SEINFO_MIRRORMODE	byMirrorDirection);

bool SE_Rotate(
	SE_PROCINFO_T	*pSeDestinationProcInfo,
	SE_PROCINFO_T	*pSeSourceProcInfo,
	SEINFO_ROTATE	byRotateMode,
	void*		pExtraParam
);

//bool SE_WaitVSync(HANDLE hQueue, int count);
//bool SE_SetConvCoeff(SEINFO_CMDQUEUE byCommandQueue);
#endif
